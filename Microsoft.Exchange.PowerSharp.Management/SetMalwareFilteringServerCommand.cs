using System;
using System.Management.Automation;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Directory.Management;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;

namespace Microsoft.Exchange.PowerSharp.Management
{
	public class SetMalwareFilteringServerCommand : SyntheticCommandWithPipelineInputNoOutput<MalwareFilteringServer>
	{
		private SetMalwareFilteringServerCommand() : base("Set-MalwareFilteringServer")
		{
		}

		public SetMalwareFilteringServerCommand(ExchangeManagementSession session) : this()
		{
			base.Session = session;
		}

		public virtual SetMalwareFilteringServerCommand SetParameters(SetMalwareFilteringServerCommand.DefaultParameters parameters)
		{
			base.SetParameters(parameters);
			return this;
		}

		public virtual SetMalwareFilteringServerCommand SetParameters(SetMalwareFilteringServerCommand.IdentityParameters parameters)
		{
			base.SetParameters(parameters);
			return this;
		}

		public class DefaultParameters : ParametersBase
		{
			public virtual Fqdn DomainController
			{
				set
				{
					base.PowerSharpParameters["DomainController"] = value;
				}
			}

			public virtual bool ForceRescan
			{
				set
				{
					base.PowerSharpParameters["ForceRescan"] = value;
				}
			}

			public virtual bool BypassFiltering
			{
				set
				{
					base.PowerSharpParameters["BypassFiltering"] = value;
				}
			}

			public virtual string PrimaryUpdatePath
			{
				set
				{
					base.PowerSharpParameters["PrimaryUpdatePath"] = value;
				}
			}

			public virtual string SecondaryUpdatePath
			{
				set
				{
					base.PowerSharpParameters["SecondaryUpdatePath"] = value;
				}
			}

			public virtual int DeferWaitTime
			{
				set
				{
					base.PowerSharpParameters["DeferWaitTime"] = value;
				}
			}

			public virtual int DeferAttempts
			{
				set
				{
					base.PowerSharpParameters["DeferAttempts"] = value;
				}
			}

			public virtual int UpdateFrequency
			{
				set
				{
					base.PowerSharpParameters["UpdateFrequency"] = value;
				}
			}

			public virtual int UpdateTimeout
			{
				set
				{
					base.PowerSharpParameters["UpdateTimeout"] = value;
				}
			}

			public virtual int ScanTimeout
			{
				set
				{
					base.PowerSharpParameters["ScanTimeout"] = value;
				}
			}

			public virtual MalwareScanErrorAction ScanErrorAction
			{
				set
				{
					base.PowerSharpParameters["ScanErrorAction"] = value;
				}
			}

			public virtual int MinimumSuccessfulEngineScans
			{
				set
				{
					base.PowerSharpParameters["MinimumSuccessfulEngineScans"] = value;
				}
			}

			public virtual SwitchParameter Verbose
			{
				set
				{
					base.PowerSharpParameters["Verbose"] = value;
				}
			}

			public virtual SwitchParameter Debug
			{
				set
				{
					base.PowerSharpParameters["Debug"] = value;
				}
			}

			public virtual ActionPreference ErrorAction
			{
				set
				{
					base.PowerSharpParameters["ErrorAction"] = value;
				}
			}

			public virtual ActionPreference WarningAction
			{
				set
				{
					base.PowerSharpParameters["WarningAction"] = value;
				}
			}

			public virtual SwitchParameter WhatIf
			{
				set
				{
					base.PowerSharpParameters["WhatIf"] = value;
				}
			}
		}

		public class IdentityParameters : ParametersBase
		{
			public virtual MalwareFilteringServerIdParameter Identity
			{
				set
				{
					base.PowerSharpParameters["Identity"] = value;
				}
			}

			public virtual Fqdn DomainController
			{
				set
				{
					base.PowerSharpParameters["DomainController"] = value;
				}
			}

			public virtual bool ForceRescan
			{
				set
				{
					base.PowerSharpParameters["ForceRescan"] = value;
				}
			}

			public virtual bool BypassFiltering
			{
				set
				{
					base.PowerSharpParameters["BypassFiltering"] = value;
				}
			}

			public virtual string PrimaryUpdatePath
			{
				set
				{
					base.PowerSharpParameters["PrimaryUpdatePath"] = value;
				}
			}

			public virtual string SecondaryUpdatePath
			{
				set
				{
					base.PowerSharpParameters["SecondaryUpdatePath"] = value;
				}
			}

			public virtual int DeferWaitTime
			{
				set
				{
					base.PowerSharpParameters["DeferWaitTime"] = value;
				}
			}

			public virtual int DeferAttempts
			{
				set
				{
					base.PowerSharpParameters["DeferAttempts"] = value;
				}
			}

			public virtual int UpdateFrequency
			{
				set
				{
					base.PowerSharpParameters["UpdateFrequency"] = value;
				}
			}

			public virtual int UpdateTimeout
			{
				set
				{
					base.PowerSharpParameters["UpdateTimeout"] = value;
				}
			}

			public virtual int ScanTimeout
			{
				set
				{
					base.PowerSharpParameters["ScanTimeout"] = value;
				}
			}

			public virtual MalwareScanErrorAction ScanErrorAction
			{
				set
				{
					base.PowerSharpParameters["ScanErrorAction"] = value;
				}
			}

			public virtual int MinimumSuccessfulEngineScans
			{
				set
				{
					base.PowerSharpParameters["MinimumSuccessfulEngineScans"] = value;
				}
			}

			public virtual SwitchParameter Verbose
			{
				set
				{
					base.PowerSharpParameters["Verbose"] = value;
				}
			}

			public virtual SwitchParameter Debug
			{
				set
				{
					base.PowerSharpParameters["Debug"] = value;
				}
			}

			public virtual ActionPreference ErrorAction
			{
				set
				{
					base.PowerSharpParameters["ErrorAction"] = value;
				}
			}

			public virtual ActionPreference WarningAction
			{
				set
				{
					base.PowerSharpParameters["WarningAction"] = value;
				}
			}

			public virtual SwitchParameter WhatIf
			{
				set
				{
					base.PowerSharpParameters["WhatIf"] = value;
				}
			}
		}
	}
}
