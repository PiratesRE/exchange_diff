using System;
using System.IO;
using System.Text;

namespace Microsoft.Exchange.Transport.Agent.Malware.SoftDelete
{
	internal class StoreMessage
	{
		private StoreMessage()
		{
		}

		public string MessageId { get; set; }

		public Stream MimeStream { get; set; }

		public string XSender { get; set; }

		public string XRecipients { get; set; }

		public string Recipients { get; set; }

		public string FromAddress { get; set; }

		public static StoreMessage Create()
		{
			return new StoreMessage();
		}

		public Stream CreateReplayMimeStream()
		{
			Stream result;
			try
			{
				StringBuilder stringBuilder = new StringBuilder();
				MemoryStream memoryStream = new MemoryStream();
				this.MimeStream.Seek(0L, SeekOrigin.Begin);
				if (!string.IsNullOrEmpty(this.XRecipients))
				{
					stringBuilder.Append(this.XRecipients);
				}
				if (!string.IsNullOrEmpty(this.XSender))
				{
					stringBuilder.Append(this.XSender);
				}
				if (stringBuilder.Length > 0)
				{
					stringBuilder.Append("X-CreatedBy: MSExchange12\r\n");
					byte[] bytes = Encoding.ASCII.GetBytes(stringBuilder.ToString());
					memoryStream.Write(bytes, 0, bytes.Length);
				}
				BinaryReader binaryReader = new BinaryReader(this.MimeStream);
				byte[] array = binaryReader.ReadBytes((int)this.MimeStream.Length);
				memoryStream.Write(array, 0, array.Length);
				this.MimeStream.Seek(0L, SeekOrigin.Begin);
				memoryStream.Seek(0L, SeekOrigin.Begin);
				result = memoryStream;
			}
			catch (Exception innerException)
			{
				throw new StorageException("Replay mimestream failed to return.", innerException);
			}
			return result;
		}
	}
}
