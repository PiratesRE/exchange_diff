using System;

namespace Microsoft.Exchange.Transport.Agent.Malware
{
	internal class Constants
	{
		public const string AgentMessageTrackingIdentifier = "AMA";

		public const string AgentMessageTrackingOverallVerdictIdentifier = "SUM";

		public const string AgentMessageTrackingEngineVerdictIdentifier = "EV";

		public const string AgentMessageTrackingFingerPrintVerdictIdentifier = "FP";

		public const string AgentInfoEventTopic = "OnSubmittedMessage";

		public const string MalwareDeletionTextFileName = "Malware Alert Text.txt";

		public const string TenantInfoHeaderName = "X-MS-Exchange-Organization-Attributed-Tenant-ID";

		public const string DomainInfoHeaderName = "X-MS-Exchange-Organization-Attributed-Domain-ID";

		public const string DeferredTrackingHeaderName = "X-MS-Exchange-Organization-Deferred-Tracking";

		public const string MalwareAgentBaseKey = "SOFTWARE\\Microsoft\\ExchangeServer\\v15\\HubTransportRole\\MalwareAgent";

		public const string MalwareTestOverrideKey = "SOFTWARE\\Microsoft\\ExchangeServer\\v15\\HubTransportRole\\MalwareAgent\\MalwareTestHooks";

		public const string DirectoryStorageBaseKey = "SOFTWARE\\Microsoft\\ExchangeServer\\v15\\Setup";

		public const string Xsender = "X-Sender: {0}";

		public const string Xreceiver = "X-Receiver: {0}";

		public const string EnvelopeID = " ENVID={0}";

		public const string EnvelopeRecipient = "RECIPIENTS_CN=";

		public const string Notify = " NOTIFY=";

		public const string OriginalRecipient = " ORCPT={0}";

		public const string ReturnHeaders = " RET=HDRS";

		public const string ReturnFull = " RET=FULL";

		internal const string XMSExchangeOrganizationId = "X-MS-Exchange-Organization-Id";

		internal const string XMSExchangeOrganizationConnectorInfo = "X-MS-Exchange-Organization-ConnectorInfo";

		internal const string XMSExchangeOrganizationHygineConfigurationID = "X-MS-Exchange-Organization-HygieneConfigurationID";

		internal const string AcceptLanguage = "Accept-Language";

		internal const string ContentLanguage = "Content-Language";

		internal const string MessageBody = "Message Body";

		internal const string ExMessageIdFormat = "ExMessageId = {0}";

		internal const string MessageIdFormat = "MessageId = {0}";

		internal const int MinRequiredScanEngines = 2;

		internal const double WaitTimeoutRatio = 1.3;

		internal const string MalwareFilterVersioned = "MalwareFilterVersioned";

		internal const long MaxFilterRuleCacheSize = 31457280L;

		internal const long MaxMalwareFilterPolicyCacheSize = 31457280L;

		internal const long MalwareFilterPolicyCacheExpiryInterval = 15L;

		internal const long MalwareFilterPolicyCacheCleanupInterval = 135L;

		internal static readonly double MinutesPerDay = TimeSpan.FromDays(1.0).TotalMinutes;

		internal static readonly double SecondsPerDay = TimeSpan.FromDays(1.0).TotalSeconds;

		internal static readonly double MinutesinHour = TimeSpan.FromHours(1.0).TotalMinutes;

		internal static readonly TimeSpan DefaultOverrideWaitTime = TimeSpan.FromHours(1.0);

		public class Errors
		{
			public const string CategoryError = "Category Error: All engines failed to scan the message.";

			public const string Timeout = "Timeout: The message timed out repeatedly.";

			public const string SubmissionError = "Submission Error: Failed to submit the message for scanning.";

			public const string PolicyViolationError = "Error: Failed to scan the message, due to policy violation.";
		}
	}
}
