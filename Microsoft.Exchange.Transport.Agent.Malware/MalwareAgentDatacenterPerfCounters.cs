using System;
using System.Xml;
using System.Xml.Linq;
using Microsoft.Exchange.Diagnostics;

namespace Microsoft.Exchange.Transport.Agent.Malware
{
	internal static class MalwareAgentDatacenterPerfCounters
	{
		public static void GetPerfCounterInfo(XElement element)
		{
			if (MalwareAgentDatacenterPerfCounters.AllCounters == null)
			{
				return;
			}
			foreach (ExPerformanceCounter exPerformanceCounter in MalwareAgentDatacenterPerfCounters.AllCounters)
			{
				try
				{
					element.Add(new XElement(ExPerformanceCounter.GetEncodedName(exPerformanceCounter.CounterName), exPerformanceCounter.NextValue()));
				}
				catch (XmlException ex)
				{
					XElement content = new XElement("Error", ex.Message);
					element.Add(content);
				}
			}
		}

		public const string CategoryName = "MSExchange Anti-Malware Datacenter Perfcounters";

		public static readonly ExPerformanceCounter ItemsInFingerPrintingCache = new ExPerformanceCounter("MSExchange Anti-Malware Datacenter Perfcounters", "Number of items in Malware Fingerprint cache", string.Empty, null, new ExPerformanceCounter[0]);

		private static readonly ExPerformanceCounter FingerPrintingCacheHitPerSecond = new ExPerformanceCounter("MSExchange Anti-Malware Datacenter Perfcounters", "Number of items, item is matched with finger printing cache/sec", string.Empty, null, new ExPerformanceCounter[0]);

		public static readonly ExPerformanceCounter FingerPrintingCacheHit = new ExPerformanceCounter("MSExchange Anti-Malware Datacenter Perfcounters", "Number of items, item is matched with finger printing cache", string.Empty, null, new ExPerformanceCounter[]
		{
			MalwareAgentDatacenterPerfCounters.FingerPrintingCacheHitPerSecond
		});

		private static readonly ExPerformanceCounter FingerPrintingCacheLowFidelityMissPerSecond = new ExPerformanceCounter("MSExchange Anti-Malware Datacenter Perfcounters", "Matched Low FidelityFingerPrint, but missed HighFidelity FingerPrint/sec", string.Empty, null, new ExPerformanceCounter[0]);

		public static readonly ExPerformanceCounter FingerPrintingCacheLowFidelityMiss = new ExPerformanceCounter("MSExchange Anti-Malware Datacenter Perfcounters", "Count Matched LowFidelity FingerPrint, but missed HighFidelity FingerPrint", string.Empty, null, new ExPerformanceCounter[]
		{
			MalwareAgentDatacenterPerfCounters.FingerPrintingCacheLowFidelityMissPerSecond
		});

		public static readonly ExPerformanceCounter[] AllCounters = new ExPerformanceCounter[]
		{
			MalwareAgentDatacenterPerfCounters.ItemsInFingerPrintingCache,
			MalwareAgentDatacenterPerfCounters.FingerPrintingCacheHit,
			MalwareAgentDatacenterPerfCounters.FingerPrintingCacheLowFidelityMiss
		};
	}
}
