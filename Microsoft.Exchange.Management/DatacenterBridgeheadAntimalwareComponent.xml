<?xml version="1.0" encoding="us-ascii"?>
<SetupComponentInfo IsDatacenterOnly="true" IsDatacenterDedicatedOnly="true" Name="Datacenter Bridgehead Antimalware component">

  <ServerTasks>
    <!-- Set Datacenter specific FIPS configuration-->
    <ServerTaskInfo Id="_e9546fbc747346fcb7bf08cad078d314" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install IsFatal="true">
        <Standalone>
          Write-ExchangeSetupLog -Info "Loading FipFs snapin and Enabling all AV engines for Datacenter";
          
          # Load FIPS snapin
          Add-PsSnapin Microsoft.Forefront.Filtering.Management.PowerShell -ErrorAction SilentlyContinue;
          
          # Enable "Kaspersky" engine in System and Scan Configuration
          Set-ConfigurationValue -XPath "/fs-conf:Configuration/fs-sys:System/fs-sys:AntiMalwareSettings/fs-sys:Engines/fs-sys:Engine[@Name='Kaspersky']/fs-sys:Enabled" -Value 'true' -Confirm:$false
          Set-ConfigurationValue -XPath "/fs-conf:Configuration/fs-scan:Scan/fs-scan:AntiMalwareSettings/fs-scan:Engines/fs-scan:Engine[@Name='Kaspersky']/fs-scan:Enabled" -Value 'true' -Confirm:$false

          # Enable "Command" engine in System and Scan Configuration
          Set-ConfigurationValue -XPath "/fs-conf:Configuration/fs-sys:System/fs-sys:AntiMalwareSettings/fs-sys:Engines/fs-sys:Engine[@Name='Command']/fs-sys:Enabled" -Value 'true' -Confirm:$false
          Set-ConfigurationValue -XPath "/fs-conf:Configuration/fs-scan:Scan/fs-scan:AntiMalwareSettings/fs-scan:Engines/fs-scan:Engine[@Name='Command']/fs-scan:Enabled" -Value 'true' -Confirm:$false

          # After making configuration updates, backup the configuration file
          Write-ExchangeSetupLog -Info "Backup FIPS configuration";
          $FipsDataPath = [System.IO.Path]::Combine($RoleInstallPath, "FIP-FS\Data");
          $ConfigurationFilePath = [System.IO.Path]::Combine($FipsDataPath, "Configuration.xml");
          $ConfigurationBackupFilePath = [System.IO.Path]::Combine($FipsDataPath, "Configuration.xml.bak");
          Copy-Item $ConfigurationFilePath $ConfigurationBackupFilePath
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true" />
      <DisasterRecovery UseInstallTasks="true" />
      <Uninstall />
    </ServerTaskInfo>

    <!-- Create a scheduled task to log the engien update information to cosmos log -->
    <ServerTaskInfo Id="_9455079C-802F-4F72-B898-BA8647DA527B" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install IsFatal="true">
        <Standalone>
          # Import a task scheduler task that listens to event and logs a message to engine update log when event is fired
          Write-ExchangeSetupLog -Info "Importing the task - EngineUpdateLoggerTask";
          $FipsBinPath = [System.IO.Path]::Combine($RoleInstallPath, "FIP-FS\bin");
          $FullTaskPath = [System.IO.Path]::Combine($FipsBinPath, "EngineUpdateLoggerTask.xml");
          schtasks /Create /TN EngineUpdateLoggerTask /XML $FullTaskPath /F
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true" />
      <DisasterRecovery UseInstallTasks="true" />
      <Uninstall />
    </ServerTaskInfo>

    <!-- Enable Malware Finger Printing -->
    <ServerTaskInfo Id="_971A22CE-F717-4BD4-92DD-70C70CEACEB6" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install IsFatal="true">
        <Standalone>
           $fullPath = "$RoleBinPath\EdgeTransport.exe.config";
           set-appconfigvalue -ConfigFileFullPath:$fullPath -Element:configuration/appSettings -AppSettingKey:'EnableMalwareFingerPrinting' -NewValue:$true;
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true" />
      <DisasterRecovery UseInstallTasks="true" />
      <Uninstall />
    </ServerTaskInfo>

    <!-- install malware datacenter perf counters -->
    <ServerTaskInfo Id="_F4CC077E-F19E-4E47-815B-04BD6B75D056" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install IsFatal="true">
        <Standalone>
          new-perfcounters -DefinitionFileName MalwareAgentDatacenterPerfCounters.xml
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true" />
      <DisasterRecovery UseInstallTasks="true" />
      <Uninstall IsFatal="false">
        <Standalone>
          remove-PerfCounters -DefinitionFileName MalwareAgentDatacenterPerfCounters.xml
        </Standalone>
      </Uninstall>
    </ServerTaskInfo>

    <!-- install malware v2 datacenter perf counters -->
    <ServerTaskInfo Id="_DB11063D-EB6E-444A-BAC4-55D7C805ABE8" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install IsFatal="true">
        <Standalone>
          new-perfcounters -DefinitionFileName MalwareAgentV2DatacenterPerfCounters.xml
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true" />
      <DisasterRecovery UseInstallTasks="true" />
      <Uninstall IsFatal="false">
        <Standalone>
          remove-PerfCounters -DefinitionFileName MalwareAgentV2DatacenterPerfCounters.xml
        </Standalone>
      </Uninstall>
    </ServerTaskInfo>


    <!-- Set malware filtering server settings -->
    <ServerTaskInfo Id="_798cdd742efe42b6b99aacca0c4c445d" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install IsFatal="true">
        <Standalone>
          <!-- Set default update path for malware filtering engines -->
          
          Set-MalwareFilteringServer -Identity $RoleFqdnOrName -DomainController $RoleDomainController -PrimaryUpdatePath $RoleDatacenterRusPrimaryUpdatePath -SecondaryUpdatePath $RoleDatacenterRusSecondaryUpdatePath
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true" />
      <DisasterRecovery UseInstallTasks="true" />
      <Uninstall />
    </ServerTaskInfo>

  </ServerTasks>

</SetupComponentInfo>

