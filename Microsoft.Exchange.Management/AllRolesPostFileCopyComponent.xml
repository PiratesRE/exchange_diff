<?xml version="1.0" encoding="us-ascii"?>
<SetupComponentInfo Name="All Roles Post File Copy">

  <ServerTasks>

    <!-- E14 528333: WMI must be started before running ServiceControl.ps1 if
         an ExecutionPolicy is being used -->
    <ServerTaskInfo Id="_575644d0e6924bf3867dbbfd3791af3a" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install>
        <Standalone>
          if (Get-Service WinMgmt* | ?{$_.Name -eq 'WinMgmt'})
          {
            Set-Service WinMgmt -StartupType Automatic
            Start-SetupService -ServiceName WinMgmt
          }
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true"/>
      <DisasterRecovery UseInstallTasks="true"/>
      <Uninstall/>
    </ServerTaskInfo>

    <ServerTaskInfo Id="_59d55cd8c5a3413c9831d20dd2178f39" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install>
        <Standalone>
          &amp; $RoleBinPath\ServiceControl.ps1 EnableServices $RoleRoles.Replace('Role','').Split(',');
          &amp; $RoleBinPath\ServiceControl.ps1 Start Critical
        </Standalone>
      </Install>
      <BuildToBuildUpgrade UseInstallTasks="true"/>
      <DisasterRecovery UseInstallTasks="true"/>
      <Uninstall>
        <Standalone>
          if (Test-Path $RoleBinPath\ServiceControl.ps1)
          {
            &amp; $RoleBinPath\ServiceControl.ps1 EnableServices $RoleRoles.Replace('Role','').Split(',');
            &amp; $RoleBinPath\ServiceControl.ps1 Start Critical
          }
        </Standalone>
      </Uninstall>
    </ServerTaskInfo>

    <!-- E14 528333: WMI must be started before running ServiceControl.ps1 if
         an ExecutionPolicy is being used. Note that uninstall tasks run in reverse order. -->
    <ServerTaskInfo Id="_95b72e9630e44bf1bd2a2e0f2cd9c0bc" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install/>
      <BuildToBuildUpgrade/>
      <DisasterRecovery/>
      <Uninstall>
        <Standalone>
          if (Get-Service WinMgmt* | ?{$_.Name -eq 'WinMgmt'})
          {
            Set-Service WinMgmt -StartupType Automatic
            Start-SetupService -ServiceName WinMgmt
          }
        </Standalone>
      </Uninstall>
    </ServerTaskInfo>

    <ServerTaskInfo Id="_40a857b575bf40e4b98a296dbafea54e" Component="EXCHANGE14:\Current\Release\Shared\Datacenter\Setup">
      <Install/>
      <BuildToBuildUpgrade/>
      <DisasterRecovery/>
      <Uninstall>
        <!-- In case of uninstall ServiceControl.ps1 is uninstalled by MSI at this point.
        That's why in AllRolesPreFileCopyComponent we copy it into ServiceControl.ps1.bak
        and here we need to restore it back. As a precaution we also have a logic for
        a case when ServiceControl.ps1 survived: in that case we just delete the
        ServiceControl.ps1.bak. -->
        <Standalone>
          if (Test-Path $RoleBinPath\ServiceControl.ps1.bak)
          {
            if (Test-Path $RoleBinPath\ServiceControl.ps1)
            {
              del $RoleBinPath\ServiceControl.ps1.bak
            }
            else
            {
              ren $RoleBinPath\ServiceControl.ps1.bak ServiceControl.ps1
            }
          }
        </Standalone>
      </Uninstall>
    </ServerTaskInfo>

  </ServerTasks>
</SetupComponentInfo>
