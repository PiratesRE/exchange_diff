using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Globalization;
using System.Net;
using System.Reflection;
using Microsoft.Exchange.Configuration.Tasks;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Common;
using Microsoft.Exchange.Data.Directory;
using Microsoft.Exchange.Data.Directory.Sync;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;
using Microsoft.Exchange.Data.Storage.Management;
using Microsoft.Exchange.Management.SystemConfigurationTasks;
using Microsoft.Exchange.Monitoring;
using Microsoft.Exchange.Rpc.MailSubmission;
using Microsoft.Exchange.Security.RightsManagement;
using Microsoft.RightsManagementServices.Core;

namespace Microsoft.Exchange.Management.Tasks
{
	internal static class Strings
	{
		static Strings()
		{
			Strings.stringIDs.Add(139133773U, "SetupComponentGatewayLocal");
			Strings.stringIDs.Add(1019266140U, "SetupProgressCreateServerObject");
			Strings.stringIDs.Add(3118077072U, "ErrorPatternCannotContainEmptyAlternations");
			Strings.stringIDs.Add(3133271685U, "SetupComponentPostSetupUnifiedMessaging");
			Strings.stringIDs.Add(3076033759U, "CannotCombineWildcardRecipientAddress");
			Strings.stringIDs.Add(4053421780U, "VerboseRebuildWSManRegistry");
			Strings.stringIDs.Add(3032285884U, "CannotAddIPSafelistsIfIPSafelistingSyncDisabledId");
			Strings.stringIDs.Add(876478325U, "ExpiryDateSameOrBeforeActivationDate");
			Strings.stringIDs.Add(2380804056U, "ErrorPrecannedRoleAndSpecificMailboxFolderPermission");
			Strings.stringIDs.Add(274479317U, "ErrorCannotSpecifyScopeParameter");
			Strings.stringIDs.Add(4176599321U, "SetupProgressImportingAddionalEdgeSchema");
			Strings.stringIDs.Add(1856519480U, "E4eLicensingIsDisabledCreateRule");
			Strings.stringIDs.Add(3267746767U, "SetupProgressInstallMessageDeliveryContainer");
			Strings.stringIDs.Add(361784375U, "SetupProgressInstallAdministrativeGroupContainer");
			Strings.stringIDs.Add(2367053929U, "ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount");
			Strings.stringIDs.Add(786067343U, "SetupProgressCreateRBACRoles");
			Strings.stringIDs.Add(1845804172U, "ForwardSyncServiceDisplayName");
			Strings.stringIDs.Add(3030424583U, "MoveContentIndexTask");
			Strings.stringIDs.Add(1016721882U, "ADAttributeLastName");
			Strings.stringIDs.Add(859062683U, "ErrorMaxVersionOrFixVersionRequired");
			Strings.stringIDs.Add(2850084476U, "WarningIgnoreMailboxSettingOnlyPolicy");
			Strings.stringIDs.Add(1427955775U, "InstallExchangeOrganizationDescription");
			Strings.stringIDs.Add(126246359U, "ClassificationRuleCollectionIllegalScopedNewOperation");
			Strings.stringIDs.Add(3732489244U, "CannotRemoveDefaultRemoteDomain");
			Strings.stringIDs.Add(45450529U, "SetupProgressCreateLiveEnableFederatedEmailMailbox");
			Strings.stringIDs.Add(1765853772U, "SetupComponentBridgeheadGlobalConfig");
			Strings.stringIDs.Add(1587179080U, "CopyStatusMisconfigured");
			Strings.stringIDs.Add(213659447U, "DiagnosticsServiceDescription");
			Strings.stringIDs.Add(3491818999U, "DisableConversationsTask");
			Strings.stringIDs.Add(622937693U, "SetupProgressOutlookAnywhereEnabled");
			Strings.stringIDs.Add(3937769803U, "ErrorCannotSetPowerShellMaxTenantConcurrency");
			Strings.stringIDs.Add(2729327636U, "ForwardSyncService2DisplayName");
			Strings.stringIDs.Add(1063350901U, "ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval");
			Strings.stringIDs.Add(2071245439U, "SetupProgressStoppingComplianceAuditService");
			Strings.stringIDs.Add(2461945188U, "HealthManagerServiceDescription");
			Strings.stringIDs.Add(739210221U, "MessageTracingClientServiceDescription");
			Strings.stringIDs.Add(1636409600U, "RoleNonEditingAuthor");
			Strings.stringIDs.Add(2218700066U, "ErrorSecondaryMailboxIdRequired");
			Strings.stringIDs.Add(2909775076U, "HeaderName");
			Strings.stringIDs.Add(2790684056U, "InvalidRecipient");
			Strings.stringIDs.Add(512186364U, "RcrDatabasesMountedCheckDesc");
			Strings.stringIDs.Add(277119228U, "RemovingFiles");
			Strings.stringIDs.Add(2589734627U, "RoleContributor");
			Strings.stringIDs.Add(3036981548U, "SetupProgressCreateRBACRolesContainer");
			Strings.stringIDs.Add(523386612U, "NoVersionMatch");
			Strings.stringIDs.Add(3195479398U, "JournalNdrMailboxInJournalRuleRecipient");
			Strings.stringIDs.Add(4055862009U, "PromptToUpgradeRulesFormat");
			Strings.stringIDs.Add(2917478147U, "ErrorAliasEmpty");
			Strings.stringIDs.Add(3482350932U, "SetupProgressCreatePrecannedGAL");
			Strings.stringIDs.Add(2322679854U, "ConnectorValidationFailedId");
			Strings.stringIDs.Add(277022941U, "PatternContainsProhibitedLeadingOrTrailingRegexCharacters");
			Strings.stringIDs.Add(3852117776U, "ConfirmationMessageImportJournalRuleCollection");
			Strings.stringIDs.Add(1287226944U, "InfoGetLicensingUri");
			Strings.stringIDs.Add(904825440U, "InvalidSummmarizeBy");
			Strings.stringIDs.Add(793178976U, "SetAppConfigValue");
			Strings.stringIDs.Add(3312690295U, "MsiReinstallMustAll");
			Strings.stringIDs.Add(680782013U, "MessageTypeReadReceipt");
			Strings.stringIDs.Add(1329598090U, "InfoLoadIRMConfig");
			Strings.stringIDs.Add(1720218724U, "ErrorEmptyProxyAddressInWLID");
			Strings.stringIDs.Add(1830044678U, "ErrorInvalidApplicationId");
			Strings.stringIDs.Add(597233763U, "ExceptionUserObjectAmbiguous");
			Strings.stringIDs.Add(4051199925U, "StartMidFileCopyDescription");
			Strings.stringIDs.Add(1580525556U, "InstallFreeBusyFolderUnableToCreateFolder");
			Strings.stringIDs.Add(2295478344U, "UceContentFilterObjectNotFound");
			Strings.stringIDs.Add(689400110U, "AuditLogSearchNamePrefix");
			Strings.stringIDs.Add(367024857U, "SetupProgressCreatePrecannedAddressLists");
			Strings.stringIDs.Add(4203484097U, "MoreThanOneRecipient");
			Strings.stringIDs.Add(1173059748U, "ConfirmationMessageNewEdgeSubscription");
			Strings.stringIDs.Add(830763533U, "Imap4BeServiceDescription");
			Strings.stringIDs.Add(1019596387U, "SetupProgressUpdateDatabaseCopy");
			Strings.stringIDs.Add(2140270019U, "DatabaseWideTasksExceeded");
			Strings.stringIDs.Add(3053221044U, "MatchSubDomainsIsInternalRelayOnly");
			Strings.stringIDs.Add(1690438080U, "InstallBridgeheadRoleDescription");
			Strings.stringIDs.Add(1897883499U, "ResourceCorruptCalConfig");
			Strings.stringIDs.Add(805031200U, "SetupProgressSearchMessageEnabled");
			Strings.stringIDs.Add(3381267863U, "IisTasksApplicationPoolValidationProperty");
			Strings.stringIDs.Add(2160696509U, "IncompatibleVoiceMailProtectionAndAnalysisSettings");
			Strings.stringIDs.Add(1863749674U, "CasHealtRemotePowerShellCloseRunspaceSucceeded");
			Strings.stringIDs.Add(3928796881U, "SetupProgressInstallDefaultConnectionFilterContainer");
			Strings.stringIDs.Add(3857675279U, "NoUserOrOrganiztionProvidedException");
			Strings.stringIDs.Add(3733737272U, "ErrorInboxRuleMustHaveActions");
			Strings.stringIDs.Add(4218611731U, "ConfirmationMessageWebServicesVirtualDirectoryContinue");
			Strings.stringIDs.Add(593283652U, "MigrationWorkflowServiceDescription");
			Strings.stringIDs.Add(156083260U, "ErrorFolderIsMailEnabled");
			Strings.stringIDs.Add(634620851U, "CasHealthOwaAuthTypeNotCheckedForExternalUrl");
			Strings.stringIDs.Add(2953781159U, "ExportCertificateAs12WithoutKey");
			Strings.stringIDs.Add(3512699247U, "ChangePasswordInvalidNewPassword");
			Strings.stringIDs.Add(926742601U, "MigrationBatchIdMissing");
			Strings.stringIDs.Add(1422131190U, "CasHealthAdditionalInformation");
			Strings.stringIDs.Add(3939837379U, "TestMigrationServerAvailabilityProtocolArgument");
			Strings.stringIDs.Add(2096844093U, "OrganizationNotFederatedException");
			Strings.stringIDs.Add(3160504501U, "ReplayLagStatusLabelPlayDownReason");
			Strings.stringIDs.Add(3354444285U, "ErrorDialPlanNotMatch");
			Strings.stringIDs.Add(4002412124U, "SetupComponentAllADRolesCommon");
			Strings.stringIDs.Add(1401307769U, "QuorumGroupCheckDesc");
			Strings.stringIDs.Add(543437901U, "CasHealthSiteName");
			Strings.stringIDs.Add(1291176623U, "WarningAuthenticationTypeIsNotChanged");
			Strings.stringIDs.Add(1647181233U, "ArbitrationMailboxDefaultDisplayName");
			Strings.stringIDs.Add(2290602049U, "ErrorMoreThanOneAggregatedAccountOperationSpecified");
			Strings.stringIDs.Add(4115286253U, "SetupProgressSchemaFile");
			Strings.stringIDs.Add(3380542549U, "ConfirmationMessageImportDlpPolicy");
			Strings.stringIDs.Add(3583369532U, "CasTransactionResultUndefined");
			Strings.stringIDs.Add(4191725334U, "InfoNoTiFound");
			Strings.stringIDs.Add(3094442783U, "TransitionStateInactive");
			Strings.stringIDs.Add(2731029007U, "RpcProxyScenario");
			Strings.stringIDs.Add(2024045189U, "ClearingCache");
			Strings.stringIDs.Add(1160072915U, "CasHealthEasScenarioSyncOne");
			Strings.stringIDs.Add(860632184U, "ErrorNotSupportedWritableRecipient");
			Strings.stringIDs.Add(1041810761U, "PromptToOverwriteRulesOnImport");
			Strings.stringIDs.Add(2801716203U, "ErrorPrimarySmtpAndEmailAddressesSpecified");
			Strings.stringIDs.Add(1003706237U, "ErrorRemoveMailboxWithJournalArchiveWithDirSync");
			Strings.stringIDs.Add(3682029584U, "ModerateActionMustBeTheOnlyAction");
			Strings.stringIDs.Add(965874437U, "TransitionInfoLabelCurrentState");
			Strings.stringIDs.Add(2076969542U, "ProgressValidatingFileLocations");
			Strings.stringIDs.Add(2357316042U, "ComAdminUninstallOleConverter");
			Strings.stringIDs.Add(4146681835U, "SetRuleSyncAcrossDifferentVersionsNeeded");
			Strings.stringIDs.Add(1534135610U, "DatabasesCopyKeepingUpCheckDesc");
			Strings.stringIDs.Add(4021383240U, "InvalidStartDateOffset");
			Strings.stringIDs.Add(2142106696U, "WarningSupervisionTagsRemoved");
			Strings.stringIDs.Add(549796425U, "SetupProgressEnableWMIInbound");
			Strings.stringIDs.Add(1998021006U, "DefaultAllRooms");
			Strings.stringIDs.Add(777113388U, "JournalingParameterErrorGccWithoutRecipient");
			Strings.stringIDs.Add(2991269321U, "TenantAdminCannotInvokeHotmailOperation");
			Strings.stringIDs.Add(1614986787U, "DlpPolicyInvalidCollectionError");
			Strings.stringIDs.Add(3163237226U, "UCWADiscoveryUrlEmpty");
			Strings.stringIDs.Add(3568214229U, "ActiveDirectorySearchScenario");
			Strings.stringIDs.Add(1888394526U, "InfoGetCertificationUri");
			Strings.stringIDs.Add(3248899022U, "UCWADiscoveryUrlException");
			Strings.stringIDs.Add(681186416U, "ErrorNoAggregatedAccountOperationSpecified");
			Strings.stringIDs.Add(2266904519U, "CertificateWasNotFound");
			Strings.stringIDs.Add(4098321834U, "ErrorSystemFolderPathNotAvailable");
			Strings.stringIDs.Add(4252886198U, "CasHealthOwaAuthTypeCheckedForInternalUrl");
			Strings.stringIDs.Add(1806450332U, "GetQueueDigestForestParameterCannotBeFalse");
			Strings.stringIDs.Add(3632772754U, "ExceptionEmptyStringNotAllowed");
			Strings.stringIDs.Add(2448948717U, "MtrtAddHeader");
			Strings.stringIDs.Add(1144958480U, "AnonymousUser");
			Strings.stringIDs.Add(2027635495U, "CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId");
			Strings.stringIDs.Add(485575497U, "CasHealthOwaAuthenticationVerificationError");
			Strings.stringIDs.Add(580429770U, "WarningSettingsNotModifiable");
			Strings.stringIDs.Add(4280240728U, "InstallDagMgmtServiceTask");
			Strings.stringIDs.Add(3793537057U, "DataClassificationDnIdentityNotSupported");
			Strings.stringIDs.Add(4162603766U, "InvalidRuleSearchFilterEmpty");
			Strings.stringIDs.Add(4029807706U, "InvalidPage");
			Strings.stringIDs.Add(1240499241U, "ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter");
			Strings.stringIDs.Add(681744771U, "ErrorRemoveMailuserWithJournalArchive");
			Strings.stringIDs.Add(1288394341U, "ErrorInvalidEndpointParameterReasonInvalidProperty");
			Strings.stringIDs.Add(3248641044U, "Pop3BeServiceDescription");
			Strings.stringIDs.Add(3224500054U, "DefaultAllGroups");
			Strings.stringIDs.Add(872238113U, "ErrorDisableMailboxWithJournalArchive");
			Strings.stringIDs.Add(2758012420U, "ProgressActivityGetFederationMetadata");
			Strings.stringIDs.Add(1925218238U, "InvalidPrimaryLeaseLocation");
			Strings.stringIDs.Add(4270189224U, "InvalidSource");
			Strings.stringIDs.Add(386910029U, "LanguagePackPerfCounterMergeEnd");
			Strings.stringIDs.Add(3881434143U, "CheckServerConfiguration");
			Strings.stringIDs.Add(3485959825U, "UpgradedSearchObjectDescription");
			Strings.stringIDs.Add(1359519288U, "CopyStatusSinglePageRestore");
			Strings.stringIDs.Add(2764219150U, "IgnoreRequireTLSConflict");
			Strings.stringIDs.Add(3098305126U, "ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter");
			Strings.stringIDs.Add(2769512906U, "EmptyMesssageWillBeCreated");
			Strings.stringIDs.Add(2142814423U, "SubjectCnNotValidFQDN");
			Strings.stringIDs.Add(1829927449U, "WarningExpiryDateBeforeCurrentDate");
			Strings.stringIDs.Add(339075801U, "MtrtRequireTLS");
			Strings.stringIDs.Add(68568156U, "SendConnectorSourceServersSetForEdge");
			Strings.stringIDs.Add(3910947918U, "ErrorInvalidCertificateData");
			Strings.stringIDs.Add(2582005788U, "NoKeyIDInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(3281590539U, "SetupProgressDistributionListCountQuota");
			Strings.stringIDs.Add(3636258538U, "ConfirmationMessageIRMConfig");
			Strings.stringIDs.Add(204012629U, "DebugStartGeneratingUniqueSamAccountName");
			Strings.stringIDs.Add(3148569182U, "CouldNotFindAutodiscoverService");
			Strings.stringIDs.Add(3468504006U, "ErrorInvalidAuditAdminOperationType");
			Strings.stringIDs.Add(3768201246U, "ErrorAuthServerCannotSwitchType");
			Strings.stringIDs.Add(1045148960U, "VirtualDirectoryTypeNotApplicable");
			Strings.stringIDs.Add(1725140761U, "RmsOnlineUrlsNotPresent");
			Strings.stringIDs.Add(3070965441U, "StartPreConfigurationDescription");
			Strings.stringIDs.Add(893233504U, "ErrorAssociatedMoveRequestExists");
			Strings.stringIDs.Add(2558903800U, "MigrationStartAfterRequiresAutoComplete");
			Strings.stringIDs.Add(3445636645U, "SomeMapiTransactionsFailedPrefix");
			Strings.stringIDs.Add(2031086061U, "InfoCheckingTpdFromRmsOnline");
			Strings.stringIDs.Add(2409328034U, "TenantNotificationUnavailableEventMessage");
			Strings.stringIDs.Add(2876349303U, "DagTaskRestoreDagCouldNotOpenCluster");
			Strings.stringIDs.Add(1304474150U, "ConfirmationMessageSetIPAllowListConfig");
			Strings.stringIDs.Add(1086317875U, "UpdateManageDelegation2ProvisioningInDNS");
			Strings.stringIDs.Add(3216817101U, "ErrorIgnoreDefaultScopeAndDCSetTogether");
			Strings.stringIDs.Add(1657137395U, "CasHealthOwaNoCasArgumentError");
			Strings.stringIDs.Add(1869397051U, "HybridMailflowOutboundConnectorComment");
			Strings.stringIDs.Add(2049140123U, "PublishManageDelegation2ProvisioningInDNS");
			Strings.stringIDs.Add(1018858686U, "InvalidActionSequence");
			Strings.stringIDs.Add(3567029179U, "CannotUseDefaultAttributesForExchange2007OAB");
			Strings.stringIDs.Add(1247936583U, "ImproperTypeForThisIdParameter");
			Strings.stringIDs.Add(1594256938U, "SetupProgressStoppingWatchDogService");
			Strings.stringIDs.Add(2800695281U, "ErrorPreventCompletionCannotSet");
			Strings.stringIDs.Add(1000180735U, "ErrorTaskRunningLocation");
			Strings.stringIDs.Add(1044260641U, "ErrorTenantOrgOutOfDate");
			Strings.stringIDs.Add(3858535199U, "SetupProgressStartingComplianceAuditService");
			Strings.stringIDs.Add(1197534060U, "ConfirmationMessageSetIPBlockListProvidersConfig");
			Strings.stringIDs.Add(1114455400U, "UninstallMailboxReplicationServiceTask");
			Strings.stringIDs.Add(46134730U, "SetupProgressAutoReplyEnabled");
			Strings.stringIDs.Add(1293373139U, "SynNowCanOnlyRunAgainstHub");
			Strings.stringIDs.Add(1906820204U, "UninstallKeynoteConnectorServiceTask");
			Strings.stringIDs.Add(511946795U, "ProgressStatusRemovingManagementRoleTree");
			Strings.stringIDs.Add(345735772U, "CasTransactionResultSkipped");
			Strings.stringIDs.Add(2053186887U, "ErrorAgentCannotBeDisabled");
			Strings.stringIDs.Add(1842673731U, "CreateSharedConfigurationRequiredForTT");
			Strings.stringIDs.Add(3723446335U, "SetupProgressStoppingAdam");
			Strings.stringIDs.Add(3205347653U, "CasHealthOwaGotIsaLogonPage");
			Strings.stringIDs.Add(3576079758U, "CreateActiveSyncOraganizationSettings");
			Strings.stringIDs.Add(2814365579U, "InheritedAceIgnored");
			Strings.stringIDs.Add(718060562U, "StartPreFileCopyDescription");
			Strings.stringIDs.Add(2306021189U, "SetupComponentConfiguringMailSubmissionService");
			Strings.stringIDs.Add(2062465841U, "ErrorCannotGetLocalSite");
			Strings.stringIDs.Add(2995736033U, "ErrorCannotSpecifySuspendCommentWithoutSuspend");
			Strings.stringIDs.Add(4218312291U, "SetupProgressStartingRpcClientAccessService");
			Strings.stringIDs.Add(3248358162U, "SetupComponentStoppingMailboxServices");
			Strings.stringIDs.Add(1628012707U, "StartOrganizationPilotDescription");
			Strings.stringIDs.Add(1068106535U, "AlsEmailFooter");
			Strings.stringIDs.Add(1557867634U, "ConfirmationMessageRemoveEdgeSubscriptionRecipients");
			Strings.stringIDs.Add(3250043305U, "CasHealthOwaNoInternalUrl");
			Strings.stringIDs.Add(3613594314U, "ReversingTaskList");
			Strings.stringIDs.Add(1793609503U, "SetupProgressMaxRecipientsTransportQuota");
			Strings.stringIDs.Add(1688623221U, "ContactAdminForForwardingWarning");
			Strings.stringIDs.Add(1985418867U, "SetResubmitRequestConfirmation");
			Strings.stringIDs.Add(3427981878U, "ExsetdataLegacyOrganizationName");
			Strings.stringIDs.Add(1733149537U, "PatternIsWhiteSpace");
			Strings.stringIDs.Add(4186825349U, "SetupComponentPostSetupAllRoles");
			Strings.stringIDs.Add(4241796904U, "SetupProgressStoppingServiceHostService");
			Strings.stringIDs.Add(1382008128U, "ErrorDirectoryNotFound");
			Strings.stringIDs.Add(1285179481U, "SetupProgressDisclosure");
			Strings.stringIDs.Add(2812311335U, "CasHealthOwaPingFailed");
			Strings.stringIDs.Add(2534355845U, "SetServerComponentStateInvalidLocalRemoteSwitch");
			Strings.stringIDs.Add(241488845U, "TokenSuccessfullyGenerated");
			Strings.stringIDs.Add(3729565548U, "InvalidLeaseDirectory");
			Strings.stringIDs.Add(2714395591U, "AuthenticationMethodDigest");
			Strings.stringIDs.Add(533822862U, "ErrorPrimaryPublicFolderMailboxNotFound");
			Strings.stringIDs.Add(2939831845U, "NSPIGetProfileDetailsScenario");
			Strings.stringIDs.Add(2566981015U, "SetupProgressCreateDefaultWLMPolicy");
			Strings.stringIDs.Add(2727317856U, "UninstallUnifiedMessagingRoleDescription");
			Strings.stringIDs.Add(2809178217U, "ErrorNeedToSpecifyScopeParameter");
			Strings.stringIDs.Add(1167690000U, "InstallFfoPrimingServiceTask");
			Strings.stringIDs.Add(2266874684U, "MailboxTransportSubmissionServiceDescription");
			Strings.stringIDs.Add(1434991878U, "RejectStatusCode");
			Strings.stringIDs.Add(1895340720U, "ErrorMaxVersionAndFixVersionSpecified");
			Strings.stringIDs.Add(2907455067U, "CasTransactionResultSuccess");
			Strings.stringIDs.Add(2383751265U, "InstallFreeBusyFolderNoPublicFolderDatabase");
			Strings.stringIDs.Add(301735889U, "SetupComponentConfiguringSharedCacheService");
			Strings.stringIDs.Add(2263616798U, "VerboseSaveADServerSettings");
			Strings.stringIDs.Add(645477220U, "ADAttributeCustomAttribute11");
			Strings.stringIDs.Add(2614845688U, "ADAttributeCustomAttribute15");
			Strings.stringIDs.Add(2883464667U, "ErrorResetPasswordRequiresPassword");
			Strings.stringIDs.Add(4056489825U, "FailureMappingMdbGuidForGet");
			Strings.stringIDs.Add(1720836242U, "ScenarioAutoDiscoverOutlookProvider");
			Strings.stringIDs.Add(2294833768U, "ImportCertificateUntrustedRoot");
			Strings.stringIDs.Add(2442376176U, "AccountPrivilegeWarning");
			Strings.stringIDs.Add(3630480834U, "InterceptorWarningCustomResponseCodeTextWithoutRejectAction");
			Strings.stringIDs.Add(2160342179U, "SetupProgressCreateOrgContainer");
			Strings.stringIDs.Add(1000887253U, "SetupProgressConfiguringDefaultTransportAgents");
			Strings.stringIDs.Add(3544120613U, "MessageTypeEncrypted");
			Strings.stringIDs.Add(1323896402U, "WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix");
			Strings.stringIDs.Add(3573549683U, "NotPublicFolderDatabase");
			Strings.stringIDs.Add(425417434U, "ErrorPrecannedRoleAndSpecificPermission");
			Strings.stringIDs.Add(2188442253U, "OwaInvalidFormsAuthenticationConfiguration");
			Strings.stringIDs.Add(840944282U, "ErrorQuotaOnDefaultFolder");
			Strings.stringIDs.Add(4289093673U, "ADAttributeEmail");
			Strings.stringIDs.Add(2392105441U, "WarningFederatedOrgIdNotEnabled");
			Strings.stringIDs.Add(45917787U, "SendingGuidInMailFrom");
			Strings.stringIDs.Add(2976272587U, "Error_MultipleItemsFound");
			Strings.stringIDs.Add(1690073363U, "SetupComponentConfiguringMailboxPerfCounters");
			Strings.stringIDs.Add(2657860018U, "SetupComponentConfiguringProtectedServiceHost");
			Strings.stringIDs.Add(3058326614U, "ConversationsMailboxAlreadyDisabled");
			Strings.stringIDs.Add(163826707U, "MapiSubmitSystemProbeId");
			Strings.stringIDs.Add(3114445527U, "OutboundConnectorToRouteAcceptedDomainNotFound");
			Strings.stringIDs.Add(2024750425U, "SetupProgressCreateRAPassignments");
			Strings.stringIDs.Add(977526821U, "ClassificationRuleCollectionIllegalScopedRemoveOperation");
			Strings.stringIDs.Add(543355436U, "UninstallRecoveryActionArbiterServiceTask");
			Strings.stringIDs.Add(2566309275U, "EnableContentIndexTask");
			Strings.stringIDs.Add(823570622U, "SuppressXAnonymousTlsEnabledOnEdge");
			Strings.stringIDs.Add(2259906521U, "ReloadingMoveRequest");
			Strings.stringIDs.Add(1585773875U, "SetupComponentMidFileCopyMailbox");
			Strings.stringIDs.Add(933450270U, "ErrorOrganizationIsNotInUpgradeState");
			Strings.stringIDs.Add(2336039625U, "AddressRewriteInvalidMapping");
			Strings.stringIDs.Add(1316689733U, "DlpPolicyStateDescription");
			Strings.stringIDs.Add(1226199280U, "ErrorContentSettingAlreadyExist");
			Strings.stringIDs.Add(4205883882U, "SetupComponentPostUpdatingServicePlan");
			Strings.stringIDs.Add(3564253415U, "ErrorSetMailboxCrossVersionRehoming");
			Strings.stringIDs.Add(2868264770U, "TransitionInfoLabelLastFailureTransition");
			Strings.stringIDs.Add(562001953U, "AutoGroupManagedByCannotBeEmpty");
			Strings.stringIDs.Add(771584439U, "ConfirmationMessageSetLoadBalanceSettings");
			Strings.stringIDs.Add(1407354013U, "ProductKeyRestartWarning");
			Strings.stringIDs.Add(3530329232U, "MailboxParameterNotSpecified");
			Strings.stringIDs.Add(2424622863U, "CasHealthEasScenarioDirectPushAndSync");
			Strings.stringIDs.Add(1779020807U, "SetupProgressRegisterCmdletExtensionAgents");
			Strings.stringIDs.Add(664730499U, "MoveStatusWarning");
			Strings.stringIDs.Add(780734969U, "SetupComponentStartingBridgeheadServices");
			Strings.stringIDs.Add(2567786022U, "ClockOutofSync");
			Strings.stringIDs.Add(2365917741U, "ErrorSharePointUrlDoesNotMatchPartnerApplication");
			Strings.stringIDs.Add(4072748617U, "MessageTypeApprovalRequest");
			Strings.stringIDs.Add(611036308U, "RecoveryActionArbiterServiceDisplayName");
			Strings.stringIDs.Add(1411232125U, "PartitionIdRequiredForMultipleOrgSearch");
			Strings.stringIDs.Add(1536983777U, "ErrorDirectoryNotEmpty");
			Strings.stringIDs.Add(4075921268U, "MigrationNeutralCultureIsInvalid");
			Strings.stringIDs.Add(2261648U, "ConfirmationMessageSetPendingFederationDomain");
			Strings.stringIDs.Add(744449214U, "CouldNotFindTask");
			Strings.stringIDs.Add(408063793U, "DlpPolicyModeDescription");
			Strings.stringIDs.Add(3439866578U, "ErrorSetVersion1OfExchange12OAB");
			Strings.stringIDs.Add(4022980833U, "SetupComponentPreSetupCafe");
			Strings.stringIDs.Add(2025774842U, "ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported");
			Strings.stringIDs.Add(17561413U, "SetupComponentPreUpdatingServicePlan");
			Strings.stringIDs.Add(490047050U, "CasHealthOwaUnexpectedResponse");
			Strings.stringIDs.Add(1069387158U, "SendConnectorDashdashAddressSpaceNotOffEdge");
			Strings.stringIDs.Add(2563356384U, "InvalidParameterSet");
			Strings.stringIDs.Add(3988796807U, "AttachmentFilterADEntryNotFound");
			Strings.stringIDs.Add(5426607U, "CasHealthOwaNoLogonCookieReturned");
			Strings.stringIDs.Add(925956923U, "SetupProgressMalwareFilterPolicy");
			Strings.stringIDs.Add(1605831397U, "ConfirmationMessageSetContentFilterConfig");
			Strings.stringIDs.Add(3179690214U, "InstallFBAServiceTask");
			Strings.stringIDs.Add(4199915451U, "MigrationCompleteAfterIncorrectState");
			Strings.stringIDs.Add(4056523457U, "ActiveSyncOrganizationSettingsAmbiguous");
			Strings.stringIDs.Add(1492775636U, "InfoImportingTpdFromRmsOnline");
			Strings.stringIDs.Add(2422284162U, "MtrtEventMalware");
			Strings.stringIDs.Add(3583996249U, "InvalidAggregatedDateTime");
			Strings.stringIDs.Add(3407394740U, "ErrorRecipientTypeDetailsConflictWithRecipientType");
			Strings.stringIDs.Add(1761587115U, "InfoCheckMode");
			Strings.stringIDs.Add(308522664U, "SetIISGzipMimeTypesFailure");
			Strings.stringIDs.Add(465050415U, "SetupComponentConfiguringReplayService");
			Strings.stringIDs.Add(3606274629U, "MessageTypeSigned");
			Strings.stringIDs.Add(1069404793U, "InstallADTopologyServiceTask");
			Strings.stringIDs.Add(1251200968U, "SetupProgressCreateGlobalExchangeUSGs");
			Strings.stringIDs.Add(2634964433U, "ADAttributeTitle");
			Strings.stringIDs.Add(1717488648U, "MoveMailboxSourceCleanupTypeMailEnableSourceAccount");
			Strings.stringIDs.Add(1685700083U, "NoSourceMailboxesAndNoPublicFolderSourcesSet");
			Strings.stringIDs.Add(563433368U, "SetupProgressCreateFederatedEmailMailbox");
			Strings.stringIDs.Add(112004327U, "ErrorJoinRestrictionInvalid");
			Strings.stringIDs.Add(2206782705U, "TopologyServiceResultFailure");
			Strings.stringIDs.Add(4222836121U, "WarningBulkOperationCannotDetermineRequester");
			Strings.stringIDs.Add(1239241343U, "SetupComponentMidFileCopyOSP");
			Strings.stringIDs.Add(2571165378U, "ErrorUMPolicyToPreE12");
			Strings.stringIDs.Add(1850979017U, "WarningTransportDecryptionMandatoryRequiresSuperUser");
			Strings.stringIDs.Add(2007613643U, "UnableToRetrieveDeletePolicyTag");
			Strings.stringIDs.Add(233479074U, "ConfirmationMessageTestGlobalLocatorServiceIdentity");
			Strings.stringIDs.Add(1909346717U, "ReplayServiceCheckDesc");
			Strings.stringIDs.Add(3819771664U, "ExchangeServersUSGDescription");
			Strings.stringIDs.Add(2278864889U, "CertificateDoesNotHavePKCS10");
			Strings.stringIDs.Add(3741937590U, "ErrorMissingNameOrDescriptionOrIsDefaultParameters");
			Strings.stringIDs.Add(333526005U, "VerboseEndFingerprint");
			Strings.stringIDs.Add(503478192U, "CasHealthSpecifiedServerIsNotCas");
			Strings.stringIDs.Add(3649434212U, "InstallingTranscodingService");
			Strings.stringIDs.Add(3750627262U, "VerboseNotFoundAssigneeInConfigNC");
			Strings.stringIDs.Add(2388954365U, "CannotRemoveDefaultSiteMailboxProvisioningPolicyException");
			Strings.stringIDs.Add(1785196314U, "SetupProgressConfigureAdminGroup");
			Strings.stringIDs.Add(1058125491U, "ErrorMicrosoftExchangeRecipientNotFound");
			Strings.stringIDs.Add(52866768U, "UmLanguagePackPrereqCheck");
			Strings.stringIDs.Add(1377545164U, "ADAttributeCustomAttribute6");
			Strings.stringIDs.Add(1377545168U, "ADAttributeCustomAttribute2");
			Strings.stringIDs.Add(3851263184U, "ErrorFileNameCannotBeEmptyOrNull");
			Strings.stringIDs.Add(3464809167U, "ConfirmationMessageSetActiveSyncOrganizationSettings");
			Strings.stringIDs.Add(2779757030U, "NewContentIndexTask");
			Strings.stringIDs.Add(3690963829U, "MapiSubmitSystemProbeSuccesfullyDeleted");
			Strings.stringIDs.Add(3896912312U, "ConfirmationMessageSetPop3Config");
			Strings.stringIDs.Add(3851464644U, "Error_MissingOrganizerEmail");
			Strings.stringIDs.Add(2532482654U, "ExchangeTracingProviderAlreadyExists");
			Strings.stringIDs.Add(3214881135U, "ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod");
			Strings.stringIDs.Add(2759728920U, "InvalidBackupLeaseLocation");
			Strings.stringIDs.Add(1259814674U, "CouldNotFindAutodiscoverStandardAuthBindingTransportElement");
			Strings.stringIDs.Add(2028085072U, "CasConfigurationCheckSuccess");
			Strings.stringIDs.Add(2923667921U, "RetrievingGlobalThrottlingPolicy");
			Strings.stringIDs.Add(4213166642U, "SetupComponentConfiguringLegacyMailbox");
			Strings.stringIDs.Add(3083753440U, "VerboseFixingAddressBooksInNativeMode");
			Strings.stringIDs.Add(3305350853U, "CasHealthEasScenarioCreateItem");
			Strings.stringIDs.Add(3128424281U, "FfoWebServiceEcpComponentDescription");
			Strings.stringIDs.Add(2922449898U, "SetupProgressStartingThrottlingService");
			Strings.stringIDs.Add(735377508U, "TransitionStateActive");
			Strings.stringIDs.Add(2369645597U, "UMCallAnsweringRuleDescriptionIf");
			Strings.stringIDs.Add(2595151256U, "InvalidTransportRule");
			Strings.stringIDs.Add(463879924U, "ImapExternalServerSettings");
			Strings.stringIDs.Add(4205633792U, "ErrorNoPropertyWasModified");
			Strings.stringIDs.Add(1689084926U, "DisclaimerText");
			Strings.stringIDs.Add(4122757518U, "InterceptorWarningPathIgnored");
			Strings.stringIDs.Add(2496907143U, "CannotCombineWildcardSenderAddress");
			Strings.stringIDs.Add(1411848455U, "SetupProgressOwaInstantMessagingEnabled");
			Strings.stringIDs.Add(1610376224U, "SetupProgressCleanupOldMailboxPlan");
			Strings.stringIDs.Add(2063369946U, "InvalidRejectEnhancedStatus");
			Strings.stringIDs.Add(2144801278U, "CouldNotFindLocalhostDirectoryEntryException");
			Strings.stringIDs.Add(4142265347U, "TSCrashDumpsOnlyAvailableOnLocalMachine");
			Strings.stringIDs.Add(3195028184U, "ConfirmSetSyncDaemonArbitrationConfig");
			Strings.stringIDs.Add(199165212U, "MustProvideValidSessionForFindingRequests");
			Strings.stringIDs.Add(1218978020U, "PopImapConnecting");
			Strings.stringIDs.Add(2370061645U, "SetupComponentCommonTenantConfigLast");
			Strings.stringIDs.Add(1470772353U, "InstallShareIISLogFileDirectoryTask");
			Strings.stringIDs.Add(1367543679U, "ErrorBPAConfigDataLoad");
			Strings.stringIDs.Add(4014797545U, "UninstallHealthManagerServiceTask");
			Strings.stringIDs.Add(504739579U, "MtrtEventSubmit");
			Strings.stringIDs.Add(291523223U, "ErrorCertificateMissingPrivateKey");
			Strings.stringIDs.Add(357993642U, "RecipientDomainStarOnPremiseOutboundConnector");
			Strings.stringIDs.Add(3588438151U, "CertificateStatusUntrusted");
			Strings.stringIDs.Add(533012186U, "SetupProgressStartingReplayService");
			Strings.stringIDs.Add(3162817800U, "InstallReplayServiceTask");
			Strings.stringIDs.Add(2576923962U, "InvalidDirection");
			Strings.stringIDs.Add(3874457483U, "SetupProgressUpdateDatabaseSettings");
			Strings.stringIDs.Add(1104283461U, "ErrorCannotChangeLinkedProperty");
			Strings.stringIDs.Add(57521374U, "LanguagePackPerfCounterMergeStart");
			Strings.stringIDs.Add(1825160064U, "DefaultSharingPolicyName");
			Strings.stringIDs.Add(1322418917U, "SetupProgressCreateClassificationDefinitionsContainer");
			Strings.stringIDs.Add(3650915108U, "SecurityDescriptorBeingUpdatedMsg");
			Strings.stringIDs.Add(2388010079U, "MtrtRequireDecryption");
			Strings.stringIDs.Add(1003347076U, "ErrorTeamMailboxCanNotLinkSharePointByNonOwner");
			Strings.stringIDs.Add(3391359806U, "ErrorMailboxPlanInvalidInThisRelease");
			Strings.stringIDs.Add(2607048324U, "BadWordsPolicyNotEnabledIfBadWordsListNull");
			Strings.stringIDs.Add(3287132233U, "ProgressTaskComplete");
			Strings.stringIDs.Add(63291148U, "SetupProgressDisableWMIRPCSS");
			Strings.stringIDs.Add(188776009U, "OrgPrereqCheck");
			Strings.stringIDs.Add(2809852842U, "MtrtSetHeader");
			Strings.stringIDs.Add(1148485298U, "CannotRunOnEdge");
			Strings.stringIDs.Add(5951564U, "InterceptorErrorConditionHeaderNameMissing");
			Strings.stringIDs.Add(2914613013U, "CasHealthOwaShortName");
			Strings.stringIDs.Add(3088693696U, "PopImapDisconnecting");
			Strings.stringIDs.Add(4035129721U, "WillNotCreateGlobalThrottlingPolicy");
			Strings.stringIDs.Add(1864829159U, "FederationTrustHasOutdatedCertificates");
			Strings.stringIDs.Add(261927478U, "ErrorEnableNonUniversalGroup");
			Strings.stringIDs.Add(1686636202U, "ConversationsFailedToCreateConversationsFolder");
			Strings.stringIDs.Add(3993542306U, "VerboseSaveADServerSettingsSucceed");
			Strings.stringIDs.Add(1291241716U, "SetupProgressPerMBXPlanRoleAssignmentPolicy");
			Strings.stringIDs.Add(454353554U, "AllMapiTransactionsSucceeded");
			Strings.stringIDs.Add(3395234788U, "WarningRestrictionWithWrongGroupType");
			Strings.stringIDs.Add(162508716U, "SetupProgressShowInAddressListsEnabled");
			Strings.stringIDs.Add(231799122U, "ComplianceSearchTimeoutError");
			Strings.stringIDs.Add(3163689273U, "OrganizationParamRequired");
			Strings.stringIDs.Add(243123253U, "ErrorMultipleDefaultRetentionPolicyTag");
			Strings.stringIDs.Add(2977205104U, "CouldNotGetMsoEndpoint");
			Strings.stringIDs.Add(354404596U, "MoveRequestIsMissing");
			Strings.stringIDs.Add(1723752717U, "ErrorCannotChangeAcceptMessagesFrom");
			Strings.stringIDs.Add(2951176425U, "MessageTraceMinimumCriteriaFieldsInError");
			Strings.stringIDs.Add(3158077333U, "ErrorCannotChangeHiddenFromAddressListsEnabled");
			Strings.stringIDs.Add(420723843U, "ErrorDefaultRoleAssignmentPolicyNotFound");
			Strings.stringIDs.Add(733779898U, "InvalidOrgCapabilityParameter");
			Strings.stringIDs.Add(2835118191U, "JournalingReportNdrToSameAsJournalEmailAddress");
			Strings.stringIDs.Add(2900893440U, "ErrorRpcHttpSSLOffloadingDisabled");
			Strings.stringIDs.Add(3622201701U, "ContinueOnEmptySearchQuery");
			Strings.stringIDs.Add(417532052U, "UninstallingIMAP4Service");
			Strings.stringIDs.Add(551608721U, "WarningReturnDefaultOrganizationThrottlingPolicy");
			Strings.stringIDs.Add(3200589103U, "ErrorStartAfterCanBeSetOnlyInQueued");
			Strings.stringIDs.Add(3524052893U, "ClientAccessLocalPermissionsComponentDescription");
			Strings.stringIDs.Add(1037163961U, "MailboxDatabaseIsDown");
			Strings.stringIDs.Add(1068896218U, "SetupComponentClientAccessGlobalConfig");
			Strings.stringIDs.Add(1898301735U, "JournalingExpiryDateAlreadyExpired");
			Strings.stringIDs.Add(3871360571U, "ErrorTargetEndpointRequired");
			Strings.stringIDs.Add(2497315428U, "SetupProgressRecreateCannedRBACRoleGroups");
			Strings.stringIDs.Add(3593053823U, "StoppinggMSExchangeFDS");
			Strings.stringIDs.Add(604566495U, "MtrtModerateMessageByUser");
			Strings.stringIDs.Add(1116614049U, "LogonFailure");
			Strings.stringIDs.Add(850579312U, "ErrorImageImport");
			Strings.stringIDs.Add(3673139399U, "AddressRewriteInvalidIdentity");
			Strings.stringIDs.Add(464677521U, "NewPop3ConfigurationTask");
			Strings.stringIDs.Add(702091437U, "ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked");
			Strings.stringIDs.Add(1029805125U, "ArchiveConnectivityResultArchiveNotProvisioned");
			Strings.stringIDs.Add(4161304777U, "SetupExchangeHostedFilteringPerimeterEnabled");
			Strings.stringIDs.Add(2614046954U, "SetupComponentMidFileCopyCafe");
			Strings.stringIDs.Add(3269945312U, "ErrorTargetDatabaseNotAllowedForRemotePush");
			Strings.stringIDs.Add(3182689518U, "ErrorADOperationSucceededButMetabaseOperationFailed");
			Strings.stringIDs.Add(1677794547U, "SetupSettingAdminToolsConfiguredVersion");
			Strings.stringIDs.Add(2089273302U, "UMCallAnsweringRuleUnknownContact");
			Strings.stringIDs.Add(4276932551U, "MtrtSetAuditSeverity");
			Strings.stringIDs.Add(4054043086U, "ReservedString1");
			Strings.stringIDs.Add(979064683U, "SetupComponentConfigPermissionsFrontendTransport");
			Strings.stringIDs.Add(874781227U, "CasHealthOwaGotOwaLogonPage");
			Strings.stringIDs.Add(856583401U, "ADAttributeOtherHomePhoneNumber");
			Strings.stringIDs.Add(1100730082U, "SubjectPrefix");
			Strings.stringIDs.Add(3128145071U, "SendConnectorSourceServersNotSet");
			Strings.stringIDs.Add(2396781446U, "ErrorInvalidAuditDelegateOperationType");
			Strings.stringIDs.Add(2547668869U, "ErrorCannotMoveWellKnownPublicFolders");
			Strings.stringIDs.Add(2261801750U, "NoFederationMetadataEpr");
			Strings.stringIDs.Add(1654271044U, "SetupProcessCreateDefaultThrottlingPolicy");
			Strings.stringIDs.Add(1420937392U, "ToplogyScanFailed");
			Strings.stringIDs.Add(159047272U, "CasHealthOwaTimeoutInternal");
			Strings.stringIDs.Add(1631562655U, "DisasterRecoveryClientAccessRoleDescription");
			Strings.stringIDs.Add(1297659643U, "MailboxReplicationServiceDescription");
			Strings.stringIDs.Add(1167159339U, "ErrorFolderTypeModified");
			Strings.stringIDs.Add(2404626142U, "CasHealthWebAppLogonScenarioName");
			Strings.stringIDs.Add(2706201571U, "InstallCentralAdminRoleDescription");
			Strings.stringIDs.Add(1960367174U, "StoppingIMAP4Service");
			Strings.stringIDs.Add(206924338U, "SetupProgressSyncAccountsTimeBeforeDormant");
			Strings.stringIDs.Add(1625538986U, "ConfirmationMessageResetADServerSettings");
			Strings.stringIDs.Add(377011883U, "NoAuthenticatedServerUri");
			Strings.stringIDs.Add(1220824217U, "VirtualDirectoryTypeRequired");
			Strings.stringIDs.Add(3691311357U, "ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled");
			Strings.stringIDs.Add(3695562421U, "SetupProgressMSOSyncEnabled");
			Strings.stringIDs.Add(2016035929U, "MtrtEventBadmail");
			Strings.stringIDs.Add(1375131586U, "GetImap4ConfigurationTask");
			Strings.stringIDs.Add(668469937U, "ErrorRecipientViewRootEmptyAndViewEntireForestToFalse");
			Strings.stringIDs.Add(316585499U, "ConfirmationMessageSetExchangeAssistance");
			Strings.stringIDs.Add(3529494341U, "UpdateServicePlanDescription");
			Strings.stringIDs.Add(1588246230U, "StartReplService");
			Strings.stringIDs.Add(2051672478U, "MtrtEventSpam");
			Strings.stringIDs.Add(3437115628U, "CasHealthUriFoundViaAutodiscovery");
			Strings.stringIDs.Add(511090707U, "ErrorFederationCertificateNotSpecified");
			Strings.stringIDs.Add(2633315000U, "SetupProgressInstallDefaultMessageFilterContainer");
			Strings.stringIDs.Add(568876522U, "ErrorFileIsTooSmallForFingerprint");
			Strings.stringIDs.Add(3953390382U, "TestTeamMailboxSharepointCallUnderOauthTask");
			Strings.stringIDs.Add(3605578582U, "CasHealthEcpLongName");
			Strings.stringIDs.Add(35832858U, "WarningModifySubjectValueNotSet");
			Strings.stringIDs.Add(1687432599U, "ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush");
			Strings.stringIDs.Add(3592677092U, "InvalidNotifyAddress");
			Strings.stringIDs.Add(4170515100U, "QuarantineActionNotAvailable");
			Strings.stringIDs.Add(3362446484U, "MtrtRedirectMessage");
			Strings.stringIDs.Add(2100396363U, "CasHealthOwaUriScopeHeader");
			Strings.stringIDs.Add(2085573869U, "EndPointNotRegisteredException");
			Strings.stringIDs.Add(2163517138U, "MapiTransactionDiagnosticTargetDatabaseDismounted");
			Strings.stringIDs.Add(1632566846U, "SetupComponentConfiguringServiceHost");
			Strings.stringIDs.Add(1808397640U, "DlpPolicyXmlInvalid");
			Strings.stringIDs.Add(13270221U, "SetupProgressEnableWMIRPCSS");
			Strings.stringIDs.Add(2728374224U, "SetupProgressPopulateDatabases");
			Strings.stringIDs.Add(461830259U, "VerboseNoExchangeServersUSG");
			Strings.stringIDs.Add(1325604176U, "RegisterFilterFailed");
			Strings.stringIDs.Add(3707507579U, "ErrorCannotRemoveSpecialUser");
			Strings.stringIDs.Add(787262776U, "MailboxTransportDeliveryServiceDescription");
			Strings.stringIDs.Add(3322195502U, "DefaultAllUsers");
			Strings.stringIDs.Add(2823758188U, "SetupProgressStoppingRemoteRegistryService");
			Strings.stringIDs.Add(996743220U, "UpdateDbcDeleteFilesInvalidParametersException");
			Strings.stringIDs.Add(4204700933U, "ErrorInvalidDateRangeCondition");
			Strings.stringIDs.Add(3051316042U, "SetupProgressInstallDefaultEmailAddressPolicy");
			Strings.stringIDs.Add(4041875300U, "SetupProgressStoppingDagMgmtService");
			Strings.stringIDs.Add(3649145916U, "MoveStatusFailed");
			Strings.stringIDs.Add(1094916016U, "CasHealthCalendarScenarioTestICal");
			Strings.stringIDs.Add(1670347310U, "WarningSecurePipelineTracingPath");
			Strings.stringIDs.Add(3931827059U, "EnableConfigCustomizationsDescription");
			Strings.stringIDs.Add(3046221789U, "WrongLogLevel");
			Strings.stringIDs.Add(3359504671U, "ErrorPublicFolderFree");
			Strings.stringIDs.Add(1392508367U, "ErrorUMInvalidParameters");
			Strings.stringIDs.Add(3374360575U, "ADAttributeCustomAttribute10");
			Strings.stringIDs.Add(2945221880U, "DlpPolicyDescriptionDescription");
			Strings.stringIDs.Add(3087625658U, "SetupProgressStoppingThrottlingService");
			Strings.stringIDs.Add(1419643475U, "CasHealthOwaNotOwaPage");
			Strings.stringIDs.Add(1180865852U, "ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter");
			Strings.stringIDs.Add(3495070055U, "InstallOSPRoleDescription");
			Strings.stringIDs.Add(3955140957U, "AllTenantsScopedSessionNotSupported");
			Strings.stringIDs.Add(235837528U, "ErrorUnableToFindValidPublicFolderMailbox");
			Strings.stringIDs.Add(1117213053U, "ProgressChangeFsw");
			Strings.stringIDs.Add(625706739U, "ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite");
			Strings.stringIDs.Add(3110567830U, "StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests");
			Strings.stringIDs.Add(3492150331U, "MtrtRejectMessage");
			Strings.stringIDs.Add(2525505760U, "WarningConnectingPrimaryAsSecondary");
			Strings.stringIDs.Add(3206520672U, "MapiTransactionResultUndefined");
			Strings.stringIDs.Add(207684870U, "ArgumentNotSet");
			Strings.stringIDs.Add(54348676U, "VerboseNoWriteAccessToExchangeServers");
			Strings.stringIDs.Add(1227806140U, "ResponseHeader");
			Strings.stringIDs.Add(686932030U, "ErrorCannotChangeResourceProperties");
			Strings.stringIDs.Add(3526228985U, "InstallingMSExchangeFDS");
			Strings.stringIDs.Add(533673063U, "ErrorEnableWindowsLiveIdForEnterpriseMailbox");
			Strings.stringIDs.Add(1494601097U, "SetupDiagnosticsServiceComponent");
			Strings.stringIDs.Add(2510042328U, "CannotConfigureAdfsOwaWithoutEcpFirst");
			Strings.stringIDs.Add(717668237U, "InstallAdminAuditLogConfig");
			Strings.stringIDs.Add(2074533376U, "ErrorNotEnoughInformationToFindRequest");
			Strings.stringIDs.Add(2648400316U, "SetupProgressStartingRemoteRegistryService");
			Strings.stringIDs.Add(148513305U, "ErrorProofOfOwnershipNotValid");
			Strings.stringIDs.Add(1099315268U, "ErrorFailedToGetCertificationUri");
			Strings.stringIDs.Add(1505963751U, "InvalidClassification");
			Strings.stringIDs.Add(2063677784U, "ErrorInvalidOperation");
			Strings.stringIDs.Add(1876927882U, "SetupComponentRoleSetterBridgehead");
			Strings.stringIDs.Add(4037451409U, "SetupProgressOwaExplicitLogonEnabled");
			Strings.stringIDs.Add(791976745U, "CannotModifyOneOffTemplates");
			Strings.stringIDs.Add(3310722589U, "ReplayLagPlayDownReasonNone");
			Strings.stringIDs.Add(3159442548U, "DeviceBlocked");
			Strings.stringIDs.Add(3940866218U, "GetRemoteAccountSyncCache");
			Strings.stringIDs.Add(434580719U, "UsingTargetMonitoringMailbox");
			Strings.stringIDs.Add(3316189097U, "SetupComponentMidFileCopyUnifiedMessaging");
			Strings.stringIDs.Add(2902832461U, "StoppingHealthService");
			Strings.stringIDs.Add(1027987732U, "RemovePerfCounters");
			Strings.stringIDs.Add(2819120138U, "ErrorSharedConfigurationUpgradeNotSupported");
			Strings.stringIDs.Add(748625712U, "UMCallAnsweringRuleProvideTheCallerWithTheseOptions");
			Strings.stringIDs.Add(3097596739U, "TestSearchTestThreadTimeOut");
			Strings.stringIDs.Add(4178554518U, "SetupComponentCommonTransportConfiguration");
			Strings.stringIDs.Add(3498944269U, "ConfirmationMessageTestSmtpConnectivity");
			Strings.stringIDs.Add(2342824031U, "UninstallingPOP3Service");
			Strings.stringIDs.Add(245532275U, "MigrationTypeDoesntMatchConnectionSettings");
			Strings.stringIDs.Add(2445398080U, "DebugStartInternalBeginProcessing");
			Strings.stringIDs.Add(1147595104U, "SetupComponentPreSetupMailbox");
			Strings.stringIDs.Add(4230134658U, "ADTopologyServiceDisplayName");
			Strings.stringIDs.Add(1949851943U, "ExceptionInvalidIisVersion");
			Strings.stringIDs.Add(2889503651U, "SendConnectorNonE12SourceAndTargetServers");
			Strings.stringIDs.Add(4289383202U, "ErrorInvalidJPEGFormat");
			Strings.stringIDs.Add(2322437519U, "MtrtEventDefer");
			Strings.stringIDs.Add(2609648925U, "InvalidRmsTemplate");
			Strings.stringIDs.Add(1043688457U, "CasHealthCalendarScenarioTestICalDesc");
			Strings.stringIDs.Add(1748950543U, "SetPop3ConfigurationTask");
			Strings.stringIDs.Add(2200535965U, "SetupProgressOwaOrganizationEnabled");
			Strings.stringIDs.Add(988117695U, "ClassificationRuleCollectionMissingRootElementViolation");
			Strings.stringIDs.Add(2194749999U, "ErrorDistributionGroupNamingPolicy");
			Strings.stringIDs.Add(1566772861U, "ProgressStartUpdateOtherAD");
			Strings.stringIDs.Add(3204500204U, "DlpRuleMustContainMessageContainsDataClassificationPredicate");
			Strings.stringIDs.Add(3331859280U, "SetupProgressConfigureSystemMessageClassification");
			Strings.stringIDs.Add(948483101U, "BPAScanCompleted");
			Strings.stringIDs.Add(3365309049U, "WarningPublicFolderFree");
			Strings.stringIDs.Add(905413889U, "SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled");
			Strings.stringIDs.Add(4116851739U, "DeleteMessageActionMustBeTheOnlyAction");
			Strings.stringIDs.Add(4172665002U, "ClientAccessPerfCountersComponentDescription");
			Strings.stringIDs.Add(941932955U, "SMTPNotEnabledForTlsCertificate");
			Strings.stringIDs.Add(2809770327U, "MonitoringServiceDescription");
			Strings.stringIDs.Add(2193807956U, "CasHealthWarnTrustAllCertificates");
			Strings.stringIDs.Add(2571441823U, "ServiceUnavaiable");
			Strings.stringIDs.Add(3938903556U, "ClassificationRuleCollectionConfigValidationUnexpectedContents");
			Strings.stringIDs.Add(797610307U, "ErrorEndTimeSmallerThanNow");
			Strings.stringIDs.Add(782503604U, "FailedToStartRegSvr32");
			Strings.stringIDs.Add(452522079U, "ConfirmationMessageSetMapiVirtualDirectory");
			Strings.stringIDs.Add(3602520180U, "UseDagDefaultOnOffNone");
			Strings.stringIDs.Add(4211012520U, "MultipleMsoSyncObjectsRetrieved");
			Strings.stringIDs.Add(1234571969U, "EnableCertificateFederation");
			Strings.stringIDs.Add(3962371391U, "ReplicationCheckResultPassed");
			Strings.stringIDs.Add(1533048402U, "SetupComponentPreSetupUnifiedMessaging");
			Strings.stringIDs.Add(3287674875U, "SetupProgressCreateTransportSettingsContainer");
			Strings.stringIDs.Add(3964614477U, "VerboseFixingStart");
			Strings.stringIDs.Add(938999630U, "SetupProgressPublicFolderMailboxCountQuota");
			Strings.stringIDs.Add(2501038566U, "SetupProgressHostedOutboundSpamFilterPolicy");
			Strings.stringIDs.Add(2012379768U, "ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether");
			Strings.stringIDs.Add(3067186331U, "CasHealthTaskNotRunOnExchangeServer");
			Strings.stringIDs.Add(16215670U, "WatchDogServiceDescription");
			Strings.stringIDs.Add(754559519U, "FindingEventSources");
			Strings.stringIDs.Add(4120295996U, "SetupProgressPopEnabled");
			Strings.stringIDs.Add(4260106383U, "ADAttributePOBox");
			Strings.stringIDs.Add(1680887904U, "ErrorInstallationModeMustBeBuildToBuildUpgrade");
			Strings.stringIDs.Add(637756306U, "SetupProgressCreateSenderRepuationConfiguration");
			Strings.stringIDs.Add(1228780278U, "ErrorOnlyOneParameterMayBeUsed");
			Strings.stringIDs.Add(930407740U, "Away");
			Strings.stringIDs.Add(1372052369U, "ErrorOnlyForestWideAllowIsAllowed");
			Strings.stringIDs.Add(1830297210U, "SetupProgressPerMBXPlanRetentionPolicyEnabled");
			Strings.stringIDs.Add(3865997491U, "ErrorOabVirtualDirectoryNameIsImmutable");
			Strings.stringIDs.Add(94891499U, "SetupProgressStartingMailboxReplicationService");
			Strings.stringIDs.Add(3477937254U, "RFRIGetReferralScenario");
			Strings.stringIDs.Add(4294363030U, "SetupProgressCreateCmdletExtensionAgentContainer");
			Strings.stringIDs.Add(1941627535U, "TransportSyncManagerServiceDisplayName");
			Strings.stringIDs.Add(1694156056U, "AutodiscoverScenario");
			Strings.stringIDs.Add(1012539222U, "WipeSucceededNote");
			Strings.stringIDs.Add(184445993U, "SetupComponentPerfCountersBridgehead");
			Strings.stringIDs.Add(1516604862U, "RemoteExchangeVersionNotSupported");
			Strings.stringIDs.Add(4235274244U, "ProgressDeletingLogFiles");
			Strings.stringIDs.Add(1026730790U, "ErrorPatternCannotBeginWithWildcardMultiMatch");
			Strings.stringIDs.Add(4012037194U, "WarningNoDefaultGAL");
			Strings.stringIDs.Add(3712723548U, "BackSyncUrlInvalidProtcolFormat");
			Strings.stringIDs.Add(1583857132U, "MSExchangeMGMTDescription");
			Strings.stringIDs.Add(957901814U, "TcpListenerCheckDesc");
			Strings.stringIDs.Add(1970107969U, "CannotRemoveDefaultAcceptedDomain");
			Strings.stringIDs.Add(4066206809U, "ErrorMoveToArchiveAppliedToSystemFolder");
			Strings.stringIDs.Add(3925057385U, "ErrorDisableJournalArchiveMailuserNotSoftDeleted");
			Strings.stringIDs.Add(972735676U, "MigrationCSVNotAllowedForRunningState");
			Strings.stringIDs.Add(23416362U, "AboutToAddForeginOrgUSGToLocalAdminGroup");
			Strings.stringIDs.Add(1817485482U, "SetupComponentPrepareSharedConfig");
			Strings.stringIDs.Add(61461170U, "MtrtGenerateIncidentReport");
			Strings.stringIDs.Add(3553998014U, "SetRemoteAccountSyncCache");
			Strings.stringIDs.Add(2797904681U, "FileNotFound");
			Strings.stringIDs.Add(1819604532U, "CouldNotFindMailboxDatabaseById");
			Strings.stringIDs.Add(24533818U, "MobileDeviceLogEMailFailure");
			Strings.stringIDs.Add(2213042884U, "SetupProgressGenericComponent");
			Strings.stringIDs.Add(1910710192U, "ErrorAuthentication");
			Strings.stringIDs.Add(2795454743U, "TenantNotificationVerboseSendingEmail");
			Strings.stringIDs.Add(2449740657U, "ErrorSettingErrorReportingEnabledtoNull");
			Strings.stringIDs.Add(2770526255U, "InfoOverallWarning");
			Strings.stringIDs.Add(2204861371U, "ErrorCannotRetrieveLocalForest");
			Strings.stringIDs.Add(2574649442U, "TenantNotificationVerboseNotSendingEmailPastDay");
			Strings.stringIDs.Add(277780160U, "PhoneNumberUsedByOthers");
			Strings.stringIDs.Add(1144873528U, "UnSupportedPermissionGroupsForEdge");
			Strings.stringIDs.Add(4043674320U, "ErrorMoveOabToTiFrondEndServer");
			Strings.stringIDs.Add(3117239164U, "ErrorJPEGFileTooBig");
			Strings.stringIDs.Add(2141139127U, "EdgeParameterNotValidOnHubRole");
			Strings.stringIDs.Add(4147328458U, "SetupProgressAutoGroupPermissions");
			Strings.stringIDs.Add(513638219U, "UmLanguagePackInvalidExtraction");
			Strings.stringIDs.Add(1539690042U, "Info_MessageItemHasBeenDeleted");
			Strings.stringIDs.Add(88947707U, "ErrorMailboxSearchStorageTransient");
			Strings.stringIDs.Add(2687598256U, "SetupProgressSyncAccountsEnabled");
			Strings.stringIDs.Add(537295937U, "ErrorEwsAllowListAndEwsBlockListSpecified");
			Strings.stringIDs.Add(865295007U, "ReplayServiceDisplayName");
			Strings.stringIDs.Add(1686462850U, "InterceptorErrorActionInvalid");
			Strings.stringIDs.Add(2183464741U, "ErrorMetadataMustBeAbsoluteUrl");
			Strings.stringIDs.Add(3780701529U, "ConnectorIncorrectUsageConnectorStillReferenced");
			Strings.stringIDs.Add(433327936U, "ResubmitRequestStateInvalid");
			Strings.stringIDs.Add(1037175036U, "CasHealthEasSyncDownTestItem");
			Strings.stringIDs.Add(1897752555U, "CasHealthOwaUrlAndCredentialsArgumentError");
			Strings.stringIDs.Add(1323904189U, "ExportFileNameMissing");
			Strings.stringIDs.Add(3065080461U, "DlpPolicyStateStateInvalid");
			Strings.stringIDs.Add(3051615604U, "SetServiceInstanceMapResultCodeUnknownError");
			Strings.stringIDs.Add(3621387192U, "SetupProgressUpgradeLegacyGlobalObjects");
			Strings.stringIDs.Add(2309238384U, "RolePublishingAuthor");
			Strings.stringIDs.Add(920938791U, "ConfirmationMessageRemoveMapiVirtualDirectory");
			Strings.stringIDs.Add(3787373033U, "SetupProgressAddSeverToDag");
			Strings.stringIDs.Add(3723166912U, "SetupProgressDisableWMIInbound");
			Strings.stringIDs.Add(2486066850U, "SetupProgressCreatingEdgeContainers");
			Strings.stringIDs.Add(2869755872U, "InterceptorConfirmDelayAction");
			Strings.stringIDs.Add(1453324876U, "RuleNameAlreadyExist");
			Strings.stringIDs.Add(3052282420U, "UsageTypeInternet");
			Strings.stringIDs.Add(381216251U, "ADAttributeZipCode");
			Strings.stringIDs.Add(3550551595U, "CertificateFound");
			Strings.stringIDs.Add(1484480947U, "MoveMailboxSourceCleanupTypeDeleteSourceNTAccount");
			Strings.stringIDs.Add(4273097132U, "ErrorSiteMailboxCannotLoadAddressTemplate");
			Strings.stringIDs.Add(3460801308U, "InfoDatacenterMode");
			Strings.stringIDs.Add(3989217663U, "ErrorCouldNotStartFullSyncForFirstOrg");
			Strings.stringIDs.Add(2851315938U, "ErrorPatternCannotEndWithWildcardMultiMatch");
			Strings.stringIDs.Add(4068899631U, "FormsAuthenticationDeleteMarkErrorPathNotFound");
			Strings.stringIDs.Add(180031276U, "ErrorFederatedIdentityandPasswordTogether");
			Strings.stringIDs.Add(4038565178U, "VerboseFixingRecipientsOnE12AdminGroup");
			Strings.stringIDs.Add(664667065U, "IncomingServerTooLong");
			Strings.stringIDs.Add(177272670U, "ErrorPublicFolderReferralIncludeSelf");
			Strings.stringIDs.Add(3320504571U, "ErrorEwsEnforceAllowListAndEwsBlockListSpecified");
			Strings.stringIDs.Add(2943002002U, "Error_EndDateCheck");
			Strings.stringIDs.Add(3806563425U, "HybridMailflowNoOrganizationError");
			Strings.stringIDs.Add(1457839961U, "ADAttributeHomePhoneNumber");
			Strings.stringIDs.Add(1797820726U, "NoFederationTrust");
			Strings.stringIDs.Add(386400541U, "ErrorSyncMailboxWithMasterAccountSidNull");
			Strings.stringIDs.Add(3061164332U, "ErrorCannotMovePublicFoldersFromDifferentSourceMailbox");
			Strings.stringIDs.Add(4143129766U, "Word");
			Strings.stringIDs.Add(1434682002U, "CasHealthOwaGetFbaPageNonOKCode");
			Strings.stringIDs.Add(170573252U, "ParameterErrorForInternetUsage");
			Strings.stringIDs.Add(3623745587U, "LanguagePackCfgDescription");
			Strings.stringIDs.Add(1281443429U, "UnifiedMessagingPrereqCheck");
			Strings.stringIDs.Add(4054043087U, "ReservedString2");
			Strings.stringIDs.Add(3623354108U, "ErrorRpcHttpInvalidSwitchCombo");
			Strings.stringIDs.Add(3287501662U, "CasHealthEasScenarioSyncTestItem");
			Strings.stringIDs.Add(117825870U, "MessageTypeVoicemail");
			Strings.stringIDs.Add(2331920480U, "UninstallMonitoringRoleDescription");
			Strings.stringIDs.Add(1264080170U, "ShouldSpecifyEitherIdentityOrMailbox");
			Strings.stringIDs.Add(2685432525U, "InvalidTemplate");
			Strings.stringIDs.Add(1048761747U, "ADAttributeCustomAttribute14");
			Strings.stringIDs.Add(2695346913U, "TenantExecutionNotSupported");
			Strings.stringIDs.Add(3666531412U, "SetupComponentStartingGatewayServices");
			Strings.stringIDs.Add(1607246833U, "ErrorModifyJournalArchiveAddress");
			Strings.stringIDs.Add(3777271156U, "MapiTransactionResultMdbMoved");
			Strings.stringIDs.Add(2837902138U, "UninstallMailboxRoleDescription");
			Strings.stringIDs.Add(3785106612U, "RepairUrgencyProhibited");
			Strings.stringIDs.Add(2343523210U, "ErrorCannotRestoreFromPublicToPrivateMailbox");
			Strings.stringIDs.Add(1301715689U, "ErrorMoveToDestinationFolderInvalid");
			Strings.stringIDs.Add(1361742503U, "InvalidOperationIdentityWithShowDeletion");
			Strings.stringIDs.Add(1698089187U, "ErrorTenantIsUpgrading");
			Strings.stringIDs.Add(2785027967U, "JournalingParameterErrorGccTenantSettingNotExist");
			Strings.stringIDs.Add(4220433130U, "LiveIdAuthenticationResultFailure");
			Strings.stringIDs.Add(3393259516U, "FDS_UM_PerfCountersComponentDescription");
			Strings.stringIDs.Add(3315552988U, "GzipLowDoesNotUseDynamicCompression");
			Strings.stringIDs.Add(1964968671U, "ProgressStatusFinished");
			Strings.stringIDs.Add(796416024U, "CouldNotFindObjectById");
			Strings.stringIDs.Add(1951165280U, "UMCallAnsweringRuleInvalidValue");
			Strings.stringIDs.Add(1083707598U, "StopReplService");
			Strings.stringIDs.Add(4037085182U, "ErrorNoMatchedUserFound");
			Strings.stringIDs.Add(3270764744U, "ErrorVirtualDirectoryNameNull");
			Strings.stringIDs.Add(534542334U, "ErrorDefaultHostedContentFilterPolicyCannotBeDeleted");
			Strings.stringIDs.Add(3468207191U, "SettingRequest");
			Strings.stringIDs.Add(1878646175U, "ErrorReportingEnabledLegalMessage");
			Strings.stringIDs.Add(3950782380U, "ClassificationRuleCollectionAlreadyExists");
			Strings.stringIDs.Add(3231976114U, "ExportFileNameShouldNotBeSet");
			Strings.stringIDs.Add(3882899654U, "ADAttributeState");
			Strings.stringIDs.Add(2283093077U, "PhoneNumberAllowedOnlyWithDialplanWithCountryCode");
			Strings.stringIDs.Add(1653262113U, "SetupComponentDataStorageConfiguration");
			Strings.stringIDs.Add(163354931U, "SetMailboxForwardingAddressConfirmationMessage");
			Strings.stringIDs.Add(2371482883U, "SetupProgressPermissionManagementEnabled");
			Strings.stringIDs.Add(4052366510U, "SetImap4ConfigurationTask");
			Strings.stringIDs.Add(766796983U, "ErrorSourceEndpointRequired");
			Strings.stringIDs.Add(735969708U, "LPPrepareInstallationSource");
			Strings.stringIDs.Add(2661979141U, "EADCWeakSourceCreds");
			Strings.stringIDs.Add(731066465U, "idCreateActiveSyncOraganizationSettings");
			Strings.stringIDs.Add(2469839629U, "ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer");
			Strings.stringIDs.Add(986846419U, "SetupProgressStoppingHTTPFilterService");
			Strings.stringIDs.Add(4253494883U, "Pop3ServiceDescription");
			Strings.stringIDs.Add(261580922U, "ErrorParametersRequiredForNewTenant");
			Strings.stringIDs.Add(385792810U, "ErrorBookmarkIndexOutOfRange");
			Strings.stringIDs.Add(1085159024U, "RetentionPolicyNotEnabled");
			Strings.stringIDs.Add(3250910474U, "ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName");
			Strings.stringIDs.Add(420398710U, "CompletePublicFolderMigrationBatchRequiresSourceLockDown");
			Strings.stringIDs.Add(3561171250U, "ErrorPublicFolderMigrationCompletedPreviously");
			Strings.stringIDs.Add(2772872006U, "DataMartTimeoutException");
			Strings.stringIDs.Add(1181325280U, "ProgressDeletingEdbFile");
			Strings.stringIDs.Add(1570002996U, "DebugStartSetDatabase");
			Strings.stringIDs.Add(4275861342U, "SearchServiceDisplayName");
			Strings.stringIDs.Add(2155767711U, "ErrorCannotOperateOnOrgInCurrentState");
			Strings.stringIDs.Add(1719064209U, "SetupProgressPerMBXPlanOWAPolicyEnabled");
			Strings.stringIDs.Add(421167968U, "SetupProgressStartingASUpdateService");
			Strings.stringIDs.Add(533423045U, "SetupProgressStartingWMIProviderService");
			Strings.stringIDs.Add(1424238063U, "InvalidRequestJob");
			Strings.stringIDs.Add(1340234760U, "MalboxFolderRightsFolderVisible");
			Strings.stringIDs.Add(3941297540U, "SuspendSgcTimeout");
			Strings.stringIDs.Add(1794306721U, "NonUniqueCategoryObject");
			Strings.stringIDs.Add(3908311118U, "SendConnectorValidTargetServerNotFound");
			Strings.stringIDs.Add(4274945649U, "WarningLegacyExchangeServer");
			Strings.stringIDs.Add(1461816102U, "IntegratedVDirDisabledWarning");
			Strings.stringIDs.Add(582063934U, "SetupProgressStoppingReplayService");
			Strings.stringIDs.Add(241712969U, "CasHealthOwaLogonScenarioDescription");
			Strings.stringIDs.Add(4253171919U, "AdminGroupsNotFoundException");
			Strings.stringIDs.Add(2532440427U, "DiscoveryMailboxDisplayName");
			Strings.stringIDs.Add(226086397U, "ErrorAssignmentMethodWithoutRoleAssignee");
			Strings.stringIDs.Add(4255815683U, "CasHealthCouldNotObtainFqdn");
			Strings.stringIDs.Add(1218462432U, "ErrorSetPasswordWithoutPermission");
			Strings.stringIDs.Add(4247430353U, "SetupProgressUpdateMailboxes");
			Strings.stringIDs.Add(3679340841U, "ErrorMissLinkedDomainController");
			Strings.stringIDs.Add(4287593485U, "CasHealthOwaGetLogoffStart");
			Strings.stringIDs.Add(1824522771U, "DebugEndCreateMemberRequest");
			Strings.stringIDs.Add(1872464746U, "SetupProgressNewTLSCertificate");
			Strings.stringIDs.Add(390386316U, "UninstallingMSExchangeFDS");
			Strings.stringIDs.Add(292732930U, "WarningLastPublicFolderDatabase");
			Strings.stringIDs.Add(3437030666U, "DNSRoutingEnabledMustBeSpecifiedForAuthMechanism");
			Strings.stringIDs.Add(3479749483U, "SetupProgressCreateModeratedRecipients");
			Strings.stringIDs.Add(4032370005U, "FileUploadServiceDisplayName");
			Strings.stringIDs.Add(2940137032U, "DegubStartConnectingToDomainServices");
			Strings.stringIDs.Add(488863134U, "InvalidMessageIdentity");
			Strings.stringIDs.Add(2545086143U, "ComplianceSearchTaskCreationError");
			Strings.stringIDs.Add(1295832983U, "ErrorSourceMailboxDatabaseVersionUnsupported");
			Strings.stringIDs.Add(2730360995U, "UninstallClientAccessIisWebServiceExtensions");
			Strings.stringIDs.Add(1873803728U, "UninstallExchangeStreamingOpticsTask");
			Strings.stringIDs.Add(2499030806U, "SetupComponentConfiguringCore");
			Strings.stringIDs.Add(2002903510U, "ADAttributeStreet");
			Strings.stringIDs.Add(2993918660U, "SmtpConnectivityNoneSucceeded");
			Strings.stringIDs.Add(2767568162U, "SetupComponentStartingMailboxServices");
			Strings.stringIDs.Add(318642788U, "FrontEndTransportServiceDescription");
			Strings.stringIDs.Add(577523851U, "InvalidPageSize");
			Strings.stringIDs.Add(531065537U, "SetupProgressCreateApplicationMailDestinationsContainer");
			Strings.stringIDs.Add(692347082U, "ProvisioningRequestAlreadyCanceling");
			Strings.stringIDs.Add(1574844528U, "SetupProgressStoppingCredentialService");
			Strings.stringIDs.Add(596322096U, "SetupProgressImapEnabled");
			Strings.stringIDs.Add(1369158086U, "ProgressValidation");
			Strings.stringIDs.Add(4216445905U, "ErrorRecipientContainerInvalidOrNotExists");
			Strings.stringIDs.Add(2063735667U, "DomainsNotFoundException");
			Strings.stringIDs.Add(872788106U, "SetupProgressCreateMoveToArchiveRetentionPolicyTag");
			Strings.stringIDs.Add(2954545082U, "FailedToFindFederationTrust");
			Strings.stringIDs.Add(3818749374U, "MailboxConnectScenario");
			Strings.stringIDs.Add(4201996528U, "ElcUserConfigurationConfigurationItemNotAvailable");
			Strings.stringIDs.Add(28165407U, "OutlookProtectionRuleInvalidPriority");
			Strings.stringIDs.Add(2616555063U, "CouldNotFindEWSStandardAuthBindingTransportElement");
			Strings.stringIDs.Add(133450481U, "SetupProgressCreateArbitrationMailboxRetentionPolicy");
			Strings.stringIDs.Add(3692329177U, "AddressRewriteIdentityNotFound");
			Strings.stringIDs.Add(30730169U, "ErrorFailedToGetRacAndClcTenant");
			Strings.stringIDs.Add(1056311972U, "RemoveCertificateFederation");
			Strings.stringIDs.Add(2034871165U, "ErrorWMAFileTooBig");
			Strings.stringIDs.Add(1377545169U, "ADAttributeCustomAttribute3");
			Strings.stringIDs.Add(1499192082U, "IMSAdminHelperGetDataPathsCouldNotAllocateException");
			Strings.stringIDs.Add(784747152U, "CasHealthMustSpecifyCas");
			Strings.stringIDs.Add(2311033855U, "ConfirmationMessageSetSupervisionPolicy");
			Strings.stringIDs.Add(467522453U, "ErrorSetMailboxLitigationHoldDuration");
			Strings.stringIDs.Add(2485903499U, "AddressBookServiceDisplayName");
			Strings.stringIDs.Add(3342681064U, "MigrationNoLargeItemLimitForLocalBatches");
			Strings.stringIDs.Add(59123757U, "SetupProgressConfigureAntispamObjects");
			Strings.stringIDs.Add(3367615085U, "ADAttributeDepartment");
			Strings.stringIDs.Add(3295799601U, "ErrorFreeBusyResponsibility");
			Strings.stringIDs.Add(1920246746U, "SetupComponentCommonGlobalConfig");
			Strings.stringIDs.Add(3214028675U, "MetabaseSetPropertiesFailure");
			Strings.stringIDs.Add(350309502U, "ErrorLinkedMailboxesAreNotSupported");
			Strings.stringIDs.Add(3930521376U, "ExchangeSettingsEnableUsage");
			Strings.stringIDs.Add(1649334496U, "DebugStartUpnUniquenessCheck");
			Strings.stringIDs.Add(574372347U, "MigrationCannotBeCompleted");
			Strings.stringIDs.Add(1904936963U, "IsapiDLLPathNotFoundException");
			Strings.stringIDs.Add(2522223732U, "MtrtMessageFail");
			Strings.stringIDs.Add(3694845743U, "CannotRemoveSharingPolicyWithUsersAssigned");
			Strings.stringIDs.Add(1485874038U, "MissingDataClassificationsParameter");
			Strings.stringIDs.Add(882462221U, "Debug");
			Strings.stringIDs.Add(2158213497U, "ErrorFromSyncClientAndMembersUsedTogether");
			Strings.stringIDs.Add(161711511U, "NoAction");
			Strings.stringIDs.Add(222253302U, "ErrorSuspendWRTCForOnlineOnly");
			Strings.stringIDs.Add(1533807700U, "ErrorMinimumAccountExpiry");
			Strings.stringIDs.Add(3367745963U, "ComInteropTlbNotFound");
			Strings.stringIDs.Add(1442001356U, "InstallContentIndexingServiceTask");
			Strings.stringIDs.Add(2361559256U, "SetupComponentSMTPConfiguration");
			Strings.stringIDs.Add(906204482U, "InvalidOrganization");
			Strings.stringIDs.Add(2291874325U, "SyncNowAlreadyStartedException");
			Strings.stringIDs.Add(3812135455U, "WarningPropertiesIgnored");
			Strings.stringIDs.Add(3862568128U, "MoveMailboxGenerateWatsonDump");
			Strings.stringIDs.Add(815668002U, "AuthenticationMethodFba");
			Strings.stringIDs.Add(3850237910U, "WarningGeneratingMailboxIsNullOABWillNotBeGenerated");
			Strings.stringIDs.Add(1520502444U, "WarningForceMessage");
			Strings.stringIDs.Add(3119406771U, "SetupProgressCreateRBACContainer");
			Strings.stringIDs.Add(1122863290U, "MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix");
			Strings.stringIDs.Add(4040765572U, "InvalidStartAndEndTime");
			Strings.stringIDs.Add(4135619444U, "CasHealthOwaUrlAndCasArgumentError");
			Strings.stringIDs.Add(2494275330U, "WarnAboutStarAcceptedDomain");
			Strings.stringIDs.Add(2071494620U, "NoTPDsImported");
			Strings.stringIDs.Add(1741046566U, "SetupProgressCleanEmptyDirs");
			Strings.stringIDs.Add(3879378277U, "SearchServiceDescription");
			Strings.stringIDs.Add(2801279682U, "SetupComponentPostSetupBridgehead");
			Strings.stringIDs.Add(1756765869U, "ProgressSavingADObject");
			Strings.stringIDs.Add(1928317617U, "TenantOrganizationMissing2");
			Strings.stringIDs.Add(4085285360U, "MultipleCoexistenceDomainsFoundException");
			Strings.stringIDs.Add(3468299751U, "ErrorNotEnoughPermissions");
			Strings.stringIDs.Add(963382869U, "CasHealthOwaGetAuthSucceeded");
			Strings.stringIDs.Add(379322642U, "ErrorCannotUnlinkMailboxPlanForTenant");
			Strings.stringIDs.Add(2954647688U, "FDServiceDisplayName");
			Strings.stringIDs.Add(867272512U, "CasHealthUserNameHeader");
			Strings.stringIDs.Add(248554005U, "ErrorInboxRuleHasNoAction");
			Strings.stringIDs.Add(2162195429U, "ErrorNotSupportInCrossOrg");
			Strings.stringIDs.Add(3931432863U, "VerboseSyncTaskNullCookie");
			Strings.stringIDs.Add(3040152642U, "SetupdProgressPrivacyLink");
			Strings.stringIDs.Add(3017742918U, "SetupProgressTemplateTenant");
			Strings.stringIDs.Add(2524348032U, "CasHealthOwaConnectionError");
			Strings.stringIDs.Add(3804447234U, "SetupProgressStoppingInformationStoreService");
			Strings.stringIDs.Add(1498335696U, "SetupProgressGatewayPerfCounters");
			Strings.stringIDs.Add(920999072U, "FailedToUnregisterContentIndexingBinaries");
			Strings.stringIDs.Add(3415113328U, "CreateDefaultActiveSyncMailboxPolicy");
			Strings.stringIDs.Add(2110592425U, "SetupProgressCreateAutoDiscoverContainer");
			Strings.stringIDs.Add(640336054U, "FBAServiceDescription");
			Strings.stringIDs.Add(3665160963U, "AirSyncReportingProgressActivity");
			Strings.stringIDs.Add(3640701559U, "SetupProgressStoppingExchangeMGMTService");
			Strings.stringIDs.Add(3023752340U, "TaskBothConfigurationOnlyAndQuorumOnlySpecified");
			Strings.stringIDs.Add(2676557537U, "ErrorCorruptFederationMetadata");
			Strings.stringIDs.Add(899504670U, "SetupProgressCreateAutoGroup");
			Strings.stringIDs.Add(674748907U, "SetupProgressCleanupFiles");
			Strings.stringIDs.Add(3478112858U, "CasHealthWebAppNoCasMbxUmHtArgumentError");
			Strings.stringIDs.Add(3677088551U, "SetupProgressStoppingSystemAttendantService");
			Strings.stringIDs.Add(1843600203U, "ErrorBPAMoreThanOnePrereqServerSpecified");
			Strings.stringIDs.Add(3418928659U, "ErrorDotNetInstallPathNotFound");
			Strings.stringIDs.Add(1880877723U, "InstallImap4BeServiceTask");
			Strings.stringIDs.Add(4240176319U, "MigrationMustSpecifyEmailOrMailboxDN");
			Strings.stringIDs.Add(1465077572U, "CannotLocateTargetServiceEndpoint");
			Strings.stringIDs.Add(362822361U, "UnregisterFilterFailed");
			Strings.stringIDs.Add(3201264196U, "RegSvr32FailedToExit");
			Strings.stringIDs.Add(2773342531U, "ComplianceAuditServiceNotUninstalled");
			Strings.stringIDs.Add(3914082886U, "SetupProgressUninstallTransportLogSearchService");
			Strings.stringIDs.Add(2879434796U, "SetupProgressDisableFastSearchSeedingPortRule");
			Strings.stringIDs.Add(640518096U, "GlobalLocatorServiceResultSuccess");
			Strings.stringIDs.Add(3548951548U, "DagNetworkInconsistentRoleException");
			Strings.stringIDs.Add(3295286714U, "SetInstallPathInAppConfig");
			Strings.stringIDs.Add(2320102244U, "ConfirmationMessageRemoveAutodiscoverVirtualDirectory");
			Strings.stringIDs.Add(1874104103U, "DomainControllerName");
			Strings.stringIDs.Add(2631968966U, "UninstallADTopologyServiceTask");
			Strings.stringIDs.Add(2887275141U, "SmtpConnectivityAllTested");
			Strings.stringIDs.Add(1174103519U, "ErrorInboxRuleNotSupported");
			Strings.stringIDs.Add(2666067648U, "Verbose");
			Strings.stringIDs.Add(998944703U, "ContinueToRemoveHoldForInactive");
			Strings.stringIDs.Add(2363277368U, "CasHealthLatencyHeader");
			Strings.stringIDs.Add(2182511137U, "ADAttributeFaxNumber");
			Strings.stringIDs.Add(4242268310U, "SetupProgressCreateOutlookContainer");
			Strings.stringIDs.Add(195087670U, "InvalidCategoryObject");
			Strings.stringIDs.Add(3886507265U, "OfficeDataLoaderServiceDisplayName");
			Strings.stringIDs.Add(1353995902U, "MoveStatusSucceeded");
			Strings.stringIDs.Add(1546277393U, "LoadCredentialsSuccess");
			Strings.stringIDs.Add(2631471741U, "LegacyIncludeOriginalMailParameterWillBeUpgraded");
			Strings.stringIDs.Add(3725160909U, "FileShareQuorumCheckDesc");
			Strings.stringIDs.Add(2928336084U, "ClientAccessComponentDescription");
			Strings.stringIDs.Add(928033673U, "StopADTopologyService");
			Strings.stringIDs.Add(872037930U, "ErrorCannotChangeRoleGroupType");
			Strings.stringIDs.Add(1020220U, "ErrorInvalidCasting");
			Strings.stringIDs.Add(3437177865U, "SetupProgressCreatingNewPublicFolderDatabase");
			Strings.stringIDs.Add(3327710720U, "SortedAvailablePatches");
			Strings.stringIDs.Add(2038537031U, "WarningSetMailboxLitigationHoldDuration");
			Strings.stringIDs.Add(343634016U, "ADUserIsMissingData");
			Strings.stringIDs.Add(3219751466U, "ExpiryCertMessage");
			Strings.stringIDs.Add(2978007281U, "ContentIndexAlreadyExists");
			Strings.stringIDs.Add(2460780396U, "ImportCertificateBase64DataInvalid");
			Strings.stringIDs.Add(2469672135U, "InfoUL");
			Strings.stringIDs.Add(3855259485U, "ErrorLocalMachineIsNotExchangeServer");
			Strings.stringIDs.Add(349869371U, "ErrorEwsEnforceBlockListAndEwsAllowListSpecified");
			Strings.stringIDs.Add(2062290861U, "MoveMailboxSourceCleanupTypeCreateSourceContact");
			Strings.stringIDs.Add(1971406120U, "MRSHealthPassed");
			Strings.stringIDs.Add(1453329754U, "ErrorAccessingTransportSettings");
			Strings.stringIDs.Add(1846483964U, "PopImapLoggingOff");
			Strings.stringIDs.Add(332094276U, "ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory");
			Strings.stringIDs.Add(205573600U, "MtrtMessageSubmitDetailMessage");
			Strings.stringIDs.Add(3906240272U, "TheOnlySourceMailboxIsTheTargetMailbox");
			Strings.stringIDs.Add(126744571U, "UnifiedMessagingRoleDisplayName");
			Strings.stringIDs.Add(1510867730U, "TpdAlreadyImported");
			Strings.stringIDs.Add(1468831408U, "SetupProgressStoppingNotificationsBrokerService");
			Strings.stringIDs.Add(3641402715U, "CannotBypassDomainNameValidation");
			Strings.stringIDs.Add(1289162260U, "InitialOrIncrementalMigrationArgument");
			Strings.stringIDs.Add(2183205705U, "VerboseBeginFingerprint");
			Strings.stringIDs.Add(2774892227U, "MailboxReplicationServiceNotRunning");
			Strings.stringIDs.Add(3099642004U, "AddressBookServiceDescription");
			Strings.stringIDs.Add(2462782643U, "MonitoringCorrelationServiceDescription");
			Strings.stringIDs.Add(1325930305U, "ErrorCannotRetrieveLocalSite");
			Strings.stringIDs.Add(1390596538U, "SetupProgressDiscoveryMailboxes");
			Strings.stringIDs.Add(1525201652U, "ErrorApprovalApplicationIdentityUnsupported");
			Strings.stringIDs.Add(3997887818U, "CasHealthOwaInternalTrustCertificate");
			Strings.stringIDs.Add(3297360946U, "EnableCertificateServiceNotInstalled");
			Strings.stringIDs.Add(369010750U, "SetupProgressCreateOutlookProtectionRulesContainer");
			Strings.stringIDs.Add(2836471846U, "MailboxReplicationServiceIsRunning");
			Strings.stringIDs.Add(3403924458U, "PolicyNeededForAutotagging");
			Strings.stringIDs.Add(2088391844U, "CasHealthOwaLogonScenarioName");
			Strings.stringIDs.Add(2256240594U, "RemoveSecondaryDomainDescription");
			Strings.stringIDs.Add(1225301128U, "SetupProgressSkipResetPasswordOnFirstLogonEnabled");
			Strings.stringIDs.Add(2799440992U, "RejectMessageParameterWillBeIgnored");
			Strings.stringIDs.Add(934287899U, "ReplayLagStatusLabelConfigured");
			Strings.stringIDs.Add(3487518861U, "WarningTooManyLegacyGALsCreated");
			Strings.stringIDs.Add(1803359682U, "ErrorLegacyPublicFolderDatabaseExist");
			Strings.stringIDs.Add(3014123757U, "UninstallMailboxTransportDeliveryServiceTask");
			Strings.stringIDs.Add(703660436U, "LiveIdAuthenticationResultUndefined");
			Strings.stringIDs.Add(2198248626U, "AspnetConfigFileNotFound");
			Strings.stringIDs.Add(3520531162U, "CannotMoveOabToE15OrLaterServer");
			Strings.stringIDs.Add(2910100378U, "ErrorNotSupportedModifyMultivaluedProperties");
			Strings.stringIDs.Add(2531302401U, "RuleCollectionInvalid");
			Strings.stringIDs.Add(433694853U, "IsNetlogonRunningScenario");
			Strings.stringIDs.Add(2523315401U, "TestCNGPrivateKeyNotSupported");
			Strings.stringIDs.Add(3719036545U, "Info_MessageItemHasBeenCreated");
			Strings.stringIDs.Add(1226169742U, "SetupProgressCleanManagement");
			Strings.stringIDs.Add(4209927473U, "ErrorSystemAttendantObjectMissing");
			Strings.stringIDs.Add(1466544691U, "InvalidAction");
			Strings.stringIDs.Add(2037665150U, "NewServiceConnectionPointInvalidParameters");
			Strings.stringIDs.Add(1441009660U, "OauthIsTurnedOff");
			Strings.stringIDs.Add(2041792354U, "AutoDiscoverUrlIsBad");
			Strings.stringIDs.Add(691468660U, "ErrorLocalAccountPartitionRequiredForTT");
			Strings.stringIDs.Add(536922083U, "InvalidFqdnFromAD");
			Strings.stringIDs.Add(478157661U, "VerboseStartAuditLogSearch");
			Strings.stringIDs.Add(307758658U, "CasHealthCalendarLongName");
			Strings.stringIDs.Add(671469622U, "ErrorWhileFolderSync");
			Strings.stringIDs.Add(2976017118U, "Pop3ServiceDisplayName");
			Strings.stringIDs.Add(57133306U, "ErrorGetSyncDeletedRecipientRetryFailed");
			Strings.stringIDs.Add(1794509022U, "ErrorChangingBadwordsTransportRule");
			Strings.stringIDs.Add(3636625232U, "DatacenterEnvironmentOnlyOperationException");
			Strings.stringIDs.Add(2284358260U, "RemoveOrganizationFailWithExistingMailboxes");
			Strings.stringIDs.Add(310110990U, "ErrorFederationEnabledIsImmutable");
			Strings.stringIDs.Add(3043193198U, "SetupComponentConfiguringInformationStore");
			Strings.stringIDs.Add(855500179U, "PopImapComponentDescription");
			Strings.stringIDs.Add(3924025634U, "MoveMailboxSourceCleanupTypeDeleteSourceMailbox");
			Strings.stringIDs.Add(302613486U, "ReplayLagStatusLabelEnabled");
			Strings.stringIDs.Add(1777480851U, "FileDistributionServiceControlComponentDescription");
			Strings.stringIDs.Add(2388930131U, "VerboseVerifyRecipientViewRootSucceed");
			Strings.stringIDs.Add(2499808701U, "NewOrganizationDescription");
			Strings.stringIDs.Add(3347295290U, "ArchiveConnectivityResultPrimaryFailure");
			Strings.stringIDs.Add(2993783194U, "ConfirmationMessageEnableAntiSpamUpdates");
			Strings.stringIDs.Add(3791304781U, "WarningUseConfigurationOnly");
			Strings.stringIDs.Add(2888337457U, "IsapiExtensionMustHavePhysicalPathException");
			Strings.stringIDs.Add(3051861517U, "SetMailboxSearchActivity");
			Strings.stringIDs.Add(748775328U, "SetupProgressCreateFederationContainer");
			Strings.stringIDs.Add(204171309U, "ExchangeTracingProviderInstalledSuccess");
			Strings.stringIDs.Add(3571315384U, "SetupProgressStartingServiceHostService");
			Strings.stringIDs.Add(2383416297U, "MigrationStartAfterIncorrectMigrationType");
			Strings.stringIDs.Add(531644470U, "SetupProgressCreateRulesContainer");
			Strings.stringIDs.Add(446352617U, "ThrottlingServiceDisplayName");
			Strings.stringIDs.Add(4208434869U, "CasHealthTestNewUserDataCenterScriptName");
			Strings.stringIDs.Add(1406904313U, "MtrtModerateMessageByManager");
			Strings.stringIDs.Add(1372186092U, "CasHealthInstructResetCredentials");
			Strings.stringIDs.Add(3029376667U, "ErrorInvalidDlpPolicyTemplateIdentity");
			Strings.stringIDs.Add(1140300925U, "RoleReviewer");
			Strings.stringIDs.Add(1700516872U, "StartSetupProcess");
			Strings.stringIDs.Add(1990198525U, "SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan");
			Strings.stringIDs.Add(2135255345U, "NoKeyInformationInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(418330348U, "ErrorOrganizationIdentityRequired");
			Strings.stringIDs.Add(1927181059U, "TransportSyncManagerServiceNotInstalled");
			Strings.stringIDs.Add(2827020246U, "ErrorMissingWindowsLiveIdHandler");
			Strings.stringIDs.Add(1363030539U, "MigrationJobCorrupted");
			Strings.stringIDs.Add(2950414539U, "SetupProgressCreateDSNContainerHierarcy");
			Strings.stringIDs.Add(2630227016U, "ErrorEndTimeSmallerThanStartTime");
			Strings.stringIDs.Add(3117364089U, "StoppingMonitoringService");
			Strings.stringIDs.Add(3900097179U, "MtrtAddCopyToRecipient");
			Strings.stringIDs.Add(910877028U, "SetupProgressCreateMailboxContainers");
			Strings.stringIDs.Add(230534278U, "SetupComponentCafeGlobalConfig");
			Strings.stringIDs.Add(52273023U, "ErrorDatabaseCountInServerExceedLimit");
			Strings.stringIDs.Add(3883167156U, "NoKeyIDTypeInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(3122739895U, "ErrorChangePartnerApplicationDirectTrust");
			Strings.stringIDs.Add(245723146U, "ProtectedServiceHostDisplayName");
			Strings.stringIDs.Add(2024633455U, "EcpAuthenticationNotMatchOwaWarning");
			Strings.stringIDs.Add(712435719U, "SetupProgressStartingSystemAttendantService");
			Strings.stringIDs.Add(2862785662U, "InterceptorErrorEventInvalid");
			Strings.stringIDs.Add(4219526338U, "NewPerfCounters");
			Strings.stringIDs.Add(2534963029U, "CalendarAnalysisMixedModeNotSupported");
			Strings.stringIDs.Add(472758664U, "MapiSubmitSystemProbeFail");
			Strings.stringIDs.Add(3414041514U, "FinishedUpdatingMFLFiles");
			Strings.stringIDs.Add(4222707329U, "FailedToChangeServiceConfig");
			Strings.stringIDs.Add(1166503263U, "JournalNdrMailboxWarning");
			Strings.stringIDs.Add(1777122322U, "DeleteOperation");
			Strings.stringIDs.Add(2154198407U, "TenantNotificationVerboseNotSendingEmailNoRecipients");
			Strings.stringIDs.Add(2765375592U, "InternalJournalRuleScope");
			Strings.stringIDs.Add(3649628048U, "TestMigrationServerConnectionFailed");
			Strings.stringIDs.Add(3520915432U, "CannotRemoveDefaultSharingPolicy");
			Strings.stringIDs.Add(3608246202U, "DatabaseOffline");
			Strings.stringIDs.Add(622543112U, "FileAlreadyExists");
			Strings.stringIDs.Add(4025218279U, "ErrorCannotLoadFingerprintCreator");
			Strings.stringIDs.Add(2349505779U, "VerboseChangeWinrmStartType");
			Strings.stringIDs.Add(3476101420U, "ConfiguringMailboxSystemAttendantDependentTasks");
			Strings.stringIDs.Add(4251301146U, "StartingMSExchangeFDS");
			Strings.stringIDs.Add(3588458122U, "ErrorInvalidExcludedCmdletPattern");
			Strings.stringIDs.Add(353738526U, "CasHealthTaskCasHasNoTopologySite");
			Strings.stringIDs.Add(3068214134U, "DisasterRecoveryGatewayRoleDescription");
			Strings.stringIDs.Add(3584192845U, "GlobalLocatorServiceResultUndefined");
			Strings.stringIDs.Add(1226048266U, "SetupProgressCustomScriptsEnabled");
			Strings.stringIDs.Add(1903193717U, "MessageTypeCalendaring");
			Strings.stringIDs.Add(4235097279U, "InstallRecoveryActionArbiterServiceTask");
			Strings.stringIDs.Add(595624881U, "InvalidNameOrDescriptionForDefaultLocale");
			Strings.stringIDs.Add(93941597U, "ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount");
			Strings.stringIDs.Add(3931018787U, "ExceptionProductInfoRequired");
			Strings.stringIDs.Add(3287357166U, "VerboseSucceedToPrepopulateCache");
			Strings.stringIDs.Add(2662348268U, "NotMailboxDatabase");
			Strings.stringIDs.Add(3572711316U, "Error_CheckClientInfo");
			Strings.stringIDs.Add(1236397787U, "DelegationTokenRequestSuccess");
			Strings.stringIDs.Add(2708098864U, "MOWADeviceTypePrefix");
			Strings.stringIDs.Add(4184366094U, "FFoDisablePrepareSct");
			Strings.stringIDs.Add(439240951U, "SetupProgressConfiguringOAB");
			Strings.stringIDs.Add(841216837U, "ErrorDefaultSpamConfigCannotBeDeleted");
			Strings.stringIDs.Add(3037105461U, "SetupComponentPreSetupFrontendTransport");
			Strings.stringIDs.Add(4110715451U, "SetupComponentPostSetupGateway");
			Strings.stringIDs.Add(2803101125U, "ValidatingTestCasConnectivityRunInstance");
			Strings.stringIDs.Add(3558380023U, "InstallTranscodingServiceEx");
			Strings.stringIDs.Add(1033795742U, "GlobalJournalRuleScope");
			Strings.stringIDs.Add(822308736U, "ActiveManagerCheckDesc");
			Strings.stringIDs.Add(358249099U, "SetupComponentConfigurationBridgehead");
			Strings.stringIDs.Add(3141727619U, "ClassificationRuleCollectionDecryptionFailure");
			Strings.stringIDs.Add(385783597U, "ProgressRestoringDatabaseStatus");
			Strings.stringIDs.Add(3789968890U, "CasHealthOwaTimeoutExternal");
			Strings.stringIDs.Add(3237406418U, "TestSearchCheckMailbox");
			Strings.stringIDs.Add(1194595183U, "SendConnectorDashdashAddressSpaceNotUnique");
			Strings.stringIDs.Add(3826931934U, "UninstallImap4BeServiceTask");
			Strings.stringIDs.Add(3985647980U, "CopyStatusDisconnectedAndHealthy");
			Strings.stringIDs.Add(717219190U, "WarningADServerSettingsUnchanged");
			Strings.stringIDs.Add(3254817118U, "CreateMailboxSession");
			Strings.stringIDs.Add(3130711463U, "ErrorNoNextCertificate");
			Strings.stringIDs.Add(1068084403U, "TokenValidationFailed");
			Strings.stringIDs.Add(3005712405U, "CannotCreateAuditLogSearchDueToSearchQuota");
			Strings.stringIDs.Add(3470766201U, "SavingCalendarLogs");
			Strings.stringIDs.Add(4096720402U, "ReplayServiceDescription");
			Strings.stringIDs.Add(863112602U, "ADAttributeNotes");
			Strings.stringIDs.Add(1264026888U, "SetupProgressLinkOutOfTheBoxMrmTags");
			Strings.stringIDs.Add(2720557853U, "InstallPop3ServiceTask");
			Strings.stringIDs.Add(3329534613U, "ErrorMailboxSearchStoragePermanent");
			Strings.stringIDs.Add(3137925175U, "ErrorCannotSetRecipientContainer");
			Strings.stringIDs.Add(1237939725U, "SmimeConfigAmbiguous");
			Strings.stringIDs.Add(3930981558U, "CasHealthOwaAuthResponseHeaderMissing");
			Strings.stringIDs.Add(2844363599U, "ErrorFailedRmsVersionCheck");
			Strings.stringIDs.Add(1685032169U, "ErrorParametersMandatory");
			Strings.stringIDs.Add(3242409340U, "ServiceHostServiceControlComponentDescription");
			Strings.stringIDs.Add(459738740U, "ErrorRefreshMetadataOptionNotAllowed");
			Strings.stringIDs.Add(2244149146U, "ErrorFailedToGetULEnterprise");
			Strings.stringIDs.Add(4132471740U, "InfoTpdFromRmsOnlineChecked");
			Strings.stringIDs.Add(1065601728U, "CasHealthOwaLogonFailed");
			Strings.stringIDs.Add(408932233U, "DelegateRoleTypeServerAdmin");
			Strings.stringIDs.Add(731624525U, "SetupProgressCreateMailboxPlan");
			Strings.stringIDs.Add(1147746662U, "OwaMetabaseGetPropertiesFailure");
			Strings.stringIDs.Add(2582405772U, "ErrorDatabaseOffline");
			Strings.stringIDs.Add(2413236052U, "SetupProgressCreatingNewMailboxDatabase");
			Strings.stringIDs.Add(3672835011U, "MailboxPrereqCheck");
			Strings.stringIDs.Add(3458987765U, "OnPremisesConfigurationObjectNotFound");
			Strings.stringIDs.Add(3892568161U, "RoleAuthor");
			Strings.stringIDs.Add(3571909379U, "PrepareDomainDescription");
			Strings.stringIDs.Add(2749659911U, "OwaNameParameterIgnored");
			Strings.stringIDs.Add(2336909403U, "ErrorInvalidPostMasterAddress");
			Strings.stringIDs.Add(838914092U, "SendConnectorDashdashSmarthostNotUnique");
			Strings.stringIDs.Add(3886180752U, "InvalidDlpPolicyParameter");
			Strings.stringIDs.Add(487743183U, "UninstallBridgeheadRoleDescription");
			Strings.stringIDs.Add(3783722197U, "OldVersionMailboxSkipped");
			Strings.stringIDs.Add(3731283738U, "CannotRemoveUMCertificate");
			Strings.stringIDs.Add(2845114771U, "SetupProcessCreateDefaultDataClassificationConfig");
			Strings.stringIDs.Add(2520624322U, "PhoneNumberInvalidLength");
			Strings.stringIDs.Add(250472943U, "ErrorPathTooLong");
			Strings.stringIDs.Add(3383748791U, "CertificateStatusRevocationCheckFailure");
			Strings.stringIDs.Add(3244203554U, "MoveMailboxSourceCleanupTypeNone");
			Strings.stringIDs.Add(2284227198U, "ConfirmationMessageTestFederationTrustCertificate");
			Strings.stringIDs.Add(1401920462U, "ConfirmationMessageRemoveMicrosoftExchangeRecipient");
			Strings.stringIDs.Add(3914981870U, "ScenarioAutoDiscoverSoapProvider");
			Strings.stringIDs.Add(3642085168U, "CouldNotFindEWSStandardAuthBinding");
			Strings.stringIDs.Add(2303334587U, "CasHealthPortnumber");
			Strings.stringIDs.Add(1680424794U, "ErrorElcPolicyToPreE12");
			Strings.stringIDs.Add(2738624741U, "CasHealthEasScenarioFolderSync");
			Strings.stringIDs.Add(3505749236U, "ErrorMoveOabBetweenTwoTiServers");
			Strings.stringIDs.Add(2716009035U, "DiscoveryManagementSecurityGroupNotFound");
			Strings.stringIDs.Add(2849847834U, "ReleaseAgentBinaryReference");
			Strings.stringIDs.Add(4267871022U, "SetupComponentConfiguringMSARPSService");
			Strings.stringIDs.Add(3089160909U, "DisasterRecoveryBridgeheadRoleDescription");
			Strings.stringIDs.Add(1797920U, "SetupComponentConfiguringRpcProxy");
			Strings.stringIDs.Add(4141119452U, "VerboseFixingDynamicDistributionGroupFilterMetadata");
			Strings.stringIDs.Add(2694277878U, "SetupProgressEnableWMIOutbound");
			Strings.stringIDs.Add(2374542673U, "EmptySearchQuery");
			Strings.stringIDs.Add(1029533142U, "CasHealthOwaReturnedErrorPage");
			Strings.stringIDs.Add(979072870U, "SpecifiedOUNotUnique");
			Strings.stringIDs.Add(1294778787U, "ErrorNoDefaultMailTipTranslationSpecified");
			Strings.stringIDs.Add(4036417902U, "SetupProgressTeamMailboxCountQuota");
			Strings.stringIDs.Add(1845875730U, "ErrorPartnerApplicationRealmNotFoundInAuthServer");
			Strings.stringIDs.Add(2447683441U, "ExchangeTrustedSubsystemDescription");
			Strings.stringIDs.Add(364234330U, "InstallingLanguages");
			Strings.stringIDs.Add(988376401U, "CannotOnlySpecifyCredential");
			Strings.stringIDs.Add(212774136U, "FrontendTransportPrereqCheck");
			Strings.stringIDs.Add(2272693956U, "SettingMoveRequest");
			Strings.stringIDs.Add(1996694683U, "TenantGuidNotIdentified");
			Strings.stringIDs.Add(784370740U, "InfoTemplate");
			Strings.stringIDs.Add(4142133581U, "AllGroupMembers");
			Strings.stringIDs.Add(3726632542U, "JournalNdrMailboxInJournalRuleJournalEmailAddress");
			Strings.stringIDs.Add(667561628U, "SetupComponentConfiguringGatewaySettings");
			Strings.stringIDs.Add(508689909U, "AuthenticationMethodBasic");
			Strings.stringIDs.Add(404165634U, "SetupComponentConfiguringContentIndexing");
			Strings.stringIDs.Add(808776120U, "OperationNotAllowed");
			Strings.stringIDs.Add(3080147272U, "EnableMessageHistory");
			Strings.stringIDs.Add(3690733839U, "NoFoldersInMailbox");
			Strings.stringIDs.Add(3533711711U, "WarningInternalLicensingDisabled");
			Strings.stringIDs.Add(3955111949U, "MapiTransactionDiagnosticTargetDatabaseNotAttached");
			Strings.stringIDs.Add(2197368288U, "BridgeheadExchangeCertificateComponentDescription");
			Strings.stringIDs.Add(1280818475U, "CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains");
			Strings.stringIDs.Add(876326020U, "UninstallMomConnectorServiceTask");
			Strings.stringIDs.Add(3230913595U, "ExsetdataOrganizationName");
			Strings.stringIDs.Add(2755453831U, "ErrorAccountDisabledForUserMailbox");
			Strings.stringIDs.Add(3362908635U, "SetupProgressStoppingUMService");
			Strings.stringIDs.Add(3964929519U, "ErrorFailedToGetULTenant");
			Strings.stringIDs.Add(4077893373U, "CasHealthOwaAuthFailInternal");
			Strings.stringIDs.Add(404966124U, "InstallMigrationWorkflowServiceTask");
			Strings.stringIDs.Add(2428243352U, "ActiveDirectorySearchViaADDriverScenario");
			Strings.stringIDs.Add(835092827U, "ADTopologyServiceDescription");
			Strings.stringIDs.Add(450527367U, "GetHealthReportProgressFinished");
			Strings.stringIDs.Add(3481422259U, "DatabaseChecksFailed");
			Strings.stringIDs.Add(3655046083U, "CopyStatusDisconnectedAndResynchronizing");
			Strings.stringIDs.Add(1653552528U, "ErrorEwsValidatorFailed");
			Strings.stringIDs.Add(1137715195U, "IPListEntryTypeMismatch");
			Strings.stringIDs.Add(832308282U, "OrganizationWide");
			Strings.stringIDs.Add(2028770649U, "ErrorNonExistentDefaultContactsFolder");
			Strings.stringIDs.Add(314238422U, "CustomCannotBeUsedForPermissionGroups");
			Strings.stringIDs.Add(2794545475U, "MapiTransactionAbortedMsg");
			Strings.stringIDs.Add(1689076287U, "ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted");
			Strings.stringIDs.Add(2484407530U, "CertAuthWithoutSSLError");
			Strings.stringIDs.Add(3221965754U, "NeedEitherAssemblyPathOrName");
			Strings.stringIDs.Add(3874701191U, "CannotFindTestUser");
			Strings.stringIDs.Add(2484130891U, "MalboxFolderRightsEditAllItems");
			Strings.stringIDs.Add(2502489235U, "CertificateStatusPendingRequest");
			Strings.stringIDs.Add(2626534131U, "AddressRewriteExternalAddressExists");
			Strings.stringIDs.Add(2951010618U, "ErrorMoveDatabasePathInvalidOnReplicated");
			Strings.stringIDs.Add(2832128882U, "CasTransactionResultFailure");
			Strings.stringIDs.Add(3816006969U, "RoleOwner");
			Strings.stringIDs.Add(3581069082U, "ConfirmationMessageTestIRMConfiguration");
			Strings.stringIDs.Add(3708149033U, "RejectMessageActionMustBeTheOnlyAction");
			Strings.stringIDs.Add(4050757435U, "VerboseIgnoreDefaultScope");
			Strings.stringIDs.Add(3988131606U, "InstallFreeBusyFolderAlreadyExists");
			Strings.stringIDs.Add(1452889642U, "ADAttributeUserLogonName");
			Strings.stringIDs.Add(1662594798U, "CertificateStatusInvalid");
			Strings.stringIDs.Add(2375600040U, "NewDagCompletedSuccessfully");
			Strings.stringIDs.Add(1848155062U, "Error_CheckClientIntent");
			Strings.stringIDs.Add(3726385721U, "MediumPriorityChecksFailed");
			Strings.stringIDs.Add(279800153U, "ConfirmationMessageSetHybridMailflow");
			Strings.stringIDs.Add(3721169246U, "BPATestSystemHealthTaskName");
			Strings.stringIDs.Add(1463063580U, "ErrorMissingNetIDWhenBypassWLID");
			Strings.stringIDs.Add(1408328594U, "InvalidFqdn");
			Strings.stringIDs.Add(4074802050U, "ErrorExecutingUserIsNull");
			Strings.stringIDs.Add(3947810800U, "MapiTransactionErrorMsgNoMailboxMdbDismounted");
			Strings.stringIDs.Add(132709086U, "NotEnoughPrioritiesAvailable");
			Strings.stringIDs.Add(3816781481U, "InformationSkippedAsForAutodiscover");
			Strings.stringIDs.Add(2123565360U, "ErrorTargetServicePlanHasNoMatchingMailboxPlan");
			Strings.stringIDs.Add(3400182072U, "TenantAlreadyHasFinalizedMigration");
			Strings.stringIDs.Add(2405332414U, "ErrorCouldNotFindMigrationEndpoint");
			Strings.stringIDs.Add(2204523380U, "WillContinueProcessing");
			Strings.stringIDs.Add(4031371403U, "ScenarioExchangeWebServices");
			Strings.stringIDs.Add(1123438282U, "FDS_GM_PerfCountersComponentDescription");
			Strings.stringIDs.Add(2589611372U, "AssistantsServiceDescription");
			Strings.stringIDs.Add(3302502416U, "SetupProgressMaxReceiveTransportQuota");
			Strings.stringIDs.Add(714510073U, "FailedToRetrieveAuditLogSearch");
			Strings.stringIDs.Add(3600528589U, "ADAttributeCountry");
			Strings.stringIDs.Add(3698488318U, "MapiTransactionResultFailure");
			Strings.stringIDs.Add(4171039939U, "RemoveResubmiRequestMessage");
			Strings.stringIDs.Add(981821282U, "CasHealthOwaPingScenarioDescription");
			Strings.stringIDs.Add(4188600390U, "DlpPolicyContainsEmptyKeywords");
			Strings.stringIDs.Add(1653862842U, "RoleDoesNotSupportExchangeCertificateTasksException");
			Strings.stringIDs.Add(3457665177U, "RunningAspNetRegIis");
			Strings.stringIDs.Add(172756948U, "MultipleOnPremisesOrganizationsFoundException");
			Strings.stringIDs.Add(4077307460U, "SetupProgressStoppingTransportLogSearchService");
			Strings.stringIDs.Add(1765158362U, "CopyStatusFailedAndSuspended");
			Strings.stringIDs.Add(313226775U, "ErrorStorageMailboxDatabaseVersionUnsupported");
			Strings.stringIDs.Add(1282955967U, "ProvisioningRequestAlreadyStarted");
			Strings.stringIDs.Add(827778289U, "CasHealthOwaDoLanguageSelection");
			Strings.stringIDs.Add(1272200597U, "SetupProgressStartingW3SVCService");
			Strings.stringIDs.Add(2888966445U, "NotFederated");
			Strings.stringIDs.Add(1645878456U, "ImportDlpPolicyFileDataIsNull");
			Strings.stringIDs.Add(300076344U, "SetupProgressCreateDefaultOWAMailboxPolicy");
			Strings.stringIDs.Add(1790949389U, "StartPostFileCopyDescription");
			Strings.stringIDs.Add(148851043U, "ErrorNoAccountNamespace");
			Strings.stringIDs.Add(594514822U, "Imap4BeServiceDisplayName");
			Strings.stringIDs.Add(2129610537U, "MessageTypeOof");
			Strings.stringIDs.Add(3889527190U, "MtrtAddManagerAsRecipient");
			Strings.stringIDs.Add(3952057831U, "ErrorInvalidBase64String");
			Strings.stringIDs.Add(1865584991U, "ErrorSuspendCommentWithoutSuspend");
			Strings.stringIDs.Add(3400784257U, "CasHealthLatency");
			Strings.stringIDs.Add(1134594294U, "BridgeheadRoleDisplayName");
			Strings.stringIDs.Add(2683567092U, "ErrorEnterpriseOrgOutOfDate");
			Strings.stringIDs.Add(1646161068U, "ErrorElcUserConfigurationServiceCall");
			Strings.stringIDs.Add(3916272972U, "ErrorAssociatedUserMailboxExistInDC");
			Strings.stringIDs.Add(4118882660U, "ErrorPropertyParameter");
			Strings.stringIDs.Add(2865766755U, "ErrorMsnIsNotSupportedInEnterprise");
			Strings.stringIDs.Add(1813104937U, "LongAddressesEnabledOnEdge");
			Strings.stringIDs.Add(950609671U, "ComplianceAuditServiceDescription");
			Strings.stringIDs.Add(435421099U, "InfoRmsOnlineAuthenticationCertificateChecked");
			Strings.stringIDs.Add(3054507024U, "ErrorSoftDeletedParmatersConflict");
			Strings.stringIDs.Add(3476845520U, "DefaultGlobalAddressList");
			Strings.stringIDs.Add(3267662260U, "NoCASE15SP1ServersFoundException");
			Strings.stringIDs.Add(813640644U, "UnableToRetrieveArchivePolicyTag");
			Strings.stringIDs.Add(2415151346U, "ErrorParametersCannotHaveEmbeddedDot");
			Strings.stringIDs.Add(812478835U, "SetupProgressCreateAcceptedDomainsContainer");
			Strings.stringIDs.Add(3880512861U, "ContinueMountWhenDBFilesNotExist");
			Strings.stringIDs.Add(2781055473U, "ExceptionRetryIntervalInvalid");
			Strings.stringIDs.Add(2267758972U, "InvalidRuleName");
			Strings.stringIDs.Add(261889570U, "DetermineSourceMailbox");
			Strings.stringIDs.Add(2442798609U, "ProgressCopyingEdbFile");
			Strings.stringIDs.Add(3694944833U, "MoveStatusSkipped");
			Strings.stringIDs.Add(76607383U, "SetupProgressStartingHygieneUpdateService");
			Strings.stringIDs.Add(2022973157U, "IsIntegQueueFull");
			Strings.stringIDs.Add(1528176827U, "ErrorInvalidEndpointParameterReasonUsedForConnectionTest");
			Strings.stringIDs.Add(4133650633U, "StartPostSetupDescription");
			Strings.stringIDs.Add(447887202U, "StatusSpecifiedForProvisionedServer");
			Strings.stringIDs.Add(2444726760U, "DatabasesReplayKeepingUpCheckDesc");
			Strings.stringIDs.Add(1050054139U, "RemoveRuleSyncAcrossDifferentVersionsNeeded");
			Strings.stringIDs.Add(2062802331U, "LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains");
			Strings.stringIDs.Add(3186800467U, "DetailsTemplateMailboxAgent");
			Strings.stringIDs.Add(2218121730U, "CalendarNotificationConfirmation");
			Strings.stringIDs.Add(2638175612U, "InstallComplianceServiceTask");
			Strings.stringIDs.Add(3829198285U, "ErrorTpdCheckingFailed");
			Strings.stringIDs.Add(3919059708U, "OpenDomainRoutingDisabled");
			Strings.stringIDs.Add(3326356690U, "BPALoadingLocalConfiguration");
			Strings.stringIDs.Add(4116327307U, "UninstallFfoPrimingServiceTask");
			Strings.stringIDs.Add(1006245152U, "SetupProgressStartingNotificationsBrokerService");
			Strings.stringIDs.Add(1449863534U, "ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise");
			Strings.stringIDs.Add(2829778253U, "MtrtRequireEncryption");
			Strings.stringIDs.Add(4083067559U, "ErrorFailedRmsVersionCheckInitialization");
			Strings.stringIDs.Add(1825525944U, "HybridMailflowInboundConnectorComment");
			Strings.stringIDs.Add(623586765U, "CopyStatusMounted");
			Strings.stringIDs.Add(121298733U, "CouldNotFindEWSService");
			Strings.stringIDs.Add(1384159399U, "ErrorNotEnoughInformationToFindUniqueRequest");
			Strings.stringIDs.Add(1907503788U, "DomainControllerNotSpecifiedException");
			Strings.stringIDs.Add(384890306U, "ErrorWebSiteNullOrEmpty");
			Strings.stringIDs.Add(2746111946U, "ProtectedServiceHostServiceControlComponentDescription");
			Strings.stringIDs.Add(2256278254U, "RemoveOrganizationFailWithSharedConfigurationBacklinks");
			Strings.stringIDs.Add(87194845U, "InternalTransportCertificateCorruptedInADOnHub");
			Strings.stringIDs.Add(508070510U, "ErrorNoDefaultPFDatabaseForTenant");
			Strings.stringIDs.Add(312913212U, "ExceptionPerfCounterInvalidDefinitionFile");
			Strings.stringIDs.Add(4277689054U, "PhoneNumberReachQuota");
			Strings.stringIDs.Add(248449646U, "SetupProgressInitializeExchangeConfigurationContainer");
			Strings.stringIDs.Add(899968010U, "ErrorUserNull");
			Strings.stringIDs.Add(2681771342U, "OrgIsntOptinError");
			Strings.stringIDs.Add(1580103065U, "SetupProgressMailPublicFolderCountQuota");
			Strings.stringIDs.Add(177812025U, "CannotRunDeliveryAgentConnectorTaskOnEdge");
			Strings.stringIDs.Add(1970632681U, "CouldNotGetExecutingUser");
			Strings.stringIDs.Add(1941112294U, "NoUpdatesDirectorySpecified");
			Strings.stringIDs.Add(193193577U, "SetupProgressDisableWMIOutbound");
			Strings.stringIDs.Add(199751719U, "ValidatingUserObject");
			Strings.stringIDs.Add(622930654U, "SetupProgressAddressListsEnabled");
			Strings.stringIDs.Add(4063229747U, "SetupComponentAllADRolesPrecompileManagementBinaries");
			Strings.stringIDs.Add(2115663408U, "NotifySenderAndRejectMessageShouldBeSingletonAction");
			Strings.stringIDs.Add(4104369074U, "ServiceNameAs");
			Strings.stringIDs.Add(2367546289U, "MultipleWebServicesExternalUrlsFound");
			Strings.stringIDs.Add(895980775U, "ErrorCannotRemoveMigrationUserFromPublicFolderBatch");
			Strings.stringIDs.Add(1397279617U, "RemoteContinuousReplication");
			Strings.stringIDs.Add(6301028U, "CasHealthOwaAuthMethodSeparator");
			Strings.stringIDs.Add(946664064U, "DagNetworkSubnetAssignmentIncomplete");
			Strings.stringIDs.Add(3404236667U, "GetPop3ConfigurationTask");
			Strings.stringIDs.Add(2578482429U, "UninstallTransportSyncManagerServiceTask");
			Strings.stringIDs.Add(4127908197U, "RegSvr32NotFound");
			Strings.stringIDs.Add(2369302933U, "RPSSvcNotRunning");
			Strings.stringIDs.Add(790081152U, "ConfirmationMessageUnconfigureWSManIISHosting");
			Strings.stringIDs.Add(3556665161U, "ConfirmationTestAssistantHealth");
			Strings.stringIDs.Add(1382192131U, "ErrorPerfcountersInvalid");
			Strings.stringIDs.Add(2720600917U, "ReplicationCheckWarningsLabel");
			Strings.stringIDs.Add(438361403U, "ElcUserConfigurationServiceBindingNotAvailable");
			Strings.stringIDs.Add(1249227945U, "UninstallFrontendTransportRoleDescription");
			Strings.stringIDs.Add(2409098904U, "SetupProgressStartingTransportSyncManagerService");
			Strings.stringIDs.Add(404296754U, "ErrorAlsEncounteredUnexpectedException");
			Strings.stringIDs.Add(2524982981U, "InvalidEventType");
			Strings.stringIDs.Add(2832690601U, "ErrorOffboardingDisabled");
			Strings.stringIDs.Add(2462705091U, "SetupProgressOwaSmsEnabled");
			Strings.stringIDs.Add(621468991U, "E4eLicensingIsDisabledEnableRule");
			Strings.stringIDs.Add(3142946342U, "IsNTDSRunningScenario");
			Strings.stringIDs.Add(2902028717U, "SetupProgressGenericPerfCounters");
			Strings.stringIDs.Add(1301020495U, "MomConnectorServiceDescription");
			Strings.stringIDs.Add(2892001738U, "ErrorCannotFindMoveRequestWithStatusNone");
			Strings.stringIDs.Add(1564322603U, "SendConnectorDashdashSmarthostNotOffEdge");
			Strings.stringIDs.Add(1954290077U, "ProgressCompleting");
			Strings.stringIDs.Add(3723147943U, "SetupProgressInstallTransportLogSearchService");
			Strings.stringIDs.Add(951795433U, "GetProtocolLogNeedsRecipients");
			Strings.stringIDs.Add(813491343U, "ClusterNetworkCheckDesc");
			Strings.stringIDs.Add(4099222219U, "SetupComponentConfiguringRpcClientAccessProtocol");
			Strings.stringIDs.Add(3862950059U, "ErrorWSManRegistryCorrupted");
			Strings.stringIDs.Add(696846567U, "InvalidTestAccountRequest");
			Strings.stringIDs.Add(1302065573U, "ErrorCannotFindTargetDeliveryDomain");
			Strings.stringIDs.Add(3319509477U, "MailboxRoleDisplayName");
			Strings.stringIDs.Add(2823472669U, "SetupComponentConfiguringInfoWorker");
			Strings.stringIDs.Add(1290199067U, "ClientAccessIisWebServiceExtensionsDescription");
			Strings.stringIDs.Add(2429358254U, "ErrorManageDelegation2ProofDomainOwnership");
			Strings.stringIDs.Add(404014232U, "CasHealthOwaFbaAuthTypeNotExpected");
			Strings.stringIDs.Add(3559101633U, "ImportCertificateDataInvalid");
			Strings.stringIDs.Add(1752382112U, "CannotSpecifyBothAllDomainsAndDomain");
			Strings.stringIDs.Add(740001268U, "RegisterComInteropTlbTask");
			Strings.stringIDs.Add(1440534643U, "ErrorThrottlingPolicyMustBeSpecified");
			Strings.stringIDs.Add(2147095286U, "NotifySenderActionRequiresMcdcPredicate");
			Strings.stringIDs.Add(2997921680U, "ErrorCannotDisableFederation");
			Strings.stringIDs.Add(3659149162U, "ConfirmationMessageAuthNewInProgress");
			Strings.stringIDs.Add(1638365639U, "SyncNowFailedToRunException");
			Strings.stringIDs.Add(141232568U, "CannotRemoveApprovalApplicationWithMailboxes");
			Strings.stringIDs.Add(3117240671U, "RuleNameAlreadyExists");
			Strings.stringIDs.Add(2476236185U, "DefaultAllModernGroups");
			Strings.stringIDs.Add(1178729042U, "RejectText");
			Strings.stringIDs.Add(2481283129U, "ErrorInvalidWMAFormat");
			Strings.stringIDs.Add(2344272450U, "PartialVerisonMatch");
			Strings.stringIDs.Add(2359011225U, "CasHealthOwaUriHeader");
			Strings.stringIDs.Add(2765443951U, "SetupProgressStartingMailboxAssistantService");
			Strings.stringIDs.Add(268688472U, "VerboseCreatePSFanInProvider");
			Strings.stringIDs.Add(607657692U, "JournalingParameterErrorFullReportWithoutGcc");
			Strings.stringIDs.Add(1469181716U, "MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour");
			Strings.stringIDs.Add(1734288143U, "ErrorCannotGenerateSiteMailboxAlias");
			Strings.stringIDs.Add(2837997609U, "ResumeSgcTimeout");
			Strings.stringIDs.Add(3892071893U, "ProgressActivityNewFederationTrust");
			Strings.stringIDs.Add(268582115U, "ErrorOnboardingDisabled");
			Strings.stringIDs.Add(1990022743U, "CompletedAceActivity");
			Strings.stringIDs.Add(2301337168U, "ErrorSpecifyOrganizatonAndContainerBoth");
			Strings.stringIDs.Add(2018204159U, "UnableToRetrieveManagedFolder");
			Strings.stringIDs.Add(1492863700U, "AddressRewriteWildcardWarning");
			Strings.stringIDs.Add(2288135166U, "ForeignConnectorNullOrEmptyDropDirectory");
			Strings.stringIDs.Add(1967624551U, "SetupComponentConfiguringAddressBookService");
			Strings.stringIDs.Add(1042788951U, "ErrorTemplatesMayNotContainImmutableIds");
			Strings.stringIDs.Add(1724897479U, "AuthenticationMethodWindowsIntegrated");
			Strings.stringIDs.Add(3472707977U, "StartOrganizationUpgradeDescription");
			Strings.stringIDs.Add(1422915642U, "SetupProgressSyncAccountsMirroredAccountsEnabled");
			Strings.stringIDs.Add(1980863497U, "ErrorManagedByCannotBeEmpty");
			Strings.stringIDs.Add(3248052869U, "VerifyStoreServiceExists");
			Strings.stringIDs.Add(1379659384U, "DefaultUser");
			Strings.stringIDs.Add(1466854827U, "ErrorDumpsterTagWrongRetentionAction");
			Strings.stringIDs.Add(325513897U, "ErrorAuthCannotDeleteCurrent");
			Strings.stringIDs.Add(2357970530U, "ConfirmationMessageNewSearchDocumentFormat");
			Strings.stringIDs.Add(671509911U, "ServerLocatorServiceCheckDesc");
			Strings.stringIDs.Add(4027839955U, "AuthenticationMethodUnknown");
			Strings.stringIDs.Add(3080984634U, "FileDistributionServiceComponentDescription");
			Strings.stringIDs.Add(3004107700U, "MtrtMessageDefer");
			Strings.stringIDs.Add(342374076U, "OrganizationNotSpecified");
			Strings.stringIDs.Add(55296709U, "ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified");
			Strings.stringIDs.Add(2813852905U, "NoValidIssuerCertificate");
			Strings.stringIDs.Add(2180704617U, "UninstallMigrationWorkflowServiceTask");
			Strings.stringIDs.Add(2707578357U, "MustSpecifyEitherAccessOrExtendedRightsException");
			Strings.stringIDs.Add(4069016795U, "RpcClientAccessServiceDescription");
			Strings.stringIDs.Add(639127653U, "ConfirmationMessageNewMapiVirtualDirectory");
			Strings.stringIDs.Add(726111090U, "VerboseResolvingRecipientOrganizationalUnitScope");
			Strings.stringIDs.Add(2674130276U, "AutodiscoverySuccess");
			Strings.stringIDs.Add(1906118891U, "CentralAdminServiceDescription");
			Strings.stringIDs.Add(3351161488U, "ErrorCannotSetDowngradedExchangeServerAuthOnEdge");
			Strings.stringIDs.Add(722352284U, "MigrationCsvStreamParameterInvalid");
			Strings.stringIDs.Add(4138250312U, "InstallMailSubmissionServiceTask");
			Strings.stringIDs.Add(3726353961U, "SetupComponentMalwareFiltering");
			Strings.stringIDs.Add(3198793815U, "ProtolcolWarnTrustAllCertificates");
			Strings.stringIDs.Add(1508593011U, "ErrorLocalNotForTenantAdmins");
			Strings.stringIDs.Add(967574322U, "AttemptToMakeUserLogon");
			Strings.stringIDs.Add(944738592U, "IisTasksWebSiteValidationProperty");
			Strings.stringIDs.Add(1604061446U, "ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests");
			Strings.stringIDs.Add(2930685350U, "ErrorCannotRestoreFromPrivateToPublicMailbox");
			Strings.stringIDs.Add(3366659407U, "DelegateRoleTypeRecipientAdmin");
			Strings.stringIDs.Add(2793254613U, "SharedCacheServiceDisplayName");
			Strings.stringIDs.Add(231085887U, "MtrtNoDetailInformation");
			Strings.stringIDs.Add(2046913201U, "ErrorLoadCertificateOnEdge");
			Strings.stringIDs.Add(1625001871U, "AllPolicyAssignees");
			Strings.stringIDs.Add(307488803U, "ConfirmationTurnOffJournalArchiving");
			Strings.stringIDs.Add(2953142896U, "ConfirmationMessageSetSenderIdConfig");
			Strings.stringIDs.Add(3904912496U, "SetupProgressPrecompilingBinaries");
			Strings.stringIDs.Add(2177919315U, "ProgressCompletingSearch");
			Strings.stringIDs.Add(977931768U, "CallerIsInMyDefaultContactsFolder");
			Strings.stringIDs.Add(4078434446U, "SetupProgressMessageTrackingPermissions");
			Strings.stringIDs.Add(449814027U, "SetupProgressStartingUMService");
			Strings.stringIDs.Add(38404619U, "RequestIsMissing");
			Strings.stringIDs.Add(394328647U, "ConfirmationMessageSetADServerSettings");
			Strings.stringIDs.Add(278718718U, "DeviceOk");
			Strings.stringIDs.Add(2963429141U, "MountStatusMounted");
			Strings.stringIDs.Add(199062377U, "LeaseExpired");
			Strings.stringIDs.Add(1585616693U, "ThirdPartyReplCheckDesc");
			Strings.stringIDs.Add(2741314546U, "CMCConnectorRequiresTenantScopedInboundConnector");
			Strings.stringIDs.Add(62533178U, "SetupProgressStartingWMIService");
			Strings.stringIDs.Add(3513112714U, "VerboseCheckRequiredRegistryKeys");
			Strings.stringIDs.Add(63979149U, "VerboseStartResolvingUsers");
			Strings.stringIDs.Add(1913407550U, "InfoCreatePL");
			Strings.stringIDs.Add(89007683U, "ConfirmationMessageDisableSendConnector");
			Strings.stringIDs.Add(3599602255U, "UsageTypePartner");
			Strings.stringIDs.Add(3121249817U, "ErrorInvalidMailboxAuditLogSearchCriteria");
			Strings.stringIDs.Add(3258178327U, "ErrorInvalidGroupTypeForPublicToGroups");
			Strings.stringIDs.Add(3971688957U, "SetupProgressCreateArbitrationMailbox");
			Strings.stringIDs.Add(2604883106U, "ArchiveDisabledError");
			Strings.stringIDs.Add(567195498U, "SSTFileSizeExceedLimit");
			Strings.stringIDs.Add(2830472790U, "WarningOABWithoutDistribution");
			Strings.stringIDs.Add(2608506884U, "MtrtReportSeverityLevelMed");
			Strings.stringIDs.Add(1373356377U, "InvalidDlpRoleAccess");
			Strings.stringIDs.Add(2772713742U, "VerboseRestartWSManService");
			Strings.stringIDs.Add(1369963769U, "ConfirmationMessageConfigureWSManIISHosting");
			Strings.stringIDs.Add(1235407621U, "ErrorAggregatedMailboxGuidNotSpecified");
			Strings.stringIDs.Add(685862647U, "MobileDeviceLogSuccess");
			Strings.stringIDs.Add(2947423393U, "TestOutboundOauthLog");
			Strings.stringIDs.Add(3586374252U, "UninstallMonitoringCorrelationServiceTask");
			Strings.stringIDs.Add(1297632601U, "UseDagDefaultOnOffOn");
			Strings.stringIDs.Add(3226135540U, "SetupProgressFastSearchSeedingPortRule");
			Strings.stringIDs.Add(2825905091U, "RemoveRemoteAccountPolicyFailedWithExistingMailboxes");
			Strings.stringIDs.Add(3204861685U, "BPAUpdateCheckCompleted");
			Strings.stringIDs.Add(2573144003U, "CasHealthDirectPushAndSyncAggregateScenarioDescription");
			Strings.stringIDs.Add(244505583U, "MalboxFolderRightsFolderOwner");
			Strings.stringIDs.Add(3015360437U, "ErrorParentIISPathNull");
			Strings.stringIDs.Add(597851718U, "ErrorFailedToGetRacAndClcEnterprise");
			Strings.stringIDs.Add(1000659622U, "MessageTracingClientServiceDisplayName");
			Strings.stringIDs.Add(95305143U, "ErrorTenantNeedsUpgradeFirst");
			Strings.stringIDs.Add(830584157U, "DelegationTokenValidationSuccess");
			Strings.stringIDs.Add(2245832939U, "WarningNoAuthServerWithDefaultAuthorizationEndpoint");
			Strings.stringIDs.Add(687010727U, "ErrorMapiVirtualDirectoryMustBeLocalServerToReset");
			Strings.stringIDs.Add(1739145871U, "ExternalAddress");
			Strings.stringIDs.Add(750158307U, "UninstallFBAServiceTask");
			Strings.stringIDs.Add(3689107639U, "TenantOrganizationMissing");
			Strings.stringIDs.Add(1611112302U, "TestTeamMailboxOutboundOauthLog");
			Strings.stringIDs.Add(2512251895U, "SetupProgressStoppingEdgeSyncService");
			Strings.stringIDs.Add(3072624127U, "MailboxLogonScenario");
			Strings.stringIDs.Add(820016583U, "ConversationsFailedToCreateAllItemsFolder");
			Strings.stringIDs.Add(1252200145U, "BootstrapAccountExpireTooSoon");
			Strings.stringIDs.Add(3194476650U, "NewDagConfigurationCompletedSuccessfully");
			Strings.stringIDs.Add(2432721285U, "RetryLaterException");
			Strings.stringIDs.Add(3193785025U, "ConfigureSchema");
			Strings.stringIDs.Add(1994155502U, "UninstallMessageTracingClientServiceTask");
			Strings.stringIDs.Add(957004625U, "SetupProgressStoppingWMIProviderService");
			Strings.stringIDs.Add(2431239667U, "FinishedCopyingOwaLPFiles");
			Strings.stringIDs.Add(1553663172U, "TenantNotificationTestFirstOrgNotSupported");
			Strings.stringIDs.Add(2434431800U, "ErrorTeamMailboxCannotIdentifyTheUser");
			Strings.stringIDs.Add(897711225U, "SetupProgressCreateModeratedRecipientsRetentionPolicyTag");
			Strings.stringIDs.Add(46998244U, "GetHealthReportProgressActivity");
			Strings.stringIDs.Add(2104106561U, "ConfirmationExportAutoDiscoverConfig");
			Strings.stringIDs.Add(532834943U, "ErrorFailedToGetTemplateEnterprise");
			Strings.stringIDs.Add(3454341798U, "DebugStartCreateMemberRequest");
			Strings.stringIDs.Add(3252566213U, "CannotModifyPhotoBecauseMailboxIsInTransit");
			Strings.stringIDs.Add(1543209017U, "InfoOrganizationContextChecked");
			Strings.stringIDs.Add(3522024953U, "CasHealthWarnCredenditialsPassedInTheClear");
			Strings.stringIDs.Add(2192189891U, "ForwardSyncServiceDescription");
			Strings.stringIDs.Add(466554668U, "CasHealthScenarioAutodiscoverCas");
			Strings.stringIDs.Add(2999804354U, "MigrationCompleteAfterAndAutoCompleteExclusive");
			Strings.stringIDs.Add(4226527350U, "ADAttributeCity");
			Strings.stringIDs.Add(3639987903U, "CouldNotFindAutodiscoverStandardAuthBinding");
			Strings.stringIDs.Add(3766651652U, "ErrorNeedOrgIdentity");
			Strings.stringIDs.Add(2473572750U, "UninstallPop3ServiceTask");
			Strings.stringIDs.Add(2723129778U, "DlpPolicyXmlMissingElements");
			Strings.stringIDs.Add(727073936U, "CasHealthOwaGetAuthStart");
			Strings.stringIDs.Add(147207876U, "CasHealthTestNewUserHostingScriptName");
			Strings.stringIDs.Add(386650992U, "ConfirmationMessageTestActiveDirectoryConnectivity");
			Strings.stringIDs.Add(2301252957U, "ErrorMissingInternalUrlInRemoteScenario");
			Strings.stringIDs.Add(2774736401U, "RetrieveFederationMetadataFailed");
			Strings.stringIDs.Add(1981219267U, "DataClassificationConfigFirstOrgNotSupported");
			Strings.stringIDs.Add(1244562342U, "SetSecondaryDomainDescription");
			Strings.stringIDs.Add(3522975510U, "ErrorInvalidLogonType");
			Strings.stringIDs.Add(2350887172U, "MtrtSetSpamConfidenceLevel");
			Strings.stringIDs.Add(136434832U, "ErrorInvalidOSPServerRole");
			Strings.stringIDs.Add(1360678989U, "ErrorModifyTiServerNotAllowed");
			Strings.stringIDs.Add(1824789360U, "MediumPriorityChecksWarning");
			Strings.stringIDs.Add(1169555177U, "InstallCentralAdminServiceTask");
			Strings.stringIDs.Add(3264150393U, "WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP");
			Strings.stringIDs.Add(1932795447U, "DDGFilterIsNonoptimized");
			Strings.stringIDs.Add(2358053276U, "ErrorModifyE12DatabaseNotAllowed");
			Strings.stringIDs.Add(4019033326U, "ErrorWebObjOrPropertiesNull");
			Strings.stringIDs.Add(2478684369U, "ProgressStopUpdateOtherAD");
			Strings.stringIDs.Add(3538356643U, "ContentIndexServiceDisplayName");
			Strings.stringIDs.Add(3742321691U, "ErrorEmptyFsmoRoleOwnerAttribute");
			Strings.stringIDs.Add(2732113732U, "ErrorSetGroupMailboxAddMembersOtherUser");
			Strings.stringIDs.Add(639504132U, "UninstallOSPRoleDescription");
			Strings.stringIDs.Add(3238542439U, "ErrorInvalidDlpPolicyIdentity");
			Strings.stringIDs.Add(3076603065U, "MtrtApplyClassification");
			Strings.stringIDs.Add(2836523615U, "ConfirmationMessageSetRecipientFilterConfig");
			Strings.stringIDs.Add(1808276634U, "ADAttributeCustomAttribute13");
			Strings.stringIDs.Add(1247715429U, "ErrorSessionNotFound");
			Strings.stringIDs.Add(2831161206U, "CopyStatusDisconnected");
			Strings.stringIDs.Add(864464091U, "CannotSpecifyBothDoNotUpdateAndForceUpdate");
			Strings.stringIDs.Add(394967746U, "ErrorsDomainNotReserved");
			Strings.stringIDs.Add(4181924872U, "PowerShellComponentDescription");
			Strings.stringIDs.Add(979596793U, "Error_SentRepresentingRemoved");
			Strings.stringIDs.Add(561049406U, "JournalNdrMailboxCannotBeNull");
			Strings.stringIDs.Add(203910820U, "BPADownloadingFailed");
			Strings.stringIDs.Add(613469788U, "SkippedUpdatingMFLFiles");
			Strings.stringIDs.Add(3141042970U, "ErrorBPAOutFileNotFound");
			Strings.stringIDs.Add(1069447725U, "ErrorFileTypeIsUnsupported");
			Strings.stringIDs.Add(61834792U, "ClusterRpcCheckDesc");
			Strings.stringIDs.Add(3869111566U, "SetupProgressOrganizationalQueryBaseDNEnabled");
			Strings.stringIDs.Add(1958782279U, "ErrorNoActiveDCForProvisioningReconciliationCookie");
			Strings.stringIDs.Add(2688759287U, "UMCallAnsweringRuleCallbackLater");
			Strings.stringIDs.Add(2179844603U, "ActiveSyncMetabaseIsapiUninstallFailure");
			Strings.stringIDs.Add(2891753468U, "ADAttributeCompany");
			Strings.stringIDs.Add(4210711027U, "SetupProgressStartingHTTPFilterService");
			Strings.stringIDs.Add(1723932345U, "AttachmentFilterEntryExists");
			Strings.stringIDs.Add(1880703947U, "NullServerObject");
			Strings.stringIDs.Add(2146343540U, "TooManyFederationTrust");
			Strings.stringIDs.Add(2101033087U, "CalendarSave");
			Strings.stringIDs.Add(1260493142U, "SetupComponentPreSetupOSP");
			Strings.stringIDs.Add(2999415054U, "ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse");
			Strings.stringIDs.Add(3229133469U, "TransportCommonServiceControlComponentDescription");
			Strings.stringIDs.Add(1263734293U, "MsiPropertyTooLarge");
			Strings.stringIDs.Add(3574175325U, "ArchiveConnectivityResultSuccess");
			Strings.stringIDs.Add(8956383U, "FailedToRegisterContentIndexingBinaries");
			Strings.stringIDs.Add(689745244U, "ErrorRmsOnlinePrerequisites");
			Strings.stringIDs.Add(1561303831U, "ErrorServerNameModified");
			Strings.stringIDs.Add(2874562042U, "MailSubmissionServiceDescription");
			Strings.stringIDs.Add(416983059U, "VerboseFixingAddressBookFilterMetadata");
			Strings.stringIDs.Add(1485895935U, "ErrorMovingToOldExchangeDatabaseUnsupported");
			Strings.stringIDs.Add(3494585454U, "ErrorOnlyDefaultTagAllowCustomizedMessageClass");
			Strings.stringIDs.Add(2628736153U, "DagFswInternalErrorFswObjectNotInitialized");
			Strings.stringIDs.Add(3593430692U, "ChunkingEnabledSettingConflict");
			Strings.stringIDs.Add(418834457U, "CafeLocalPermissionsComponentDescription");
			Strings.stringIDs.Add(3764294661U, "CasHealthGetFolderScenarioDescription");
			Strings.stringIDs.Add(1822933486U, "ConfirmationMessageTestTenantMonitoringPerfCounters");
			Strings.stringIDs.Add(2588683306U, "SetupComponentTransportGlobalConfig");
			Strings.stringIDs.Add(3225666107U, "UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException");
			Strings.stringIDs.Add(3803388745U, "GetHealthReportProgressStarting");
			Strings.stringIDs.Add(4242555427U, "Pop3BeServiceDisplayName");
			Strings.stringIDs.Add(857660825U, "SupervisionPolicyAmbiguous");
			Strings.stringIDs.Add(2498994945U, "ProgressStartUpdateAD");
			Strings.stringIDs.Add(3529576605U, "DagMgmtServiceDisplayName");
			Strings.stringIDs.Add(3852766979U, "IncludeKeywordStatisticsParameterConflict");
			Strings.stringIDs.Add(188799712U, "MtrtReportSeverityLevelLow");
			Strings.stringIDs.Add(2326537993U, "ClassificationRuleCollectionIllegalScopedSetOperation");
			Strings.stringIDs.Add(3300531825U, "MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission");
			Strings.stringIDs.Add(1839699905U, "WarningMessageNewTPRDag");
			Strings.stringIDs.Add(2438278052U, "JournalingParameterErrorGccWithOrganization");
			Strings.stringIDs.Add(3215740127U, "SetupProgressDisableMigrationRPCFirewallRule");
			Strings.stringIDs.Add(1647196573U, "AlsEmailBodyCriteria");
			Strings.stringIDs.Add(1094497050U, "SetServiceInstanceMapReturnedNull");
			Strings.stringIDs.Add(1310067130U, "CopyStatusNotConfigured");
			Strings.stringIDs.Add(1545448632U, "ClassificationRuleCollectionInvalidObject");
			Strings.stringIDs.Add(873295235U, "CannotResolveSiteRedirectionTemplateMessage");
			Strings.stringIDs.Add(2730604640U, "SetupComponentConfiguringPublicFolder");
			Strings.stringIDs.Add(271598664U, "CasHealthNoTuplesToTest");
			Strings.stringIDs.Add(3555678614U, "SetupProgressStoppingProtectedServiceHostService");
			Strings.stringIDs.Add(903687533U, "SetupComponentDomainGlobalConfig");
			Strings.stringIDs.Add(3079435902U, "DagFswUnableToDetermineFrontendTransportServerException");
			Strings.stringIDs.Add(1833931616U, "ErrorCannotCreateRuleWithoutCondition");
			Strings.stringIDs.Add(729299916U, "CopyStatusServiceDown");
			Strings.stringIDs.Add(1569212399U, "ErrorNoNewSiteFolderDatabaseFound");
			Strings.stringIDs.Add(2152281250U, "CasHealthAllTransactionsSucceeded");
			Strings.stringIDs.Add(2530019387U, "AdminToolsPrereqCheck");
			Strings.stringIDs.Add(3289631126U, "SetupPrereqAnalysisInProgress");
			Strings.stringIDs.Add(1308578877U, "UninstallReplayServiceTask");
			Strings.stringIDs.Add(1009247039U, "SetupComponentMidFileCopyAdminTools");
			Strings.stringIDs.Add(2491313992U, "FailedToAccessIrmConfiguration");
			Strings.stringIDs.Add(1960737953U, "CopyStatusUnknown");
			Strings.stringIDs.Add(3080450531U, "ErrorBPAOutDirectoryNotFound");
			Strings.stringIDs.Add(2727848737U, "OmaVDirNotFound");
			Strings.stringIDs.Add(1050709066U, "SetupProgressInstallingHealthManager");
			Strings.stringIDs.Add(1294165706U, "ErrorMultipleProvisioningPolicyExist");
			Strings.stringIDs.Add(2926020684U, "UninstallAdminToolsRoleDescription");
			Strings.stringIDs.Add(2419369378U, "InvalidCertAuthValue");
			Strings.stringIDs.Add(2778932812U, "ConfirmImportExchangeCertificateDirect");
			Strings.stringIDs.Add(2445661152U, "ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse");
			Strings.stringIDs.Add(2215510534U, "ErrorAuthInvalidNewEffectiveDate");
			Strings.stringIDs.Add(1082913928U, "UsageTypeInternal");
			Strings.stringIDs.Add(2314884551U, "InvalidParamIdentityHasWildcardException");
			Strings.stringIDs.Add(3450980076U, "WarningFixedMissingGALEntry");
			Strings.stringIDs.Add(3734111801U, "GlobalLocatorServiceSuccess");
			Strings.stringIDs.Add(1063568409U, "ErrorMoveWebDistributionEnabledOabToTiServer");
			Strings.stringIDs.Add(545033587U, "CasHealthEasFolderSyncScenarioDescription");
			Strings.stringIDs.Add(209792268U, "ConfirmationMessageSetResourceConfig");
			Strings.stringIDs.Add(2903762331U, "UMCallAnsweringRuleCheckAutomaticReplies");
			Strings.stringIDs.Add(3689959917U, "ErrorCreatePublicFolderTree");
			Strings.stringIDs.Add(1410063427U, "TopologyServiceResultUndefined");
			Strings.stringIDs.Add(1613686497U, "ErrorSharedConfigurationRequiresServicePlan");
			Strings.stringIDs.Add(4192463412U, "SomeMdbsWereMovedWhileRunningPrefix");
			Strings.stringIDs.Add(1690028294U, "InstallingPOP3Service");
			Strings.stringIDs.Add(347605313U, "AddressRewriteInternalAddressExists");
			Strings.stringIDs.Add(1406451776U, "CannotSetDefaultTPD");
			Strings.stringIDs.Add(474554696U, "SetupProgressStartingHealthManagerService");
			Strings.stringIDs.Add(1799234143U, "SetupProgressRemovingLegacySystemMailboxUsers");
			Strings.stringIDs.Add(596346937U, "StoppingPOP3Service");
			Strings.stringIDs.Add(3627783386U, "InvalidPredicate");
			Strings.stringIDs.Add(1331970650U, "VerboseEnableBasicAuthForWSMan");
			Strings.stringIDs.Add(556563131U, "ErrorSharePointUrlNotWhitelisted");
			Strings.stringIDs.Add(958569967U, "InfoOverallFail");
			Strings.stringIDs.Add(1413655130U, "ErrorArchiveMainCouldNotBeProvisioned");
			Strings.stringIDs.Add(3950900668U, "ConfirmationMessageSetServiceInstanceMap");
			Strings.stringIDs.Add(2834370617U, "UserWithoutFederatedDomain");
			Strings.stringIDs.Add(3770893258U, "CasHealthConfirmTestActiveSyncLocalMachine");
			Strings.stringIDs.Add(3118684996U, "TasksRpcListenerCheckDesc");
			Strings.stringIDs.Add(1920559542U, "ExcludeDuplicateMessagesParameterConflict");
			Strings.stringIDs.Add(3974455509U, "ErrorDomainServicesNotYetImplemented");
			Strings.stringIDs.Add(3657087972U, "RequestNameAvailabilityComplete");
			Strings.stringIDs.Add(613419658U, "MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification");
			Strings.stringIDs.Add(2291096419U, "ErrorInvalidFfoServerRole");
			Strings.stringIDs.Add(443059279U, "ErrorNotEnoughInformationToFindRequestOfCorrectType");
			Strings.stringIDs.Add(3842763887U, "UninstallCafeIisWebServiceExtensions");
			Strings.stringIDs.Add(171191748U, "ServerNameConflict");
			Strings.stringIDs.Add(224474141U, "NewPolicyTipConfigInvalidUrl");
			Strings.stringIDs.Add(3323263744U, "Free");
			Strings.stringIDs.Add(627463594U, "TpdIsHSMEncrypted");
			Strings.stringIDs.Add(2638906221U, "ConfirmationMessageSetPerimeterConfig");
			Strings.stringIDs.Add(3770469704U, "ErrorRetentionActionNowAllowed");
			Strings.stringIDs.Add(866665304U, "ChangePasswordInvalidCredentials");
			Strings.stringIDs.Add(3607766719U, "ConfirmationMessageSetAttachmentfilterlistconfig");
			Strings.stringIDs.Add(1259731166U, "ConfirmationMessageNewAutodiscoverVirtualDirectory");
			Strings.stringIDs.Add(1779766570U, "UnifiedMessagingDatacenterComponentDescription");
			Strings.stringIDs.Add(2044072828U, "ConfirmationGetLitigationHoldInformation");
			Strings.stringIDs.Add(2021664053U, "FfoPrimingServiceDisplayName");
			Strings.stringIDs.Add(3028030101U, "Error_StartDateCheck");
			Strings.stringIDs.Add(3648433740U, "WrongSubscriptionIdentity");
			Strings.stringIDs.Add(2646427859U, "ConfirmationMessageTestExchangeSearch");
			Strings.stringIDs.Add(3727590521U, "RoleEditor");
			Strings.stringIDs.Add(124266088U, "ErrorUnknownPartition");
			Strings.stringIDs.Add(2416344434U, "ConfirmationMessageImportTransportRuleCollection");
			Strings.stringIDs.Add(3878533180U, "RegasmNotFound");
			Strings.stringIDs.Add(2744256804U, "SetServiceInstanceMapResultCodeObjectNotFound");
			Strings.stringIDs.Add(996496831U, "FederationTrustValid");
			Strings.stringIDs.Add(387143530U, "MoveAlreadyCanceled");
			Strings.stringIDs.Add(1377545165U, "ADAttributeCustomAttribute7");
			Strings.stringIDs.Add(1649886345U, "ErrorOnlyForestWideBlockIsAllowed");
			Strings.stringIDs.Add(3240013436U, "InstallHealthManagerServiceTask");
			Strings.stringIDs.Add(1316394624U, "NoComponentInfoFilesException");
			Strings.stringIDs.Add(2945806020U, "SetupComponentMTAConfiguration");
			Strings.stringIDs.Add(487566617U, "MountStatusUnknown");
			Strings.stringIDs.Add(2896321434U, "ErrorVerificationCodeTooManyFailed");
			Strings.stringIDs.Add(1955637848U, "CustomerFeedbackEnabledError");
			Strings.stringIDs.Add(549458741U, "MigrationReportNotFound");
			Strings.stringIDs.Add(859003787U, "InitializedWithInvalidObjectId");
			Strings.stringIDs.Add(1576804522U, "DatabaseSeedStatusLabelRead");
			Strings.stringIDs.Add(2856567438U, "UnableToDiscoverMailboxPermission");
			Strings.stringIDs.Add(987792256U, "SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth");
			Strings.stringIDs.Add(821173418U, "MtrtRouteMessageHighRisk");
			Strings.stringIDs.Add(2742380346U, "SetupProgressFederationEnabled");
			Strings.stringIDs.Add(400464704U, "CasHealthEasTestTypeAndAutodiscoverArgumentError");
			Strings.stringIDs.Add(1062718164U, "ErrorCreatedAfterLaterThanToday");
			Strings.stringIDs.Add(936853662U, "FileUploadServiceDescription");
			Strings.stringIDs.Add(3238755484U, "CasHealthPerformanceCounterName");
			Strings.stringIDs.Add(3676775874U, "InstallIisWebServiceExtensionNoChanges");
			Strings.stringIDs.Add(638769072U, "ErrorExceededMaxiumNumberOfDatabasesPerServer");
			Strings.stringIDs.Add(3569022346U, "UMMailboxPolicySetFaxServerURIError");
			Strings.stringIDs.Add(2680788449U, "UninstallCafeRoleDescription");
			Strings.stringIDs.Add(3830301655U, "RemoveHuntGroupsLinkedToTenantDialPlans");
			Strings.stringIDs.Add(2663637685U, "ErrorCannotCreateFingerprint");
			Strings.stringIDs.Add(173476074U, "InvalidEndDate");
			Strings.stringIDs.Add(1372004637U, "InstallFreeBusyFolderCannotGetOrganizationContainer");
			Strings.stringIDs.Add(2472985937U, "ErrorSetPublicFolderMailMailEnabledFalse");
			Strings.stringIDs.Add(2357719805U, "SetupProgressConfigurePerimeterConfig");
			Strings.stringIDs.Add(1766283082U, "SetupProgressStartingProtectedServiceHostService");
			Strings.stringIDs.Add(546863019U, "SetupProgressIssueWarningMaiboxQuota");
			Strings.stringIDs.Add(2194177847U, "InvalidPredicateSequence");
			Strings.stringIDs.Add(3514896639U, "InstallAdminToolsRoleDescription");
			Strings.stringIDs.Add(1058454737U, "ProgressCopyingCopySystemFiles");
			Strings.stringIDs.Add(1474103016U, "ErrorBPAOutFileSave");
			Strings.stringIDs.Add(747339504U, "ErrorInvalidParametersForLocalPublicFolderMailboxMigration");
			Strings.stringIDs.Add(2489458996U, "HybridIsEnabledOnPremisesButTenantIsNotUpgraded");
			Strings.stringIDs.Add(810697535U, "SetupProgressRemovingDefaultTransportAgents");
			Strings.stringIDs.Add(3560370784U, "ConfirmationMessageGetSearchDocumentFormat");
			Strings.stringIDs.Add(3473154256U, "SendConnectorUpdatingnteropUsgMembership");
			Strings.stringIDs.Add(829912647U, "SetupProgressMailboxCountQuota");
			Strings.stringIDs.Add(557019716U, "CreateExchangePrincipalObject");
			Strings.stringIDs.Add(25826658U, "ExceptionInvalidUILevel");
			Strings.stringIDs.Add(2734851240U, "UninstallComplianceAuditServiceTask");
			Strings.stringIDs.Add(929006655U, "ParameterVersionMismatch");
			Strings.stringIDs.Add(2252143100U, "ErrorAddGroupToItself");
			Strings.stringIDs.Add(4151447213U, "SetupProgressSetPermissionsOnAdminGroup");
			Strings.stringIDs.Add(3660237507U, "UninstallDagMgmtServiceTask");
			Strings.stringIDs.Add(2284256781U, "SendConnectorMixedSourceServerRoles");
			Strings.stringIDs.Add(3315533230U, "CasHealthNoteSecureAccess");
			Strings.stringIDs.Add(2395829035U, "WarningCleanExistingPipelineTracingContent");
			Strings.stringIDs.Add(269194386U, "CasHealthOwaGetLogoffSucceeded");
			Strings.stringIDs.Add(3146481U, "InfoRacAndClc");
			Strings.stringIDs.Add(1293016842U, "ConfirmationMessageSetAuthConfig");
			Strings.stringIDs.Add(1761523563U, "CatalogDoesntExist");
			Strings.stringIDs.Add(709632357U, "ErrorAuthServiceNameNotBlank");
			Strings.stringIDs.Add(4287515218U, "ConfirmationMessageSetSenderReputationConfig");
			Strings.stringIDs.Add(2708013991U, "SetupComponentPreSetupBridgehead");
			Strings.stringIDs.Add(1322669528U, "ProcessUtilizationManagerServiceDisplayName");
			Strings.stringIDs.Add(2244936124U, "PromptToOverwriteDlpPoliciesOnImport");
			Strings.stringIDs.Add(885922192U, "NewReceiveConnectorAddingPermissionsDoneMsg");
			Strings.stringIDs.Add(375841809U, "MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus");
			Strings.stringIDs.Add(3194886917U, "UninstallClientAccessRoleDescription");
			Strings.stringIDs.Add(642572136U, "SetupComponentConfiguringDatacenterMailbox");
			Strings.stringIDs.Add(2260693300U, "UserNotInAd");
			Strings.stringIDs.Add(3872838286U, "SendConnectorInvalidSourceIPAddress");
			Strings.stringIDs.Add(3135809837U, "WarningDelegatesExceededOutlookLimit");
			Strings.stringIDs.Add(161838924U, "PatternContainsLeadingTrailingWhiteSpace");
			Strings.stringIDs.Add(2131142349U, "DuplicateInitialDomain");
			Strings.stringIDs.Add(4188767105U, "AddressRewriteUnrecognizedAddress");
			Strings.stringIDs.Add(3504853238U, "AmbiguousDatabaseAndExchangeServerParameters");
			Strings.stringIDs.Add(1927573801U, "ADAttributeOffice");
			Strings.stringIDs.Add(1352231058U, "ExportCertificateAs12KeyNotExportable");
			Strings.stringIDs.Add(2585600455U, "InvalidParamSpecifyIdentityOrDagException");
			Strings.stringIDs.Add(2829601938U, "StartingW3SVC");
			Strings.stringIDs.Add(1811867995U, "MigrationWorkflowServiceDisplayName");
			Strings.stringIDs.Add(1988030389U, "Imap4ServiceDisplayName");
			Strings.stringIDs.Add(2882860628U, "ProvisioningRequestCorrupted");
			Strings.stringIDs.Add(118205473U, "MapiTransactionErrorMsgNoMailbox");
			Strings.stringIDs.Add(1054930625U, "InPlaceHoldNotAllowedForPublicFolders");
			Strings.stringIDs.Add(978499145U, "SetupProgressGALEnabled");
			Strings.stringIDs.Add(2963803423U, "CasHealthTestMultipleMailboxServersFound");
			Strings.stringIDs.Add(1952683340U, "ErrorTooManyGALsCreated");
			Strings.stringIDs.Add(3222875934U, "AddOutlookTenantAcceptedDomains");
			Strings.stringIDs.Add(816116421U, "CannotRemoveSendConnectorCertificate");
			Strings.stringIDs.Add(2160282563U, "CopyStatusSeedingSource");
			Strings.stringIDs.Add(2266221568U, "SetOpenDomainRoutingOnHotmailMigrateDomain");
			Strings.stringIDs.Add(3765206323U, "ErrorSystemFolderPathNotUniqueUnderTheSameNode");
			Strings.stringIDs.Add(2288430532U, "CannotLocateWebRequestorEndpoint");
			Strings.stringIDs.Add(4085511058U, "ErrorSiteNotSpecifiedAndLocalSiteNotFound");
			Strings.stringIDs.Add(1855335654U, "TransportSyncManagerServiceNotUninstalled");
			Strings.stringIDs.Add(10041749U, "InstallExchangeStreamingOpticsTask");
			Strings.stringIDs.Add(853303979U, "MountStatusDismounted");
			Strings.stringIDs.Add(766671470U, "AutoDiscoverIsNotSetInOrgRelationship");
			Strings.stringIDs.Add(3326397734U, "ExchangeSettingsGuidUsage");
			Strings.stringIDs.Add(3910774036U, "ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo");
			Strings.stringIDs.Add(1003253425U, "ComplianceSearchInitializingMessage");
			Strings.stringIDs.Add(4217102173U, "ServerNotHubOrEdge");
			Strings.stringIDs.Add(174447511U, "ErrorCannotProvideNetIDAndSmtpAddress");
			Strings.stringIDs.Add(4159134257U, "SetupProgressRemovingAdamInstance");
			Strings.stringIDs.Add(2414509351U, "ErrorRpcHttpBasicAuthOverHttpDisallowed");
			Strings.stringIDs.Add(332418900U, "SetupComponentPreSetupAllRoles");
			Strings.stringIDs.Add(974762364U, "ProgressCopying");
			Strings.stringIDs.Add(266823016U, "ErrorSubscriptionFileMustBeXml");
			Strings.stringIDs.Add(1065704932U, "CasHealthEcpScenarioTestWebService");
			Strings.stringIDs.Add(3903594392U, "ErrorNewTeamMailboxParameter");
			Strings.stringIDs.Add(4196969280U, "RmsSharedIdentityLocalComputerNotFound");
			Strings.stringIDs.Add(968773825U, "CalendarVDirDisabledWarning");
			Strings.stringIDs.Add(2888187612U, "UninstallForwardSyncServiceTask");
			Strings.stringIDs.Add(1587845536U, "InstallImap4ServiceTask");
			Strings.stringIDs.Add(2633433681U, "ConfirmationMessageExportJournalRuleCollection");
			Strings.stringIDs.Add(949894156U, "MtrtRightsProtectMessage");
			Strings.stringIDs.Add(472135594U, "CannotSetBothEhfAndFfoRoutingId");
			Strings.stringIDs.Add(158415293U, "InstallCentralAdminFrontEndRoleDescription");
			Strings.stringIDs.Add(1698201925U, "DebugStartSaveDataObject");
			Strings.stringIDs.Add(1804822115U, "RpcClientAccessServiceControlComponentDescription");
			Strings.stringIDs.Add(266949762U, "FfoReportingMessage");
			Strings.stringIDs.Add(1889388206U, "WarningPromotingSecondaryToPrimary");
			Strings.stringIDs.Add(1952429157U, "TestMailflowNoSystemMailbox");
			Strings.stringIDs.Add(3353268175U, "FailedToCreateEwsConnection");
			Strings.stringIDs.Add(3512195069U, "VerboseWaitingForReplicationInTargetForest");
			Strings.stringIDs.Add(3811422379U, "UserCreatedFolder");
			Strings.stringIDs.Add(3104043273U, "GetMsoDiagnosticsNewCookieIsBeingUsed");
			Strings.stringIDs.Add(219970510U, "SetupProgressUninstallingContentIndexingMSI");
			Strings.stringIDs.Add(1091504803U, "MigrationCSVRequired");
			Strings.stringIDs.Add(1552530836U, "ErrorNewRoleInvalidValueUnscopedParameter");
			Strings.stringIDs.Add(3472833669U, "CallingGetFederationInformation");
			Strings.stringIDs.Add(2207102733U, "DagTaskFixingUpIpResources");
			Strings.stringIDs.Add(3732896675U, "ApplicationUrisSkipped");
			Strings.stringIDs.Add(3008043280U, "ErrorSetPublicFolderMailMailRecipientGuidNull");
			Strings.stringIDs.Add(4151922635U, "MultipleSubscriptionSites");
			Strings.stringIDs.Add(1906143331U, "ErrorOWAVdirAppPoolNotExist");
			Strings.stringIDs.Add(1329949041U, "CasHealthPowerShellShortName");
			Strings.stringIDs.Add(1484668346U, "CopyStatusHealthy");
			Strings.stringIDs.Add(2810838460U, "SubscriptionPasswordEmptyException");
			Strings.stringIDs.Add(185229349U, "ReportsMPNotInstalled");
			Strings.stringIDs.Add(2417965290U, "RequestOnInaccessibleDatabase");
			Strings.stringIDs.Add(1428403360U, "SetupProgressStartingServices");
			Strings.stringIDs.Add(2052801377U, "Busy");
			Strings.stringIDs.Add(2686627867U, "DatabaseAvailabilityCheckDesc");
			Strings.stringIDs.Add(2021788683U, "ClassificationRuleCollectionStorageFailure");
			Strings.stringIDs.Add(192027990U, "ErrorCannotModifyFolderName");
			Strings.stringIDs.Add(2873363543U, "JournalingReportNdrToSameAsRecipient");
			Strings.stringIDs.Add(3912787342U, "XRopConnectLogon");
			Strings.stringIDs.Add(2864130840U, "ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter");
			Strings.stringIDs.Add(1859742910U, "SetupProgressProhibitSendReceiveQuota");
			Strings.stringIDs.Add(4065885103U, "ScenarioEwsGetFolder");
			Strings.stringIDs.Add(4181933535U, "CalendarLogIdentityNotSpecified");
			Strings.stringIDs.Add(3046095919U, "ErrorBypassWLIDAndRemovedMailboxTogether");
			Strings.stringIDs.Add(2204793929U, "StartingHealthService");
			Strings.stringIDs.Add(672436065U, "InstallMomConnectorServiceTask");
			Strings.stringIDs.Add(416621071U, "ExchangeUpgradeBucketInvalidCapacityValue");
			Strings.stringIDs.Add(3620520123U, "MapiTransactionResultSuccess");
			Strings.stringIDs.Add(3866700857U, "ErrorBPAOutFileLoad");
			Strings.stringIDs.Add(2481943192U, "AccessStoreSuccess");
			Strings.stringIDs.Add(3531376863U, "ErrorSuspendAndResumeDontSupportFalse");
			Strings.stringIDs.Add(542947632U, "InstallCafeIisWebServiceExtensions");
			Strings.stringIDs.Add(3691772373U, "VerboseStartWinrm");
			Strings.stringIDs.Add(4170882099U, "CasHealthCalendarScenarioTestViewDesc");
			Strings.stringIDs.Add(2129843125U, "UpdateAspnetConfigFailed");
			Strings.stringIDs.Add(86137682U, "SingleCopyDatabase");
			Strings.stringIDs.Add(3067181414U, "ConfirmationMessageSetIPBlockListConfig");
			Strings.stringIDs.Add(2847533272U, "InvalidRecipientAddress");
			Strings.stringIDs.Add(3423115636U, "AttachmentFilterEntryNotFound");
			Strings.stringIDs.Add(3101272142U, "CasHealthEcpScenarioTestWebServiceDescription");
			Strings.stringIDs.Add(698348194U, "WarningUnsupportedEdgeTransportConfigProperty");
			Strings.stringIDs.Add(1280404394U, "ErrorBPAConfigFileNotFound");
			Strings.stringIDs.Add(708658832U, "TargetDatabasesNotAllowed");
			Strings.stringIDs.Add(2593249093U, "LocalSiteNotFound");
			Strings.stringIDs.Add(1226483017U, "SetupComponentAdam");
			Strings.stringIDs.Add(3571093343U, "ErrorApplyRusFailed");
			Strings.stringIDs.Add(3812994936U, "MtrtEventReceive");
			Strings.stringIDs.Add(1533614992U, "GlobalRoutingEntryVerificationSkipped");
			Strings.stringIDs.Add(3528435264U, "MalboxFolderRightsNone");
			Strings.stringIDs.Add(2664395245U, "ClassificationRuleCollectionIllegalScopedNewOobOperation");
			Strings.stringIDs.Add(2752094876U, "ErrorBPAIisInstalledParameterRequired");
			Strings.stringIDs.Add(2103885852U, "InvalidSelectionTarget");
			Strings.stringIDs.Add(3987189255U, "VerboseSearchingAssigneeInDomainNC");
			Strings.stringIDs.Add(548988381U, "SetupComponentConfiguringMailboxPermissions");
			Strings.stringIDs.Add(1786294530U, "ErrorAlsSearchResultLargeAttachmentSize");
			Strings.stringIDs.Add(1757744768U, "SetupProgressCreateRBACScopesContainer");
			Strings.stringIDs.Add(3873707400U, "SetupProgressHostedContentFilterPolicy");
			Strings.stringIDs.Add(1419022259U, "DuplicateDataClassificationSpecified");
			Strings.stringIDs.Add(4019830635U, "MailboxTransportDeliveryServiceDisplayName");
			Strings.stringIDs.Add(1212046423U, "ErrorSetSendAsOnMailboxPermissionNotAllowed");
			Strings.stringIDs.Add(1718119522U, "ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress");
			Strings.stringIDs.Add(728045039U, "ErrorNoDCInLocalSite");
			Strings.stringIDs.Add(2684014814U, "BridgeheadPrereqCheck");
			Strings.stringIDs.Add(3655557265U, "PhoneNumberAlreadyRegistered");
			Strings.stringIDs.Add(1870712198U, "ErrorTeamMailboxCanNotLoadPolicy");
			Strings.stringIDs.Add(1510453889U, "VerboseResolvingExclusiveRecipientWriteScope");
			Strings.stringIDs.Add(3321247001U, "ConfirmationMessageTestOutlookWebServices");
			Strings.stringIDs.Add(3769478445U, "AddSecondaryDomainDescription");
			Strings.stringIDs.Add(4079789178U, "ErrorImportingTpdFromRmsOnline");
			Strings.stringIDs.Add(2430123483U, "DisasterRecoveryCafeRoleDescription");
			Strings.stringIDs.Add(1259030099U, "CasHealthConnectionType");
			Strings.stringIDs.Add(341845757U, "SetupProgressOfflineAddressBookEnabled");
			Strings.stringIDs.Add(2294357729U, "CasHealthOwaVdirNameHeader");
			Strings.stringIDs.Add(1151978302U, "AllActiveSyncTransactionsSucceeded");
			Strings.stringIDs.Add(2444920946U, "RootDomainNotFoundException");
			Strings.stringIDs.Add(245296314U, "RequestAlreadyCanceled");
			Strings.stringIDs.Add(2184875284U, "InstallWatchDogServiceTask");
			Strings.stringIDs.Add(369727888U, "ScopeIsInUse");
			Strings.stringIDs.Add(2731790600U, "CasHealthOwaInvalidCertificate");
			Strings.stringIDs.Add(3596291951U, "TestSearchCheckService");
			Strings.stringIDs.Add(2554964784U, "ServiceHostDisplayName");
			Strings.stringIDs.Add(3785964720U, "SetupProgressInstallGlobalSettingsContainer");
			Strings.stringIDs.Add(813346190U, "TopologyServiceResultSuccess");
			Strings.stringIDs.Add(1288207498U, "InfoOverallPass");
			Strings.stringIDs.Add(2868492561U, "ErrorCannotUpdateGlsDomainFromOrgId");
			Strings.stringIDs.Add(3402326851U, "SendConnectorTargetServersNotSet");
			Strings.stringIDs.Add(2774693296U, "SetupComponentMonitoring");
			Strings.stringIDs.Add(3339775592U, "ImportFileDataIsNull");
			Strings.stringIDs.Add(1493094573U, "ErrorDatabaseUnavailableForProvisioning");
			Strings.stringIDs.Add(3433387878U, "StartingToCopyOwaLPFiles");
			Strings.stringIDs.Add(4222471768U, "AutodiscoverServiceCallFailed");
			Strings.stringIDs.Add(3141335933U, "IncompatibleDatabaseSchemaVersionsInDAG");
			Strings.stringIDs.Add(587913101U, "ErrorBPAConfigFileLoad");
			Strings.stringIDs.Add(2931186720U, "Imap4ServiceDescription");
			Strings.stringIDs.Add(318753442U, "SetupProgressMaxConcurrentMigrations");
			Strings.stringIDs.Add(2019968228U, "WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime");
			Strings.stringIDs.Add(403853017U, "SetupComponentMidFileCopyAllRoles");
			Strings.stringIDs.Add(2199720396U, "UninstallMonitoringServiceTask");
			Strings.stringIDs.Add(604494259U, "SmartHostsValidationFailedWarningMessage");
			Strings.stringIDs.Add(1788709803U, "ClassificationRuleCollectionEngineValidationFailure");
			Strings.stringIDs.Add(2608560709U, "CasHealthDeleteItemScenarioDescription");
			Strings.stringIDs.Add(2411750738U, "ADAttributeMobileNumber");
			Strings.stringIDs.Add(3794422642U, "SetupProgressCleanRegistry");
			Strings.stringIDs.Add(3078877348U, "VerboseCheckRequiredFiles");
			Strings.stringIDs.Add(2920861445U, "BackSyncUrlNeedsToBeAbsolute");
			Strings.stringIDs.Add(2803298965U, "FfoWebServicePostConfigComponentDescription");
			Strings.stringIDs.Add(2916035674U, "SetupProgressStartingWatchDogService");
			Strings.stringIDs.Add(3333988183U, "CasHealthNoMailboxServersToTest");
			Strings.stringIDs.Add(430617656U, "ProvisionServerDescription");
			Strings.stringIDs.Add(3732418497U, "ErrorChangePasswordForAppPasswordAccount");
			Strings.stringIDs.Add(1217883829U, "NoRecipients");
			Strings.stringIDs.Add(1589123818U, "ErrorSetGroupMailboxNoOwners");
			Strings.stringIDs.Add(1217557034U, "ErrorMovingUnsupportedArchiveUser");
			Strings.stringIDs.Add(633706886U, "MicrosoftExchangeRecipientExists");
			Strings.stringIDs.Add(3308770896U, "DeletionAndLogOnlyNotPermitted");
			Strings.stringIDs.Add(807443215U, "MtrtMessageDeliverDetailMessage");
			Strings.stringIDs.Add(2052997646U, "ErrorMustSpecifyEitherAbsoluteOrRelativePath");
			Strings.stringIDs.Add(1304678551U, "SetupComponentPostPrepForestGlobalConfig");
			Strings.stringIDs.Add(3568653834U, "ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter");
			Strings.stringIDs.Add(1951423981U, "InformationSkippedEws");
			Strings.stringIDs.Add(1233036147U, "SupervisionPolicyCollectionAmbiguous");
			Strings.stringIDs.Add(3990056197U, "CopyStatusNonExchangeReplication");
			Strings.stringIDs.Add(1010297221U, "ErrorAccountEnabledForNonUserMailbox");
			Strings.stringIDs.Add(4150035864U, "ErrorInvalidOperationOnProvisionedMailboxServer");
			Strings.stringIDs.Add(2937791153U, "NegativePriority");
			Strings.stringIDs.Add(1521120953U, "InstallFfoWebServiceRoleDescription");
			Strings.stringIDs.Add(376492407U, "RemoveOrganizationFailWithoutSharedConfigurationParameter");
			Strings.stringIDs.Add(2967394064U, "InformationSkippedAsForEWS");
			Strings.stringIDs.Add(2085825600U, "ErrorUseDataPropertyNameParameter");
			Strings.stringIDs.Add(1517655709U, "DatabaseStatus");
			Strings.stringIDs.Add(2813353071U, "InfoGetPublishingUri");
			Strings.stringIDs.Add(2794053464U, "MomConnectorServiceDisplayName");
			Strings.stringIDs.Add(3156748290U, "InstallMailboxTransportDeliveryServiceTask");
			Strings.stringIDs.Add(2215772277U, "PreserveAppSettingsTask");
			Strings.stringIDs.Add(3258683347U, "SetupProgressRecreateCannedRBACRoles");
			Strings.stringIDs.Add(3944568479U, "SetupComponentPostSetupOSP");
			Strings.stringIDs.Add(234821519U, "SetupProgressUMEnabled");
			Strings.stringIDs.Add(3380466612U, "NewReceiveConnectorAddingPermissionsMsg");
			Strings.stringIDs.Add(128806629U, "ProgressForceQuorum");
			Strings.stringIDs.Add(2527198467U, "TestTeamMailboxSharePointResponseDetails");
			Strings.stringIDs.Add(2764287489U, "SetupProgressInstallTransportLogSearchSerice");
			Strings.stringIDs.Add(35249167U, "MtrtEventSend");
			Strings.stringIDs.Add(394963499U, "EnableAntiSpamUpdatesDeprecated");
			Strings.stringIDs.Add(2100461993U, "IntegratedVDirNotFound");
			Strings.stringIDs.Add(1545501201U, "CopyStatusResynchronizing");
			Strings.stringIDs.Add(484901463U, "SetupProgressConfigureMessageClassificationsContainer");
			Strings.stringIDs.Add(3632680670U, "ComplianceProgramStateError");
			Strings.stringIDs.Add(3941719008U, "DebugEndGeneratingUniqueSamAccountName");
			Strings.stringIDs.Add(631692221U, "SkippingInvalidTypeInGroupExpansion");
			Strings.stringIDs.Add(540991791U, "GetMsoDiagnosticsFindingTheCookie");
			Strings.stringIDs.Add(427603828U, "ProgressCopyingSystemFiles");
			Strings.stringIDs.Add(3259527179U, "SendMessage");
			Strings.stringIDs.Add(3937861705U, "RoleAvailabilityOnly");
			Strings.stringIDs.Add(3172987846U, "CasHealthSecureAccess");
			Strings.stringIDs.Add(3299454883U, "MigrationNewBatchUsersShareBatch");
			Strings.stringIDs.Add(3049974650U, "SetBothForwardingAddressConfirmationMessage");
			Strings.stringIDs.Add(3798570991U, "InstallMonitoringRoleDescription");
			Strings.stringIDs.Add(2761303157U, "NotEnoughInformationSupplied");
			Strings.stringIDs.Add(3211546685U, "OnPremisesConnectorHasRouteUsingMXId");
			Strings.stringIDs.Add(1622178204U, "ErrorLocalServerIsNotMailboxServer");
			Strings.stringIDs.Add(3841604610U, "ErrorPatternCannotContainMultiMatchOnGroupOrAssertion");
			Strings.stringIDs.Add(2573369783U, "CertificateStatusValid");
			Strings.stringIDs.Add(1421470187U, "DlpPolicyVersionUnsupported");
			Strings.stringIDs.Add(415510158U, "ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods");
			Strings.stringIDs.Add(211700381U, "RecoveryActionArbiterServiceDescription");
			Strings.stringIDs.Add(1933689530U, "SetupProgressUninstallTransportLogSearchSerice");
			Strings.stringIDs.Add(698026304U, "ConfirmationMessageRemoveSearchDocumentFormat");
			Strings.stringIDs.Add(2715778979U, "ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox");
			Strings.stringIDs.Add(2298668180U, "InvalidStoreMailboxIdentity");
			Strings.stringIDs.Add(3308687873U, "NewFilterNeitherOptimizedNorImproved");
			Strings.stringIDs.Add(2625625929U, "GetMsoDiagnosticsMoreDataIsAvailable");
			Strings.stringIDs.Add(3180802142U, "SetupComponentTransportLogSearchService");
			Strings.stringIDs.Add(2506373819U, "ErrorTagTypeModified");
			Strings.stringIDs.Add(2236297220U, "CatchAllRecipientNotAllowedForArbitrationMailbox");
			Strings.stringIDs.Add(572655299U, "ErrorLegacyOABDoesNotSupportLinkedMailbox");
			Strings.stringIDs.Add(1767452929U, "ErrorSelectUserCmdletOnlyWorksForTwoUsers");
			Strings.stringIDs.Add(201914195U, "ErrorServicePlanIsNotSet");
			Strings.stringIDs.Add(839645532U, "MtrtRemoveHeader");
			Strings.stringIDs.Add(2376119956U, "JournalingParameterErrorExpiryDateWithoutGcc");
			Strings.stringIDs.Add(4174794989U, "ConfirmationMessageSetImap4Config");
			Strings.stringIDs.Add(4021969573U, "InCorrectRequiredPOPSetting");
			Strings.stringIDs.Add(1268368950U, "WarnAboutSetDatabaseDefaults");
			Strings.stringIDs.Add(1288060522U, "ErrorRestrictionWithWrongGroupType");
			Strings.stringIDs.Add(2488760739U, "DagMembersUpCheckDesc");
			Strings.stringIDs.Add(127311569U, "ErrorCannotDisablePublicFolderMailboxWithFolders");
			Strings.stringIDs.Add(2327516238U, "CasHealthScenarioLogon");
			Strings.stringIDs.Add(2468414724U, "ADAttributeInitials");
			Strings.stringIDs.Add(3835641716U, "NeedIisRestartWarning");
			Strings.stringIDs.Add(6354352U, "ErrorFailedToCreatePL");
			Strings.stringIDs.Add(1230778519U, "VerifyRoleInstalled");
			Strings.stringIDs.Add(140153690U, "ConfirmationMessageGetFailedContentIndexDocuments");
			Strings.stringIDs.Add(1867927292U, "FailedToLoadEdgeSyncConfigFile");
			Strings.stringIDs.Add(1163910679U, "ClassificationRuleCollectionIneffectiveSharingViolationCheck");
			Strings.stringIDs.Add(892157639U, "VerboseFailedToTestWriteAccessToExchangeServers");
			Strings.stringIDs.Add(410666693U, "ErrorInvalidGuidFormat");
			Strings.stringIDs.Add(1333408282U, "MtrtDecrypt");
			Strings.stringIDs.Add(4176097491U, "ErrorNotRunningAsTenantAdmin");
			Strings.stringIDs.Add(3736170493U, "InstallMonitoringServiceTask");
			Strings.stringIDs.Add(1547108334U, "CreateDumpster20Tag");
			Strings.stringIDs.Add(3242462262U, "InstallClientAccessRoleDescription");
			Strings.stringIDs.Add(1707855545U, "ConfirmationMessageTestWebServicesConnectivity");
			Strings.stringIDs.Add(3312019203U, "ConfigureMailTips");
			Strings.stringIDs.Add(591582552U, "TestMigrationServerConnectionTimeout");
			Strings.stringIDs.Add(2449914212U, "SetupProgressStartingTransportLogSearchService");
			Strings.stringIDs.Add(3137393342U, "ErrorPublicFolderHierarchyAlreadyProvisioned");
			Strings.stringIDs.Add(3654120958U, "ErrorInvalidOperationOnProvisionedServer");
			Strings.stringIDs.Add(2556217749U, "CasHealthEasScenarioGetItemEstimate");
			Strings.stringIDs.Add(1093843235U, "SetupProgressCreateOutOfTheBoxAdditionalMrmTags");
			Strings.stringIDs.Add(2136017683U, "AddressRewriteExceptionListDisallowed");
			Strings.stringIDs.Add(3528453455U, "InstallIisWebServiceExtensionCommitting");
			Strings.stringIDs.Add(501834753U, "SetupProgressCreateGlobalContainers");
			Strings.stringIDs.Add(3631260574U, "ErrorSyncProtocolNotSpecified");
			Strings.stringIDs.Add(3934741745U, "ArchiveNamePrefix");
			Strings.stringIDs.Add(2085683230U, "InvokePreMoveActionDescription");
			Strings.stringIDs.Add(1852904459U, "SetupProgressProhibitSendQuota");
			Strings.stringIDs.Add(1456068237U, "SetupComponentPerfCountersTransport");
			Strings.stringIDs.Add(29841201U, "WatchDogServiceDisplayName");
			Strings.stringIDs.Add(2600973645U, "StoppingOnePointService");
			Strings.stringIDs.Add(3497830027U, "ProgressCheckingReplayState");
			Strings.stringIDs.Add(3673730471U, "CopyStatusDismounted");
			Strings.stringIDs.Add(2442076717U, "DebugStartIsDomainReservedCheck");
			Strings.stringIDs.Add(3982469894U, "InvalidActionParameter");
			Strings.stringIDs.Add(3084415248U, "CasHealthClientAccessServerName");
			Strings.stringIDs.Add(1415129751U, "ArchiveDatabaseNotExplicitlyStampedError");
			Strings.stringIDs.Add(2556724114U, "ExchangeWindowsPermissionsDescription");
			Strings.stringIDs.Add(2806693281U, "CasHealthOwaPingScenarioName");
			Strings.stringIDs.Add(2425687808U, "TargetMailboxRequired");
			Strings.stringIDs.Add(3860792703U, "ConfirmationMessageSetTransportConfig");
			Strings.stringIDs.Add(3173344529U, "MigrationPartitionMailboxNotFound");
			Strings.stringIDs.Add(3994004286U, "ClassificationRuleCollectionExportEncyrptedProhibited");
			Strings.stringIDs.Add(3144908676U, "UninstallGatewayRoleDescription");
			Strings.stringIDs.Add(2985845130U, "HighPriorityChecksFailed");
			Strings.stringIDs.Add(3773528322U, "CouldNotRestartExSearch");
			Strings.stringIDs.Add(930222453U, "AdminAuditLogSearchMissingCmdletsWhileParameterProvided");
			Strings.stringIDs.Add(3527197609U, "RmsOnlineFailedToValidateKeys");
			Strings.stringIDs.Add(2775441772U, "VerboseCheckingScopePassed");
			Strings.stringIDs.Add(1613874467U, "NotAValidDistributionGroup");
			Strings.stringIDs.Add(894156138U, "ConfirmEnforceRequireSslOnRoot");
			Strings.stringIDs.Add(1268556399U, "ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox");
			Strings.stringIDs.Add(1397395049U, "NoBindingsSet");
			Strings.stringIDs.Add(1360109098U, "ErrorAccountPartitionRequired");
			Strings.stringIDs.Add(3103126396U, "DebugEndInAcceptedDomainCheck");
			Strings.stringIDs.Add(3692425173U, "UninstallingTranscodingService");
			Strings.stringIDs.Add(3387886734U, "SetupProgressEnableWMIAsync");
			Strings.stringIDs.Add(1971301201U, "MtrtDeleteMessage");
			Strings.stringIDs.Add(2658797945U, "ClassificationRuleCollectionTimeoutFailure");
			Strings.stringIDs.Add(2428787024U, "ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox");
			Strings.stringIDs.Add(4233755904U, "ErrorLinkedRoleGroupCannotHaveMembers");
			Strings.stringIDs.Add(1504344471U, "UnableToDetermineCreatingUser");
			Strings.stringIDs.Add(1817876216U, "ProgressDeletingCatalog");
			Strings.stringIDs.Add(3183614673U, "ErrorGlobalThrottlingPolicyNotFound");
			Strings.stringIDs.Add(2734579474U, "IncompatibleTenantOrganizationForBulkProvisioning");
			Strings.stringIDs.Add(2720144322U, "RuleStateEnabled");
			Strings.stringIDs.Add(1049461168U, "DisasterRecoveryMailboxRoleDescription");
			Strings.stringIDs.Add(4128527909U, "ManagedAvailabilityServersUSGDescription");
			Strings.stringIDs.Add(3250669143U, "ConfirmationMessageTestEdgeSynchronization");
			Strings.stringIDs.Add(3334485045U, "ErrorBasicAndLiveIdBasicNotAllowed");
			Strings.stringIDs.Add(3247824756U, "ErrorInvalidCharException");
			Strings.stringIDs.Add(3233886878U, "CalendarVDirNotFound");
			Strings.stringIDs.Add(124793491U, "ReplicationCheckFailuresLabel");
			Strings.stringIDs.Add(1844786054U, "CreateAltFswWillAutomaticallyCalculateLater");
			Strings.stringIDs.Add(1855656096U, "ProgressDeletingCopySystemFiles");
			Strings.stringIDs.Add(460271254U, "UninstallCentralAdminServiceTask");
			Strings.stringIDs.Add(3306705804U, "SetupComponentConfiguringDAV");
			Strings.stringIDs.Add(2740942150U, "CouldNotFindFirstOrgPerimeterConfigObjectId");
			Strings.stringIDs.Add(2507815087U, "MapiSubmitSystemProbeInternetMessageId");
			Strings.stringIDs.Add(2789110641U, "ErrorFailedToGetPublishingUri");
			Strings.stringIDs.Add(4130544628U, "RequiredStartDateParameter");
			Strings.stringIDs.Add(2328331598U, "SetupProgressRemotePowerShellAccessEnabled");
			Strings.stringIDs.Add(535310264U, "SetupProgressOwaLightEnabled");
			Strings.stringIDs.Add(3015750530U, "InvalidUnicodeCharacterUsage");
			Strings.stringIDs.Add(1310486619U, "ErrorRemoteTargetDatabaseNotAllowedForRemotePull");
			Strings.stringIDs.Add(4161302825U, "CasHealthEasScenarioSyncZero");
			Strings.stringIDs.Add(2469261993U, "SetUMMailboxPolicyDuplicateSourceForestPolicyNames");
			Strings.stringIDs.Add(468761160U, "CatchAllRecipientTypeNotAllowed");
			Strings.stringIDs.Add(520563401U, "ErrorFailedToCheckMode");
			Strings.stringIDs.Add(2047820105U, "ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly");
			Strings.stringIDs.Add(3824133691U, "ErrorTaskRunningLocationMailboxOnly");
			Strings.stringIDs.Add(4186670836U, "OwaIdentityMustHaveValueException");
			Strings.stringIDs.Add(1379838521U, "DebugGettingNetIdFromMemeberName");
			Strings.stringIDs.Add(4185944676U, "ExchangeMigrationSidHistoryAuditingDSGDescription");
			Strings.stringIDs.Add(3325258591U, "SmtpExternalServerSettings");
			Strings.stringIDs.Add(4273640756U, "CannotDisableAdfsEcpWithoutOwaFirst");
			Strings.stringIDs.Add(1926434175U, "SetupProgressStoppingIISAdminService");
			Strings.stringIDs.Add(1418979799U, "UnableToCommunicate");
			Strings.stringIDs.Add(1639545723U, "TenantConfigurationInfoIsNull");
			Strings.stringIDs.Add(1855234972U, "ComplianceAuditServiceDisplayName");
			Strings.stringIDs.Add(3361199071U, "UmLanguagePathLogFilePathNotSpecified");
			Strings.stringIDs.Add(1633415838U, "StartAfterOrCompleteAfterCannotBeSetForOfflineMoves");
			Strings.stringIDs.Add(4242852735U, "ReplicationCheckBlankMessage");
			Strings.stringIDs.Add(3326005479U, "AdminAuditLogSearchFailed");
			Strings.stringIDs.Add(2193132985U, "MigrationCompleteAfterChangedToEarlierTime");
			Strings.stringIDs.Add(433212455U, "ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests");
			Strings.stringIDs.Add(2687116030U, "StartingToUpdateMFLFiles");
			Strings.stringIDs.Add(2411285952U, "CannotSetEdgeTransportServerOnAd");
			Strings.stringIDs.Add(185298481U, "ApplicationUrisMissingOnReturnedInformation");
			Strings.stringIDs.Add(342525783U, "DNSRoutingEnabledMustNotBeSpecified");
			Strings.stringIDs.Add(269884753U, "CannotLocateFedOrgId");
			Strings.stringIDs.Add(291218883U, "ErrorIncompleteSettings");
			Strings.stringIDs.Add(1213215400U, "ContinueOnRemoveSearchResults");
			Strings.stringIDs.Add(1516838238U, "PopImapLoggingOn");
			Strings.stringIDs.Add(2155968014U, "PopInternalServerSettings");
			Strings.stringIDs.Add(2370208778U, "ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts");
			Strings.stringIDs.Add(434752309U, "ReplayLagPlayDownReasonLagDisabled");
			Strings.stringIDs.Add(1865089306U, "InstallCentralAdminDatabaseRoleDescription");
			Strings.stringIDs.Add(1756888518U, "OwaUrlNotMatchEcpWarning");
			Strings.stringIDs.Add(696161139U, "ErrorPFDistributionNotSpecified");
			Strings.stringIDs.Add(109380891U, "VerboseResetPasswordOnNextLogon");
			Strings.stringIDs.Add(1362435159U, "ErrorAppPoolIdCannotBeEmpty");
			Strings.stringIDs.Add(76164030U, "InformationSkippedOab");
			Strings.stringIDs.Add(3202705274U, "NoRMSServersFoundException");
			Strings.stringIDs.Add(30958655U, "CasHealthOwaNoExternalUrl");
			Strings.stringIDs.Add(3893846751U, "ReplayLagStatusLabelPercentage");
			Strings.stringIDs.Add(1018021345U, "ErrorCannotUpdateCertificateWhenFederationNotProvisioned");
			Strings.stringIDs.Add(4081846807U, "WarningMultiSiteSourceServers");
			Strings.stringIDs.Add(556775763U, "ErrorTeamMailboxSharePointUrl");
			Strings.stringIDs.Add(3824833340U, "AuthenticationMethodWindows");
			Strings.stringIDs.Add(1539605370U, "MountStatusMounting");
			Strings.stringIDs.Add(2295231809U, "SetupProgressInstallDefaultAcceptedDomain");
			Strings.stringIDs.Add(400166206U, "ComplianceServiceDescription");
			Strings.stringIDs.Add(812672951U, "ContentIndexingExSearchNotFound");
			Strings.stringIDs.Add(3105051314U, "CasHealthSyncFolderItemsScenarioDescription");
			Strings.stringIDs.Add(97006653U, "ChangeServiceConfigFailure");
			Strings.stringIDs.Add(2281255925U, "ErrorDisableMailuserWithJournalArchive");
			Strings.stringIDs.Add(2313611105U, "ErrorTooManyCertificates");
			Strings.stringIDs.Add(1799783420U, "SetupProgressStoppingTransportSyncManagerService");
			Strings.stringIDs.Add(161394695U, "ConfirmationMessageSetSenderFilterConfig");
			Strings.stringIDs.Add(408634319U, "SetupProcessCreateDefaultSharingPolicy");
			Strings.stringIDs.Add(990532542U, "ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario");
			Strings.stringIDs.Add(3299210260U, "CasHealthResult");
			Strings.stringIDs.Add(911093058U, "DRMNotAllowedForConsumerDialPlan");
			Strings.stringIDs.Add(2360538852U, "CafePrereqCheck");
			Strings.stringIDs.Add(3829706538U, "DatabaseSeedStatusLabelPercentage");
			Strings.stringIDs.Add(3236535734U, "CasHealthCreateItemScenarioDescription");
			Strings.stringIDs.Add(3547605377U, "SetupProgressInstallingDefaultTransportAgents");
			Strings.stringIDs.Add(2035571295U, "ErrorExpansionServerMustBeTiOrBhServer");
			Strings.stringIDs.Add(764010493U, "ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount");
			Strings.stringIDs.Add(3388261540U, "MailboxParameterMissingException");
			Strings.stringIDs.Add(1226596383U, "PromptToOverwriteExistingRuleCollection");
			Strings.stringIDs.Add(4104165981U, "AuthenticationMethodLiveIdFba");
			Strings.stringIDs.Add(3043034532U, "ErrorIncorrectDefaultTag");
			Strings.stringIDs.Add(3268676866U, "ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox");
			Strings.stringIDs.Add(2147011188U, "MSARPSServiceDisplayName");
			Strings.stringIDs.Add(4135645967U, "NotifySenderActionIsBeingOverridded");
			Strings.stringIDs.Add(137891794U, "EitherSenderOrRmsOnlineParametersMustBeSpecified");
			Strings.stringIDs.Add(2340528056U, "StoppingMomService");
			Strings.stringIDs.Add(2455516899U, "HighPriorityChecksWarning");
			Strings.stringIDs.Add(3888635110U, "SetupProgressStartingInformationStoreService");
			Strings.stringIDs.Add(3766269728U, "OldRmsOnlineImportAfterRmsOnlineForwardSync");
			Strings.stringIDs.Add(1448587360U, "InvalidReportEndDate");
			Strings.stringIDs.Add(766081866U, "DisasterRecoveryMonitoringRoleDescription");
			Strings.stringIDs.Add(2214481763U, "AllWebServicesTransactionsSucceeded");
			Strings.stringIDs.Add(3019121814U, "ArchiveConnectivityResultUndefined");
			Strings.stringIDs.Add(3252760822U, "Error_MissingSenderEmail");
			Strings.stringIDs.Add(21238159U, "EdgeServerNotSubscribed");
			Strings.stringIDs.Add(1455306500U, "DelegateRoleTypeOrgAdmin");
			Strings.stringIDs.Add(1020874888U, "InfoCheckingOrganizationContext");
			Strings.stringIDs.Add(1664700488U, "DagMgmtServiceDescription");
			Strings.stringIDs.Add(1279214916U, "WarningRedirectToRecipientsNotSet");
			Strings.stringIDs.Add(2391097994U, "IndexEntryIsMissingData");
			Strings.stringIDs.Add(1748468167U, "SetupProgressCreateApprovalApplicationsContainer");
			Strings.stringIDs.Add(2354834546U, "PublicFolderMailboxNotFound");
			Strings.stringIDs.Add(8549621U, "PopImapNoMessagesToDelete");
			Strings.stringIDs.Add(49581212U, "NoJournalingToPublicFolder");
			Strings.stringIDs.Add(283984324U, "ProgressStatusRemovingAddressListTree");
			Strings.stringIDs.Add(1377545162U, "ADAttributeCustomAttribute4");
			Strings.stringIDs.Add(4050256429U, "VerboseRestartDefaultWebSite");
			Strings.stringIDs.Add(570475965U, "ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration");
			Strings.stringIDs.Add(3859128598U, "ErrorFailedToGetLicensingUri");
			Strings.stringIDs.Add(4221700743U, "MicrosoftExchangeRecipientNotFoundOnGatewayServerRole");
			Strings.stringIDs.Add(121474667U, "SetupProgressContactCountQuota");
			Strings.stringIDs.Add(3995778130U, "ErrorInstallationModeNotSupported");
			Strings.stringIDs.Add(3604568438U, "NoSuchRequestInSpecifiedIndex");
			Strings.stringIDs.Add(2370162247U, "MigrationAutoStopAlreadySet");
			Strings.stringIDs.Add(3628539559U, "UseDagDefaultOnOffOff");
			Strings.stringIDs.Add(1995762726U, "ServerUnavailableException");
			Strings.stringIDs.Add(325877545U, "ClientAccessOwaComponentDescription");
			Strings.stringIDs.Add(233667309U, "SetupProgressCreateUceContentFilterObject");
			Strings.stringIDs.Add(1589222130U, "ConversationsMailboxDisabled");
			Strings.stringIDs.Add(1909170865U, "SetupComponentUpdateResourcePropertySchema");
			Strings.stringIDs.Add(1612688160U, "TransitionStateUnknown");
			Strings.stringIDs.Add(555828727U, "FileDataShouldNotBeSet");
			Strings.stringIDs.Add(3623760724U, "ParameterErrorForDefaultUsage");
			Strings.stringIDs.Add(4269792004U, "SetupProgressStartingDagMgmtService");
			Strings.stringIDs.Add(4252228748U, "FinishingFileCopy");
			Strings.stringIDs.Add(143203986U, "MtrtReportSeverityLevelHigh");
			Strings.stringIDs.Add(2335842547U, "ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard");
			Strings.stringIDs.Add(1485878098U, "EnableConversationsTask");
			Strings.stringIDs.Add(3039898050U, "NoDeviceFilters");
			Strings.stringIDs.Add(2918650372U, "ConfirmationMessageSearchMessageTracking");
			Strings.stringIDs.Add(533928811U, "ConfirmationMessageTestSystemHealth");
			Strings.stringIDs.Add(4015121608U, "CopyStatusFailed");
			Strings.stringIDs.Add(4107372202U, "DlpPolicyStateDisplayName");
			Strings.stringIDs.Add(1881614050U, "MailboxSearchDisabled");
			Strings.stringIDs.Add(1613921097U, "ErrorManagedByMustBeSpecifiedWIthOrganization");
			Strings.stringIDs.Add(1886798257U, "LiveIdAuthenticationResultSuccess");
			Strings.stringIDs.Add(29090731U, "FinishedComponentTasks");
			Strings.stringIDs.Add(3184703320U, "MountStatusDismounting");
			Strings.stringIDs.Add(455979009U, "UninstallPop3BeServiceTask");
			Strings.stringIDs.Add(3215055419U, "DisasterRecoveryFrontendTransportRoleDescription");
			Strings.stringIDs.Add(2361940575U, "TeamMailboxSharePointUrlMissing");
			Strings.stringIDs.Add(2454229449U, "ConfirmationMessageTestEdgeSyncEhf");
			Strings.stringIDs.Add(1631911187U, "PhotoMustNotBeBlank");
			Strings.stringIDs.Add(888502160U, "PopExternalServerSettings");
			Strings.stringIDs.Add(3447968637U, "ConfirmationRemoveAllSupervisionListEntries");
			Strings.stringIDs.Add(4165998328U, "InvalidReportingPeriod");
			Strings.stringIDs.Add(3472376295U, "FfoWebServicePermissionsComponentDescription");
			Strings.stringIDs.Add(2726496295U, "RepairUrgencyNormal");
			Strings.stringIDs.Add(3114647655U, "ErrorDefaultMalwareConfigCannotBeDeleted");
			Strings.stringIDs.Add(752989991U, "InvalidAggregateBy");
			Strings.stringIDs.Add(2099442359U, "SetupProgressCreateRBACRoleAssignmentsContainer");
			Strings.stringIDs.Add(4240648378U, "AutoProvisionFailedException");
			Strings.stringIDs.Add(2833582586U, "NeedToSpecifyServerObject");
			Strings.stringIDs.Add(875645786U, "HybridMailflowNotYetSet");
			Strings.stringIDs.Add(3352448229U, "DegubEndConnectingToDomainServices");
			Strings.stringIDs.Add(133553638U, "CallingGetOrganizationRelationshipSettings");
			Strings.stringIDs.Add(2431610718U, "DagTaskValidatingParameters");
			Strings.stringIDs.Add(1191033945U, "NewRuleSyncAcrossDifferentVersionsNeeded");
			Strings.stringIDs.Add(2167067396U, "PopImapDeleteOldMsgs");
			Strings.stringIDs.Add(3174578250U, "ReloadingRequest");
			Strings.stringIDs.Add(1880520539U, "RepairUrgencyCritical");
			Strings.stringIDs.Add(1935034447U, "UnpackingFiles");
			Strings.stringIDs.Add(2464857106U, "CentralAdminServiceDisplayName");
			Strings.stringIDs.Add(1020674371U, "WarnRpcHttpNegotiateCoexistence");
			Strings.stringIDs.Add(688825023U, "SetupProgressCreatingAdamInstance");
			Strings.stringIDs.Add(422014390U, "ActiveSyncMetabaseProxyInstallFailure");
			Strings.stringIDs.Add(1957537238U, "InvalidMessageDataClassificationEmptyName");
			Strings.stringIDs.Add(1283422781U, "ErrorFileHasNoTextContent");
			Strings.stringIDs.Add(1040938896U, "ErrorTaskRunningLocationHubOnly");
			Strings.stringIDs.Add(4035449407U, "ErrorInboxRuleDoesNotExist");
			Strings.stringIDs.Add(4258639914U, "CasHealthEasScenarioGetFolder");
			Strings.stringIDs.Add(1239032133U, "InstallUnifiedMessagingRoleDescription");
			Strings.stringIDs.Add(442307290U, "DagTaskFormedCluster");
			Strings.stringIDs.Add(653347817U, "IisTasksApplicationRootValidationProperty");
			Strings.stringIDs.Add(3750163877U, "WillIgnoreNoncriticalErrors");
			Strings.stringIDs.Add(2476064707U, "ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush");
			Strings.stringIDs.Add(3162325577U, "ReplayLagPlayDownReasonLogsInRequiredRange");
			Strings.stringIDs.Add(3648320443U, "InstallMessageTracingClientServiceTask");
			Strings.stringIDs.Add(1343133942U, "FriendlyNameTooLong");
			Strings.stringIDs.Add(1668037270U, "ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns");
			Strings.stringIDs.Add(467864039U, "ErrorConflictCountryOrRegion");
			Strings.stringIDs.Add(3500302124U, "InvalidSenderAddress");
			Strings.stringIDs.Add(3542711257U, "PhoneNumberAllowedOnlyOnE164ConsumerDialplan");
			Strings.stringIDs.Add(1785523337U, "ProgressDeletingSystemFiles");
			Strings.stringIDs.Add(3379767095U, "ErrorMissingManagedFolder");
			Strings.stringIDs.Add(3376852758U, "ConfirmationMessageExportDlpPolicyCollection");
			Strings.stringIDs.Add(4054146957U, "InvalidQueryParameters");
			Strings.stringIDs.Add(4187281280U, "MtrtMessageExpandDetailMessage");
			Strings.stringIDs.Add(2971233211U, "InfoRmsOnlinePrerequisitesChecked");
			Strings.stringIDs.Add(2956386236U, "SetupProgressCreateDefaultMessageClassificationsContainer");
			Strings.stringIDs.Add(489716232U, "InfoGetTemplate");
			Strings.stringIDs.Add(2853286652U, "DlpPolicyModeDisplayName");
			Strings.stringIDs.Add(3230982409U, "WarningXHeaderValueNotSet");
			Strings.stringIDs.Add(711082378U, "GetFederationInformationFailed");
			Strings.stringIDs.Add(534171625U, "UninstallAssistantsServiceTask");
			Strings.stringIDs.Add(1053984119U, "ProgressCopyingPST");
			Strings.stringIDs.Add(863270287U, "UninstallComplianceServiceTask");
			Strings.stringIDs.Add(209725232U, "ConfirmationMessageSetDataClassificationConfig");
			Strings.stringIDs.Add(2620423486U, "WarnBasicAuthInClear");
			Strings.stringIDs.Add(4118091956U, "DisableContentIndexTask");
			Strings.stringIDs.Add(2320733697U, "GatewayRoleDisplayName");
			Strings.stringIDs.Add(4146114679U, "RemoveOrganizationFailRelocationInProgress");
			Strings.stringIDs.Add(3143233303U, "CafeIisWebServiceExtensionsDescription");
			Strings.stringIDs.Add(1889514201U, "NoDefaultTestAccount");
			Strings.stringIDs.Add(2420149034U, "UsageTypeClient");
			Strings.stringIDs.Add(1613721886U, "SetupProgressRecreateCannedRBACRoleAssignments");
			Strings.stringIDs.Add(2695169681U, "AuthenticationMethodNone");
			Strings.stringIDs.Add(2396495091U, "SetupProgressStoppingRpcClientAccessService");
			Strings.stringIDs.Add(3593604775U, "CasHealthScenario");
			Strings.stringIDs.Add(4138813450U, "InstallCafeRoleDescription");
			Strings.stringIDs.Add(1884159739U, "InstallMailboxRoleDescription");
			Strings.stringIDs.Add(2457049403U, "ErrorInvalidValueForPreventCompletion");
			Strings.stringIDs.Add(283239335U, "AboutToAddLocalEtsUSGToLocalAdminGroup");
			Strings.stringIDs.Add(3910668745U, "NotificationsBrokerServiceDisplayName");
			Strings.stringIDs.Add(3846996117U, "MigrationReportIntervalParameterInvalid");
			Strings.stringIDs.Add(1749900570U, "SetupComponentPostSetupFrontendTransport");
			Strings.stringIDs.Add(1058256821U, "ErrorFilterParametersForCloneMode");
			Strings.stringIDs.Add(316441426U, "SetupProgressCreatingDefaultOAB");
			Strings.stringIDs.Add(3104098617U, "DebugEndSetDatabase");
			Strings.stringIDs.Add(1797669216U, "Tentative");
			Strings.stringIDs.Add(3532057202U, "RolePublishingEditor");
			Strings.stringIDs.Add(1916928879U, "NewDagConfigurationPassedChecks");
			Strings.stringIDs.Add(3150409675U, "AutodiscoverSvcGetRemoteEndpoint");
			Strings.stringIDs.Add(4097081969U, "SetupProgressCalendarSharingEnabled");
			Strings.stringIDs.Add(1224187099U, "NoMonitoringErrorsInTestServiceHealthTask");
			Strings.stringIDs.Add(3832339474U, "SetupComponentConfiguringMsFte");
			Strings.stringIDs.Add(4054043088U, "ReservedString3");
			Strings.stringIDs.Add(980249561U, "ErrorBPARunFailed");
			Strings.stringIDs.Add(363803184U, "UMCallAnsweringRuleDescriptionTakeActions");
			Strings.stringIDs.Add(535010283U, "SetupProgressCommonConfiguration");
			Strings.stringIDs.Add(4284518091U, "DatacenterLiveIdPerfCountersComponentDescription");
			Strings.stringIDs.Add(1642342167U, "NewDagPassedChecks");
			Strings.stringIDs.Add(1627739245U, "InstallForwardSyncServiceTask");
			Strings.stringIDs.Add(2839570606U, "SetupProgressStartingMailSubmissionService");
			Strings.stringIDs.Add(642792694U, "SendConnectorProxyEnabledOnEdge");
			Strings.stringIDs.Add(1810462903U, "VerboseNoOabVDirOnLocalServer");
			Strings.stringIDs.Add(243344748U, "NotificationsBrokerServiceDescription");
			Strings.stringIDs.Add(1877930527U, "SetupProgressStoppingMailboxAssistantService");
			Strings.stringIDs.Add(2617553441U, "InfoPreL");
			Strings.stringIDs.Add(750721438U, "ErrorMessageClassModified");
			Strings.stringIDs.Add(2838173073U, "IgnoringSameNextCertificate");
			Strings.stringIDs.Add(2235134294U, "ErrorGroupTypeInvalid");
			Strings.stringIDs.Add(1695373195U, "HealthManagerServiceDisplayName");
			Strings.stringIDs.Add(1050445322U, "DiagnosticsServiceDisplayName");
			Strings.stringIDs.Add(3444014848U, "FileDataMissing");
			Strings.stringIDs.Add(3548459082U, "InstallPop3BeServiceTask");
			Strings.stringIDs.Add(4274815123U, "ServiceHostDescription");
			Strings.stringIDs.Add(1326571555U, "SetupProgressConfigureControlPointConfig");
			Strings.stringIDs.Add(599651768U, "ErrorModerationWithWrongGroupType");
			Strings.stringIDs.Add(4247632026U, "SiteMailboxMembershipSyncEventEnqueued");
			Strings.stringIDs.Add(3389267252U, "ErrorTeamMailboxSharePointServerVersionInCompatible");
			Strings.stringIDs.Add(2147062214U, "AllowVoiceMailAnalysisWarning");
			Strings.stringIDs.Add(4188748229U, "SetupComponentPreSetupClientAccess");
			Strings.stringIDs.Add(1384051878U, "SetupProgressUninstallingMsFteMSI");
			Strings.stringIDs.Add(1962764795U, "ErrorMovingOldExchangeUsersUnsupported");
			Strings.stringIDs.Add(4100221894U, "RemoveADServerMetadataSucceeded");
			Strings.stringIDs.Add(471227616U, "QuarantineMessageTypeTransportRule");
			Strings.stringIDs.Add(3949675526U, "ErrorAssociatedUserMailboxExist");
			Strings.stringIDs.Add(847696334U, "SetupProgressInstallInternetMessageFormat");
			Strings.stringIDs.Add(247279245U, "EditWillUpgradeSearchObject");
			Strings.stringIDs.Add(2438747511U, "SetupComponentUnifiedMessagingGlobalConfig");
			Strings.stringIDs.Add(365229532U, "NoHubInSubscribedSite");
			Strings.stringIDs.Add(1383341120U, "ErrorFailedToLoadIRMConfig");
			Strings.stringIDs.Add(759230387U, "ProgressCopyingCatalog");
			Strings.stringIDs.Add(3237430231U, "MailboxTransportSubmissionServiceDisplayName");
			Strings.stringIDs.Add(3455360282U, "ImapInternalServerSettings");
			Strings.stringIDs.Add(4109012977U, "DatabaseSeedStatusLabelWrittenPerSec");
			Strings.stringIDs.Add(2526768594U, "NullUserError");
			Strings.stringIDs.Add(2128735504U, "ConfirmationMessageSetAutodiscoverVirtualDirectory");
			Strings.stringIDs.Add(1315910557U, "ErrorAuthSameAsCurrent");
			Strings.stringIDs.Add(407003399U, "VerboseHasWriteAccessToExchangeServers");
			Strings.stringIDs.Add(3070362658U, "ActiveSyncMetabaseIsapiInstallFailure");
			Strings.stringIDs.Add(3366786089U, "NewSendConnectorIncorrectUsageParameters");
			Strings.stringIDs.Add(3473716705U, "ConfirmationMessageImportDlpPolicyTemplate");
			Strings.stringIDs.Add(2747221151U, "ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix");
			Strings.stringIDs.Add(1656912255U, "SetupProgressImportingAdamSchema");
			Strings.stringIDs.Add(2143081262U, "SupportedToolsCannotReadFile");
			Strings.stringIDs.Add(3471145417U, "AuthModuleFilterMetabaseIsapiInstallFailure");
			Strings.stringIDs.Add(2163423328U, "HeaderValue");
			Strings.stringIDs.Add(2834035896U, "NonE14ServerError");
			Strings.stringIDs.Add(1655030876U, "ClientAccessServiceControlComponentDescription");
			Strings.stringIDs.Add(3033688531U, "GatewayPrereqCheck");
			Strings.stringIDs.Add(666293858U, "CannotSetHubTransportServerOnAdam");
			Strings.stringIDs.Add(4207425180U, "MigrationCompleteAfterIncorrectMigrationType");
			Strings.stringIDs.Add(3123642639U, "CasHealthOwaReturnedErrorPageForAuth");
			Strings.stringIDs.Add(973517949U, "LocalDomainNotFoundException");
			Strings.stringIDs.Add(1104443180U, "Info_MessageItemHasBeenUpdated");
			Strings.stringIDs.Add(1949550598U, "SetupProgressOwaEnabled");
			Strings.stringIDs.Add(1612924637U, "ErrorManageDelegation1ProofDomainOwnership");
			Strings.stringIDs.Add(493674830U, "ValidateSecretFailure");
			Strings.stringIDs.Add(3600064844U, "VerboseResetADServerSettingsSucceed");
			Strings.stringIDs.Add(2112765551U, "SetupProgressSkipToUAndParentalControlCheckEnabled");
			Strings.stringIDs.Add(2062169902U, "CountingFilesToCopy");
			Strings.stringIDs.Add(1429918150U, "AnonymousSharingEnabledWarning");
			Strings.stringIDs.Add(3639980884U, "CalendarLogsNotFound");
			Strings.stringIDs.Add(3048237641U, "MSARPSServiceDescription");
			Strings.stringIDs.Add(275657530U, "OwaMetabaseIsapiInstallFailure");
			Strings.stringIDs.Add(4106677824U, "MtrtMessageBadmail");
			Strings.stringIDs.Add(348002949U, "ProgressDeletingCopyLogFiles");
			Strings.stringIDs.Add(2872629304U, "MessageTypePermissionControlled");
			Strings.stringIDs.Add(2479928670U, "InstallTransportSyncManagerServiceTask");
			Strings.stringIDs.Add(1686231910U, "ErrorUnableToIdentifyTheUser");
			Strings.stringIDs.Add(2655847911U, "CasHealthEasGetItemEstimate");
			Strings.stringIDs.Add(4118655296U, "ErrorFailedExtractTextForFingerprint");
			Strings.stringIDs.Add(2734769737U, "ComInteropDllNotFound");
			Strings.stringIDs.Add(3029203465U, "SetupProgressCreateActiveSyncMailboxPolicyContainers");
			Strings.stringIDs.Add(1660006804U, "Pattern");
			Strings.stringIDs.Add(3317013550U, "ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod");
			Strings.stringIDs.Add(3640979510U, "SetupProgressCreateNewMailboxPlanObject");
			Strings.stringIDs.Add(2346524817U, "ReplicationCheckResultWarning");
			Strings.stringIDs.Add(3926581147U, "SetupProgressCreateJournalingRuleCollection");
			Strings.stringIDs.Add(3844154567U, "ContentIndexingServiceNotInstalled");
			Strings.stringIDs.Add(3873444299U, "ErrorMServeConfigurationIsBroken");
			Strings.stringIDs.Add(3678435224U, "ConfirmationMessageTestIntraOrganizationConnector");
			Strings.stringIDs.Add(1310542130U, "CasHealthOwaLoginWithNoCredentials");
			Strings.stringIDs.Add(1919389628U, "MonitoringServiceDisplayName");
			Strings.stringIDs.Add(3397451545U, "CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab");
			Strings.stringIDs.Add(539901569U, "RegSvr32Failed");
			Strings.stringIDs.Add(3617746388U, "DeviceWipeSucceeded");
			Strings.stringIDs.Add(1317139899U, "ErrorAtleastOneOfCSVInput");
			Strings.stringIDs.Add(4040564888U, "QuarantineMessageTypeSpam");
			Strings.stringIDs.Add(4143535486U, "SetupProgressStoppingMailSubmissionService");
			Strings.stringIDs.Add(3730091040U, "ErrorInvalidOrganization");
			Strings.stringIDs.Add(1440702907U, "JournalingReportNdrToNotSet");
			Strings.stringIDs.Add(204895011U, "ProgressStatusInProgress");
			Strings.stringIDs.Add(1809082251U, "ConfigurationContainerNotFoundException");
			Strings.stringIDs.Add(3807329645U, "SmtpInternalServerSettings");
			Strings.stringIDs.Add(2691134897U, "MalboxFolderRightsCreateSubfolders");
			Strings.stringIDs.Add(641425147U, "ErrorFailedToManagedFoldersInMailbox");
			Strings.stringIDs.Add(3675089712U, "OpenServiceFailed");
			Strings.stringIDs.Add(396068831U, "ErrorNameNotFQDN");
			Strings.stringIDs.Add(1898390588U, "SetupComponentMonitoringCorrelation");
			Strings.stringIDs.Add(3427352430U, "SetupProgressCreateDatabaseFolders");
			Strings.stringIDs.Add(4175925886U, "CannotRunOnSubscribedEdge");
			Strings.stringIDs.Add(1225987784U, "NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty");
			Strings.stringIDs.Add(2550967442U, "StatusMessageUpdatePublicFolderMailboxCompleted");
			Strings.stringIDs.Add(2800354258U, "DatabaseSeedStatusLabelReadPerSec");
			Strings.stringIDs.Add(2123483125U, "ErrorInvalidDateRangeException");
			Strings.stringIDs.Add(2304297729U, "ErrorNoTrustConfigured");
			Strings.stringIDs.Add(4174308722U, "ErrorEnableRoleGroup");
			Strings.stringIDs.Add(1554948996U, "MapiTransactionFailedAgainstServerPrefix");
			Strings.stringIDs.Add(1046590614U, "SetupProgressCreateFederationTrusts");
			Strings.stringIDs.Add(2243519812U, "CasHealthOwaPingRequestSucceeded");
			Strings.stringIDs.Add(1705322316U, "ConfirmationOnDisablingInternalLicensing");
			Strings.stringIDs.Add(1589644643U, "GetDagHealthInfoNoResultsWarning");
			Strings.stringIDs.Add(1232854071U, "InvalidTransportRoleOnReceiveConnector");
			Strings.stringIDs.Add(585138347U, "UninstallImap4ServiceTask");
			Strings.stringIDs.Add(2120620876U, "InstallNotificationsBrokerServiceTask");
			Strings.stringIDs.Add(942070657U, "ErrorDlpPolicyCollectionCannotContainTransportRules");
			Strings.stringIDs.Add(4048010479U, "DelegateRoleTypePublicFolderAdmin");
			Strings.stringIDs.Add(4078764843U, "SetupProgressAutoForwardEnabled");
			Strings.stringIDs.Add(690809061U, "ConfirmationMessageOverrideContentMailbox");
			Strings.stringIDs.Add(1521128314U, "CreateOwaForEcpWarning");
			Strings.stringIDs.Add(1726782365U, "ContinueMountWithDataLoss");
			Strings.stringIDs.Add(61328153U, "SetupComponentConfigPermissionsBridgehead");
			Strings.stringIDs.Add(4164791858U, "MapiTransactionDiagnosticStoreServiceIsNotRunning");
			Strings.stringIDs.Add(124932322U, "ErrorMoreThanOneDefaultMailTipTranslationSpecified");
			Strings.stringIDs.Add(3396334448U, "CompleteOrganizationUpgradeDescription");
			Strings.stringIDs.Add(359340039U, "ErrorTenantOrgInUnexpectedState");
			Strings.stringIDs.Add(2355449289U, "ConversationsMailboxAlreadyEnabled");
			Strings.stringIDs.Add(4136277918U, "ImportE14TransportRuleCollectionInDCError");
			Strings.stringIDs.Add(2041595767U, "MessageTypeAutoForward");
			Strings.stringIDs.Add(389917399U, "CasHealthOwaHttpUnknownLogoffError");
			Strings.stringIDs.Add(2589525087U, "CasHealthEasScenarioSyncFolderItems");
			Strings.stringIDs.Add(2148824781U, "FrontEndTransportServiceDisplayName");
			Strings.stringIDs.Add(1935468563U, "ComponentTaskSection");
			Strings.stringIDs.Add(3203686041U, "ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope");
			Strings.stringIDs.Add(1702097235U, "ConfirmationMessageExportTransportRuleCollection");
			Strings.stringIDs.Add(3300374799U, "ErrorRuleMissingPredicate");
			Strings.stringIDs.Add(972482907U, "ErrorRemoteLegacyWithE15NotAllowed");
			Strings.stringIDs.Add(2764082182U, "InstallMailboxTransportSubmissionServiceTask");
			Strings.stringIDs.Add(3420250947U, "ErrorOrganizationParameterRequired");
			Strings.stringIDs.Add(3608765512U, "ErrorDateRangeInvalid");
			Strings.stringIDs.Add(3282443379U, "ExchangeStreamingOpticsDescription");
			Strings.stringIDs.Add(2762887375U, "ErrorDepartRestrictionInvalid");
			Strings.stringIDs.Add(2632441174U, "LocalSiteNameIsEmpty");
			Strings.stringIDs.Add(2084274330U, "InvalidIncidentReportContent");
			Strings.stringIDs.Add(885090528U, "CasHealthHttpResponseHeaders");
			Strings.stringIDs.Add(157257905U, "SetupProgressLicenseEnforcement");
			Strings.stringIDs.Add(3161117751U, "TenantNotificationNoNotificationRecipientsSpecified");
			Strings.stringIDs.Add(1552735353U, "TestSearchTask");
			Strings.stringIDs.Add(4213714110U, "SetupProgressUMFaxEnabled");
			Strings.stringIDs.Add(3012202611U, "ErrorMultipleDefaultRetentionPolicy");
			Strings.stringIDs.Add(2018678440U, "SetupProgressCreateOutOfTheBoxReducedMrmTags");
			Strings.stringIDs.Add(2561639227U, "ComplianceSearchCreateTaskActivity");
			Strings.stringIDs.Add(3087351795U, "SupportedToolsCannotFindFile");
			Strings.stringIDs.Add(1744727734U, "LegacyRegistryMarkersComponentDescription");
			Strings.stringIDs.Add(1946909737U, "NoMailboxAssociationIdentityProvided");
			Strings.stringIDs.Add(3215501240U, "VerboseFixingEmailAddressPolicyFilterMetadata");
			Strings.stringIDs.Add(3162495226U, "ADAttributeOtherPhoneNumber");
			Strings.stringIDs.Add(346749009U, "AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups");
			Strings.stringIDs.Add(1230533634U, "NoPrivateKeyInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(2929278810U, "CasHealthCasServerNotFound");
			Strings.stringIDs.Add(803789992U, "CasHealthCalendarShortName");
			Strings.stringIDs.Add(924598646U, "ErrorCannotMovePublicFoldersWithNullEntryId");
			Strings.stringIDs.Add(2473076826U, "ChangePasswordFailed");
			Strings.stringIDs.Add(282134995U, "CasHealthOwaCredentialFailure");
			Strings.stringIDs.Add(3365945163U, "ErrorNetIDWithoutBypassWLIDInSet");
			Strings.stringIDs.Add(3228324102U, "PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode");
			Strings.stringIDs.Add(1436616364U, "UninstallOldMailSubmissionServiceTask");
			Strings.stringIDs.Add(1537384713U, "DefaultAllContacts");
			Strings.stringIDs.Add(323037630U, "UsingMonitoringMailboxAuthenticationCredentials");
			Strings.stringIDs.Add(1134431673U, "IntegratedVDirNotSupported");
			Strings.stringIDs.Add(2381551853U, "SetupProgressCreateRBACPoliciesContainer");
			Strings.stringIDs.Add(1328045433U, "ProtectedServiceHostDescription");
			Strings.stringIDs.Add(476702017U, "ErrorTemplateAndTemplateDataCannotBothBeDefined");
			Strings.stringIDs.Add(3290510799U, "SetupComponentMidFileCopyMonitoring");
			Strings.stringIDs.Add(195589900U, "SetupProgressStartingCredentialService");
			Strings.stringIDs.Add(2460972809U, "CasHealthEasSyncOne");
			Strings.stringIDs.Add(2760740739U, "MachinePingScenario");
			Strings.stringIDs.Add(1485407849U, "ProcessUtilizationManagerServiceDescription");
			Strings.stringIDs.Add(912948631U, "TenantAlreadyHasMigrationPending");
			Strings.stringIDs.Add(1702242844U, "OwaMetabaseStopBinFilteringFailure");
			Strings.stringIDs.Add(878905098U, "CasHealthEasScenarioPing");
			Strings.stringIDs.Add(1340013018U, "CreateEcpForOwaWarning");
			Strings.stringIDs.Add(3690425457U, "ConfirmationMessageTestEdgeSyncMserv");
			Strings.stringIDs.Add(3992993999U, "ErrorCannotRemovePublicFolderMailboxWithFolders");
			Strings.stringIDs.Add(1553189934U, "UMCallAnsweringRuleLeaveVoiceMessage");
			Strings.stringIDs.Add(2393557138U, "MicrosoftExchangeContainerNotFoundException");
			Strings.stringIDs.Add(2953927220U, "CannotFindSubscriptionSite");
			Strings.stringIDs.Add(1143552818U, "CasHealtRemotePowerShellOpenRunspaceSucceeded");
			Strings.stringIDs.Add(528083274U, "CasHealthEasScenarioDeleteItem");
			Strings.stringIDs.Add(1564792125U, "ConfirmationMessageInstallSystemMessageClassification");
			Strings.stringIDs.Add(3656239515U, "CasHealthWebAppLiveIdStart");
			Strings.stringIDs.Add(351759919U, "SetupProgressMailUserCountQuota");
			Strings.stringIDs.Add(1881041876U, "PhoneNumberIsNotE164");
			Strings.stringIDs.Add(724161223U, "AssistantsServiceDisplayName");
			Strings.stringIDs.Add(1783998077U, "ErrorRmsOnlineAuthenticationCertificateNotFound");
			Strings.stringIDs.Add(2311491823U, "WordIsWhiteSpace");
			Strings.stringIDs.Add(2768218355U, "ErrorCannotSetJournalingReportNdrTo");
			Strings.stringIDs.Add(4195978929U, "SetupProgressOwaDelegateAccessEnabled");
			Strings.stringIDs.Add(1342738960U, "RMSServerIsNotConfigured");
			Strings.stringIDs.Add(2086103397U, "UMNotAvailableForUserInTargetForest");
			Strings.stringIDs.Add(2418812611U, "SetServiceInstanceMapResultCodeUnspecifiedError");
			Strings.stringIDs.Add(3321302356U, "SetupComponentProvisioningFeatures");
			Strings.stringIDs.Add(4172450099U, "CasHealthOwaTrustAnyCertificate");
			Strings.stringIDs.Add(886790004U, "CasHealthEasScenarioOptions");
			Strings.stringIDs.Add(677161662U, "ErrorCannotDeleteGlobalThrottlingPolicy");
			Strings.stringIDs.Add(853257855U, "NewMailboxSearchActivity");
			Strings.stringIDs.Add(1386608555U, "JournalingParameterErrorGccWithScope");
			Strings.stringIDs.Add(2743468428U, "CasHealthOwaNoAuthChallenge");
			Strings.stringIDs.Add(3256293617U, "InstallMailboxReplicationServiceTask");
			Strings.stringIDs.Add(3832614491U, "ExportAutoDiscoverSameForest");
			Strings.stringIDs.Add(2593828216U, "JournalRuleCorrupt");
			Strings.stringIDs.Add(2605454650U, "CopyStatusSuspended");
			Strings.stringIDs.Add(3374660851U, "BestEffortNotAllowedInServerModeException");
			Strings.stringIDs.Add(2345003377U, "RemoveProvisionedServerDescription");
			Strings.stringIDs.Add(329310285U, "ErrorAuthSetNewEffectDate");
			Strings.stringIDs.Add(494398490U, "VerboseResolvingCustomRecipientWriteScope");
			Strings.stringIDs.Add(1045130098U, "UninstallTranscodingServiceEx");
			Strings.stringIDs.Add(21508778U, "ConfirmationMessageRemoveReportingVirtualDirectory");
			Strings.stringIDs.Add(934995448U, "MtrtMessageSpamAdditional");
			Strings.stringIDs.Add(1727429145U, "ErrorProvisioningReconciliationCookieNotSet");
			Strings.stringIDs.Add(2069264155U, "ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox");
			Strings.stringIDs.Add(864818849U, "GetCalendarDiagnosticLogNoCleanGoidErrorMessage");
			Strings.stringIDs.Add(1377545174U, "ADAttributeCustomAttribute8");
			Strings.stringIDs.Add(1646617707U, "ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch");
			Strings.stringIDs.Add(3017732590U, "SetupComponentConfiguringMDB");
			Strings.stringIDs.Add(815548093U, "ProgressStopUpdateAD");
			Strings.stringIDs.Add(1861340610U, "Warning");
			Strings.stringIDs.Add(494686544U, "ADAttributeManager");
			Strings.stringIDs.Add(2844240268U, "PageCookieInterruptedException");
			Strings.stringIDs.Add(3669527025U, "DatacenterClientAccessPerfCountersComponentDescription");
			Strings.stringIDs.Add(210030056U, "IndividualRecipient");
			Strings.stringIDs.Add(4182624490U, "MalboxFolderRightsCreateItems");
			Strings.stringIDs.Add(4233384325U, "RuleStateDisabled");
			Strings.stringIDs.Add(1187378442U, "MalboxFolderRightsReadItems");
			Strings.stringIDs.Add(4018390487U, "SetupProgressSyncAccountsMaxAccountsQuota");
			Strings.stringIDs.Add(363043027U, "DatabaseSeedStatusLabelWritten");
			Strings.stringIDs.Add(1615913674U, "ErrorSetPasswordForLogonDisabledAccount");
			Strings.stringIDs.Add(303389116U, "MonitoringServiceCheckDesc");
			Strings.stringIDs.Add(2694075755U, "SiteParameterRequired");
			Strings.stringIDs.Add(2246430441U, "IisTasksVirtualDirectoryValidationProperty");
			Strings.stringIDs.Add(3597664875U, "NullCurrentOrganizationIdException");
			Strings.stringIDs.Add(769488995U, "ClassificationRuleCollectionIllegalScopedSetOobOperation");
			Strings.stringIDs.Add(3042237373U, "InvalidSmtpAddress");
			Strings.stringIDs.Add(4148731813U, "TestOrganizationRelationshipError");
			Strings.stringIDs.Add(979959660U, "SetupProgressStartingContentIndexingService");
			Strings.stringIDs.Add(308457205U, "CasHealthOwaLogonError");
			Strings.stringIDs.Add(1773264523U, "Error_KnowniPhoneIssues");
			Strings.stringIDs.Add(2137414559U, "OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled");
			Strings.stringIDs.Add(2932389186U, "ClientAccessExchangeCertificateComponentDescription");
			Strings.stringIDs.Add(1040599336U, "SenderAndRmsOnlineParametersCannotBeCombined");
			Strings.stringIDs.Add(1938975541U, "TopologyServiceDisplayName");
			Strings.stringIDs.Add(1618002793U, "ErrorChangeConfigurationNotSupported");
			Strings.stringIDs.Add(2467206592U, "InterceptorErrorConditionHeaderValueMissing");
			Strings.stringIDs.Add(1523783911U, "VerboseCheckIISConfiguration");
			Strings.stringIDs.Add(3024861528U, "SetupComponentADSchema");
			Strings.stringIDs.Add(4107219633U, "InstallingIMAP4Service");
			Strings.stringIDs.Add(2128405927U, "MSExchangeMGMTDisplayName");
			Strings.stringIDs.Add(2891009079U, "AdminAuditLogSearchNegativeResultSize");
			Strings.stringIDs.Add(999144299U, "ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite");
			Strings.stringIDs.Add(2103941010U, "SetupProgressMailTipsEnabled");
			Strings.stringIDs.Add(1373187244U, "CopyStatusInitializing");
			Strings.stringIDs.Add(3560770236U, "ErrorCannotSetPowerShellMaxTenantRunspaces");
			Strings.stringIDs.Add(910317825U, "StartADTopologyService");
			Strings.stringIDs.Add(1149547458U, "InvalidRuleSearchFilterMissingElements");
			Strings.stringIDs.Add(2563311167U, "SpecifiedOUNotFound");
			Strings.stringIDs.Add(3938326230U, "MtrtAddBlindCopyToRecipient");
			Strings.stringIDs.Add(67550991U, "NoSLCCertChainInImportedTrustedPublishingDomain");
			Strings.stringIDs.Add(529637304U, "SetupProgressStopHealthManagerService");
			Strings.stringIDs.Add(1612938185U, "ErrorPowerShellCorrupted");
			Strings.stringIDs.Add(1619534902U, "ErrorTextMessageInsufficientPermission");
			Strings.stringIDs.Add(2287537271U, "DlpPolicyDescriptionDisplayName");
			Strings.stringIDs.Add(514153900U, "WarningInboxRuleOutlookBlobExists");
			Strings.stringIDs.Add(3587729804U, "RmsUrlsCannotBeSet");
			Strings.stringIDs.Add(247906216U, "DebugEndSaveDataObject");
			Strings.stringIDs.Add(243743017U, "ConfirmationMessageStartEdgeSynchronization");
			Strings.stringIDs.Add(2031953882U, "VerboseResolvingSecurityPrinciplals");
			Strings.stringIDs.Add(2199141127U, "WarningLegacyExchangeServerForMailContact");
			Strings.stringIDs.Add(3687261608U, "ErrorTemplatesMayNotContainRulesWithImmutableIds");
			Strings.stringIDs.Add(1163984313U, "CertificateStatusRevoked");
			Strings.stringIDs.Add(4269203724U, "CasHealthOwaPingError");
			Strings.stringIDs.Add(4054043082U, "ReservedString5");
			Strings.stringIDs.Add(450966693U, "WarningDatabaseScopeCreationApplicableOnlyInSP");
			Strings.stringIDs.Add(3203524443U, "ServiceNameEws");
			Strings.stringIDs.Add(645544640U, "MailboxAssociationMailboxNotFound");
			Strings.stringIDs.Add(1343310908U, "SetupComponentMidFileCopyBridgehead");
			Strings.stringIDs.Add(592390813U, "NodePausedCheckDesc");
			Strings.stringIDs.Add(2811670542U, "AllLinkedGroupMembers");
			Strings.stringIDs.Add(1360134828U, "SharedCacheServiceDescription");
			Strings.stringIDs.Add(3237220889U, "InstallKeynoteConnectorServiceTask");
			Strings.stringIDs.Add(1604244669U, "InvalidIncidentReportOriginalMail");
			Strings.stringIDs.Add(2228796246U, "ErrorConflictingMailboxes");
			Strings.stringIDs.Add(1366760397U, "RemoveVirtualDirectoryCouldNotAccessWebServicesRootException");
			Strings.stringIDs.Add(4051542195U, "ErrorInvalidAuthServerTypeValue");
			Strings.stringIDs.Add(4002590677U, "ErrorCorruptRuleAction");
			Strings.stringIDs.Add(1276593436U, "ErrorRunspaceServerSettingsNotFound");
			Strings.stringIDs.Add(4278888973U, "ClassificationRuleCollectionOffendingListSeparator");
			Strings.stringIDs.Add(224359057U, "ScenarioEwsConvertId");
			Strings.stringIDs.Add(25431416U, "ProgressCopyingCopyLogFiles");
			Strings.stringIDs.Add(799867258U, "DisasterRecoveryAdminToolsRoleDescription");
			Strings.stringIDs.Add(3785983711U, "ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified");
			Strings.stringIDs.Add(1836636963U, "ErrorBPAMergeFileLoad");
			Strings.stringIDs.Add(2431707337U, "IISNotInstalledException");
			Strings.stringIDs.Add(1935215586U, "SetupComponentPreSetupAdminTools");
			Strings.stringIDs.Add(909539378U, "ErrorCannotDetermineRequester");
			Strings.stringIDs.Add(2655838320U, "VerboseFixingEmailAddressPoliciesInNativeMode");
			Strings.stringIDs.Add(937945415U, "DebugEndUpnUniquenessCheck");
			Strings.stringIDs.Add(2687794018U, "InfoPLCreated");
			Strings.stringIDs.Add(2580842796U, "SetupProgressRemoveServerObject");
			Strings.stringIDs.Add(1069636970U, "UnknownFailureFromCiRpcServer");
			Strings.stringIDs.Add(2674744913U, "WarningActionWillOnlyBeAppliedIfMessageIsNotRejected");
			Strings.stringIDs.Add(2996271904U, "CookieNotUpdated");
			Strings.stringIDs.Add(1484844461U, "ProcessingAceActivity");
			Strings.stringIDs.Add(2105969147U, "CasHealthOwaFbaAuthTypeExpected");
			Strings.stringIDs.Add(1356174462U, "ConfirmationMessageSendMapiSubmitSystemProbe");
			Strings.stringIDs.Add(3985182496U, "ConfirmationMessageStartELCAssistant");
			Strings.stringIDs.Add(1214391541U, "MobileDeviceLogNoLogsExist");
			Strings.stringIDs.Add(2991967653U, "ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod");
			Strings.stringIDs.Add(3696548465U, "MtrtEventExpand");
			Strings.stringIDs.Add(159616798U, "EmptyTargetMailbox");
			Strings.stringIDs.Add(1619798746U, "ErrorDistributionGroupNameTooLong");
			Strings.stringIDs.Add(2654720989U, "SetupProgressCreateOutOfTheBoxDefaultMRMTags");
			Strings.stringIDs.Add(4249074819U, "ErrorTargetMailboxDatabaseVersionUnsupported");
			Strings.stringIDs.Add(1223504853U, "SetupComponentConfigurationFrontendTransport");
			Strings.stringIDs.Add(2718544146U, "RepairUrgencyHigh");
			Strings.stringIDs.Add(2897887400U, "SetupProgressUpdatingResourcePropertySchema");
			Strings.stringIDs.Add(4269635969U, "DefaultAllDistributionLists");
			Strings.stringIDs.Add(811249870U, "SetupProgressCreateGlobalAutoDiscoverContainer");
			Strings.stringIDs.Add(2193598558U, "MigrationCompleteAfterScheduledBatchesOnly");
			Strings.stringIDs.Add(3992939044U, "UMMailboxPolicySetAllowFaxError");
			Strings.stringIDs.Add(1946128370U, "AttachmentFilterNoExceptionConnector");
			Strings.stringIDs.Add(3115336137U, "ChangePasswordLockedOut");
			Strings.stringIDs.Add(4017283327U, "SetupProgressCreateWLMContainer");
			Strings.stringIDs.Add(44339415U, "GlobalLocatorServiceResultFailure");
			Strings.stringIDs.Add(2231509304U, "CannotRunForeignConnectorTaskOnEdge");
			Strings.stringIDs.Add(4121265404U, "CasHealthOwaAuthMethodHeader");
			Strings.stringIDs.Add(3113324051U, "TestSearchCheckServer");
			Strings.stringIDs.Add(1381834853U, "SetupProgressUpdateTenantMailboxes");
			Strings.stringIDs.Add(3755531083U, "ErrorTrustAlreadyDefined");
			Strings.stringIDs.Add(3285185239U, "ConfirmationMessageSetOrganizationConfig");
			Strings.stringIDs.Add(3332580362U, "RequiredIdentityInformationNotSet");
			Strings.stringIDs.Add(3365079287U, "ErrorSetOWAMailboxPolicyToE12User");
			Strings.stringIDs.Add(1290509263U, "SetupProgressRemovingPublicFolderDatabase");
			Strings.stringIDs.Add(2642450701U, "ProgressCopyingLogFiles");
			Strings.stringIDs.Add(1381261690U, "SetupComponentProvisionServer");
			Strings.stringIDs.Add(4012071978U, "NeedEitherAssemblyPathOrValidName");
			Strings.stringIDs.Add(2086818621U, "ErrorFindCertificateOnServerObject");
			Strings.stringIDs.Add(1460008623U, "ErrorProvisioningReconciliationConfigNotFound");
			Strings.stringIDs.Add(3846405471U, "SetupProgressStopEdgeTransportService");
			Strings.stringIDs.Add(3252841297U, "DebugStartInAcceptedDomainCheck");
			Strings.stringIDs.Add(1036372211U, "UninstallMailSubmissionServiceTask");
			Strings.stringIDs.Add(1475578476U, "InstallClientAccessIisWebServiceExtensions");
			Strings.stringIDs.Add(441773451U, "CouldNotLocateAnyTeamMailbox");
			Strings.stringIDs.Add(3260271077U, "CertificateStatusUnknown");
			Strings.stringIDs.Add(1318485394U, "VariablesSection");
			Strings.stringIDs.Add(3469456862U, "InfoCheckingRmsOnlineAuthenticationCertificate");
			Strings.stringIDs.Add(2835213035U, "MtrtNotifySender");
			Strings.stringIDs.Add(751112921U, "TransportSettingsNotFound");
			Strings.stringIDs.Add(480800478U, "SetupProgressCreateRBACRoleAssignments");
			Strings.stringIDs.Add(3662015180U, "GetContentIndexTask");
			Strings.stringIDs.Add(950974516U, "BackSyncFailedToConvertSyncObjectToDirectoryObject");
			Strings.stringIDs.Add(3850073087U, "ADAttributePagerNumber");
			Strings.stringIDs.Add(2398741750U, "SetupProgressEnableSelfManagement");
			Strings.stringIDs.Add(4137481806U, "ADAttributePhoneNumber");
			Strings.stringIDs.Add(771734573U, "TenantNotificationVerboseNotSendingEmailDailyCap");
			Strings.stringIDs.Add(2026505547U, "DagNetworkAllDisabledWarning");
			Strings.stringIDs.Add(1120293486U, "ContentIndexServiceDescription");
			Strings.stringIDs.Add(3538510592U, "SetupProgressGALSyncEnabled");
			Strings.stringIDs.Add(3240052672U, "ErrorNameNotSet");
			Strings.stringIDs.Add(2114850440U, "StartingMomService");
			Strings.stringIDs.Add(1987393790U, "SetupProgressRecipientMailSubmissionRateQuota");
			Strings.stringIDs.Add(2419166909U, "MalboxFolderRightsEditOwnedItems");
			Strings.stringIDs.Add(3072162476U, "SetupPerimeterSafelistingUIMode");
			Strings.stringIDs.Add(1993693877U, "VerboseSearchingAssigneeInConfigNC");
			Strings.stringIDs.Add(2235869021U, "AllForeignAccounts");
			Strings.stringIDs.Add(1920148531U, "CasHealthEasSyncZeroScenarioDescription");
			Strings.stringIDs.Add(4224229383U, "SetupProgressMaxSendTransportQuota");
			Strings.stringIDs.Add(2270748102U, "FfoWebServicePreConfigComponentDescription");
			Strings.stringIDs.Add(3381713806U, "DisasterRecoveryUnifiedMessagingRoleDescription");
			Strings.stringIDs.Add(2423295274U, "SetupProgressActiveSyncEnabled");
			Strings.stringIDs.Add(1897854438U, "ErrorInvalidAuditOwnerOperationType");
			Strings.stringIDs.Add(4178137973U, "ActiveDirectoryConnectivityTransactionsAllSucceeded");
			Strings.stringIDs.Add(3378630967U, "DefaultPublicFolders");
			Strings.stringIDs.Add(2849913626U, "SetupProgressCreateAutoGroupRetentionPolicyTag");
			Strings.stringIDs.Add(1489480989U, "MoveStatusUnknown");
			Strings.stringIDs.Add(2569295017U, "CasHealthOwaLongName");
			Strings.stringIDs.Add(2496242404U, "CasHealthEcpShortName");
			Strings.stringIDs.Add(1208301054U, "CopyStatusMounting");
			Strings.stringIDs.Add(2846914028U, "CopyOperation");
			Strings.stringIDs.Add(3552826330U, "FfoWebServiceProvisionComponentDescription");
			Strings.stringIDs.Add(1984115551U, "ErrorConflictResourceCustom");
			Strings.stringIDs.Add(3025732470U, "InstallAssistantsServiceTask");
			Strings.stringIDs.Add(1810706551U, "SetupProgressCreateOWAMailboxPolicyContainers");
			Strings.stringIDs.Add(2768464912U, "KeynoteConnectorServiceDisplayName");
			Strings.stringIDs.Add(1377545163U, "ADAttributeCustomAttribute5");
			Strings.stringIDs.Add(1377545167U, "ADAttributeCustomAttribute1");
			Strings.stringIDs.Add(1549280152U, "ErrorFilterParametersIntraOrg");
			Strings.stringIDs.Add(3721623660U, "CasHealthWebAppLiveIdEnd");
			Strings.stringIDs.Add(2747907193U, "WebServiceRoleEntryNotSupportParametersAndSnapin");
			Strings.stringIDs.Add(1151252861U, "MtrtEventFail");
			Strings.stringIDs.Add(1767955380U, "WarningMessageSizeRestrictionOutOfSync");
			Strings.stringIDs.Add(1355366283U, "MigrationCSVNotAllowed");
			Strings.stringIDs.Add(3372077054U, "NeedIisRestartForChangingECPFeatureWarning");
			Strings.stringIDs.Add(4163377893U, "ClassificationRuleCollectionUnexpectedContents");
			Strings.stringIDs.Add(2193176105U, "BPADownloadingUpdates");
			Strings.stringIDs.Add(1329891945U, "FoundMultipleObjectById");
			Strings.stringIDs.Add(2783321364U, "CasHealthSpecifyMailboxForResetCredentials");
			Strings.stringIDs.Add(706028660U, "SetupComponentPostSetupCafe");
			Strings.stringIDs.Add(475854284U, "ConfirmationMessageSetIPAllowListProvidersConfig");
			Strings.stringIDs.Add(863845264U, "SetupComponentConfiguringRpcClientAccessService");
			Strings.stringIDs.Add(101589004U, "ErrorAddGroupMemberCrossTenant");
			Strings.stringIDs.Add(4151753170U, "ErrorBPAOutputConflict");
			Strings.stringIDs.Add(1642010523U, "ErrorRemoteMailboxImportNeedRemoteProxy");
			Strings.stringIDs.Add(1209054947U, "ServicesComponentDescription");
			Strings.stringIDs.Add(2393820385U, "StartingOnePointService");
			Strings.stringIDs.Add(2762012249U, "ErrorCannotResumeIfNotSuspended");
			Strings.stringIDs.Add(2462309444U, "SetupProgressRemovingMailboxDatabase");
			Strings.stringIDs.Add(531835631U, "MobileDeviceLogNotRetrieved");
			Strings.stringIDs.Add(3816576111U, "DeletionAndUnsearchableNotPermitted");
			Strings.stringIDs.Add(1467203807U, "InboxRuleDescriptionOr");
			Strings.stringIDs.Add(1012815040U, "MonitoringCorrelationServiceDisplayName");
			Strings.stringIDs.Add(824920009U, "ProgressEmailAddressPolicyPreparingPriority");
			Strings.stringIDs.Add(2811275637U, "MtrtApplyHtmlDisclaimer");
			Strings.stringIDs.Add(2654165210U, "UnableToConnect");
			Strings.stringIDs.Add(1177180156U, "UninstallExchangeOrganizationDescription");
			Strings.stringIDs.Add(302716089U, "CasHealthScenarioDescription");
			Strings.stringIDs.Add(1241635965U, "DualWriteSaveWarningMessage");
			Strings.stringIDs.Add(3223564936U, "ErrorCannotChangeName");
			Strings.stringIDs.Add(2672737351U, "SetupComponentPostSetupAdminTools");
			Strings.stringIDs.Add(1630998932U, "MtrtAddToRecipient");
			Strings.stringIDs.Add(624509981U, "NeedToSpecifyADSiteObject");
			Strings.stringIDs.Add(3852698972U, "ErrorConfigurationOnly");
			Strings.stringIDs.Add(1486813282U, "DatacenterSetupComponentPerfCountersBridgehead");
			Strings.stringIDs.Add(915562217U, "FBAServiceDisplayName");
			Strings.stringIDs.Add(2731341333U, "TransitionInfoLabelLastSuccessTransition");
			Strings.stringIDs.Add(1752948545U, "ErrorPrimarySmtpAndWindowsAddressDifferent");
			Strings.stringIDs.Add(1221524445U, "ErrorWriteOpOnDehydratedTenant");
			Strings.stringIDs.Add(3097067489U, "ErrorRmsOnlineAuthenticationCertificateNotYetValid");
			Strings.stringIDs.Add(4205247815U, "UninstallWatchDogServiceTask");
			Strings.stringIDs.Add(266841953U, "ErrorSpecifyAutoMappingOnNonFullAccess");
			Strings.stringIDs.Add(639692992U, "ClientAccessPrereqCheck");
			Strings.stringIDs.Add(1253954375U, "ConfirmationMessageAuthSettingOutage");
			Strings.stringIDs.Add(846242402U, "WarningModerationWithWrongGroupType");
			Strings.stringIDs.Add(1495738752U, "CasHealthOwaMailboxServerHeader");
			Strings.stringIDs.Add(2361565504U, "DebugEndEnablingUM");
			Strings.stringIDs.Add(332863269U, "FederatedOrganizationIdNotSet");
			Strings.stringIDs.Add(1066400057U, "SetupProgressCreateDSNCustomizationContainer");
			Strings.stringIDs.Add(4100727451U, "SetupProgressStoppingMailboxReplicationService");
			Strings.stringIDs.Add(1323608086U, "MalboxFolderRightsFolderContact");
			Strings.stringIDs.Add(3961198570U, "MapiSubmitSystemProbeNoMessageFound");
			Strings.stringIDs.Add(3923667863U, "WarningNonemptyManagedFolderNotDeleted");
			Strings.stringIDs.Add(2641950738U, "SetupProgressCreateMailboxManagedFolders");
			Strings.stringIDs.Add(1628899399U, "InvalidTimeRange");
			Strings.stringIDs.Add(4259877028U, "SetupProgressCreateClientAccessContainer");
			Strings.stringIDs.Add(1743121281U, "SetupPrereqAnalysisCompleted");
			Strings.stringIDs.Add(2722004787U, "RequiredEndDateParameter");
			Strings.stringIDs.Add(978731224U, "RpcClientAccessServiceDisplayName");
			Strings.stringIDs.Add(887526467U, "WarningNoCookiesRemovedForRollback");
			Strings.stringIDs.Add(2334907634U, "SetupMultiEngineAVEnabled");
			Strings.stringIDs.Add(1255598415U, "UninstallNotificationsBrokerServiceTask");
			Strings.stringIDs.Add(2986926906U, "ADAttributeFirstName");
			Strings.stringIDs.Add(4141971325U, "DebugStartRetrievingAuditConfig");
			Strings.stringIDs.Add(1003903261U, "EwsNotSupportedException");
			Strings.stringIDs.Add(343112327U, "IncludeAutoDiscoverOnlyApplicableToCAS");
			Strings.stringIDs.Add(863604629U, "ReplicationCheckResultUndefined");
			Strings.stringIDs.Add(4288698983U, "CasHealthOwaLogoffError");
			Strings.stringIDs.Add(2695605747U, "DagTaskDone");
			Strings.stringIDs.Add(1302133406U, "MustProvideNonEmptyStringForIdentity");
			Strings.stringIDs.Add(1427317623U, "WarningDeleteTemplate");
			Strings.stringIDs.Add(1501174110U, "SetupProgressStoppingWMIService");
			Strings.stringIDs.Add(3074556176U, "ConfirmationMessageStopELCAssistant");
			Strings.stringIDs.Add(62572758U, "MalboxFolderRightsDeleteOwnedItems");
			Strings.stringIDs.Add(2954092362U, "ErrorAuthNewCertificateNeeded");
			Strings.stringIDs.Add(2724814698U, "ContentIndexingServiceStillInstalled");
			Strings.stringIDs.Add(3234641110U, "CasHealthOwaConnectionRefused");
			Strings.stringIDs.Add(3697667913U, "NoMatchingUMMailboxPolicyInTargetForest");
			Strings.stringIDs.Add(1725408952U, "ContentIndexingPHStubNotFound");
			Strings.stringIDs.Add(4155200793U, "ConfirmationMessageTestMailflow");
			Strings.stringIDs.Add(3689464497U, "ADAttributeOtherFaxNumber");
			Strings.stringIDs.Add(2188750956U, "ErrorChildObjectTypeParameter");
			Strings.stringIDs.Add(3834576904U, "SetupProgressCreateDag");
			Strings.stringIDs.Add(3477555365U, "ReplayLagStatusLabelActual");
			Strings.stringIDs.Add(136993055U, "MtrtPrependSubject");
			Strings.stringIDs.Add(3630035827U, "CannotRemoveUMCRCertificate");
			Strings.stringIDs.Add(2224870290U, "Error_MessageClassFilter");
			Strings.stringIDs.Add(1856631791U, "MetabaseGetPropertiesFailure");
			Strings.stringIDs.Add(2911430177U, "FolderMoveRequestCheckComplete");
			Strings.stringIDs.Add(106773198U, "ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite");
			Strings.stringIDs.Add(983241257U, "InstallMonitoringCorrelationServiceTask");
			Strings.stringIDs.Add(2196859003U, "ConfirmationMessageUpdateSyncStatistics");
			Strings.stringIDs.Add(3229808788U, "ClientAccessRoleDisplayName");
			Strings.stringIDs.Add(1940704520U, "ConfirmationMessageNewMicrosoftExchangeRecipient");
			Strings.stringIDs.Add(920948119U, "GzipCannotBeSetToError");
			Strings.stringIDs.Add(4130365422U, "ThrottlingServiceDescription");
			Strings.stringIDs.Add(2064866056U, "FileLocationNotChanged");
			Strings.stringIDs.Add(873161575U, "ConversationsNoConversationsFound");
			Strings.stringIDs.Add(3592788208U, "ErrorCannotTurnOnBothAndAndRemove");
			Strings.stringIDs.Add(3820850055U, "InfoGetRacAndClc");
			Strings.stringIDs.Add(1644641079U, "SetupProgressStoppingHygieneUpdateService");
			Strings.stringIDs.Add(91086936U, "TransportSyncManagerServiceDescription");
			Strings.stringIDs.Add(3134498491U, "RejectMessageActionIsBeingOverridded");
			Strings.stringIDs.Add(4017981356U, "SetServiceInstanceMapResultCodePartitionUnavailable");
			Strings.stringIDs.Add(3244118776U, "SetupProgressStoppingContentIndexingService");
			Strings.stringIDs.Add(2854796459U, "PhoneNumberInvalidCountryCode");
			Strings.stringIDs.Add(406334368U, "IrmLicensingIsDisabled");
			Strings.stringIDs.Add(4064249999U, "ErrorDisableMailboxWithJournalArchiveWithDirSync");
			Strings.stringIDs.Add(178490484U, "FederationTrustHasAllStsCertificates");
			Strings.stringIDs.Add(2935896590U, "SetupComponentPreSetupGateway");
			Strings.stringIDs.Add(2801109101U, "ErrorMailTipSetTranslationsWithoutDefault");
			Strings.stringIDs.Add(2060695020U, "InstallThrottlingServiceTask");
			Strings.stringIDs.Add(2377371197U, "SetupComponentConfiguringMailbox");
			Strings.stringIDs.Add(1391409413U, "ArchiveConnectivityResultArchiveNotActive");
			Strings.stringIDs.Add(2302151400U, "ReplicationCheckResultFailed");
			Strings.stringIDs.Add(4085097797U, "SuspendWRTCPreventCompletionCannotBeSetOnNewRequests");
			Strings.stringIDs.Add(221534809U, "ErrorMultipleJournalArchiveAddress");
			Strings.stringIDs.Add(2808132619U, "ConfirmationMessageTestFederationTrust");
			Strings.stringIDs.Add(3020149749U, "DelegateRoleTypeViewOnlyAdmin");
			Strings.stringIDs.Add(3983242292U, "ServiceNameOab");
			Strings.stringIDs.Add(2378120020U, "ScenarioOfflineAddressBook");
			Strings.stringIDs.Add(4198747660U, "TestSearchStatus");
			Strings.stringIDs.Add(2394040785U, "SetupProgressApplicationImpersonationEnabled");
			Strings.stringIDs.Add(2315436063U, "SetupProgressStartingIISAdminService");
			Strings.stringIDs.Add(1036352676U, "SetupComponentMidFileCopyFrontendTransport");
			Strings.stringIDs.Add(993270375U, "ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse");
			Strings.stringIDs.Add(2845208078U, "CannotSwitchLinkedInAccount");
			Strings.stringIDs.Add(558509551U, "InfoRmsVersionChecked");
			Strings.stringIDs.Add(3290100793U, "LogOnlyOperation");
			Strings.stringIDs.Add(303672627U, "CasHealthOwaAuthFailExternal");
			Strings.stringIDs.Add(191693082U, "CertificateStatusDateInvalid");
			Strings.stringIDs.Add(1917741727U, "MustBeUnpacked");
			Strings.stringIDs.Add(3480344122U, "ClientAccessEcpComponentDescription");
			Strings.stringIDs.Add(1452889109U, "PublishingNotEnabled");
			Strings.stringIDs.Add(1027614433U, "EmptyTaskListException");
			Strings.stringIDs.Add(1075761718U, "WarningReplicationLatency");
			Strings.stringIDs.Add(3882871374U, "NoWebServicesExternalUrlFoundException");
			Strings.stringIDs.Add(4174322812U, "MigrationPartitionMailboxAmbiguous");
			Strings.stringIDs.Add(209372995U, "SetupComponentMidFileCopyGateway");
			Strings.stringIDs.Add(3317770113U, "SetupProgressListOpenFiles");
			Strings.stringIDs.Add(4049833125U, "SupportedToolsContainsInconsistentData");
			Strings.stringIDs.Add(2266049675U, "CasHealthOwaGetLogonPageSucceeded");
			Strings.stringIDs.Add(1916087801U, "SupportedToolsUnableToGetToolData");
			Strings.stringIDs.Add(1190886562U, "ProgressStatusFailed");
			Strings.stringIDs.Add(2543735748U, "AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr");
			Strings.stringIDs.Add(3180631268U, "ErrorStartAfterEarlierThanCompleteAfter");
			Strings.stringIDs.Add(2681404045U, "ProvisioningRequestCannotBeCanceled");
			Strings.stringIDs.Add(3800508562U, "ErrorModifyE14DatabaseNotAllowed");
			Strings.stringIDs.Add(634215246U, "CasHealthOwaGetAuthEmptyPage");
			Strings.stringIDs.Add(2694743145U, "FDServiceDescription");
			Strings.stringIDs.Add(1481201881U, "InvalidDeliveryStatus");
			Strings.stringIDs.Add(1249578946U, "ErrorCannotSetLegacyArchiveJournalingEnabled");
			Strings.stringIDs.Add(2808015702U, "WarningJournalArchiveMailboxHasNoMailUser");
			Strings.stringIDs.Add(2394697169U, "CasHealthConfirmTestActiveSyncUsingAutodiscovery");
			Strings.stringIDs.Add(173411374U, "InfoCheckingRmsOnlinePrerequisites");
			Strings.stringIDs.Add(3495731578U, "ErrorChangePasswordRequiresOldPasswordNewPassword");
			Strings.stringIDs.Add(2660569143U, "SetupProgressDisableWMIAsync");
			Strings.stringIDs.Add(765220380U, "CannotRemoveInternalTransportCertificate");
			Strings.stringIDs.Add(1431279917U, "ErrorFailedToGetPreL");
			Strings.stringIDs.Add(2419294408U, "ErrorPartnerApplicationUseAuthServerCannotSetUrl");
			Strings.stringIDs.Add(576430832U, "CopyAndDeleteOperation");
			Strings.stringIDs.Add(1980396424U, "CompleteMigrationBatchNotSupported");
			Strings.stringIDs.Add(402764310U, "StartPreSetupDescription");
			Strings.stringIDs.Add(782748382U, "MtrtEventTransportRule");
			Strings.stringIDs.Add(217981904U, "PopGettingMessageIDs");
			Strings.stringIDs.Add(1236740085U, "SetupProgressCreateTransportRuleCollection");
			Strings.stringIDs.Add(2220152108U, "AgentLogInvalidTimeRange");
			Strings.stringIDs.Add(906770351U, "ErrorAgentPriorityCannotBeChanged");
			Strings.stringIDs.Add(2647704984U, "CasHealthCalendarScenarioTestView");
			Strings.stringIDs.Add(3902082635U, "SetupComponentPostSetupMailbox");
			Strings.stringIDs.Add(4189810048U, "CopyStatusDismounting");
			Strings.stringIDs.Add(2177109544U, "ProgressActivityUpdateRecipient");
			Strings.stringIDs.Add(2710426824U, "ParameterErrorForInternalUsage");
			Strings.stringIDs.Add(1312047919U, "ErrorCannotEnableJournalArchive");
			Strings.stringIDs.Add(1015332134U, "ErrorBPAMergeFileNotFound");
			Strings.stringIDs.Add(214463947U, "SclValue");
			Strings.stringIDs.Add(3294832335U, "PerfCounterDefinitionFileNameDescription");
			Strings.stringIDs.Add(1704483791U, "HubParameterNotValidOnEdgeRole");
			Strings.stringIDs.Add(2066445404U, "NewDagClusteringInstalledLaterRunningChecksLaterVerbose");
			Strings.stringIDs.Add(2361175376U, "CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault");
			Strings.stringIDs.Add(656898367U, "MailboxExchangeCertificateComponentDescription");
			Strings.stringIDs.Add(242192693U, "ADAttributeCustomAttribute12");
			Strings.stringIDs.Add(1188336490U, "InvalidSubscriptionFile");
			Strings.stringIDs.Add(2818510402U, "ErrorInboxRuleTooBig");
			Strings.stringIDs.Add(317546527U, "OutlookProtectionRuleRmsTemplateNotSet");
			Strings.stringIDs.Add(4162816907U, "LocalSiteColon");
			Strings.stringIDs.Add(2065442552U, "DirectoryPathDoesntExist");
			Strings.stringIDs.Add(1746698641U, "MtrtQuarantine");
			Strings.stringIDs.Add(2576192317U, "SetupProgressOwaGlobalAddressListEnabled");
			Strings.stringIDs.Add(4033729879U, "SameOwaVersionDoNotCopyLPFiles");
			Strings.stringIDs.Add(3808447353U, "ErrorDefaultMalwareFilterPolicyCannotBeDeleted");
			Strings.stringIDs.Add(2327721635U, "MigrationStartAfterScheduledBatchesOnly");
			Strings.stringIDs.Add(1910163041U, "InvalidDlpPolicyConfiguration");
			Strings.stringIDs.Add(1096493597U, "ConfirmationMessageSetAvailabilityConfig");
			Strings.stringIDs.Add(2308331446U, "BPAScanInProgress");
			Strings.stringIDs.Add(3722370321U, "ExportWithPrivateKeyRequiresPassword");
			Strings.stringIDs.Add(1404355436U, "CasHealthScenarioResetCredentials");
			Strings.stringIDs.Add(3045092087U, "KeynoteConnectorServiceDescription");
			Strings.stringIDs.Add(1460043812U, "ConfirmationMessageSetSearchDocumentFormat");
			Strings.stringIDs.Add(908067860U, "ErrorInvalidSizeRangeException");
			Strings.stringIDs.Add(785552508U, "ErrorNoDatabaseInfor");
			Strings.stringIDs.Add(123373405U, "DebugStartEnablingUM");
			Strings.stringIDs.Add(14776491U, "ErrorSettingCertOnTenant");
			Strings.stringIDs.Add(133178266U, "ErrorFailedToGetTemplateTenant");
			Strings.stringIDs.Add(1348708874U, "CannotRunOnNonHubTransport");
			Strings.stringIDs.Add(2651520529U, "ErrorRmsOnlineAuthenticationCertificateExpired");
			Strings.stringIDs.Add(1785220801U, "ErrorFailedToGetULDueToInvalidSuperUserConfiguration");
			Strings.stringIDs.Add(3672610051U, "RemoveOrganizationDescription");
			Strings.stringIDs.Add(2844085614U, "CasHealthTestNewUserScriptName");
			Strings.stringIDs.Add(2009348203U, "InstallGatewayRoleDescription");
			Strings.stringIDs.Add(2594705516U, "InvalidClientCertificateSubjectName");
			Strings.stringIDs.Add(3346850040U, "SetupComponentPostSetupClientAccess");
			Strings.stringIDs.Add(2189011080U, "ErrorCannotUpdatePublicFolderHierarchyInformation");
			Strings.stringIDs.Add(3014289487U, "messageAutodiscoverServiceUnavailableException");
			Strings.stringIDs.Add(1630518161U, "InfoIRMConfigLoaded");
			Strings.stringIDs.Add(3950720433U, "CasHealthOwaGotLanguageSelectionPage");
			Strings.stringIDs.Add(3598927792U, "WarningMustInvokeUpdateOABToStartScheduledGeneration");
			Strings.stringIDs.Add(36668747U, "HaltingExecution");
			Strings.stringIDs.Add(673284277U, "CasHealthPowerShellLongName");
			Strings.stringIDs.Add(1079115709U, "AppIdElementIsEmpty");
			Strings.stringIDs.Add(2849670203U, "InPlaceHoldNotAllowedForAllSourceMailboxes");
			Strings.stringIDs.Add(78736594U, "NoMdbWasMovedWhileRunning");
			Strings.stringIDs.Add(2768242287U, "MtrtDeleteAttachment");
			Strings.stringIDs.Add(2584381281U, "IncomingUserNameEmpty");
			Strings.stringIDs.Add(4202582373U, "AddressRewriteSessionNull");
			Strings.stringIDs.Add(3131090706U, "ErrorAccessRightsEmpty");
			Strings.stringIDs.Add(3623667921U, "SetupComponentMailboxGlobalConfig");
			Strings.stringIDs.Add(3868619324U, "MtrtEventDeliver");
			Strings.stringIDs.Add(2503320550U, "EcpUrlNotMatchOwaWarning");
			Strings.stringIDs.Add(1356551856U, "CasHealthEasPing");
			Strings.stringIDs.Add(561948288U, "ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs");
			Strings.stringIDs.Add(4113539864U, "WSManIISHostingConfigurationComponentDescription");
			Strings.stringIDs.Add(367058863U, "DiagnosticsHeader");
			Strings.stringIDs.Add(4243684796U, "UnknownMigrationUserStatusSummaryValue");
			Strings.stringIDs.Add(1535975937U, "OwaMetabaseIsapiUninstallFailure");
			Strings.stringIDs.Add(3935454309U, "MoreThanOneTeamMailboxes");
			Strings.stringIDs.Add(681503665U, "CasHealthOwaIsaFbaFormdirParseFailed");
			Strings.stringIDs.Add(3910386293U, "EventLogText");
			Strings.stringIDs.Add(749715156U, "ManageDelegation2ProvisioningInDNS");
			Strings.stringIDs.Add(4236823146U, "SetupPrereqAnalysis");
			Strings.stringIDs.Add(3855792877U, "UninstallContentIndexingServiceTask");
			Strings.stringIDs.Add(2547584967U, "SetupProgressSyncAccountsPollingInterval");
			Strings.stringIDs.Add(2583888766U, "ExternalJournalRuleScope");
			Strings.stringIDs.Add(12898892U, "TestMigrationServerAvailabilityPasswordException");
			Strings.stringIDs.Add(2190311546U, "CasHealthEasOptionsScenarioDescription");
			Strings.stringIDs.Add(2067178212U, "ProgressStatusRemovingWorkloadManagementPolicyTree");
			Strings.stringIDs.Add(1927518978U, "ConfirmationMessageInitializeExchangeLegacyPermissions");
			Strings.stringIDs.Add(448862132U, "CopyStatusSeeding");
			Strings.stringIDs.Add(2783924553U, "ConfirmationMessageTestOrganizationRelationship");
			Strings.stringIDs.Add(2472730642U, "UninstallOldAssistantsServiceTask");
			Strings.stringIDs.Add(4054043081U, "ReservedString4");
			Strings.stringIDs.Add(3728408622U, "DeviceWipePending");
			Strings.stringIDs.Add(2405285278U, "InfoEnterpriseMode");
			Strings.stringIDs.Add(1486748686U, "ServiceNameAutoDiscover");
			Strings.stringIDs.Add(1275658866U, "RemoveRemoteAccountSyncCache");
			Strings.stringIDs.Add(1709945553U, "DualWriteDeleteWarningMessage");
			Strings.stringIDs.Add(1296902656U, "ConfirmSetProvisioningReconciliationConfig");
			Strings.stringIDs.Add(3875057279U, "UninstallThrottlingServiceTask");
			Strings.stringIDs.Add(4218353751U, "SetupProgressPublicFoldersEnabled");
			Strings.stringIDs.Add(2028616171U, "NotificationEmailsParameterMissing");
			Strings.stringIDs.Add(2428804411U, "CasHealthWebAppNoCasArgumentError");
			Strings.stringIDs.Add(1991303282U, "SetupProgressCreateExchangeMimeTypes");
			Strings.stringIDs.Add(3091771729U, "ShouldContinueToExpandGroupsForHold");
			Strings.stringIDs.Add(377177216U, "HybridMailflowGetFfoDCPublicIPAddressesFailed");
			Strings.stringIDs.Add(167572150U, "MigrationAutoStopForInProgressOnly");
			Strings.stringIDs.Add(547522671U, "ErrorLogFolderPathNotAvailable");
			Strings.stringIDs.Add(3890878117U, "ErrorPublicFolderReferralHasWrittenToServer");
			Strings.stringIDs.Add(1122989846U, "SetupProgressInstallingFreeBusyFolder");
			Strings.stringIDs.Add(1280796226U, "MigrationStartAfterAndAutoStartExclusive");
			Strings.stringIDs.Add(8058994U, "UninstallFfoWebServiceRoleDescription");
			Strings.stringIDs.Add(1798622353U, "LanguagePackDescription");
			Strings.stringIDs.Add(1041587867U, "InfoImportingTpdFromRmsOnlineCheckedNoTemplates");
			Strings.stringIDs.Add(1211829139U, "ConfirmationExportMailboxDiagnosticLogs");
			Strings.stringIDs.Add(494607782U, "ErrorModifyE12ServerNotAllowed");
			Strings.stringIDs.Add(3397377515U, "ErrorRemoveMailboxWithJournalArchive");
			Strings.stringIDs.Add(805841165U, "InvalidProductKey");
			Strings.stringIDs.Add(3250408681U, "CannotLocateCurrentCertificate");
			Strings.stringIDs.Add(1700206738U, "MtrtRouteMessageUsingConnector");
			Strings.stringIDs.Add(2044663579U, "SetupProgressInstallingContentIndexingMSI");
			Strings.stringIDs.Add(2274442006U, "ErrorSettingRealmOnFirstOrg");
			Strings.stringIDs.Add(3036936652U, "FirstRoleAssignmentPolicyMustBeDefault");
			Strings.stringIDs.Add(2114394121U, "SetupProgressStoppingW3SVCService");
			Strings.stringIDs.Add(2537873109U, "DistributionGroup");
			Strings.stringIDs.Add(1488045589U, "CannotEditManuallyModifiedRule");
			Strings.stringIDs.Add(2270964732U, "MalboxFolderRightsDeleteAllItems");
			Strings.stringIDs.Add(3040964019U, "ProtocolSettings");
			Strings.stringIDs.Add(2022479947U, "TestOrganizationRelationshipWarning");
			Strings.stringIDs.Add(3889143264U, "WarningReportNotAvailable");
			Strings.stringIDs.Add(1679500402U, "ExceptionHeader");
			Strings.stringIDs.Add(3539375720U, "SetupProgressSyncAccountsTimeBeforeInactive");
			Strings.stringIDs.Add(823932952U, "TestSearchTaskBaseError");
			Strings.stringIDs.Add(841037861U, "NoNameArgument");
			Strings.stringIDs.Add(4116718674U, "CannotLocateFederationInfo");
			Strings.stringIDs.Add(310671256U, "GetFederationInformationProgress");
			Strings.stringIDs.Add(1467822517U, "SetupProgressInstallingMsFteMSI");
			Strings.stringIDs.Add(1139041786U, "ErrorCannotSpecifyAccountNamespaceWithoutTrust");
			Strings.stringIDs.Add(254334823U, "ExchangeInteropUSGDescription");
			Strings.stringIDs.Add(1377545175U, "ADAttributeCustomAttribute9");
			Strings.stringIDs.Add(1691025395U, "PromptToRemoveLogEventAction");
			Strings.stringIDs.Add(1949680079U, "ConfirmationMessageNewMailFlowPartnerConfig");
			Strings.stringIDs.Add(1678323524U, "ErrorAlsFailedToProcessRequest");
			Strings.stringIDs.Add(470745396U, "ExchangeStreamingOpticsDisplayName");
			Strings.stringIDs.Add(1223062556U, "RemoveContentIndexTask");
			Strings.stringIDs.Add(3234625944U, "ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl");
			Strings.stringIDs.Add(414183510U, "SetupComponentMidFileCopyClientAccess");
			Strings.stringIDs.Add(3235153535U, "UmLanguagePackPackagePathNotSpecified");
			Strings.stringIDs.Add(2428723312U, "SetupProgressStartingAddressBookService");
			Strings.stringIDs.Add(838814397U, "InstallComplianceAuditServiceTask");
			Strings.stringIDs.Add(1184910862U, "InternalTransportCertificateUpdatedOnEdge");
			Strings.stringIDs.Add(262546359U, "ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive");
			Strings.stringIDs.Add(1041208934U, "ErrorSetGroupMailboxAddMembersPrivate");
			Strings.stringIDs.Add(3031418490U, "MailboxReplicationServiceNotInstalled");
			Strings.stringIDs.Add(4059699036U, "ConfirmationMessageNewReportingVirtualDirectory");
			Strings.stringIDs.Add(2810951265U, "WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime");
			Strings.stringIDs.Add(2449344145U, "TowsMissingAutoDiscoverElement");
			Strings.stringIDs.Add(2922053695U, "SetupProgressHideAdminAccessWarning");
			Strings.stringIDs.Add(2350123123U, "SetupProgressStartEdgeTransportService");
			Strings.stringIDs.Add(1877416004U, "WipePendingNote");
			Strings.stringIDs.Add(3768894518U, "ComplianceAuditServiceNotInstalled");
			Strings.stringIDs.Add(3557021932U, "MissingDataClassificationsName");
			Strings.stringIDs.Add(4016212985U, "UninstallMailboxTransportSubmissionServiceTask");
			Strings.stringIDs.Add(3855115154U, "OpenSCMFailed");
			Strings.stringIDs.Add(4009609004U, "SetupProgressStoppingServices");
			Strings.stringIDs.Add(2354473495U, "StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting");
			Strings.stringIDs.Add(273291066U, "DatabaseChecksWarning");
			Strings.stringIDs.Add(2621242427U, "SetupProgressSyncAccountsSyncNowEnabled");
			Strings.stringIDs.Add(2522664611U, "CannotResetDefaultOAB");
			Strings.stringIDs.Add(828523090U, "FfoPrimingServiceDescription");
			Strings.stringIDs.Add(3060667906U, "RoleLimitedDetails");
			Strings.stringIDs.Add(3080406678U, "ExceptionVirtualServerNotExists");
			Strings.stringIDs.Add(3080326154U, "ProgressActivityCreateAppId");
			Strings.stringIDs.Add(26237954U, "OwaMetabaseSetPropertiesFailure");
			Strings.stringIDs.Add(3330303460U, "MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty");
			Strings.stringIDs.Add(649628065U, "TokenRequestFailed");
			Strings.stringIDs.Add(1314188949U, "OneOrMoreTasksFailed");
			Strings.stringIDs.Add(1507204552U, "E4eLicensingIsDisabledSetRule");
			Strings.stringIDs.Add(2654587277U, "ConfirmationDisableJournalArchiving");
			Strings.stringIDs.Add(2990267815U, "SetupComponentPostSetupMonitoringCorrelation");
			Strings.stringIDs.Add(235473832U, "MailboxReplicationServiceDisplayName");
			Strings.stringIDs.Add(3253730210U, "ConfirmationMessageTestMigrationServerAvailability");
			Strings.stringIDs.Add(3842833603U, "InvalidAvailabilityAccessMethod");
			Strings.stringIDs.Add(84116853U, "MigrationPleaseUseStartForReenablingIncremental");
			Strings.stringIDs.Add(944597893U, "ErrorMailTipRemoveDefaultAndTranslationsExist");
			Strings.stringIDs.Add(2120607910U, "TestSearchOperationAborted");
			Strings.stringIDs.Add(1012278329U, "ComplianceServiceDisplayName");
			Strings.stringIDs.Add(2072089536U, "ErrorDefaultRoleAssignmentPolicyNotUnique");
			Strings.stringIDs.Add(3068649109U, "SetupProgressWsbPlugin");
			Strings.stringIDs.Add(4140458166U, "UsageTypeCustom");
			Strings.stringIDs.Add(3403459873U, "InvalidDomain");
			Strings.stringIDs.Add(1996536374U, "ConfirmationMessageSetTransportProcessingConfig");
			Strings.stringIDs.Add(1734429948U, "MsiProgressStatus");
			Strings.stringIDs.Add(922137960U, "VerboseClearAllPreferredDC");
			Strings.stringIDs.Add(2826824284U, "CannotMoveE15OrLaterOab");
			Strings.stringIDs.Add(368391118U, "DebugEndIsDomainReservedCheck");
			Strings.stringIDs.Add(1500370212U, "IisTasksNameValidationProperty");
			Strings.stringIDs.Add(3323623818U, "FDS_OAD_PerfCountersComponentDescription");
			Strings.stringIDs.Add(3496199763U, "ServerObjectIsNullWarning");
			Strings.stringIDs.Add(3361139520U, "ProgressStatusCompleted");
			Strings.stringIDs.Add(4206530938U, "ReplayLagPlayDownReasonNotEnoughFreeSpace");
			Strings.stringIDs.Add(2299824885U, "ErrorSetRecipientViewRootAndViewEntireForestToTrue");
			Strings.stringIDs.Add(2597902056U, "NewImap4ConfigurationTask");
			Strings.stringIDs.Add(1395708426U, "ScenarioAvailabilityService");
			Strings.stringIDs.Add(2749826425U, "MigrationValidateNotSupported");
			Strings.stringIDs.Add(2903077230U, "ErrorGenericAllCannotbeUsedWithOtherAccessRights");
			Strings.stringIDs.Add(70447300U, "ErrorInvalidSizeRangeCondition");
			Strings.stringIDs.Add(3474126328U, "MigrationCsvParameterInvalid");
			Strings.stringIDs.Add(3050431750U, "ADAttributeName");
			Strings.stringIDs.Add(2678936089U, "ValidatingUserObjectDescription");
			Strings.stringIDs.Add(1319233567U, "RmsOnline");
			Strings.stringIDs.Add(2671381439U, "SetupProgressDisplaySpecifiers");
			Strings.stringIDs.Add(499504696U, "UnableToDetermineExecutingUser");
			Strings.stringIDs.Add(3923056437U, "ComAdminInstallOleConverter");
			Strings.stringIDs.Add(605575496U, "BPACheckingForUpdates");
			Strings.stringIDs.Add(2920595890U, "SendConnectorValidSourceServerNotFound");
			Strings.stringIDs.Add(3947119703U, "AboutToAddLocalOrgUSGToLocalAdminGroup");
			Strings.stringIDs.Add(2615723947U, "DatabaseRedundancyCheckDesc");
			Strings.stringIDs.Add(3047692628U, "MarkingMoveJobAsCanceled");
			Strings.stringIDs.Add(2732176076U, "InstallFrontendTransportRoleDescription");
			Strings.stringIDs.Add(3257900905U, "RmsSharedIdentityFailedToRemoveLink");
			Strings.stringIDs.Add(1177356111U, "SetupProgressCreateMessageHygieneContainer");
			Strings.stringIDs.Add(1811296721U, "ErrorInvalidResponseFormat");
			Strings.stringIDs.Add(1448572638U, "NewPolicyTipConfigDuplicate");
			Strings.stringIDs.Add(481130440U, "VerboseUnlockingModulesSection");
			Strings.stringIDs.Add(2798232721U, "SetupProgressAllowRemotePowerShellForAdmins");
			Strings.stringIDs.Add(3660257130U, "SetupProgressHostedConnectorFilterPolicy");
			Strings.stringIDs.Add(3069929753U, "NoSmtpAddress");
			Strings.stringIDs.Add(3847601718U, "ErrorBPAConfigDataSave");
			Strings.stringIDs.Add(2926722674U, "OfficeDataLoaderServiceDescription");
			Strings.stringIDs.Add(1780428476U, "IISNotInstalled");
			Strings.stringIDs.Add(3183807969U, "GetPolicyTipConfigUrlUsedAsActionFilter");
			Strings.stringIDs.Add(2627276457U, "ErrorSetGroupMailboxRemoveMembersOtherUser");
			Strings.stringIDs.Add(2569719605U, "CasHealthCalendarVDirSuccess");
			Strings.stringIDs.Add(1164934596U, "IgnoredAuthenticationWarning");
			Strings.stringIDs.Add(3957453737U, "AutoGroupJoinMessageSubject");
			Strings.stringIDs.Add(418863002U, "MigrationOperationFailed");
			Strings.stringIDs.Add(3566266091U, "OwaAuthenticationNotMatchEcpWarning");
			Strings.stringIDs.Add(3203832541U, "ErrorCannotMovePublicFolderIntoSameMailbox");
			Strings.stringIDs.Add(1524386503U, "SetupProgressStartingEdgeSyncService");
			Strings.stringIDs.Add(44103597U, "MailSubmissionServiceDisplayName");
			Strings.stringIDs.Add(1796170360U, "AutodiscoverFailure");
			Strings.stringIDs.Add(1366093647U, "ConflictedPolicyUpdateNotAllowed");
			Strings.stringIDs.Add(3497616869U, "InvalidCategory");
			Strings.stringIDs.Add(344390835U, "JournalingToExternalOnly");
			Strings.stringIDs.Add(3204473306U, "ErrorTenantIsPiloting");
			Strings.stringIDs.Add(51564260U, "SetupProgressStoppingAddressBookService");
			Strings.stringIDs.Add(4084620468U, "SetupComponentConfiguringADTopologyService");
			Strings.stringIDs.Add(3039439991U, "FailedToCreateAuditLogSearch");
			Strings.stringIDs.Add(3995145683U, "WarningPropertySetIgnored");
			Strings.stringIDs.Add(3963066099U, "MigrationPleaseUseStopForDisablingIncremental");
			Strings.stringIDs.Add(1465827073U, "StatusMessageSynchronizerRunningInBackground");
			Strings.stringIDs.Add(1505488867U, "ErrorBothCustomAndPrecannedFilterSpecified");
			Strings.stringIDs.Add(3863634433U, "ErrorTaskRunningLocationFrontendOnly");
			Strings.stringIDs.Add(213191494U, "CasHealthOwaErrorPageHeader");
		}

		public static LocalizedString SetupComponentGatewayLocal
		{
			get
			{
				return new LocalizedString("SetupComponentGatewayLocal", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateServerObject
		{
			get
			{
				return new LocalizedString("SetupProgressCreateServerObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseWsrmNotConfigured(string app, string argument)
		{
			return new LocalizedString("VerboseWsrmNotConfigured", "Ex7D8BDC", false, true, Strings.ResourceManager, new object[]
			{
				app,
				argument
			});
		}

		public static LocalizedString ErrorCannotDeleteRoleWithAssignment(string id)
		{
			return new LocalizedString("ErrorCannotDeleteRoleWithAssignment", "Ex201C99", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString WarningMisconfiguredElcMailboxPolicy(string name)
		{
			return new LocalizedString("WarningMisconfiguredElcMailboxPolicy", "Ex603936", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorPatternCannotContainEmptyAlternations
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainEmptyAlternations", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNonMailboxDirectoryUser(string contact)
		{
			return new LocalizedString("ErrorNonMailboxDirectoryUser", "", false, false, Strings.ResourceManager, new object[]
			{
				contact
			});
		}

		public static LocalizedString ConversationsFailedToOpenMailbox(string error)
		{
			return new LocalizedString("ConversationsFailedToOpenMailbox", "Ex350F5A", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString SetupComponentPostSetupUnifiedMessaging
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupUnifiedMessaging", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxResource(string Name, string ResourceType, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxResource", "Ex07B28F", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ResourceType,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString InvalidLogIdentityFormat(string uri)
		{
			return new LocalizedString("InvalidLogIdentityFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString VerboseDeleteMailboxInStore(string mdb, string mailbox)
		{
			return new LocalizedString("VerboseDeleteMailboxInStore", "Ex3B42A3", false, true, Strings.ResourceManager, new object[]
			{
				mdb,
				mailbox
			});
		}

		public static LocalizedString RestoreMailboxDuplicates(string displayName)
		{
			return new LocalizedString("RestoreMailboxDuplicates", "ExC119CB", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		public static LocalizedString CannotCombineWildcardRecipientAddress
		{
			get
			{
				return new LocalizedString("CannotCombineWildcardRecipientAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString E12DomainServersGroupNotFoundException(string dn, string dc)
		{
			return new LocalizedString("E12DomainServersGroupNotFoundException", "Ex02E3DC", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				dc
			});
		}

		public static LocalizedString DagTaskCheckingDagServersAreClustered(string clusterName)
		{
			return new LocalizedString("DagTaskCheckingDagServersAreClustered", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName
			});
		}

		public static LocalizedString ConfirmationMessageSetAddressrewriteentry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAddressrewriteentry", "Ex2759A1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarnExtendedProtectionIsNotEnabled(string server, string kb)
		{
			return new LocalizedString("WarnExtendedProtectionIsNotEnabled", "Ex570474", false, true, Strings.ResourceManager, new object[]
			{
				server,
				kb
			});
		}

		public static LocalizedString VerboseRebuildWSManRegistry
		{
			get
			{
				return new LocalizedString("VerboseRebuildWSManRegistry", "ExCD008C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SharedConfigurationInfoExists(string org, string sharedConfigurationInfo)
		{
			return new LocalizedString("SharedConfigurationInfoExists", "Ex1B86A2", false, true, Strings.ResourceManager, new object[]
			{
				org,
				sharedConfigurationInfo
			});
		}

		public static LocalizedString CannotAddIPSafelistsIfIPSafelistingSyncDisabledId
		{
			get
			{
				return new LocalizedString("CannotAddIPSafelistsIfIPSafelistingSyncDisabledId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecipientDomainNotManaged(string domain)
		{
			return new LocalizedString("RecipientDomainNotManaged", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorWLCDPartnerAccessException(string message)
		{
			return new LocalizedString("ErrorWLCDPartnerAccessException", "ExBDE444", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString InconsistentServerNotInDag(string server, string dagName)
		{
			return new LocalizedString("InconsistentServerNotInDag", "Ex656A61", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dagName
			});
		}

		public static LocalizedString ErrorAuthServerIssuerNameNotFound(string issuerIdentifier)
		{
			return new LocalizedString("ErrorAuthServerIssuerNameNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				issuerIdentifier
			});
		}

		public static LocalizedString InterceptorErrorRootedPathNotAllowed(string path)
		{
			return new LocalizedString("InterceptorErrorRootedPathNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString HybridMailflowConnectorNameAndTypeWarning(string name)
		{
			return new LocalizedString("HybridMailflowConnectorNameAndTypeWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString COMDetailException(string errorMsg, string directoryEntry, string detailMessage)
		{
			return new LocalizedString("COMDetailException", "ExB0CBA1", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg,
				directoryEntry,
				detailMessage
			});
		}

		public static LocalizedString ExpiryDateSameOrBeforeActivationDate
		{
			get
			{
				return new LocalizedString("ExpiryDateSameOrBeforeActivationDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPrecannedRoleAndSpecificMailboxFolderPermission
		{
			get
			{
				return new LocalizedString("ErrorPrecannedRoleAndSpecificMailboxFolderPermission", "ExE7DEBE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotSpecifyScopeParameter
		{
			get
			{
				return new LocalizedString("ErrorCannotSpecifyScopeParameter", "Ex72BE7D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressImportingAddionalEdgeSchema
		{
			get
			{
				return new LocalizedString("SetupProgressImportingAddionalEdgeSchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotCancelRequestBeingCompleted(string indexEntry, string serverName)
		{
			return new LocalizedString("ErrorCannotCancelRequestBeingCompleted", "Ex7C5639", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry,
				serverName
			});
		}

		public static LocalizedString VerboseADOperationSucceeded(string id)
		{
			return new LocalizedString("VerboseADOperationSucceeded", "ExC8A79A", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageSetAuthServer(string name)
		{
			return new LocalizedString("ConfirmationMessageSetAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString DagTaskCreatingFsw(string fswName)
		{
			return new LocalizedString("DagTaskCreatingFsw", "", false, false, Strings.ResourceManager, new object[]
			{
				fswName
			});
		}

		public static LocalizedString E4eLicensingIsDisabledCreateRule
		{
			get
			{
				return new LocalizedString("E4eLicensingIsDisabledCreateRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressInstallMessageDeliveryContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallMessageDeliveryContainer", "Ex2637A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressInstallAdministrativeGroupContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallAdministrativeGroupContainer", "Ex648ECE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmOrphanCannotConnectToMailboxDatabase(string identity, string mdb)
		{
			return new LocalizedString("ConfirmOrphanCannotConnectToMailboxDatabase", "ExD4185A", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				mdb
			});
		}

		public static LocalizedString ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount
		{
			get
			{
				return new LocalizedString("ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateRBACRoles
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxAuditLogSearchTimeout(string timeout, string criteria, string userid)
		{
			return new LocalizedString("ErrorMailboxAuditLogSearchTimeout", "ExD39BE5", false, true, Strings.ResourceManager, new object[]
			{
				timeout,
				criteria,
				userid
			});
		}

		public static LocalizedString ErrorSetOlderVirtualDirectory(string identity, string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorSetOlderVirtualDirectory", "ExCF5439", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				objectVersion,
				currentVersion
			});
		}

		public static LocalizedString FoundTasksToExecute(int count)
		{
			return new LocalizedString("FoundTasksToExecute", "Ex51E73A", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString ForwardSyncServiceDisplayName
		{
			get
			{
				return new LocalizedString("ForwardSyncServiceDisplayName", "Ex932DA5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveContentIndexTask
		{
			get
			{
				return new LocalizedString("MoveContentIndexTask", "Ex0BD706", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningUpgradeIsNotComplete(string upgradePhase)
		{
			return new LocalizedString("WarningUpgradeIsNotComplete", "Ex22E3D1", false, true, Strings.ResourceManager, new object[]
			{
				upgradePhase
			});
		}

		public static LocalizedString ADAttributeLastName
		{
			get
			{
				return new LocalizedString("ADAttributeLastName", "ExD49E62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxDatabaseToRecoverHasAssociatedRecoveryMailboxDatabaseAlready(string mailboxDatabase)
		{
			return new LocalizedString("ErrorMailboxDatabaseToRecoverHasAssociatedRecoveryMailboxDatabaseAlready", "Ex8FC131", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		public static LocalizedString ErrorMaxVersionOrFixVersionRequired
		{
			get
			{
				return new LocalizedString("ErrorMaxVersionOrFixVersionRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningIgnoreMailboxSettingOnlyPolicy
		{
			get
			{
				return new LocalizedString("WarningIgnoreMailboxSettingOnlyPolicy", "Ex41154F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetIntraOrganizationConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InstallExchangeOrganizationDescription
		{
			get
			{
				return new LocalizedString("InstallExchangeOrganizationDescription", "ExC232F6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningOabGenFailed(string oabId, string orgMbx, string server, string errormsg)
		{
			return new LocalizedString("WarningOabGenFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId,
				orgMbx,
				server,
				errormsg
			});
		}

		public static LocalizedString InvalidForwardSyncConfigurationError(string error)
		{
			return new LocalizedString("InvalidForwardSyncConfigurationError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ClassificationRuleCollectionIllegalScopedNewOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedNewOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWildcardNotSupportedInRelocationIdentity(string identity)
		{
			return new LocalizedString("ErrorWildcardNotSupportedInRelocationIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CannotRemoveDefaultRemoteDomain
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultRemoteDomain", "Ex621009", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateLiveEnableFederatedEmailMailbox
		{
			get
			{
				return new LocalizedString("SetupProgressCreateLiveEnableFederatedEmailMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentBridgeheadGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentBridgeheadGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveHostedContentFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CopyStatusMisconfigured
		{
			get
			{
				return new LocalizedString("CopyStatusMisconfigured", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DiagnosticsServiceDescription
		{
			get
			{
				return new LocalizedString("DiagnosticsServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisableConversationsTask
		{
			get
			{
				return new LocalizedString("DisableConversationsTask", "Ex8AC82C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningPrimaryExchangeRecipientNotSet(string orgId)
		{
			return new LocalizedString("WarningPrimaryExchangeRecipientNotSet", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString SetupProgressOutlookAnywhereEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOutlookAnywhereEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCreatingMonitoringMailbox(string id)
		{
			return new LocalizedString("VerboseCreatingMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorCannotSetPowerShellMaxTenantConcurrency
		{
			get
			{
				return new LocalizedString("ErrorCannotSetPowerShellMaxTenantConcurrency", "Ex0D132E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ForwardSyncService2DisplayName
		{
			get
			{
				return new LocalizedString("ForwardSyncService2DisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OABVdirBasicAuthWithoutSSL(string vdir)
		{
			return new LocalizedString("OABVdirBasicAuthWithoutSSL", "Ex706EC6", false, true, Strings.ResourceManager, new object[]
			{
				vdir
			});
		}

		public static LocalizedString ClassificationRuleCollectionReservedRulePackIdViolation(string rulePackId, string reservedPrefix)
		{
			return new LocalizedString("ClassificationRuleCollectionReservedRulePackIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				rulePackId,
				reservedPrefix
			});
		}

		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval
		{
			get
			{
				return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NamespaceServiceUrl(string url)
		{
			return new LocalizedString("NamespaceServiceUrl", "Ex5141D8", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SetupProgressStoppingComplianceAuditService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingComplianceAuditService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString HealthManagerServiceDescription
		{
			get
			{
				return new LocalizedString("HealthManagerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DagTaskNoNetworksRunningDhcp(string serverName)
		{
			return new LocalizedString("DagTaskNoNetworksRunningDhcp", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString MessageTracingClientServiceDescription
		{
			get
			{
				return new LocalizedString("MessageTracingClientServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLiveIdAuthentication(string message)
		{
			return new LocalizedString("ErrorLiveIdAuthentication", "Ex66CD63", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString FormsAuthenticationDeleteUnknownErrorException(string metabasePath, int propertyID, int hresult)
		{
			return new LocalizedString("FormsAuthenticationDeleteUnknownErrorException", "ExEA357B", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID,
				hresult
			});
		}

		public static LocalizedString RoleNonEditingAuthor
		{
			get
			{
				return new LocalizedString("RoleNonEditingAuthor", "Ex669109", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedProbeResultDetails(string failedProbeResultDetailsString)
		{
			return new LocalizedString("FailedProbeResultDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				failedProbeResultDetailsString
			});
		}

		public static LocalizedString ErrorNoMatchedUserTypeFound(string targetType, string recipientName, string recipientType)
		{
			return new LocalizedString("ErrorNoMatchedUserTypeFound", "", false, false, Strings.ResourceManager, new object[]
			{
				targetType,
				recipientName,
				recipientType
			});
		}

		public static LocalizedString ConfirmationMessageTestServiceHealth(string Server)
		{
			return new LocalizedString("ConfirmationMessageTestServiceHealth", "Ex74AD67", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString ErrorSecondaryMailboxIdRequired
		{
			get
			{
				return new LocalizedString("ErrorSecondaryMailboxIdRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsExpirationDateIsInThePastWarning(string expirationDate)
		{
			return new LocalizedString("ExchangeSettingsExpirationDateIsInThePastWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				expirationDate
			});
		}

		public static LocalizedString HeaderName
		{
			get
			{
				return new LocalizedString("HeaderName", "ExC9E2AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFailedToDeleteEapWhileRollingBack(string id)
		{
			return new LocalizedString("VerboseFailedToDeleteEapWhileRollingBack", "Ex72029F", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString InvalidRecipient
		{
			get
			{
				return new LocalizedString("InvalidRecipient", "Ex4519A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetMailPublicFolderEntryIdWrongFormat(string entryId)
		{
			return new LocalizedString("ErrorSetMailPublicFolderEntryIdWrongFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				entryId
			});
		}

		public static LocalizedString VerboseTestUserAddress(string emailAddress)
		{
			return new LocalizedString("VerboseTestUserAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		public static LocalizedString SetServerAttributePermissionDeniedException(string entry)
		{
			return new LocalizedString("SetServerAttributePermissionDeniedException", "ExCA25ED", false, true, Strings.ResourceManager, new object[]
			{
				entry
			});
		}

		public static LocalizedString VerboseFailedToRollbackPriority(string id)
		{
			return new LocalizedString("VerboseFailedToRollbackPriority", "Ex2C41E7", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString DetailRpcError(string server, string message)
		{
			return new LocalizedString("DetailRpcError", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				message
			});
		}

		public static LocalizedString AboutToAddServerAdminToLocalAdminGroup(string s)
		{
			return new LocalizedString("AboutToAddServerAdminToLocalAdminGroup", "ExABFD65", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString ServiceHasNoProcessId(string serviceName)
		{
			return new LocalizedString("ServiceHasNoProcessId", "Ex95B1FA", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		public static LocalizedString RcrDatabasesMountedCheckDesc
		{
			get
			{
				return new LocalizedString("RcrDatabasesMountedCheckDesc", "Ex1C439A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNotExchange12Server(string serverName)
		{
			return new LocalizedString("ErrorNotExchange12Server", "Ex65B4EB", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorPolicyNotFound(string name)
		{
			return new LocalizedString("ErrorPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ServiceDisabled(string servicename)
		{
			return new LocalizedString("ServiceDisabled", "Ex8C0A27", false, true, Strings.ResourceManager, new object[]
			{
				servicename
			});
		}

		public static LocalizedString MultipleDialplansWithSameId(object idString)
		{
			return new LocalizedString("MultipleDialplansWithSameId", "Ex6733C2", false, true, Strings.ResourceManager, new object[]
			{
				idString
			});
		}

		public static LocalizedString CasHealthWebAppStartTest(Uri url)
		{
			return new LocalizedString("CasHealthWebAppStartTest", "ExC412AB", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxCrossVersionRehoming(string Identity, string originalDatabase, string newDatabase)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxCrossVersionRehoming", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity,
				originalDatabase,
				newDatabase
			});
		}

		public static LocalizedString RemovingFiles
		{
			get
			{
				return new LocalizedString("RemovingFiles", "Ex75AE43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagNetworkSubnetMoving(string subnetId, string oldNet, string newNet)
		{
			return new LocalizedString("DagNetworkSubnetMoving", "Ex9F8DF6", false, true, Strings.ResourceManager, new object[]
			{
				subnetId,
				oldNet,
				newNet
			});
		}

		public static LocalizedString RoleContributor
		{
			get
			{
				return new LocalizedString("RoleContributor", "Ex94CF6F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SenderIPAddressOverlapsFfoDCIPAddressesId(string ipRange)
		{
			return new LocalizedString("SenderIPAddressOverlapsFfoDCIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		public static LocalizedString ExchangePrincipalNotFoundException(string recipient)
		{
			return new LocalizedString("ExchangePrincipalNotFoundException", "ExB9CFD0", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString SetupProgressCreateRBACRolesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRolesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoVersionMatch
		{
			get
			{
				return new LocalizedString("NoVersionMatch", "ExCB7D7F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OutputFileExists(string filename)
		{
			return new LocalizedString("OutputFileExists", "Ex3A2A85", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		public static LocalizedString messageTopologyDiscoverException(string topologyDiscoverMode)
		{
			return new LocalizedString("messageTopologyDiscoverException", "", false, false, Strings.ResourceManager, new object[]
			{
				topologyDiscoverMode
			});
		}

		public static LocalizedString NewFederationTrustProvisioningService(string partnerSTS)
		{
			return new LocalizedString("NewFederationTrustProvisioningService", "Ex6D70A3", false, true, Strings.ResourceManager, new object[]
			{
				partnerSTS
			});
		}

		public static LocalizedString ErrorSetGroupMailboxInvalidYammerEmailAddress(string parameterValue)
		{
			return new LocalizedString("ErrorSetGroupMailboxInvalidYammerEmailAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterValue
			});
		}

		public static LocalizedString ErrorTeamMailboxSharePointSiteAlreadyLinkedWithOtherTM(string site, string tm)
		{
			return new LocalizedString("ErrorTeamMailboxSharePointSiteAlreadyLinkedWithOtherTM", "", false, false, Strings.ResourceManager, new object[]
			{
				site,
				tm
			});
		}

		public static LocalizedString FailToCreateOrUpdateSubscriptionPrincipalOnEdge(string message, string stack)
		{
			return new LocalizedString("FailToCreateOrUpdateSubscriptionPrincipalOnEdge", "Ex0E6F04", false, true, Strings.ResourceManager, new object[]
			{
				message,
				stack
			});
		}

		public static LocalizedString ClassificationRuleCollectionInvalidProcessorReferenceViolation(string processorIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidProcessorReferenceViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				processorIdRefs
			});
		}

		public static LocalizedString JournalNdrMailboxInJournalRuleRecipient
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxInJournalRuleRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PromptToUpgradeRulesFormat
		{
			get
			{
				return new LocalizedString("PromptToUpgradeRulesFormat", "Ex8DFCD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WritableDatabaseNotFound(string WritableDatabase)
		{
			return new LocalizedString("WritableDatabaseNotFound", "ExBE628E", false, true, Strings.ResourceManager, new object[]
			{
				WritableDatabase
			});
		}

		public static LocalizedString ErrorAliasEmpty
		{
			get
			{
				return new LocalizedString("ErrorAliasEmpty", "Ex8B5CB4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WritableRecipientNotFound(string WritableRecipient)
		{
			return new LocalizedString("WritableRecipientNotFound", "Ex7F559C", false, true, Strings.ResourceManager, new object[]
			{
				WritableRecipient
			});
		}

		public static LocalizedString ErrorFailedToGetDatabaseLastBackupTimes(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseLastBackupTimes", "Ex721D4B", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		public static LocalizedString SetupProgressCreatePrecannedGAL
		{
			get
			{
				return new LocalizedString("SetupProgressCreatePrecannedGAL", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddAccessRuleArgument(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleArgument", "Ex2211CD", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorEdbFileDirectoryNotExist(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFileDirectoryNotExist", "Ex1C4553", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		public static LocalizedString ConnectorValidationFailedId
		{
			get
			{
				return new LocalizedString("ConnectorValidationFailedId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PatternContainsProhibitedLeadingOrTrailingRegexCharacters
		{
			get
			{
				return new LocalizedString("PatternContainsProhibitedLeadingOrTrailingRegexCharacters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageImportJournalRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportJournalRuleCollection", "Ex930EDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DeviceFilterRuleAlreadyExists(string name)
		{
			return new LocalizedString("DeviceFilterRuleAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString InfoGetLicensingUri
		{
			get
			{
				return new LocalizedString("InfoGetLicensingUri", "Ex3C641B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidSummmarizeBy
		{
			get
			{
				return new LocalizedString("InvalidSummmarizeBy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorConflictSaving(string identiy)
		{
			return new LocalizedString("ErrorConflictSaving", "Ex7C8F14", false, true, Strings.ResourceManager, new object[]
			{
				identiy
			});
		}

		public static LocalizedString SetAppConfigValue
		{
			get
			{
				return new LocalizedString("SetAppConfigValue", "Ex0CDBA0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MsiReinstallMustAll
		{
			get
			{
				return new LocalizedString("MsiReinstallMustAll", "ExAE31A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MessageTypeReadReceipt
		{
			get
			{
				return new LocalizedString("MessageTypeReadReceipt", "ExC243B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoAuthenticationWarning(string id, string cmdletName)
		{
			return new LocalizedString("NoAuthenticationWarning", "Ex516162", false, true, Strings.ResourceManager, new object[]
			{
				id,
				cmdletName
			});
		}

		public static LocalizedString InfoLoadIRMConfig
		{
			get
			{
				return new LocalizedString("InfoLoadIRMConfig", "ExC38360", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionDiagnosticTargetDatabaseNotOnTargetServer(string newMaster, string oldMaster)
		{
			return new LocalizedString("MapiTransactionDiagnosticTargetDatabaseNotOnTargetServer", "Ex7262D6", false, true, Strings.ResourceManager, new object[]
			{
				newMaster,
				oldMaster
			});
		}

		public static LocalizedString ErrorEmptyProxyAddressInWLID
		{
			get
			{
				return new LocalizedString("ErrorEmptyProxyAddressInWLID", "Ex2C04E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidApplicationId
		{
			get
			{
				return new LocalizedString("ErrorInvalidApplicationId", "ExFDD85A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateInvalidFQDNValue(string domain)
		{
			return new LocalizedString("CertificateInvalidFQDNValue", "Ex692215", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ExceptionUserObjectAmbiguous
		{
			get
			{
				return new LocalizedString("ExceptionUserObjectAmbiguous", "Ex66555F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StartMidFileCopyDescription
		{
			get
			{
				return new LocalizedString("StartMidFileCopyDescription", "Ex6923C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFreeBusyFolderUnableToCreateFolder
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderUnableToCreateFolder", "ExD02CE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UceContentFilterObjectNotFound
		{
			get
			{
				return new LocalizedString("UceContentFilterObjectNotFound", "ExCB9263", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGroupNotUniqueOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorGroupNotUniqueOnDomainController", "Ex3ADE08", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		public static LocalizedString ConfirmationMessageRemoveResourcePolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveResourcePolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString WKGuidNotFoundRetrying(string guid, string gc, int sec)
		{
			return new LocalizedString("WKGuidNotFoundRetrying", "Ex6C7532", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				gc,
				sec
			});
		}

		public static LocalizedString AuditLogSearchNamePrefix
		{
			get
			{
				return new LocalizedString("AuditLogSearchNamePrefix", "ExD5545F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreatePrecannedAddressLists
		{
			get
			{
				return new LocalizedString("SetupProgressCreatePrecannedAddressLists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GeneratingDelegationToken(string user, string target)
		{
			return new LocalizedString("GeneratingDelegationToken", "ExC339F2", false, true, Strings.ResourceManager, new object[]
			{
				user,
				target
			});
		}

		public static LocalizedString MoreThanOneRecipient
		{
			get
			{
				return new LocalizedString("MoreThanOneRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeSubscription
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSubscription", "Ex1BCA2A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Imap4BeServiceDescription
		{
			get
			{
				return new LocalizedString("Imap4BeServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PerfCounterProcessingFile(string fileName)
		{
			return new LocalizedString("PerfCounterProcessingFile", "Ex64EE4B", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		public static LocalizedString SetupProgressUpdateDatabaseCopy
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateDatabaseCopy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OabVirtualDirectoryAdOrphanFound(string oabvdir)
		{
			return new LocalizedString("OabVirtualDirectoryAdOrphanFound", "ExF789FB", false, true, Strings.ResourceManager, new object[]
			{
				oabvdir
			});
		}

		public static LocalizedString FailedToCreateAdminAuditLogItem(string responseclass, string code, string error)
		{
			return new LocalizedString("FailedToCreateAdminAuditLogItem", "", false, false, Strings.ResourceManager, new object[]
			{
				responseclass,
				code,
				error
			});
		}

		public static LocalizedString SuspendSgcUseRpc(string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("SuspendSgcUseRpc", "ExDCDD46", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportVersion
			});
		}

		public static LocalizedString UmLanguagePackProductCode(Guid guid)
		{
			return new LocalizedString("UmLanguagePackProductCode", "Ex0F234B", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString DatabaseWideTasksExceeded
		{
			get
			{
				return new LocalizedString("DatabaseWideTasksExceeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MatchSubDomainsIsInternalRelayOnly
		{
			get
			{
				return new LocalizedString("MatchSubDomainsIsInternalRelayOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallBridgeheadRoleDescription
		{
			get
			{
				return new LocalizedString("InstallBridgeheadRoleDescription", "ExBEB860", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ResourceCorruptCalConfig
		{
			get
			{
				return new LocalizedString("ResourceCorruptCalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSearchMessageEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSearchMessageEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString messageNSPIOperationException(string operation, int returnValue, string serverId, string userName)
		{
			return new LocalizedString("messageNSPIOperationException", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				returnValue,
				serverId,
				userName
			});
		}

		public static LocalizedString DomainNotReachableWarning(string dom)
		{
			return new LocalizedString("DomainNotReachableWarning", "Ex302EA6", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		public static LocalizedString InvalidPushNotificationSubscriptionExpirationTime(string expiration)
		{
			return new LocalizedString("InvalidPushNotificationSubscriptionExpirationTime", "", false, false, Strings.ResourceManager, new object[]
			{
				expiration
			});
		}

		public static LocalizedString IisTasksApplicationPoolValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksApplicationPoolValidationProperty", "ExABFE80", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageResumeMalwareFilterRecoveryItem(string item)
		{
			return new LocalizedString("ConfirmationMessageResumeMalwareFilterRecoveryItem", "", false, false, Strings.ResourceManager, new object[]
			{
				item
			});
		}

		public static LocalizedString IncompatibleVoiceMailProtectionAndAnalysisSettings
		{
			get
			{
				return new LocalizedString("IncompatibleVoiceMailProtectionAndAnalysisSettings", "Ex551E06", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederProgressMsgOverSpecifiedNetwork(string edbName, string serverName, string privateHostName, long bytesRead, long bytesWritten, long bytesRemaining, string databaseName)
		{
			return new LocalizedString("SeederProgressMsgOverSpecifiedNetwork", "Ex94D404", false, true, Strings.ResourceManager, new object[]
			{
				edbName,
				serverName,
				privateHostName,
				bytesRead,
				bytesWritten,
				bytesRemaining,
				databaseName
			});
		}

		public static LocalizedString CasHealtRemotePowerShellCloseRunspaceSucceeded
		{
			get
			{
				return new LocalizedString("CasHealtRemotePowerShellCloseRunspaceSucceeded", "Ex639FE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAssigneeSecurityGroupNotUnique(string id)
		{
			return new LocalizedString("ErrorAssigneeSecurityGroupNotUnique", "Ex02814D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SpecifiedRecipientNotDistributionGroup(string recipient)
		{
			return new LocalizedString("SpecifiedRecipientNotDistributionGroup", "ExD472A2", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString DuplicateIntraOrganizationConnectorDomain(string domain)
		{
			return new LocalizedString("DuplicateIntraOrganizationConnectorDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString SetupProgressInstallDefaultConnectionFilterContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultConnectionFilterContainer", "Ex8E27C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoRemoteFederatedDomainInLocalOrganizationRelationship(string localName)
		{
			return new LocalizedString("NoRemoteFederatedDomainInLocalOrganizationRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				localName
			});
		}

		public static LocalizedString SuspendSgcFallbackToState(string sg, string exception)
		{
			return new LocalizedString("SuspendSgcFallbackToState", "Ex854681", false, true, Strings.ResourceManager, new object[]
			{
				sg,
				exception
			});
		}

		public static LocalizedString NoUserOrOrganiztionProvidedException
		{
			get
			{
				return new LocalizedString("NoUserOrOrganiztionProvidedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidNameCharacter(string name, string character)
		{
			return new LocalizedString("ErrorInvalidNameCharacter", "ExEEC3BF", false, true, Strings.ResourceManager, new object[]
			{
				name,
				character
			});
		}

		public static LocalizedString ImportCertificateAlreadyExists(string thumbprint)
		{
			return new LocalizedString("ImportCertificateAlreadyExists", "Ex9B1F98", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString FederationCertificateNotFound(string propertyName)
		{
			return new LocalizedString("FederationCertificateNotFound", "Ex8687D7", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString WarningSearchAdminAuditLogOnPreE15(string org)
		{
			return new LocalizedString("WarningSearchAdminAuditLogOnPreE15", "", false, false, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ErrorPSFanInProviderAssemblyNotFound(string file)
		{
			return new LocalizedString("ErrorPSFanInProviderAssemblyNotFound", "ExB58948", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString ErrorInboxRuleMustHaveActions
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleMustHaveActions", "Ex1C3243", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageWebServicesVirtualDirectoryContinue
		{
			get
			{
				return new LocalizedString("ConfirmationMessageWebServicesVirtualDirectoryContinue", "ExD2E33B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationWorkflowServiceDescription
		{
			get
			{
				return new LocalizedString("MigrationWorkflowServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFolderIsMailEnabled
		{
			get
			{
				return new LocalizedString("ErrorFolderIsMailEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerDoesNotHaveADomain(string name)
		{
			return new LocalizedString("ServerDoesNotHaveADomain", "ExFD98ED", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorMailboxDatabaseNotOnE14Server(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnE14Server", "Ex2B7225", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString CasHealthOwaAuthTypeNotCheckedForExternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthTypeNotCheckedForExternalUrl", "ExB0D23A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportCertificateAs12WithoutKey
		{
			get
			{
				return new LocalizedString("ExportCertificateAs12WithoutKey", "ExE2B6C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ChangePasswordInvalidNewPassword
		{
			get
			{
				return new LocalizedString("ChangePasswordInvalidNewPassword", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationBatchIdMissing
		{
			get
			{
				return new LocalizedString("MigrationBatchIdMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateStoreMailboxStateMailboxIdentity(string Database, string StoreMailboxIdentity)
		{
			return new LocalizedString("ConfirmationMessageUpdateStoreMailboxStateMailboxIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				Database,
				StoreMailboxIdentity
			});
		}

		public static LocalizedString CasHealthAdditionalInformation
		{
			get
			{
				return new LocalizedString("CasHealthAdditionalInformation", "Ex564652", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestMigrationServerAvailabilityProtocolArgument
		{
			get
			{
				return new LocalizedString("TestMigrationServerAvailabilityProtocolArgument", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OrganizationNotFederatedException
		{
			get
			{
				return new LocalizedString("OrganizationNotFederatedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplayLagStatusLabelPlayDownReason
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelPlayDownReason", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFederationTrustNotUnique(string trust)
		{
			return new LocalizedString("ErrorFederationTrustNotUnique", "ExB9E47E", false, true, Strings.ResourceManager, new object[]
			{
				trust
			});
		}

		public static LocalizedString ErrorMailboxPlanNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxPlanNotUnique", "Ex417CB5", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorDialPlanNotMatch
		{
			get
			{
				return new LocalizedString("ErrorDialPlanNotMatch", "Ex039CCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentAllADRolesCommon
		{
			get
			{
				return new LocalizedString("SetupComponentAllADRolesCommon", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTenantAdminsCanOnlyAddSubdomains(string domain)
		{
			return new LocalizedString("ErrorTenantAdminsCanOnlyAddSubdomains", "Ex8EAC35", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString DagTaskServerIsNotInDagException(string mailboxServer, string dagName)
		{
			return new LocalizedString("DagTaskServerIsNotInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				dagName
			});
		}

		public static LocalizedString ErrorOfflineAddressBookNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOfflineAddressBookNotUnique", "Ex5941C7", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxRepairRequestDatabase(string database)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRepairRequestDatabase", "Ex1FB5F6", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString QuorumGroupCheckDesc
		{
			get
			{
				return new LocalizedString("QuorumGroupCheckDesc", "Ex95D98B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthSiteName
		{
			get
			{
				return new LocalizedString("CasHealthSiteName", "ExBFBF6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningAuthenticationTypeIsNotChanged
		{
			get
			{
				return new LocalizedString("WarningAuthenticationTypeIsNotChanged", "ExB1EE82", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArbitrationMailboxDefaultDisplayName
		{
			get
			{
				return new LocalizedString("ArbitrationMailboxDefaultDisplayName", "Ex842958", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoreThanOneAggregatedAccountOperationSpecified
		{
			get
			{
				return new LocalizedString("ErrorMoreThanOneAggregatedAccountOperationSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSchemaFile
		{
			get
			{
				return new LocalizedString("SetupProgressSchemaFile", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageImportDlpPolicy
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportDlpPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseVerifyingServer(string server)
		{
			return new LocalizedString("VerboseVerifyingServer", "ExEB80C5", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString CasTransactionResultUndefined
		{
			get
			{
				return new LocalizedString("CasTransactionResultUndefined", "ExCB028F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoNoTiFound
		{
			get
			{
				return new LocalizedString("InfoNoTiFound", "ExFE6392", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransitionStateInactive
		{
			get
			{
				return new LocalizedString("TransitionStateInactive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthStorageError(string serverName, string domain, string user, string errorStr)
		{
			return new LocalizedString("CasHealthStorageError", "Ex4C18BB", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				domain,
				user,
				errorStr
			});
		}

		public static LocalizedString InvalidWKObjectException(string wkentry, string container)
		{
			return new LocalizedString("InvalidWKObjectException", "Ex07B3CA", false, true, Strings.ResourceManager, new object[]
			{
				wkentry,
				container
			});
		}

		public static LocalizedString ErrorArchiveAlreadyPresent(string recipientName)
		{
			return new LocalizedString("ErrorArchiveAlreadyPresent", "Ex735436", false, true, Strings.ResourceManager, new object[]
			{
				recipientName
			});
		}

		public static LocalizedString RpcProxyScenario
		{
			get
			{
				return new LocalizedString("RpcProxyScenario", "Ex0E5535", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClearingCache
		{
			get
			{
				return new LocalizedString("ClearingCache", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasScenarioSyncOne
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncOne", "ExD5CCBF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNotSupportedWritableRecipient
		{
			get
			{
				return new LocalizedString("ErrorNotSupportedWritableRecipient", "ExC144EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorComputerNotFound(string serverName)
		{
			return new LocalizedString("SendConnectorComputerNotFound", "Ex76894A", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString PromptToOverwriteRulesOnImport
		{
			get
			{
				return new LocalizedString("PromptToOverwriteRulesOnImport", "Ex6A8C5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPrimarySmtpAndEmailAddressesSpecified
		{
			get
			{
				return new LocalizedString("ErrorPrimarySmtpAndEmailAddressesSpecified", "Ex4DE4FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FormsAuthenticationMarkPathCloseError(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationMarkPathCloseError", "ExB3BE58", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		public static LocalizedString WarningCouldNotCreateRoleAssignment(string id, string roleGroupId)
		{
			return new LocalizedString("WarningCouldNotCreateRoleAssignment", "ExFA8E90", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleGroupId
			});
		}

		public static LocalizedString ErrorAddressListNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListNotUnique", "Ex15A653", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString WarningInvalidRoleAfterUpgrade(string roleId, string error)
		{
			return new LocalizedString("WarningInvalidRoleAfterUpgrade", "Ex3BE227", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				error
			});
		}

		public static LocalizedString IPListEntryExists(string IPRange)
		{
			return new LocalizedString("IPListEntryExists", "Ex3C5E8D", false, true, Strings.ResourceManager, new object[]
			{
				IPRange
			});
		}

		public static LocalizedString ErrorRemoveMailboxWithJournalArchiveWithDirSync
		{
			get
			{
				return new LocalizedString("ErrorRemoveMailboxWithJournalArchiveWithDirSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ModerateActionMustBeTheOnlyAction
		{
			get
			{
				return new LocalizedString("ModerateActionMustBeTheOnlyAction", "ExAD67EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningSiteFolderCheckTaskNotAvailableOnTiServer(string server)
		{
			return new LocalizedString("WarningSiteFolderCheckTaskNotAvailableOnTiServer", "ExF26642", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxArbitration(string Name, string Database, string Arbitration, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxArbitration", "Ex2EC39E", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				Arbitration,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString TransitionInfoLabelCurrentState
		{
			get
			{
				return new LocalizedString("TransitionInfoLabelCurrentState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressValidatingFileLocations
		{
			get
			{
				return new LocalizedString("ProgressValidatingFileLocations", "Ex3CCF44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MultipleDefaultFoldersInPolicyException(string policyName, string userName)
		{
			return new LocalizedString("MultipleDefaultFoldersInPolicyException", "ExECABBA", false, true, Strings.ResourceManager, new object[]
			{
				policyName,
				userName
			});
		}

		public static LocalizedString ValidationDivergenceMustBeNonHalting(string objectId)
		{
			return new LocalizedString("ValidationDivergenceMustBeNonHalting", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString ComAdminUninstallOleConverter
		{
			get
			{
				return new LocalizedString("ComAdminUninstallOleConverter", "Ex7B15C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetRuleSyncAcrossDifferentVersionsNeeded
		{
			get
			{
				return new LocalizedString("SetRuleSyncAcrossDifferentVersionsNeeded", "ExB7D4E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailureToGetDelegationToken(string exceptionMessage)
		{
			return new LocalizedString("FailureToGetDelegationToken", "Ex146D21", false, true, Strings.ResourceManager, new object[]
			{
				exceptionMessage
			});
		}

		public static LocalizedString ErrorDlpTemplateDuplicateParameter(string parameterName)
		{
			return new LocalizedString("ErrorDlpTemplateDuplicateParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString DatabasesCopyKeepingUpCheckDesc
		{
			get
			{
				return new LocalizedString("DatabasesCopyKeepingUpCheckDesc", "Ex656458", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidStartDateOffset
		{
			get
			{
				return new LocalizedString("InvalidStartDateOffset", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoDeviceFilterByName(string name)
		{
			return new LocalizedString("NoDeviceFilterByName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ToomanyDatabasesForServer(string serverName, string number)
		{
			return new LocalizedString("ToomanyDatabasesForServer", "Ex820C4D", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				number
			});
		}

		public static LocalizedString MigrationJobNotFound(string jobName)
		{
			return new LocalizedString("MigrationJobNotFound", "ExFABDDC", false, true, Strings.ResourceManager, new object[]
			{
				jobName
			});
		}

		public static LocalizedString WarningSupervisionTagsRemoved
		{
			get
			{
				return new LocalizedString("WarningSupervisionTagsRemoved", "Ex3057C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdTopologyServiceWithOldNameInstalled(string name)
		{
			return new LocalizedString("AdTopologyServiceWithOldNameInstalled", "ExF11988", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorExceededMaxClassificationsLimit(int limit)
		{
			return new LocalizedString("ErrorExceededMaxClassificationsLimit", "ExF64F4E", false, true, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		public static LocalizedString LogSourceServerRusReferral(string sourceDC, string details)
		{
			return new LocalizedString("LogSourceServerRusReferral", "ExF145A7", false, true, Strings.ResourceManager, new object[]
			{
				sourceDC,
				details
			});
		}

		public static LocalizedString NoDCsAvailableException(string dom, string site)
		{
			return new LocalizedString("NoDCsAvailableException", "Ex547B6C", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				site
			});
		}

		public static LocalizedString SetupProgressEnableWMIInbound
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIInbound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DefaultAllRooms
		{
			get
			{
				return new LocalizedString("DefaultAllRooms", "Ex323250", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString JournalingParameterErrorGccWithoutRecipient
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccWithoutRecipient", "Ex3CC8B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxCalendarConfigurationNotAllowedParameterValue(string param, string value, string allowedStrs)
		{
			return new LocalizedString("ErrorMailboxCalendarConfigurationNotAllowedParameterValue", "", false, false, Strings.ResourceManager, new object[]
			{
				param,
				value,
				allowedStrs
			});
		}

		public static LocalizedString DagTaskProblemChangingQuorumException(string clusterName, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumException", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				ex
			});
		}

		public static LocalizedString WarningSetMailboxLitigationHoldDelay(double minutes)
		{
			return new LocalizedString("WarningSetMailboxLitigationHoldDelay", "Ex25E7AA", false, true, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		public static LocalizedString ConfirmationMessageSetInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageSetInboxRule", "ExD979D6", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		public static LocalizedString TenantAdminCannotInvokeHotmailOperation
		{
			get
			{
				return new LocalizedString("TenantAdminCannotInvokeHotmailOperation", "ExCDCEA5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxContactSharePointSiteWithCorrelationId(string siteUrl, string error, string correlationId)
		{
			return new LocalizedString("ErrorTeamMailboxContactSharePointSiteWithCorrelationId", "", false, false, Strings.ResourceManager, new object[]
			{
				siteUrl,
				error,
				correlationId
			});
		}

		public static LocalizedString ErrorRoleAssignmentConstraintViolationOnScopes(string assignmentName, string roleName)
		{
			return new LocalizedString("ErrorRoleAssignmentConstraintViolationOnScopes", "ExE0C5D0", false, true, Strings.ResourceManager, new object[]
			{
				assignmentName,
				roleName
			});
		}

		public static LocalizedString DlpPolicyInvalidCollectionError
		{
			get
			{
				return new LocalizedString("DlpPolicyInvalidCollectionError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationMissingParameterException(string parameter)
		{
			return new LocalizedString("MigrationMissingParameterException", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString UCWADiscoveryUrlEmpty
		{
			get
			{
				return new LocalizedString("UCWADiscoveryUrlEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToFindFolderInMailbox(string folder)
		{
			return new LocalizedString("ErrorFailedToFindFolderInMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		public static LocalizedString ErrorOpeningCertificateStore(string store)
		{
			return new LocalizedString("ErrorOpeningCertificateStore", "Ex19907F", false, true, Strings.ResourceManager, new object[]
			{
				store
			});
		}

		public static LocalizedString ConfirmationRemoveSupervisionListEntry(string entry, string tag)
		{
			return new LocalizedString("ConfirmationRemoveSupervisionListEntry", "Ex073E9E", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		public static LocalizedString ActiveDirectorySearchScenario
		{
			get
			{
				return new LocalizedString("ActiveDirectorySearchScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDeprovisionedTargetPassedWithoutComplete(string identity)
		{
			return new LocalizedString("ErrorDeprovisionedTargetPassedWithoutComplete", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString PropertiesDiffer(string propertyName, string localName, string localUri, string remoteName, string remoteUri)
		{
			return new LocalizedString("PropertiesDiffer", "Ex4AC53E", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				localName,
				localUri,
				remoteName,
				remoteUri
			});
		}

		public static LocalizedString ConfirmationMessageStartOrganizationPilot(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageStartOrganizationPilot", "", false, false, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		public static LocalizedString CertificateValid(string propertyName)
		{
			return new LocalizedString("CertificateValid", "Ex408A51", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString DagFswUnableToRemoveWitnessDirectoryException(string fswMachine, string directory, Exception ex)
		{
			return new LocalizedString("DagFswUnableToRemoveWitnessDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				directory,
				ex
			});
		}

		public static LocalizedString InfoGetCertificationUri
		{
			get
			{
				return new LocalizedString("InfoGetCertificationUri", "Ex42274B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSCTsCannotBeMigrated(string identity)
		{
			return new LocalizedString("ErrorSCTsCannotBeMigrated", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString VerboseCheckingScopeFailed(string details)
		{
			return new LocalizedString("VerboseCheckingScopeFailed", "Ex8E8ADF", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString UCWADiscoveryUrlException
		{
			get
			{
				return new LocalizedString("UCWADiscoveryUrlException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetServiceInstanceInfo(string name)
		{
			return new LocalizedString("ConfirmationMessageSetServiceInstanceInfo", "Ex9D824A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorNoAggregatedAccountOperationSpecified
		{
			get
			{
				return new LocalizedString("ErrorNoAggregatedAccountOperationSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateWasNotFound
		{
			get
			{
				return new LocalizedString("CertificateWasNotFound", "ExCAB249", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSystemFolderPathNotAvailable
		{
			get
			{
				return new LocalizedString("ErrorSystemFolderPathNotAvailable", "ExDB67B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressList", "Ex052798", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetTextMessagingAccount(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTextMessagingAccount", "Ex3A0D8C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorTeamMailboxSetShowInMyClient(string tm, string error)
		{
			return new LocalizedString("ErrorTeamMailboxSetShowInMyClient", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				error
			});
		}

		public static LocalizedString UmLanguagePackDescription(string lang)
		{
			return new LocalizedString("UmLanguagePackDescription", "ExA2D1B4", false, true, Strings.ResourceManager, new object[]
			{
				lang
			});
		}

		public static LocalizedString CasHealthOwaAuthTypeCheckedForInternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthTypeCheckedForInternalUrl", "ExF4771B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseServiceValidatorUrl(string name, string url)
		{
			return new LocalizedString("VerboseServiceValidatorUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				url
			});
		}

		public static LocalizedString NoDeviceFilterRuleByNameAndCharacteristic(string filterName, string ruleName, string characteristic)
		{
			return new LocalizedString("NoDeviceFilterRuleByNameAndCharacteristic", "", false, false, Strings.ResourceManager, new object[]
			{
				filterName,
				ruleName,
				characteristic
			});
		}

		public static LocalizedString ErrorCannotFindDomainController(string fqdn)
		{
			return new LocalizedString("ErrorCannotFindDomainController", "ExDBF5CF", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		public static LocalizedString GetQueueDigestForestParameterCannotBeFalse
		{
			get
			{
				return new LocalizedString("GetQueueDigestForestParameterCannotBeFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningUnableToResolveUser(string userName, string exception)
		{
			return new LocalizedString("WarningUnableToResolveUser", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				exception
			});
		}

		public static LocalizedString WaitingForClusterServiceToStop(string serverName)
		{
			return new LocalizedString("WaitingForClusterServiceToStop", "ExF4359C", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ExceptionEmptyStringNotAllowed
		{
			get
			{
				return new LocalizedString("ExceptionEmptyStringNotAllowed", "ExEEE2D6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewActiveSyncDeviceAccessRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewActiveSyncDeviceAccessRule", "ExDD300D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MtrtAddHeader
		{
			get
			{
				return new LocalizedString("MtrtAddHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotUpdateServiceInstanceMap(string reason)
		{
			return new LocalizedString("CouldNotUpdateServiceInstanceMap", "Ex9239C2", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString AnonymousUser
		{
			get
			{
				return new LocalizedString("AnonymousUser", "ExBAC5E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId
		{
			get
			{
				return new LocalizedString("CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaAuthenticationVerificationError
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthenticationVerificationError", "Ex7F6B92", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningSettingsNotModifiable
		{
			get
			{
				return new LocalizedString("WarningSettingsNotModifiable", "Ex3A2B83", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallDagMgmtServiceTask
		{
			get
			{
				return new LocalizedString("InstallDagMgmtServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DataClassificationDnIdentityNotSupported
		{
			get
			{
				return new LocalizedString("DataClassificationDnIdentityNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToMoveUCSMigratedMailboxToDownlevelError(string name)
		{
			return new LocalizedString("UnableToMoveUCSMigratedMailboxToDownlevelError", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString InvalidRuleSearchFilterEmpty
		{
			get
			{
				return new LocalizedString("InvalidRuleSearchFilterEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidPage
		{
			get
			{
				return new LocalizedString("InvalidPage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserWithMatchingNetIdAndDifferentWindowsLiveIdExists(string liveID, string recipient)
		{
			return new LocalizedString("ErrorUserWithMatchingNetIdAndDifferentWindowsLiveIdExists", "Ex0700FF", false, true, Strings.ResourceManager, new object[]
			{
				liveID,
				recipient
			});
		}

		public static LocalizedString CookieExpiredException(Guid oldDc, Guid newDc)
		{
			return new LocalizedString("CookieExpiredException", "", false, false, Strings.ResourceManager, new object[]
			{
				oldDc,
				newDc
			});
		}

		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter
		{
			get
			{
				return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionShortErrorMsgFromException(string exceptionType, string exceptionMessage)
		{
			return new LocalizedString("MapiTransactionShortErrorMsgFromException", "Ex438E98", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage
			});
		}

		public static LocalizedString ServerNotInDagError(string serverName)
		{
			return new LocalizedString("ServerNotInDagError", "Ex889403", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorRemoveMailuserWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorRemoveMailuserWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidEndpointParameterReasonInvalidProperty
		{
			get
			{
				return new LocalizedString("ErrorInvalidEndpointParameterReasonInvalidProperty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Pop3BeServiceDescription
		{
			get
			{
				return new LocalizedString("Pop3BeServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DefaultAllGroups
		{
			get
			{
				return new LocalizedString("DefaultAllGroups", "Ex6802AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDisableMailboxWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorDisableMailboxWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewOutlookProtectionRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewOutlookProtectionRule", "ExCC885E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ProgressActivityGetFederationMetadata
		{
			get
			{
				return new LocalizedString("ProgressActivityGetFederationMetadata", "ExE1003E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidPrimaryLeaseLocation
		{
			get
			{
				return new LocalizedString("InvalidPrimaryLeaseLocation", "ExD1A006", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidFilterProperty(string propertyName)
		{
			return new LocalizedString("ErrorInvalidFilterProperty", "ExF4271E", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString InvalidSource
		{
			get
			{
				return new LocalizedString("InvalidSource", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LanguagePackPerfCounterMergeEnd
		{
			get
			{
				return new LocalizedString("LanguagePackPerfCounterMergeEnd", "Ex607184", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CheckServerConfiguration
		{
			get
			{
				return new LocalizedString("CheckServerConfiguration", "ExE02A2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToDetermineMdbQueue(string identity)
		{
			return new LocalizedString("ErrorUnableToDetermineMdbQueue", "Ex2E52E1", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageNewMobileMailboxDefaultPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMobileMailboxDefaultPolicy", "Ex487DD6", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ErrorServicePlanHasNoMatchingMailboxPlan(string name)
		{
			return new LocalizedString("ErrorServicePlanHasNoMatchingMailboxPlan", "Ex2A0AE6", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString UpgradedSearchObjectDescription
		{
			get
			{
				return new LocalizedString("UpgradedSearchObjectDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotMoveDiscoveryMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveDiscoveryMailboxesDownlevel", "Ex086679", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString CopyStatusSinglePageRestore
		{
			get
			{
				return new LocalizedString("CopyStatusSinglePageRestore", "ExA62DD4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToUpdateStoreMailboxInformationException(string identity)
		{
			return new LocalizedString("ErrorFailedToUpdateStoreMailboxInformationException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MailboxAdminDisplayVersionCouldNotBeDisplayed(string name, string error)
		{
			return new LocalizedString("MailboxAdminDisplayVersionCouldNotBeDisplayed", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				error
			});
		}

		public static LocalizedString IgnoreRequireTLSConflict
		{
			get
			{
				return new LocalizedString("IgnoreRequireTLSConflict", "Ex595EBE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCompleteFlagRequired(string identity)
		{
			return new LocalizedString("ErrorCompleteFlagRequired", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString AcceptedDomainsCannotBeRoutedByOutboundConnector(string domains)
		{
			return new LocalizedString("AcceptedDomainsCannotBeRoutedByOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				domains
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxExportRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxExportRequest", "ExC1197A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CasHealthPowerShellAppPoolNotRunning(string appPool)
		{
			return new LocalizedString("CasHealthPowerShellAppPoolNotRunning", "Ex232596", false, true, Strings.ResourceManager, new object[]
			{
				appPool
			});
		}

		public static LocalizedString ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EmptyMesssageWillBeCreated
		{
			get
			{
				return new LocalizedString("EmptyMesssageWillBeCreated", "Ex21BB6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SubjectCnNotValidFQDN
		{
			get
			{
				return new LocalizedString("SubjectCnNotValidFQDN", "ExF93996", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArbitrationMailboxNotSet(string recipient)
		{
			return new LocalizedString("ErrorArbitrationMailboxNotSet", "Ex2BF159", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString CannotSetProxy(string proxy)
		{
			return new LocalizedString("CannotSetProxy", "Ex9BDF58", false, true, Strings.ResourceManager, new object[]
			{
				proxy
			});
		}

		public static LocalizedString ConfirmationMessageUpdatePublicFolderMailbox(string mbxIdentity)
		{
			return new LocalizedString("ConfirmationMessageUpdatePublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxIdentity
			});
		}

		public static LocalizedString WarningExpiryDateBeforeCurrentDate
		{
			get
			{
				return new LocalizedString("WarningExpiryDateBeforeCurrentDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExistingRecipientInActionsCannotBeDistributionGroup(string ruleName, string recipient)
		{
			return new LocalizedString("ErrorExistingRecipientInActionsCannotBeDistributionGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName,
				recipient
			});
		}

		public static LocalizedString WarningNoMyBaseOptionsRole(string roleType)
		{
			return new LocalizedString("WarningNoMyBaseOptionsRole", "ExBCAF72", false, true, Strings.ResourceManager, new object[]
			{
				roleType
			});
		}

		public static LocalizedString MtrtRequireTLS
		{
			get
			{
				return new LocalizedString("MtrtRequireTLS", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorSourceServersSetForEdge
		{
			get
			{
				return new LocalizedString("SendConnectorSourceServersSetForEdge", "ExE5ED0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SecurityDescriptorAccessDeniedException(string dn)
		{
			return new LocalizedString("SecurityDescriptorAccessDeniedException", "ExAAC3D3", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ErrorInvalidCertificateData
		{
			get
			{
				return new LocalizedString("ErrorInvalidCertificateData", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmEnableCertForUMCR(string thumbprint)
		{
			return new LocalizedString("ConfirmEnableCertForUMCR", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorDCIsNotGC(string hostName)
		{
			return new LocalizedString("ErrorDCIsNotGC", "Ex0797E9", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		public static LocalizedString ErrorCannotMoveMailboxesWithInPlaceHoldDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveMailboxesWithInPlaceHoldDownlevel", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString NoKeyIDInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoKeyIDInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaAuthenticationMethodCouldNotFindExtensionException(string groupID, string executableName)
		{
			return new LocalizedString("OwaAuthenticationMethodCouldNotFindExtensionException", "ExE6D7A9", false, true, Strings.ResourceManager, new object[]
			{
				groupID,
				executableName
			});
		}

		public static LocalizedString messageFatalAutodiscoverException(string failure)
		{
			return new LocalizedString("messageFatalAutodiscoverException", "", false, false, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		public static LocalizedString SetupProgressDistributionListCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressDistributionListCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceCopyLocation(string attributeName, string serverLocation, string databaseLocation)
		{
			return new LocalizedString("Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceCopyLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				attributeName,
				serverLocation,
				databaseLocation
			});
		}

		public static LocalizedString GetDbcsDetectReplayServiceDown(string serrver, string error)
		{
			return new LocalizedString("GetDbcsDetectReplayServiceDown", "ExEC7E62", false, true, Strings.ResourceManager, new object[]
			{
				serrver,
				error
			});
		}

		public static LocalizedString ExchangeUpgradeBucketSourceVersionBiggerThanTarget(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketSourceVersionBiggerThanTarget", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString ConfirmationMessageIRMConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageIRMConfig", "Ex117636", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RpcHttpE2k3Servers(string servers)
		{
			return new LocalizedString("RpcHttpE2k3Servers", "ExC1389C", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		public static LocalizedString NoRecipientsForRecipientId(string recipId)
		{
			return new LocalizedString("NoRecipientsForRecipientId", "Ex023273", false, true, Strings.ResourceManager, new object[]
			{
				recipId
			});
		}

		public static LocalizedString ErrorCannotCreateARoleFromADeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotCreateARoleFromADeprecatedRole", "Ex15C6CA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString DebugStartGeneratingUniqueSamAccountName
		{
			get
			{
				return new LocalizedString("DebugStartGeneratingUniqueSamAccountName", "Ex75885B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotFindAutodiscoverService
		{
			get
			{
				return new LocalizedString("CouldNotFindAutodiscoverService", "ExB93DE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidAuditAdminOperationType
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuditAdminOperationType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerNotUnique(string errorMsg)
		{
			return new LocalizedString("ServerNotUnique", "Ex2D9DB4", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString ResumeSgcFallbackToState(string db, string exception)
		{
			return new LocalizedString("ResumeSgcFallbackToState", "Ex2311FB", false, true, Strings.ResourceManager, new object[]
			{
				db,
				exception
			});
		}

		public static LocalizedString ErrorAuthServerCannotSwitchType
		{
			get
			{
				return new LocalizedString("ErrorAuthServerCannotSwitchType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogProcessExitCode(string processName, int exitCode)
		{
			return new LocalizedString("LogProcessExitCode", "ExE61E4B", false, true, Strings.ResourceManager, new object[]
			{
				processName,
				exitCode
			});
		}

		public static LocalizedString VirtualDirectoryTypeNotApplicable
		{
			get
			{
				return new LocalizedString("VirtualDirectoryTypeNotApplicable", "ExA779C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RmsOnlineUrlsNotPresent
		{
			get
			{
				return new LocalizedString("RmsOnlineUrlsNotPresent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StartPreConfigurationDescription
		{
			get
			{
				return new LocalizedString("StartPreConfigurationDescription", "Ex648516", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAssociatedMoveRequestExists
		{
			get
			{
				return new LocalizedString("ErrorAssociatedMoveRequestExists", "Ex7C5E9D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RootNodeDoesNotMatch(string specifiedRoot, string fileName)
		{
			return new LocalizedString("RootNodeDoesNotMatch", "Ex1F7988", false, true, Strings.ResourceManager, new object[]
			{
				specifiedRoot,
				fileName
			});
		}

		public static LocalizedString MigrationStartAfterRequiresAutoComplete
		{
			get
			{
				return new LocalizedString("MigrationStartAfterRequiresAutoComplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SomeMapiTransactionsFailedPrefix
		{
			get
			{
				return new LocalizedString("SomeMapiTransactionsFailedPrefix", "Ex167DFE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCheckingTpdFromRmsOnline
		{
			get
			{
				return new LocalizedString("InfoCheckingTpdFromRmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TSProcessNotFound(string serverName)
		{
			return new LocalizedString("TSProcessNotFound", "Ex8F1480", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString TenantNotificationUnavailableEventMessage
		{
			get
			{
				return new LocalizedString("TenantNotificationUnavailableEventMessage", "Ex5F6BA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDefaultOABNameFound(string name, string id)
		{
			return new LocalizedString("VerboseDefaultOABNameFound", "Ex4CA2D9", false, true, Strings.ResourceManager, new object[]
			{
				name,
				id
			});
		}

		public static LocalizedString DkmContainerAlreadyExists(string containerName)
		{
			return new LocalizedString("DkmContainerAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				containerName
			});
		}

		public static LocalizedString ErrorCleanupRequestedAtWrongRequestedState(string identity, string currentRequestedState, string expectedRequestedState)
		{
			return new LocalizedString("ErrorCleanupRequestedAtWrongRequestedState", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				currentRequestedState,
				expectedRequestedState
			});
		}

		public static LocalizedString DagTaskRestoreDagCouldNotOpenCluster
		{
			get
			{
				return new LocalizedString("DagTaskRestoreDagCouldNotOpenCluster", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToConnectToStore(string servername)
		{
			return new LocalizedString("ErrorFailedToConnectToStore", "Ex1F5699", false, true, Strings.ResourceManager, new object[]
			{
				servername
			});
		}

		public static LocalizedString GetCopyStatusRpcException(string server, string databaseName, string errorMessage)
		{
			return new LocalizedString("GetCopyStatusRpcException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				databaseName,
				errorMessage
			});
		}

		public static LocalizedString ConfirmationMessageSetIPAllowListConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPAllowListConfig", "Ex7EC7F0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UpdateManageDelegation2ProvisioningInDNS
		{
			get
			{
				return new LocalizedString("UpdateManageDelegation2ProvisioningInDNS", "Ex75B6DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorIgnoreDefaultScopeAndDCSetTogether
		{
			get
			{
				return new LocalizedString("ErrorIgnoreDefaultScopeAndDCSetTogether", "ExC086A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorUnableToDetermineContentMailbox(string identity, Guid contentMailboxGuid)
		{
			return new LocalizedString("ErrorUnableToDetermineContentMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				contentMailboxGuid
			});
		}

		public static LocalizedString CheckPointProgressed(uint previous, uint current)
		{
			return new LocalizedString("CheckPointProgressed", "Ex07F7A5", false, true, Strings.ResourceManager, new object[]
			{
				previous,
				current
			});
		}

		public static LocalizedString CasHealthOwaNoCasArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoCasArgumentError", "ExD4F288", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEnableMailPublicFolderNotAllowed(string path)
		{
			return new LocalizedString("ErrorEnableMailPublicFolderNotAllowed", "ExFF96CB", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString HybridMailflowOutboundConnectorComment
		{
			get
			{
				return new LocalizedString("HybridMailflowOutboundConnectorComment", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyMissingEnString(string elementName, string elementValue)
		{
			return new LocalizedString("DlpPolicyMissingEnString", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				elementValue
			});
		}

		public static LocalizedString ErrorCompleteAfter(int days)
		{
			return new LocalizedString("ErrorCompleteAfter", "", false, false, Strings.ResourceManager, new object[]
			{
				days
			});
		}

		public static LocalizedString InstallingGlobalThrottlingPolicy(string name)
		{
			return new LocalizedString("InstallingGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorGroupNameContainBlockedWords(string blockedWord)
		{
			return new LocalizedString("ErrorGroupNameContainBlockedWords", "ExB69740", false, true, Strings.ResourceManager, new object[]
			{
				blockedWord
			});
		}

		public static LocalizedString ExchangeSettingsExistingSettingNotUpdated(string key, string val, string groupname)
		{
			return new LocalizedString("ExchangeSettingsExistingSettingNotUpdated", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				val,
				groupname
			});
		}

		public static LocalizedString WarningSetMailboxRetentionHoldDataFAI(string error)
		{
			return new LocalizedString("WarningSetMailboxRetentionHoldDataFAI", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ExceptionRegistryKeyNotFound(string key)
		{
			return new LocalizedString("ExceptionRegistryKeyNotFound", "Ex653748", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString PublishManageDelegation2ProvisioningInDNS
		{
			get
			{
				return new LocalizedString("PublishManageDelegation2ProvisioningInDNS", "Ex711067", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetELCFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetELCFolder", "Ex7416B8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InvalidActionSequence
		{
			get
			{
				return new LocalizedString("InvalidActionSequence", "ExCEFB18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoMatchingSmtpProxy(string mailboxName, string targetDeliveryDomain)
		{
			return new LocalizedString("ErrorNoMatchingSmtpProxy", "ExE4815C", false, true, Strings.ResourceManager, new object[]
			{
				mailboxName,
				targetDeliveryDomain
			});
		}

		public static LocalizedString CannotUseDefaultAttributesForExchange2007OAB
		{
			get
			{
				return new LocalizedString("CannotUseDefaultAttributesForExchange2007OAB", "Ex0994BB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetPolicyRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorSetPolicyRoleAssignment", "ExA4FEAC", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		public static LocalizedString ImproperTypeForThisIdParameter
		{
			get
			{
				return new LocalizedString("ImproperTypeForThisIdParameter", "Ex5A6EED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRemoteDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRemoteDomain", "ExBDF429", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ProtocolTransactionsSucceeded(string protocol)
		{
			return new LocalizedString("ProtocolTransactionsSucceeded", "Ex7A5FF4", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		public static LocalizedString AlsEmailBodyAdminCmdlets(string cmdlets)
		{
			return new LocalizedString("AlsEmailBodyAdminCmdlets", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlets
			});
		}

		public static LocalizedString SetupProgressStoppingWatchDogService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingWatchDogService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsUpdateScopeForest(string groupName, string id)
		{
			return new LocalizedString("ExchangeSettingsUpdateScopeForest", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				id
			});
		}

		public static LocalizedString ErrorPreventCompletionCannotSet
		{
			get
			{
				return new LocalizedString("ErrorPreventCompletionCannotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaAuthenticationMethodFoundMoreThanOneExtensionException(string groupID, string executableName, string matches)
		{
			return new LocalizedString("OwaAuthenticationMethodFoundMoreThanOneExtensionException", "ExBF38A8", false, true, Strings.ResourceManager, new object[]
			{
				groupID,
				executableName,
				matches
			});
		}

		public static LocalizedString ConfirmationMessageSetEdgeSyncServiceConfig(string id)
		{
			return new LocalizedString("ConfirmationMessageSetEdgeSyncServiceConfig", "Ex404B78", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxWithArchive(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxWithArchive", "Ex11B075", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ExSGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExSGroupNotFoundException", "Ex6F8E35", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString ErrorTaskRunningLocation
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocation", "Ex6F3392", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFixingObject(string id)
		{
			return new LocalizedString("VerboseFixingObject", "ExF2FFA6", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorTenantOrgOutOfDate
		{
			get
			{
				return new LocalizedString("ErrorTenantOrgOutOfDate", "ExA8EE64", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingComplianceAuditService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingComplianceAuditService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRetentionIdConflictsWithRetentionPolicy(string retentionId, string policyName)
		{
			return new LocalizedString("ErrorRetentionIdConflictsWithRetentionPolicy", "Ex72BDE3", false, true, Strings.ResourceManager, new object[]
			{
				retentionId,
				policyName
			});
		}

		public static LocalizedString ConfirmationMessageSetIPBlockListProvidersConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPBlockListProvidersConfig", "Ex38A579", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplicationCheckFatalException(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckFatalException", "", false, false, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		public static LocalizedString EdgeSyncServiceConfigMissing(string site)
		{
			return new LocalizedString("EdgeSyncServiceConfigMissing", "ExFC6140", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString UninstallMailboxReplicationServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailboxReplicationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressAutoReplyEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressAutoReplyEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FileShareWitnessPathNotSet(string resName)
		{
			return new LocalizedString("FileShareWitnessPathNotSet", "ExB48A97", false, true, Strings.ResourceManager, new object[]
			{
				resName
			});
		}

		public static LocalizedString ConfirmationMessageResumeDatabaseCopyReplicationIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageResumeDatabaseCopyReplicationIdentity", "Ex91E6D8", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		public static LocalizedString InvalidMessageDataClassificationParameterMinGreaterThanMax(string paramName1, string paramName2)
		{
			return new LocalizedString("InvalidMessageDataClassificationParameterMinGreaterThanMax", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName1,
				paramName2
			});
		}

		public static LocalizedString SynNowCanOnlyRunAgainstHub
		{
			get
			{
				return new LocalizedString("SynNowCanOnlyRunAgainstHub", "ExB6265F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationInvalidBatchIdForUser(string user)
		{
			return new LocalizedString("MigrationInvalidBatchIdForUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString UninstallKeynoteConnectorServiceTask
		{
			get
			{
				return new LocalizedString("UninstallKeynoteConnectorServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoReceiveConnectors(string fqdn)
		{
			return new LocalizedString("NoReceiveConnectors", "Ex6A4F1C", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		public static LocalizedString ProgressStatusRemovingManagementRoleTree
		{
			get
			{
				return new LocalizedString("ProgressStatusRemovingManagementRoleTree", "Ex314E56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxRelocation(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRelocation", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CasTransactionResultSkipped
		{
			get
			{
				return new LocalizedString("CasTransactionResultSkipped", "Ex6ED722", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseLogFolderPathUniqueUnderDAGCondition(string path)
		{
			return new LocalizedString("VerboseLogFolderPathUniqueUnderDAGCondition", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ErrorMemberNameUnavailableUsedAlternateAlias(string memberName)
		{
			return new LocalizedString("ErrorMemberNameUnavailableUsedAlternateAlias", "ExD83099", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString RemoveDefaultOAB(string oabId)
		{
			return new LocalizedString("RemoveDefaultOAB", "ExB081E1", false, true, Strings.ResourceManager, new object[]
			{
				oabId
			});
		}

		public static LocalizedString ErrorNoAdministratorKeyFound(string trustName)
		{
			return new LocalizedString("ErrorNoAdministratorKeyFound", "Ex092136", false, true, Strings.ResourceManager, new object[]
			{
				trustName
			});
		}

		public static LocalizedString messageGlobalLocatorServiceWCFExceptionThrown(string e)
		{
			return new LocalizedString("messageGlobalLocatorServiceWCFExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString ErrorAgentCannotBeDisabled
		{
			get
			{
				return new LocalizedString("ErrorAgentCannotBeDisabled", "Ex4394AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CreateSharedConfigurationRequiredForTT
		{
			get
			{
				return new LocalizedString("CreateSharedConfigurationRequiredForTT", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveModeratorMailbox(string id)
		{
			return new LocalizedString("ErrorRemoveModeratorMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupProgressStoppingAdam
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingAdam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaGotIsaLogonPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGotIsaLogonPage", "Ex63AC4A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CreateActiveSyncOraganizationSettings
		{
			get
			{
				return new LocalizedString("CreateActiveSyncOraganizationSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewELCFolder(string Name, string FolderName)
		{
			return new LocalizedString("ConfirmationMessageNewELCFolder", "ExAB79D3", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				FolderName
			});
		}

		public static LocalizedString InheritedAceIgnored
		{
			get
			{
				return new LocalizedString("InheritedAceIgnored", "ExE4A606", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningMailboxNeverBeenLoggedOn(string mailbox, string id)
		{
			return new LocalizedString("WarningMailboxNeverBeenLoggedOn", "ExC85C97", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				id
			});
		}

		public static LocalizedString CasHealthOwaUserColon(string user)
		{
			return new LocalizedString("CasHealthOwaUserColon", "ExF847AA", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString CannotFindXPath(string file, string xpath)
		{
			return new LocalizedString("CannotFindXPath", "Ex42B18C", false, true, Strings.ResourceManager, new object[]
			{
				file,
				xpath
			});
		}

		public static LocalizedString WarningManagementWebServiceVDirCreated(string identity)
		{
			return new LocalizedString("WarningManagementWebServiceVDirCreated", "Ex037B92", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ELCFolderAlreadyUpgraded(string folderName, string rptName)
		{
			return new LocalizedString("ELCFolderAlreadyUpgraded", "Ex07E6FE", false, true, Strings.ResourceManager, new object[]
			{
				folderName,
				rptName
			});
		}

		public static LocalizedString ErrorCanNotAddMailboxToWellKnownHostedMailboxSG(string mailbox, string sgName, string org, string error)
		{
			return new LocalizedString("ErrorCanNotAddMailboxToWellKnownHostedMailboxSG", "Ex7867D3", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				sgName,
				org,
				error
			});
		}

		public static LocalizedString StartPreFileCopyDescription
		{
			get
			{
				return new LocalizedString("StartPreFileCopyDescription", "Ex5FF3CD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportMailboxDuplicates(string displayName)
		{
			return new LocalizedString("ExportMailboxDuplicates", "ExC91C61", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		public static LocalizedString ConfirmationMessageTestReplicationHealth(string serverName)
		{
			return new LocalizedString("ConfirmationMessageTestReplicationHealth", "Ex2D5430", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SetupComponentConfiguringMailSubmissionService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailSubmissionService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransportRpcNotRegistered(string server)
		{
			return new LocalizedString("TransportRpcNotRegistered", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString CasHealthWebAppLogonScenarioDescription(LocalizedString applicationLongName)
		{
			return new LocalizedString("CasHealthWebAppLogonScenarioDescription", "ExF155D3", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName
			});
		}

		public static LocalizedString ErrorMbxPlanReleaseTransition(string mbxPlan, string currentRelease, string newRelease)
		{
			return new LocalizedString("ErrorMbxPlanReleaseTransition", "Ex7BFCF5", false, true, Strings.ResourceManager, new object[]
			{
				mbxPlan,
				currentRelease,
				newRelease
			});
		}

		public static LocalizedString ErrorCannotGetLocalSite
		{
			get
			{
				return new LocalizedString("ErrorCannotGetLocalSite", "Ex86A055", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotSpecifySuspendCommentWithoutSuspend
		{
			get
			{
				return new LocalizedString("ErrorCannotSpecifySuspendCommentWithoutSuspend", "Ex74EC31", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingRpcClientAccessService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingRpcClientAccessService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdminSDHolderNotFoundException(string system)
		{
			return new LocalizedString("AdminSDHolderNotFoundException", "Ex8A0377", false, true, Strings.ResourceManager, new object[]
			{
				system
			});
		}

		public static LocalizedString TiE12Warning(string oab, string server)
		{
			return new LocalizedString("TiE12Warning", "Ex1DF960", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				server
			});
		}

		public static LocalizedString InfoFoundPreE12Server(string server, int version)
		{
			return new LocalizedString("InfoFoundPreE12Server", "Ex6E7A9F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				version
			});
		}

		public static LocalizedString SetupComponentStoppingMailboxServices
		{
			get
			{
				return new LocalizedString("SetupComponentStoppingMailboxServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewHostedEncryptionVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewHostedEncryptionVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		public static LocalizedString StartOrganizationPilotDescription
		{
			get
			{
				return new LocalizedString("StartOrganizationPilotDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagMemberString(string serverName)
		{
			return new LocalizedString("DagMemberString", "ExFCAEB1", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorDatabaseExcludedFromProvisioning(string db)
		{
			return new LocalizedString("ErrorDatabaseExcludedFromProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		public static LocalizedString ErrorInvalidParameterForAuditLog(string parameter, string operation)
		{
			return new LocalizedString("ErrorInvalidParameterForAuditLog", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter,
				operation
			});
		}

		public static LocalizedString ClassificationRuleCollectionSchemaNonConformance(string schemaError, int lineNumber, int linePosition)
		{
			return new LocalizedString("ClassificationRuleCollectionSchemaNonConformance", "", false, false, Strings.ResourceManager, new object[]
			{
				schemaError,
				lineNumber,
				linePosition
			});
		}

		public static LocalizedString AlsEmailFooter
		{
			get
			{
				return new LocalizedString("AlsEmailFooter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveRequestNotFoundOrUnsupported(string identity)
		{
			return new LocalizedString("MoveRequestNotFoundOrUnsupported", "ExABDD4A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SearchingForCertificate(string thumbprint)
		{
			return new LocalizedString("SearchingForCertificate", "Ex4B9AED", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorNoRemoteHostNameSettingForLocalMove(string identity)
		{
			return new LocalizedString("ErrorNoRemoteHostNameSettingForLocalMove", "Ex727983", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MsiRebootRequiredToFinish(string packageIdentifier)
		{
			return new LocalizedString("MsiRebootRequiredToFinish", "Ex6AEF69", false, true, Strings.ResourceManager, new object[]
			{
				packageIdentifier
			});
		}

		public static LocalizedString ConfirmationMessageRemoveEdgeSubscriptionRecipients
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveEdgeSubscriptionRecipients", "Ex58364A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetSendConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetSendConnector", "Ex0FAC77", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CasHealthOwaNoInternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoInternalUrl", "Ex0ED64B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMessageNotFound(string subject)
		{
			return new LocalizedString("ErrorMessageNotFound", "Ex06BC57", false, true, Strings.ResourceManager, new object[]
			{
				subject
			});
		}

		public static LocalizedString ReversingTaskList
		{
			get
			{
				return new LocalizedString("ReversingTaskList", "Ex1F18FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressMaxRecipientsTransportQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMaxRecipientsTransportQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SelfMemberNotFoundException(string group)
		{
			return new LocalizedString("SelfMemberNotFoundException", "ExC5F8C4", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString VerboseCopyFile(string server, string fromFilePath, string toFilePath)
		{
			return new LocalizedString("VerboseCopyFile", "ExD678BA", false, true, Strings.ResourceManager, new object[]
			{
				server,
				fromFilePath,
				toFilePath
			});
		}

		public static LocalizedString RestoreMailboxShouldRestore(string rsgdisplayname, string rsgdatabase, string displayname, string smtp)
		{
			return new LocalizedString("RestoreMailboxShouldRestore", "ExA0D310", false, true, Strings.ResourceManager, new object[]
			{
				rsgdisplayname,
				rsgdatabase,
				displayname,
				smtp
			});
		}

		public static LocalizedString ErrorPropertyTypeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorPropertyTypeNotFound", "Ex32224F", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ContactAdminForForwardingWarning
		{
			get
			{
				return new LocalizedString("ContactAdminForForwardingWarning", "Ex93267C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OabVirtualDirectoryNotExisting(string alID)
		{
			return new LocalizedString("OabVirtualDirectoryNotExisting", "ExA98931", false, true, Strings.ResourceManager, new object[]
			{
				alID
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAdminAuditLogConfig(string org)
		{
			return new LocalizedString("ConfirmationMessageRemoveAdminAuditLogConfig", "Ex92737C", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ConfirmationMessageSuspendDatabaseCopyActivationIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageSuspendDatabaseCopyActivationIdentity", "ExA2A75B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		public static LocalizedString SetResubmitRequestConfirmation
		{
			get
			{
				return new LocalizedString("SetResubmitRequestConfirmation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequestedSourceServer(string sourceServer, bool isSkipCEC, bool isSkipHealth, bool isSkipLag)
		{
			return new LocalizedString("ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequestedSourceServer", "Ex76D8B0", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer,
				isSkipCEC,
				isSkipHealth,
				isSkipLag
			});
		}

		public static LocalizedString ExsetdataLegacyOrganizationName
		{
			get
			{
				return new LocalizedString("ExsetdataLegacyOrganizationName", "Ex078080", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PatternIsWhiteSpace
		{
			get
			{
				return new LocalizedString("PatternIsWhiteSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPostSetupAllRoles
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupAllRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmMoveRpcCompletedAnyServerSourceServer(string sourceServer)
		{
			return new LocalizedString("AmMoveRpcCompletedAnyServerSourceServer", "ExEFE670", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer
			});
		}

		public static LocalizedString ProgressDismountingDatabase(string idDatabase)
		{
			return new LocalizedString("ProgressDismountingDatabase", "Ex443203", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase
			});
		}

		public static LocalizedString NeedRemoveCopyFileManuallyAfterCopyDisabledRcr(string dbName, string logCopyLocation, string dbCopyLocation, string machine)
		{
			return new LocalizedString("NeedRemoveCopyFileManuallyAfterCopyDisabledRcr", "ExD3E852", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				logCopyLocation,
				dbCopyLocation,
				machine
			});
		}

		public static LocalizedString SetupProgressStoppingServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAssemblyIsPath(string assembly)
		{
			return new LocalizedString("ErrorAssemblyIsPath", "Ex8F0495", false, true, Strings.ResourceManager, new object[]
			{
				assembly
			});
		}

		public static LocalizedString CasHealthWebAppAllTransactionsSucceeded(LocalizedString applicationLongName)
		{
			return new LocalizedString("CasHealthWebAppAllTransactionsSucceeded", "Ex6DCE6A", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName
			});
		}

		public static LocalizedString ErrorDirectoryNotFound
		{
			get
			{
				return new LocalizedString("ErrorDirectoryNotFound", "Ex6C39E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressDisclosure
		{
			get
			{
				return new LocalizedString("SetupProgressDisclosure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaPingFailed
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingFailed", "Ex703AE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthPowerShellRemoteConnectionScenario(string connectingUri, string auth)
		{
			return new LocalizedString("CasHealthPowerShellRemoteConnectionScenario", "Ex05ABDD", false, true, Strings.ResourceManager, new object[]
			{
				connectingUri,
				auth
			});
		}

		public static LocalizedString SetServerComponentStateInvalidLocalRemoteSwitch
		{
			get
			{
				return new LocalizedString("SetServerComponentStateInvalidLocalRemoteSwitch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveDefaultMobileMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDefaultMobileMailboxPolicy", "ExA34577", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MailboxIsNotLocked(string mailboxId)
		{
			return new LocalizedString("MailboxIsNotLocked", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		public static LocalizedString TokenSuccessfullyGenerated
		{
			get
			{
				return new LocalizedString("TokenSuccessfullyGenerated", "Ex862783", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateHasExpired(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateHasExpired", "Ex9457D6", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString RegistryAccessSecurityExceptionRead(string key)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionRead", "Ex0CF9C9", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString ErrorCasServerNotRpcEnabled(string server)
		{
			return new LocalizedString("ErrorCasServerNotRpcEnabled", "Ex00680A", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString RmsSharedIdentityUserNotFoundInGC(string userCn)
		{
			return new LocalizedString("RmsSharedIdentityUserNotFoundInGC", "Ex371697", false, true, Strings.ResourceManager, new object[]
			{
				userCn
			});
		}

		public static LocalizedString ConfirmationMessageSetAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAddressList", "Ex9DC31C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InvalidLeaseDirectory
		{
			get
			{
				return new LocalizedString("InvalidLeaseDirectory", "Ex21CFD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AuthenticationMethodDigest
		{
			get
			{
				return new LocalizedString("AuthenticationMethodDigest", "Ex840FD1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoGetPreL(string recipientAddress, Uri uri)
		{
			return new LocalizedString("InfoGetPreL", "ExEAF10A", false, true, Strings.ResourceManager, new object[]
			{
				recipientAddress,
				uri
			});
		}

		public static LocalizedString CatchAllRecipientNotExists(RecipientIdParameter name)
		{
			return new LocalizedString("CatchAllRecipientNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageRemoveOrgELCFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOrgELCFolder", "Ex2FACB4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorPrimaryPublicFolderMailboxNotFound
		{
			get
			{
				return new LocalizedString("ErrorPrimaryPublicFolderMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecipientFilterMustBeValid(string m)
		{
			return new LocalizedString("RecipientFilterMustBeValid", "Ex1A870F", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		public static LocalizedString ConfirmationMessageSetRetentionTagOnMailbox(MailboxIdParameter Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRetentionTagOnMailbox", "Ex618A79", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetDatabaseAvailabilityGroupConfiguration(string Server)
		{
			return new LocalizedString("ConfirmationMessageSetDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString NSPIGetProfileDetailsScenario
		{
			get
			{
				return new LocalizedString("NSPIGetProfileDetailsScenario", "Ex3CDBB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMailboxWithDatabase(string Identity, string newDatabase)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxWithDatabase", "Ex354928", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				newDatabase
			});
		}

		public static LocalizedString ConfirmationMessageAddDatabaseAvailabilityGroupServer(string MailboxServer, string Dag)
		{
			return new LocalizedString("ConfirmationMessageAddDatabaseAvailabilityGroupServer", "ExB48B5D", false, true, Strings.ResourceManager, new object[]
			{
				MailboxServer,
				Dag
			});
		}

		public static LocalizedString SetupProgressCreateDefaultWLMPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDefaultWLMPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallUnifiedMessagingRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallUnifiedMessagingRoleDescription", "Ex465DC2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsPriorityIsNotUnique(string name, int priority)
		{
			return new LocalizedString("ExchangeSettingsPriorityIsNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				priority
			});
		}

		public static LocalizedString ErrorNeedToSpecifyScopeParameter
		{
			get
			{
				return new LocalizedString("ErrorNeedToSpecifyScopeParameter", "Ex2CDB69", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFfoPrimingServiceTask
		{
			get
			{
				return new LocalizedString("InstallFfoPrimingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMailboxDelegateAlreadyExists(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateAlreadyExists", "Ex43D202", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		public static LocalizedString RmsSharedIdentityTooManyUsers(string firstDn, string secondDn)
		{
			return new LocalizedString("RmsSharedIdentityTooManyUsers", "Ex816C34", false, true, Strings.ResourceManager, new object[]
			{
				firstDn,
				secondDn
			});
		}

		public static LocalizedString ProcessingDependentService(string name)
		{
			return new LocalizedString("ProcessingDependentService", "Ex12839D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageMoveDatabasePath(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMoveDatabasePath", "ExAAB14F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MailboxTransportSubmissionServiceDescription
		{
			get
			{
				return new LocalizedString("MailboxTransportSubmissionServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RejectStatusCode
		{
			get
			{
				return new LocalizedString("RejectStatusCode", "ExD1336A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMaxVersionAndFixVersionSpecified
		{
			get
			{
				return new LocalizedString("ErrorMaxVersionAndFixVersionSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteAccountPolicyNotFound(string policyDN)
		{
			return new LocalizedString("ErrorRemoteAccountPolicyNotFound", "ExD3B5BE", false, true, Strings.ResourceManager, new object[]
			{
				policyDN
			});
		}

		public static LocalizedString CasTransactionResultSuccess
		{
			get
			{
				return new LocalizedString("CasTransactionResultSuccess", "Ex4A94C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFreeBusyFolderNoPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderNoPublicFolderDatabase", "Ex744764", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmSearchAdminAuditLogConfigTask(string org)
		{
			return new LocalizedString("ConfirmSearchAdminAuditLogConfigTask", "Ex3E3AA0", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ErrorAcceptedDomainExists(string name)
		{
			return new LocalizedString("ErrorAcceptedDomainExists", "Ex8BC2F5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RecipientNotFoundException(string recipient)
		{
			return new LocalizedString("RecipientNotFoundException", "ExE610C8", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString SetupComponentConfiguringSharedCacheService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringSharedCacheService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSaveADServerSettings
		{
			get
			{
				return new LocalizedString("VerboseSaveADServerSettings", "Ex9141A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCustomAttribute11
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute11", "Ex418CBF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCustomAttribute15
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute15", "Ex086EC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToAccessMessageCategoriesGenericMessage(string details)
		{
			return new LocalizedString("ErrorUnableToAccessMessageCategoriesGenericMessage", "ExE78EF6", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString FoundGlobalThrottlingPolicy(string name)
		{
			return new LocalizedString("FoundGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString FederatedIdentityTypeMismatch(string authType, string rstIdentityType)
		{
			return new LocalizedString("FederatedIdentityTypeMismatch", "", false, false, Strings.ResourceManager, new object[]
			{
				authType,
				rstIdentityType
			});
		}

		public static LocalizedString ErrorResetPasswordRequiresPassword
		{
			get
			{
				return new LocalizedString("ErrorResetPasswordRequiresPassword", "Ex9A3BB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailureMappingMdbGuidForGet
		{
			get
			{
				return new LocalizedString("FailureMappingMdbGuidForGet", "Ex5DC434", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorStoreMailboxNotFound(string identity, string mdb)
		{
			return new LocalizedString("ErrorStoreMailboxNotFound", "ExEEAFAE", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				mdb
			});
		}

		public static LocalizedString BadEnabledParameterException(string value)
		{
			return new LocalizedString("BadEnabledParameterException", "Ex8276CB", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxDatabase", "Ex16C063", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CasHealthCouldNotBuildTestUserName(string serverName)
		{
			return new LocalizedString("CasHealthCouldNotBuildTestUserName", "Ex2BF08B", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString CalculatedNameRequiredForTT(string suffix)
		{
			return new LocalizedString("CalculatedNameRequiredForTT", "", false, false, Strings.ResourceManager, new object[]
			{
				suffix
			});
		}

		public static LocalizedString SmtpConnectivityNotTested(string results)
		{
			return new LocalizedString("SmtpConnectivityNotTested", "Ex793ADA", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		public static LocalizedString InconsistentADError(string reason)
		{
			return new LocalizedString("InconsistentADError", "Ex5C243E", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString ErrorTrustAlreadyInUse(string trust, string partition)
		{
			return new LocalizedString("ErrorTrustAlreadyInUse", "", false, false, Strings.ResourceManager, new object[]
			{
				trust,
				partition
			});
		}

		public static LocalizedString ScenarioAutoDiscoverOutlookProvider
		{
			get
			{
				return new LocalizedString("ScenarioAutoDiscoverOutlookProvider", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotAcquireSTSClientForUser(string user, string organization, string errorCode, string errorSubcode)
		{
			return new LocalizedString("CannotAcquireSTSClientForUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				organization,
				errorCode,
				errorSubcode
			});
		}

		public static LocalizedString ImportCertificateUntrustedRoot
		{
			get
			{
				return new LocalizedString("ImportCertificateUntrustedRoot", "ExBC242D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AccountPrivilegeWarning
		{
			get
			{
				return new LocalizedString("AccountPrivilegeWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorParameterNotSupportedForMigrationType(string parameterName, string migrationType)
		{
			return new LocalizedString("ErrorParameterNotSupportedForMigrationType", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				migrationType
			});
		}

		public static LocalizedString InterceptorWarningCustomResponseCodeTextWithoutRejectAction
		{
			get
			{
				return new LocalizedString("InterceptorWarningCustomResponseCodeTextWithoutRejectAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningMetadataNotOverHttps(string url)
		{
			return new LocalizedString("WarningMetadataNotOverHttps", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SetupProgressCreateOrgContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOrgContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressConfiguringDefaultTransportAgents
		{
			get
			{
				return new LocalizedString("SetupProgressConfiguringDefaultTransportAgents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MessageTypeEncrypted
		{
			get
			{
				return new LocalizedString("MessageTypeEncrypted", "ExA82F28", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MdbServerNotFoundException(string database)
		{
			return new LocalizedString("MdbServerNotFoundException", "ExFB3375", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix
		{
			get
			{
				return new LocalizedString("WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NotPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("NotPublicFolderDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPrecannedRoleAndSpecificPermission
		{
			get
			{
				return new LocalizedString("ErrorPrecannedRoleAndSpecificPermission", "ExCDE661", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaInvalidFormsAuthenticationConfiguration
		{
			get
			{
				return new LocalizedString("OwaInvalidFormsAuthenticationConfiguration", "Ex1304CE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotImportPstToPublicFolderMailbox(string mailbox)
		{
			return new LocalizedString("ErrorCannotImportPstToPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ErrorUserAlreadyInTargetDatabase(string mailbox, string database)
		{
			return new LocalizedString("ErrorUserAlreadyInTargetDatabase", "Ex898995", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				database
			});
		}

		public static LocalizedString VerboseOpenFirewallPort(string port, string protocol)
		{
			return new LocalizedString("VerboseOpenFirewallPort", "ExD469BE", false, true, Strings.ResourceManager, new object[]
			{
				port,
				protocol
			});
		}

		public static LocalizedString ConfirmationMessageClearAutoTags(string Identity)
		{
			return new LocalizedString("ConfirmationMessageClearAutoTags", "Ex4BB2F3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString messageHttpRequestTimeoutException(string httpRequest, string statusCode)
		{
			return new LocalizedString("messageHttpRequestTimeoutException", "", false, false, Strings.ResourceManager, new object[]
			{
				httpRequest,
				statusCode
			});
		}

		public static LocalizedString ConfirmationMessageRemoveEdgeSyncEhfConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSyncEhfConnector", "Ex71D896", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorFailedToMountDatabase(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToMountDatabase", "ExCCD9CE", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		public static LocalizedString InformationQueryExpression(string expresson)
		{
			return new LocalizedString("InformationQueryExpression", "", false, false, Strings.ResourceManager, new object[]
			{
				expresson
			});
		}

		public static LocalizedString DagTaskRemovingServerFromDag(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskRemovingServerFromDag", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString ErrorQuotaOnDefaultFolder
		{
			get
			{
				return new LocalizedString("ErrorQuotaOnDefaultFolder", "ExDB74F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseException(int number, string error)
		{
			return new LocalizedString("DatabaseException", "", false, false, Strings.ResourceManager, new object[]
			{
				number,
				error
			});
		}

		public static LocalizedString InvalidCharacterInDisplayName(char invalidCharacter)
		{
			return new LocalizedString("InvalidCharacterInDisplayName", "Ex15E85D", false, true, Strings.ResourceManager, new object[]
			{
				invalidCharacter
			});
		}

		public static LocalizedString MtrtMessageSpam(string scl)
		{
			return new LocalizedString("MtrtMessageSpam", "", false, false, Strings.ResourceManager, new object[]
			{
				scl
			});
		}

		public static LocalizedString WarningFailedToSetPolicy(string detailError)
		{
			return new LocalizedString("WarningFailedToSetPolicy", "ExB7643A", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		public static LocalizedString ErrorELCFolderExist(string folderName)
		{
			return new LocalizedString("ErrorELCFolderExist", "Ex1DC66E", false, true, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		public static LocalizedString ReplayServiceNotRunning(string machineName)
		{
			return new LocalizedString("ReplayServiceNotRunning", "ExC706D5", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		public static LocalizedString OwaAttachmentTypeInvalidCharacter(char badChar, int charIndex, string badAttachmentType, int attachmentTypeIndex, string propertyName)
		{
			return new LocalizedString("OwaAttachmentTypeInvalidCharacter", "Ex635456", false, true, Strings.ResourceManager, new object[]
			{
				badChar,
				charIndex,
				badAttachmentType,
				attachmentTypeIndex,
				propertyName
			});
		}

		public static LocalizedString FederatedDomainofUserNotOrgFederated(string user)
		{
			return new LocalizedString("FederatedDomainofUserNotOrgFederated", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString DagTaskUpdatedAdDagStartedStoppedMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatedAdDagStartedStoppedMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString ADAttributeEmail
		{
			get
			{
				return new LocalizedString("ADAttributeEmail", "Ex7D5A45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningFederatedOrgIdNotEnabled
		{
			get
			{
				return new LocalizedString("WarningFederatedOrgIdNotEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSingleDatabaseCopyRemove(string db, string server)
		{
			return new LocalizedString("ErrorSingleDatabaseCopyRemove", "Ex85F83A", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString TestSearchMapiError(string MDB, string error)
		{
			return new LocalizedString("TestSearchMapiError", "Ex7F970E", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				error
			});
		}

		public static LocalizedString ErrorSetScopeNeedHierarchicalRoleAssignment(string id, string assignmentId)
		{
			return new LocalizedString("ErrorSetScopeNeedHierarchicalRoleAssignment", "Ex4EB5FA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		public static LocalizedString ErrorInvalidOperationOnLowestEap(string idEap)
		{
			return new LocalizedString("ErrorInvalidOperationOnLowestEap", "ExF376DE", false, true, Strings.ResourceManager, new object[]
			{
				idEap
			});
		}

		public static LocalizedString ErrorTooManyRegexCharsInRuleCollection(int currentChars, long maxChars)
		{
			return new LocalizedString("ErrorTooManyRegexCharsInRuleCollection", "Ex0DC547", false, true, Strings.ResourceManager, new object[]
			{
				currentChars,
				maxChars
			});
		}

		public static LocalizedString SendingGuidInMailFrom
		{
			get
			{
				return new LocalizedString("SendingGuidInMailFrom", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_MultipleItemsFound
		{
			get
			{
				return new LocalizedString("Error_MultipleItemsFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToDkmProtectPrivateKey(Exception ex)
		{
			return new LocalizedString("FailedToDkmProtectPrivateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString ErrorUnsupportedAuthMethodForMerges(string authMethod)
		{
			return new LocalizedString("ErrorUnsupportedAuthMethodForMerges", "ExD6B299", false, true, Strings.ResourceManager, new object[]
			{
				authMethod
			});
		}

		public static LocalizedString NotValidSecurityPrincipal(string id)
		{
			return new LocalizedString("NotValidSecurityPrincipal", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorRoleEntryParametersNotExistOnParent(string roleId, string entryName, string parameters)
		{
			return new LocalizedString("ErrorRoleEntryParametersNotExistOnParent", "ExE9FC28", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName,
				parameters
			});
		}

		public static LocalizedString SetupComponentConfiguringMailboxPerfCounters
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailboxPerfCounters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmEnableExchangeCertificate(string thumbprint)
		{
			return new LocalizedString("ConfirmEnableExchangeCertificate", "Ex26BAA6", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString SetupComponentConfiguringProtectedServiceHost
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringProtectedServiceHost", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		public static LocalizedString WritableRecipientNotUnique(string WritableRecipient)
		{
			return new LocalizedString("WritableRecipientNotUnique", "ExC8F980", false, true, Strings.ResourceManager, new object[]
			{
				WritableRecipient
			});
		}

		public static LocalizedString ConversationsMailboxAlreadyDisabled
		{
			get
			{
				return new LocalizedString("ConversationsMailboxAlreadyDisabled", "Ex6A0A63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddedTasksForComponent(int count, string component)
		{
			return new LocalizedString("AddedTasksForComponent", "Ex198780", false, true, Strings.ResourceManager, new object[]
			{
				count,
				component
			});
		}

		public static LocalizedString SuccessAddGlobalMonitoringOverride(string identity)
		{
			return new LocalizedString("SuccessAddGlobalMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MapiSubmitSystemProbeId
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetCopyStatusRpcQuery(string db, string server)
		{
			return new LocalizedString("GetCopyStatusRpcQuery", "Ex8BAE8D", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString OutboundConnectorToRouteAcceptedDomainNotFound
		{
			get
			{
				return new LocalizedString("OutboundConnectorToRouteAcceptedDomainNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateRAPassignments
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRAPassignments", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RcrDatabaseFailoverMountNotAllowed(string database, string sourceMachine, string lastMountedMachine)
		{
			return new LocalizedString("RcrDatabaseFailoverMountNotAllowed", "ExB78FE9", false, true, Strings.ResourceManager, new object[]
			{
				database,
				sourceMachine,
				lastMountedMachine
			});
		}

		public static LocalizedString ClassificationRuleCollectionIllegalScopedRemoveOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedRemoveOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidParameterForPublicFolderRestore(string parameter)
		{
			return new LocalizedString("ErrorInvalidParameterForPublicFolderRestore", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString DagTaskSleepAfterClusterFormation(int secSleepAfterClusterFormation, string dagName, string serverName)
		{
			return new LocalizedString("DagTaskSleepAfterClusterFormation", "", false, false, Strings.ResourceManager, new object[]
			{
				secSleepAfterClusterFormation,
				dagName,
				serverName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveExchangeUpgradeBucket(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveExchangeUpgradeBucket", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString IncompatibleGetTransportRuleParameters(string parameter1, string parameter2)
		{
			return new LocalizedString("IncompatibleGetTransportRuleParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		public static LocalizedString UninstallRecoveryActionArbiterServiceTask
		{
			get
			{
				return new LocalizedString("UninstallRecoveryActionArbiterServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EnableContentIndexTask
		{
			get
			{
				return new LocalizedString("EnableContentIndexTask", "Ex0FFCE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FormsAuthenticationIsEnabledAccessDeniedException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationIsEnabledAccessDeniedException", "Ex2B7AFC", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		public static LocalizedString ConfirmationMessageSetForeignConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetForeignConnector", "Ex426023", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ComplianceBindingNoError(string name)
		{
			return new LocalizedString("ComplianceBindingNoError", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageSetGls(string entryType, string id)
		{
			return new LocalizedString("ConfirmationMessageSetGls", "", false, false, Strings.ResourceManager, new object[]
			{
				entryType,
				id
			});
		}

		public static LocalizedString SuppressXAnonymousTlsEnabledOnEdge
		{
			get
			{
				return new LocalizedString("SuppressXAnonymousTlsEnabledOnEdge", "Ex731E4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserNotHaveMailboxPlan(string id)
		{
			return new LocalizedString("ErrorUserNotHaveMailboxPlan", "Ex338B50", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageNewManagementRoleAssignment(string Name, string Role, string RoleAssignee, string DelegationType, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageNewManagementRoleAssignment", "ExD34E34", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role,
				RoleAssignee,
				DelegationType,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		public static LocalizedString ReloadingMoveRequest
		{
			get
			{
				return new LocalizedString("ReloadingMoveRequest", "Ex3406D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateSystemAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateSystemAddressList", "Ex049FA1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupComponentMidFileCopyMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOrganizationIsNotInUpgradeState
		{
			get
			{
				return new LocalizedString("ErrorOrganizationIsNotInUpgradeState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddressRewriteInvalidMapping
		{
			get
			{
				return new LocalizedString("AddressRewriteInvalidMapping", "Ex780D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyStateDescription
		{
			get
			{
				return new LocalizedString("DlpPolicyStateDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorContentSettingAlreadyExist
		{
			get
			{
				return new LocalizedString("ErrorContentSettingAlreadyExist", "Ex3AD421", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWMIException(string computerName)
		{
			return new LocalizedString("ErrorWMIException", "Ex9BA928", false, true, Strings.ResourceManager, new object[]
			{
				computerName
			});
		}

		public static LocalizedString VerboseFailedCreateDirectory(string server, string dir, string error)
		{
			return new LocalizedString("VerboseFailedCreateDirectory", "ExC7818F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir,
				error
			});
		}

		public static LocalizedString ReadDeletedObjectsPermissionDeniedException(string msg)
		{
			return new LocalizedString("ReadDeletedObjectsPermissionDeniedException", "Ex5F6B20", false, true, Strings.ResourceManager, new object[]
			{
				msg
			});
		}

		public static LocalizedString SetupComponentPostUpdatingServicePlan
		{
			get
			{
				return new LocalizedString("SetupComponentPostUpdatingServicePlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetMailboxCrossVersionRehoming
		{
			get
			{
				return new LocalizedString("ErrorSetMailboxCrossVersionRehoming", "ExDCB577", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransitionInfoLabelLastFailureTransition
		{
			get
			{
				return new LocalizedString("TransitionInfoLabelLastFailureTransition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutoGroupManagedByCannotBeEmpty
		{
			get
			{
				return new LocalizedString("AutoGroupManagedByCannotBeEmpty", "Ex774CDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetLoadBalanceSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetLoadBalanceSettings", "ExA7CDD9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMalwareFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageRemoveOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOutlookProtectionRule", "ExB8EC89", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SeederCancelDbSeedRpcBegin(string taskName, string targetMachine, string dbName)
		{
			return new LocalizedString("SeederCancelDbSeedRpcBegin", "", false, false, Strings.ResourceManager, new object[]
			{
				taskName,
				targetMachine,
				dbName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveCountryList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCountryList", "ExBA07D1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ProductKeyRestartWarning
		{
			get
			{
				return new LocalizedString("ProductKeyRestartWarning", "Ex5CF650", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveIPBlockListEntry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPBlockListEntry", "Ex67FF70", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetLiveFedUriReserveResponse(string domain)
		{
			return new LocalizedString("SetLiveFedUriReserveResponse", "ExAA4358", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString MailboxParameterNotSpecified
		{
			get
			{
				return new LocalizedString("MailboxParameterNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidMacroName(string invalidMacroName)
		{
			return new LocalizedString("InvalidMacroName", "ExCF0679", false, true, Strings.ResourceManager, new object[]
			{
				invalidMacroName
			});
		}

		public static LocalizedString ErrorRemoveGlobalAddressListWithAssociatedAddressBookPolicies(string name)
		{
			return new LocalizedString("ErrorRemoveGlobalAddressListWithAssociatedAddressBookPolicies", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarningMultiSiteReplicationFailed(string database, string sitesFailedToContact)
		{
			return new LocalizedString("WarningMultiSiteReplicationFailed", "Ex5C0734", false, true, Strings.ResourceManager, new object[]
			{
				database,
				sitesFailedToContact
			});
		}

		public static LocalizedString CasHealthEasScenarioDirectPushAndSync
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioDirectPushAndSync", "ExB129EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OutlookProtectionRuleRmsTemplateNotFound(string name)
		{
			return new LocalizedString("OutlookProtectionRuleRmsTemplateNotFound", "Ex34DA98", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupProgressRegisterCmdletExtensionAgents
		{
			get
			{
				return new LocalizedString("SetupProgressRegisterCmdletExtensionAgents", "ExD9AB4B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarnAdministratorToRestartService(string serverName)
		{
			return new LocalizedString("WarnAdministratorToRestartService", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString Error_SentRepresentingChanged(string originalValue, string newValue)
		{
			return new LocalizedString("Error_SentRepresentingChanged", "", false, false, Strings.ResourceManager, new object[]
			{
				originalValue,
				newValue
			});
		}

		public static LocalizedString DatabasesAvailabilityCheckFailed(string nodeName, string error)
		{
			return new LocalizedString("DatabasesAvailabilityCheckFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				error
			});
		}

		public static LocalizedString LegacyPermissionsDomainNotReachableWarning(string dom)
		{
			return new LocalizedString("LegacyPermissionsDomainNotReachableWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		public static LocalizedString ClassificationRuleCollectionDistinctFunctionsExceedLimit(int distinctFuncsLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionDistinctFunctionsExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				distinctFuncsLimit,
				offendingRuleIds
			});
		}

		public static LocalizedString FaildToCreateFolder(string path)
		{
			return new LocalizedString("FaildToCreateFolder", "ExE18819", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString MismatchedSTS(string localTokenIssuerUri, string remoteTokenIssuerUris)
		{
			return new LocalizedString("MismatchedSTS", "", false, false, Strings.ResourceManager, new object[]
			{
				localTokenIssuerUri,
				remoteTokenIssuerUris
			});
		}

		public static LocalizedString ConfirmationMessageNewMservEntry(string id)
		{
			return new LocalizedString("ConfirmationMessageNewMservEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorPortalTextBig(int size)
		{
			return new LocalizedString("ErrorPortalTextBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		public static LocalizedString ConfirmationMessageRemoveCompletedMoveRequest(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCompletedMoveRequest", "Ex89DDC1", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotMovePublicFolderMailboxesCrossForestOrCrossPremise(string mailbox)
		{
			return new LocalizedString("ErrorCannotMovePublicFolderMailboxesCrossForestOrCrossPremise", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ServerVersionNull(string server, string rulename)
		{
			return new LocalizedString("ServerVersionNull", "ExB15B6D", false, true, Strings.ResourceManager, new object[]
			{
				server,
				rulename
			});
		}

		public static LocalizedString ExchangeUpgradeBucketTargetIncludedInSource(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketTargetIncludedInSource", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString MoveStatusWarning
		{
			get
			{
				return new LocalizedString("MoveStatusWarning", "Ex612C20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskClusteringMustBeInstalledAndRunningException(string serverName)
		{
			return new LocalizedString("DagTaskClusteringMustBeInstalledAndRunningException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SetupComponentStartingBridgeheadServices
		{
			get
			{
				return new LocalizedString("SetupComponentStartingBridgeheadServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotModifyRequestAlreadyCompleting(string name)
		{
			return new LocalizedString("ErrorCannotModifyRequestAlreadyCompleting", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ClockOutofSync
		{
			get
			{
				return new LocalizedString("ClockOutofSync", "ExDC1CDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBadItemLimitAlreadyExceededNew(string name, int encountered, string newlimit)
		{
			return new LocalizedString("ErrorBadItemLimitAlreadyExceededNew", "Ex5B2DF4", false, true, Strings.ResourceManager, new object[]
			{
				name,
				encountered,
				newlimit
			});
		}

		public static LocalizedString ErrorLiveDomainServicesAccess(string message)
		{
			return new LocalizedString("ErrorLiveDomainServicesAccess", "ExA4C83A", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString VerboseSyncMailboxesWithDS(string id, string server)
		{
			return new LocalizedString("VerboseSyncMailboxesWithDS", "Ex733796", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		public static LocalizedString ErrorTeamMailboxUserNotResolved(string users)
		{
			return new LocalizedString("ErrorTeamMailboxUserNotResolved", "", false, false, Strings.ResourceManager, new object[]
			{
				users
			});
		}

		public static LocalizedString ErrorSharePointUrlDoesNotMatchPartnerApplication
		{
			get
			{
				return new LocalizedString("ErrorSharePointUrlDoesNotMatchPartnerApplication", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ApplyingHoldSettings(string searchName)
		{
			return new LocalizedString("ApplyingHoldSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				searchName
			});
		}

		public static LocalizedString AdminGroupCouldNotBeRead(string id)
		{
			return new LocalizedString("AdminGroupCouldNotBeRead", "ExA32DA2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString MessageTypeApprovalRequest
		{
			get
			{
				return new LocalizedString("MessageTypeApprovalRequest", "ExE8DD65", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ChangeMFLFile(string filePath, string fromLCID, string toLCID)
		{
			return new LocalizedString("ChangeMFLFile", "Ex4D1D89", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				fromLCID,
				toLCID
			});
		}

		public static LocalizedString ErrorSuspendWhenReadyToCompleteNotSupported(string name)
		{
			return new LocalizedString("ErrorSuspendWhenReadyToCompleteNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RecoveryActionArbiterServiceDisplayName
		{
			get
			{
				return new LocalizedString("RecoveryActionArbiterServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RequestedVersionIsLowerThanCurrentVersion(int currentVersion)
		{
			return new LocalizedString("RequestedVersionIsLowerThanCurrentVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				currentVersion
			});
		}

		public static LocalizedString VerboseTestEwsFromAutoDiscover(string url)
		{
			return new LocalizedString("VerboseTestEwsFromAutoDiscover", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString PartitionIdRequiredForMultipleOrgSearch
		{
			get
			{
				return new LocalizedString("PartitionIdRequiredForMultipleOrgSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedOnMemberHasMailbox(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedOnMemberHasMailbox", "ExBCAEA9", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		public static LocalizedString ErrorDirectoryNotEmpty
		{
			get
			{
				return new LocalizedString("ErrorDirectoryNotEmpty", "Ex48C62B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotUnsetDowngradedExchangeServerAuthIfReceiveConnectorHasSuppressXAnonmyousTlsSet(string connector)
		{
			return new LocalizedString("ErrorCannotUnsetDowngradedExchangeServerAuthIfReceiveConnectorHasSuppressXAnonmyousTlsSet", "Ex67E8ED", false, true, Strings.ResourceManager, new object[]
			{
				connector
			});
		}

		public static LocalizedString ErrorFullSyncInProgress(string orgId)
		{
			return new LocalizedString("ErrorFullSyncInProgress", "Ex86280B", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString CasHealthTransactionWarnings(string detailedInformation)
		{
			return new LocalizedString("CasHealthTransactionWarnings", "Ex2DA1F6", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		public static LocalizedString ConfirmationMessageRemoveRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRemoteMailbox", "ExE395AC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MigrationNeutralCultureIsInvalid
		{
			get
			{
				return new LocalizedString("MigrationNeutralCultureIsInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorErrorConditionInvalidFormat(string condition)
		{
			return new LocalizedString("InterceptorErrorConditionInvalidFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				condition
			});
		}

		public static LocalizedString UMCallAnsweringRuleTimeOfDayComplex(string starttime, string endtime, string days)
		{
			return new LocalizedString("UMCallAnsweringRuleTimeOfDayComplex", "", false, false, Strings.ResourceManager, new object[]
			{
				starttime,
				endtime,
				days
			});
		}

		public static LocalizedString ProtocolTransactionWarnings(string protocol, string detailedInformation)
		{
			return new LocalizedString("ProtocolTransactionWarnings", "ExE664A0", false, true, Strings.ResourceManager, new object[]
			{
				protocol,
				detailedInformation
			});
		}

		public static LocalizedString ConfirmationMessageSetPendingFederationDomain
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetPendingFederationDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RestoreOrExportSourceAndTargetTheSame(string sourceDisplayName, string targetDisplayName)
		{
			return new LocalizedString("RestoreOrExportSourceAndTargetTheSame", "ExF94191", false, true, Strings.ResourceManager, new object[]
			{
				sourceDisplayName,
				targetDisplayName
			});
		}

		public static LocalizedString AlsEmailBodyAdminParamters(string paramters)
		{
			return new LocalizedString("AlsEmailBodyAdminParamters", "", false, false, Strings.ResourceManager, new object[]
			{
				paramters
			});
		}

		public static LocalizedString CouldNotFindTask
		{
			get
			{
				return new LocalizedString("CouldNotFindTask", "Ex747A93", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetAdSite(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAdSite", "ExB3BCB2", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TestSearchCurrentServer(string serverName)
		{
			return new LocalizedString("TestSearchCurrentServer", "ExC5FFA0", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorInvalidCharactersInParameterValue(string param, string value, string invalidStr)
		{
			return new LocalizedString("ErrorInvalidCharactersInParameterValue", "ExB254FA", false, true, Strings.ResourceManager, new object[]
			{
				param,
				value,
				invalidStr
			});
		}

		public static LocalizedString DuplicateX400Domain(X400Domain domain)
		{
			return new LocalizedString("DuplicateX400Domain", "ExA2AEAB", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ServerNamesMustBeUnique(string message)
		{
			return new LocalizedString("ServerNamesMustBeUnique", "Ex5DEACE", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString CasHealthOwaUnsupportedLogonAuthenticationMethod(string supportedAuthMethods, string reportedAuthMethods)
		{
			return new LocalizedString("CasHealthOwaUnsupportedLogonAuthenticationMethod", "Ex54CEEB", false, true, Strings.ResourceManager, new object[]
			{
				supportedAuthMethods,
				reportedAuthMethods
			});
		}

		public static LocalizedString DlpPolicyModeDescription
		{
			get
			{
				return new LocalizedString("DlpPolicyModeDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReceiveConnectorAclOverflow(string exception)
		{
			return new LocalizedString("ReceiveConnectorAclOverflow", "", false, false, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString FailedToLoadSubscriptionFile(string message)
		{
			return new LocalizedString("FailedToLoadSubscriptionFile", "Ex9FAC02", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorSetVersion1OfExchange12OAB
		{
			get
			{
				return new LocalizedString("ErrorSetVersion1OfExchange12OAB", "Ex4834FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskProblemChangingQuorumExceptionPathNotFound(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionPathNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		public static LocalizedString SetupComponentPreSetupCafe
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupCafe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxFolder(string Parent, string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxFolder", "Ex0E0D6E", false, true, Strings.ResourceManager, new object[]
			{
				Parent,
				Name
			});
		}

		public static LocalizedString ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported
		{
			get
			{
				return new LocalizedString("ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTargetUserAlreadyHasPrimaryMailbox(string user)
		{
			return new LocalizedString("ErrorTargetUserAlreadyHasPrimaryMailbox", "Ex7DD664", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString TestMailflowSucceededNoDatabaseOnSourceServer(string source)
		{
			return new LocalizedString("TestMailflowSucceededNoDatabaseOnSourceServer", "Ex8D57C3", false, true, Strings.ResourceManager, new object[]
			{
				source
			});
		}

		public static LocalizedString SetupComponentPreUpdatingServicePlan
		{
			get
			{
				return new LocalizedString("SetupComponentPreUpdatingServicePlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaUnexpectedResponse
		{
			get
			{
				return new LocalizedString("CasHealthOwaUnexpectedResponse", "Ex0F36AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorDashdashAddressSpaceNotOffEdge
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashAddressSpaceNotOffEdge", "Ex66AC44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskProblemChangingQuorumExceptionBadNetName(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionBadNetName", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		public static LocalizedString InvalidParameterSet
		{
			get
			{
				return new LocalizedString("InvalidParameterSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDefaultDomainNotUnique(AcceptedDomainIdParameter domain)
		{
			return new LocalizedString("ErrorDefaultDomainNotUnique", "Ex01FC43", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString OnPremisesOrganizationOutboundConnectorNotUnique(OutboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOutboundConnectorNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ParameterAllowedOnlyForTopLevelRoleManipulation(string paramName, string roleType)
		{
			return new LocalizedString("ParameterAllowedOnlyForTopLevelRoleManipulation", "ExAB671F", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				roleType
			});
		}

		public static LocalizedString UserFederatedDomainInLocalOrgRelationship(string userFedDomain)
		{
			return new LocalizedString("UserFederatedDomainInLocalOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				userFedDomain
			});
		}

		public static LocalizedString ErrorUMInvalidSipNameOrExtensionAddressFormat(string s)
		{
			return new LocalizedString("ErrorUMInvalidSipNameOrExtensionAddressFormat", "Ex90FE49", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString AttachmentFilterADEntryNotFound
		{
			get
			{
				return new LocalizedString("AttachmentFilterADEntryNotFound", "Ex00A085", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEcpVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewEcpVirtualDirectory", "Ex0E05DE", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		public static LocalizedString CasHealthOwaNoLogonCookieReturned
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoLogonCookieReturned", "Ex33F67B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressMalwareFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetUMMailboxPlan(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUMMailboxPlan", "ExB73AAE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetContentFilterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetContentFilterConfig", "ExA98C50", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFBAServiceTask
		{
			get
			{
				return new LocalizedString("InstallFBAServiceTask", "Ex7717FD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationCompleteAfterIncorrectState
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterIncorrectState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ActiveSyncOrganizationSettingsAmbiguous
		{
			get
			{
				return new LocalizedString("ActiveSyncOrganizationSettingsAmbiguous", "ExBBB669", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoImportingTpdFromRmsOnline
		{
			get
			{
				return new LocalizedString("InfoImportingTpdFromRmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtEventMalware
		{
			get
			{
				return new LocalizedString("MtrtEventMalware", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidAggregatedDateTime
		{
			get
			{
				return new LocalizedString("InvalidAggregatedDateTime", "Ex4A428C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAutoDiscoverValidatorEwsNotFound(string xml)
		{
			return new LocalizedString("ErrorAutoDiscoverValidatorEwsNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				xml
			});
		}

		public static LocalizedString ErrorRecipientTypeDetailsConflictWithRecipientType
		{
			get
			{
				return new LocalizedString("ErrorRecipientTypeDetailsConflictWithRecipientType", "Ex184F66", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveIPAllowListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPAllowListProvider", "Ex5BD39F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InfoCheckMode
		{
			get
			{
				return new LocalizedString("InfoCheckMode", "ExBBADCE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetIISGzipMimeTypesFailure
		{
			get
			{
				return new LocalizedString("SetIISGzipMimeTypesFailure", "Ex91FA27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFingerprintRulePackTemplateCorrupted(string file)
		{
			return new LocalizedString("ErrorFingerprintRulePackTemplateCorrupted", "", false, false, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString SetupComponentConfiguringReplayService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringReplayService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MessageTypeSigned
		{
			get
			{
				return new LocalizedString("MessageTypeSigned", "Ex2353B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceDependencies(string service, string dependencies)
		{
			return new LocalizedString("ServiceDependencies", "ExCD46BE", false, true, Strings.ResourceManager, new object[]
			{
				service,
				dependencies
			});
		}

		public static LocalizedString NoSubscription(string site)
		{
			return new LocalizedString("NoSubscription", "Ex204360", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString ExceptionPerfCounterUnlodctrFailed(int errorCode)
		{
			return new LocalizedString("ExceptionPerfCounterUnlodctrFailed", "Ex6B3129", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		public static LocalizedString BPAConfigurationWarningFound(string warning)
		{
			return new LocalizedString("BPAConfigurationWarningFound", "ExA98B39", false, true, Strings.ResourceManager, new object[]
			{
				warning
			});
		}

		public static LocalizedString ExceptionExsetdataGenericError(uint sc, string errMsg)
		{
			return new LocalizedString("ExceptionExsetdataGenericError", "Ex5BE347", false, true, Strings.ResourceManager, new object[]
			{
				sc,
				errMsg
			});
		}

		public static LocalizedString ErrorRemovingPolicyInUse(string id)
		{
			return new LocalizedString("ErrorRemovingPolicyInUse", "ExE77BDF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString InstallADTopologyServiceTask
		{
			get
			{
				return new LocalizedString("InstallADTopologyServiceTask", "ExB493C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateGlobalExchangeUSGs
		{
			get
			{
				return new LocalizedString("SetupProgressCreateGlobalExchangeUSGs", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxBeingMoved(string user, string moveStatus)
		{
			return new LocalizedString("ErrorMailboxBeingMoved", "ExEC7A95", false, true, Strings.ResourceManager, new object[]
			{
				user,
				moveStatus
			});
		}

		public static LocalizedString ADAttributeTitle
		{
			get
			{
				return new LocalizedString("ADAttributeTitle", "ExBD36EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPolicyRuleExists(string policy, string rule)
		{
			return new LocalizedString("ErrorPolicyRuleExists", "", false, false, Strings.ResourceManager, new object[]
			{
				policy,
				rule
			});
		}

		public static LocalizedString MoveMailboxSourceCleanupTypeMailEnableSourceAccount
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeMailEnableSourceAccount", "Ex765201", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorConvertNonUniversalDistributionGroup(string idRecipient)
		{
			return new LocalizedString("ErrorConvertNonUniversalDistributionGroup", "Ex02289F", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		public static LocalizedString ErrorUserAlreadyDelegate(string id, string group)
		{
			return new LocalizedString("ErrorUserAlreadyDelegate", "ExAB33B0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				group
			});
		}

		public static LocalizedString DatabaseCopyQueueNotKeepingUp(string dbName, string serverName, long queueLength)
		{
			return new LocalizedString("DatabaseCopyQueueNotKeepingUp", "Ex0151F0", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName,
				queueLength
			});
		}

		public static LocalizedString NoSourceMailboxesAndNoPublicFolderSourcesSet
		{
			get
			{
				return new LocalizedString("NoSourceMailboxesAndNoPublicFolderSourcesSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EnumerateRightsFailedException(string account, uint err)
		{
			return new LocalizedString("EnumerateRightsFailedException", "ExA66D8E", false, true, Strings.ResourceManager, new object[]
			{
				account,
				err
			});
		}

		public static LocalizedString ErrorOrgsStillUsingThisMailFlowPartner(string trust, string org, string remainingCount)
		{
			return new LocalizedString("ErrorOrgsStillUsingThisMailFlowPartner", "Ex41D963", false, true, Strings.ResourceManager, new object[]
			{
				trust,
				org,
				remainingCount
			});
		}

		public static LocalizedString ReadingComponents(string role, string taskList)
		{
			return new LocalizedString("ReadingComponents", "Ex006EBF", false, true, Strings.ResourceManager, new object[]
			{
				role,
				taskList
			});
		}

		public static LocalizedString WarningCustomizationsAreAlreadyEnabled(string orgId)
		{
			return new LocalizedString("WarningCustomizationsAreAlreadyEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString CasHealthOwaAuthTypesSupported4(string method1, string method2, string method3, string method4)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported4", "Ex1D2B44", false, true, Strings.ResourceManager, new object[]
			{
				method1,
				method2,
				method3,
				method4
			});
		}

		public static LocalizedString InvalidFqdnUnderExchangeServerAuth(string fqdn, string netbios)
		{
			return new LocalizedString("InvalidFqdnUnderExchangeServerAuth", "ExF97C1B", false, true, Strings.ResourceManager, new object[]
			{
				fqdn,
				netbios
			});
		}

		public static LocalizedString SetupProgressCreateFederatedEmailMailbox
		{
			get
			{
				return new LocalizedString("SetupProgressCreateFederatedEmailMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MultipleCertsFoundBySubject(string IssuedTo)
		{
			return new LocalizedString("MultipleCertsFoundBySubject", "Ex54D52A", false, true, Strings.ResourceManager, new object[]
			{
				IssuedTo
			});
		}

		public static LocalizedString ValueTooSmallException(string key, int value)
		{
			return new LocalizedString("ValueTooSmallException", "ExAA5AC5", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		public static LocalizedString TestSearchServerIsNull(string server)
		{
			return new LocalizedString("TestSearchServerIsNull", "Ex453455", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorJoinRestrictionInvalid
		{
			get
			{
				return new LocalizedString("ErrorJoinRestrictionInvalid", "Ex553B93", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TopologyServiceResultFailure
		{
			get
			{
				return new LocalizedString("TopologyServiceResultFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningBulkOperationCannotDetermineRequester
		{
			get
			{
				return new LocalizedString("WarningBulkOperationCannotDetermineRequester", "ExF11F57", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MonitoringServiceRequestFailed(string machineName, string error)
		{
			return new LocalizedString("MonitoringServiceRequestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString MailboxSearchInPlaceHoldFormatError(string identity)
		{
			return new LocalizedString("MailboxSearchInPlaceHoldFormatError", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupComponentMidFileCopyOSP
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyOSP", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetExchangeObjectVersion(string Identity, string ObjectVersion)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeObjectVersion", "Ex126B01", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ObjectVersion
			});
		}

		public static LocalizedString ErrorUMPolicyToPreE12
		{
			get
			{
				return new LocalizedString("ErrorUMPolicyToPreE12", "Ex5305FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewHostedContentFilterPolicy(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorMoreThanOneValue(string attribute, int count)
		{
			return new LocalizedString("ErrorMoreThanOneValue", "ExD0D24A", false, true, Strings.ResourceManager, new object[]
			{
				attribute,
				count
			});
		}

		public static LocalizedString ConfirmationMessageNewSyncServiceInstance(string serviceInstanceId)
		{
			return new LocalizedString("ConfirmationMessageNewSyncServiceInstance", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		public static LocalizedString ErrorTenantAlreadyBeingRelocated(string Identity)
		{
			return new LocalizedString("ErrorTenantAlreadyBeingRelocated", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorAddedRecipientCannotBeDistributionGroup(string recipient)
		{
			return new LocalizedString("ErrorAddedRecipientCannotBeDistributionGroup", "ExE84A51", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ConfirmationMessageNewResourcePolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewResourcePolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString WarningTransportDecryptionMandatoryRequiresSuperUser
		{
			get
			{
				return new LocalizedString("WarningTransportDecryptionMandatoryRequiresSuperUser", "ExC07CE0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToRetrieveDeletePolicyTag
		{
			get
			{
				return new LocalizedString("UnableToRetrieveDeletePolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestGlobalLocatorServiceIdentity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestGlobalLocatorServiceIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNotPublicFolderMailbox(string idStringValue)
		{
			return new LocalizedString("ErrorNotPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ReplayServiceCheckDesc
		{
			get
			{
				return new LocalizedString("ReplayServiceCheckDesc", "Ex0287E2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsScopeAlreadyExists(string groupName, string id)
		{
			return new LocalizedString("ExchangeSettingsScopeAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				id
			});
		}

		public static LocalizedString ExchangeServersUSGDescription
		{
			get
			{
				return new LocalizedString("ExchangeServersUSGDescription", "Ex260599", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetDbcsRpcNotSupported(string server, string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("GetDbcsRpcNotSupported", "Ex572A01", false, true, Strings.ResourceManager, new object[]
			{
				server,
				serverVersion,
				rpcSupportVersion
			});
		}

		public static LocalizedString AlsEmailBodyAdminObjectIds(string objectIds)
		{
			return new LocalizedString("AlsEmailBodyAdminObjectIds", "", false, false, Strings.ResourceManager, new object[]
			{
				objectIds
			});
		}

		public static LocalizedString WarningCustomRoleCreatedDuringUpgradeForSplittingRole(string id, string customUserRoleId, string splittingRole)
		{
			return new LocalizedString("WarningCustomRoleCreatedDuringUpgradeForSplittingRole", "ExA2F61E", false, true, Strings.ResourceManager, new object[]
			{
				id,
				customUserRoleId,
				splittingRole
			});
		}

		public static LocalizedString CertificateDoesNotHavePKCS10
		{
			get
			{
				return new LocalizedString("CertificateDoesNotHavePKCS10", "Ex2D46A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NullOrEmptyStringNotAllowed(string name)
		{
			return new LocalizedString("NullOrEmptyStringNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CallingLineIdNotUnique(string clid, string id)
		{
			return new LocalizedString("CallingLineIdNotUnique", "Ex01BBC8", false, true, Strings.ResourceManager, new object[]
			{
				clid,
				id
			});
		}

		public static LocalizedString ErrorFailedToEvictMember(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedToEvictMember", "ExDA4E57", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		public static LocalizedString ErrorMissingNameOrDescriptionOrIsDefaultParameters
		{
			get
			{
				return new LocalizedString("ErrorMissingNameOrDescriptionOrIsDefaultParameters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionDiagnosticFailedToGetMdbLocation(string errorMsg)
		{
			return new LocalizedString("MapiTransactionDiagnosticFailedToGetMdbLocation", "ExC6F159", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString CasHealthOwaMailboxServerColon(string mailboxServerName)
		{
			return new LocalizedString("CasHealthOwaMailboxServerColon", "Ex81BCA5", false, true, Strings.ResourceManager, new object[]
			{
				mailboxServerName
			});
		}

		public static LocalizedString CasHealthPowerShellConnectionVirtualDirectory(string vdir)
		{
			return new LocalizedString("CasHealthPowerShellConnectionVirtualDirectory", "ExDA2475", false, true, Strings.ResourceManager, new object[]
			{
				vdir
			});
		}

		public static LocalizedString ConfirmationMessageRemoveForeignConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveForeignConnector", "ExE0CAE4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString OptionalRetentionPolicyTagsMustBePersonalTags(string tag, string type)
		{
			return new LocalizedString("OptionalRetentionPolicyTagsMustBePersonalTags", "ExC48ACB", false, true, Strings.ResourceManager, new object[]
			{
				tag,
				type
			});
		}

		public static LocalizedString WarningPasswordIgnored(string liveId)
		{
			return new LocalizedString("WarningPasswordIgnored", "Ex049C70", false, true, Strings.ResourceManager, new object[]
			{
				liveId
			});
		}

		public static LocalizedString VerboseEndFingerprint
		{
			get
			{
				return new LocalizedString("VerboseEndFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthSpecifiedServerIsNotCas
		{
			get
			{
				return new LocalizedString("CasHealthSpecifiedServerIsNotCas", "Ex843FD3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSynchronizationTypeNotRecognized(string parameter)
		{
			return new LocalizedString("ErrorSynchronizationTypeNotRecognized", "Ex57DCCC", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString InstallingTranscodingService
		{
			get
			{
				return new LocalizedString("InstallingTranscodingService", "ExB5B865", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AllSourceMailboxesParameterOverride(string param1, string param2)
		{
			return new LocalizedString("AllSourceMailboxesParameterOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				param1,
				param2
			});
		}

		public static LocalizedString ErrorCmdletNotSupportedForGroupMailbox(string cmdlet)
		{
			return new LocalizedString("ErrorCmdletNotSupportedForGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		public static LocalizedString VerboseNotFoundAssigneeInConfigNC
		{
			get
			{
				return new LocalizedString("VerboseNotFoundAssigneeInConfigNC", "Ex031BAB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AlgorithmFailedForTraining(string mailbox)
		{
			return new LocalizedString("AlgorithmFailedForTraining", "Ex339392", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString NotTransportServer(string fqdn)
		{
			return new LocalizedString("NotTransportServer", "ExBBBE5D", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		public static LocalizedString WarningIssuerCertificateExpired(string certThumbprint)
		{
			return new LocalizedString("WarningIssuerCertificateExpired", "Ex894A86", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString AlsEmailBodyAdminUserIds(string callers)
		{
			return new LocalizedString("AlsEmailBodyAdminUserIds", "", false, false, Strings.ResourceManager, new object[]
			{
				callers
			});
		}

		public static LocalizedString ExceptionServiceIsNotRunning(string serviceName)
		{
			return new LocalizedString("ExceptionServiceIsNotRunning", "ExEF1D5C", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		public static LocalizedString CannotRemoveDefaultSiteMailboxProvisioningPolicyException
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultSiteMailboxProvisioningPolicyException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterAnyServer(string Identity, string sourceserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterAnyServer", "Ex7C4411", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				sourceserver
			});
		}

		public static LocalizedString ExRBACFailedToUpdateCustomRole(string roleName, string targetCustomRoleName, string error)
		{
			return new LocalizedString("ExRBACFailedToUpdateCustomRole", "Ex418953", false, true, Strings.ResourceManager, new object[]
			{
				roleName,
				targetCustomRoleName,
				error
			});
		}

		public static LocalizedString SetupProgressConfigureAdminGroup
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureAdminGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorImageFileBig(int size)
		{
			return new LocalizedString("ErrorImageFileBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		public static LocalizedString ErrorMicrosoftExchangeRecipientNotFound
		{
			get
			{
				return new LocalizedString("ErrorMicrosoftExchangeRecipientNotFound", "Ex072276", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePackPrereqCheck
		{
			get
			{
				return new LocalizedString("UmLanguagePackPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUsedByOrganization(string nameOrg, string namePFDB)
		{
			return new LocalizedString("ErrorUsedByOrganization", "ExFDB178", false, true, Strings.ResourceManager, new object[]
			{
				nameOrg,
				namePFDB
			});
		}

		public static LocalizedString DagNetworkUnknownSubnetWarning(string subnetId)
		{
			return new LocalizedString("DagNetworkUnknownSubnetWarning", "ExFC8150", false, true, Strings.ResourceManager, new object[]
			{
				subnetId
			});
		}

		public static LocalizedString ManageIsapiExtensionCouldNotFindExtensionException(string groupId, string binary)
		{
			return new LocalizedString("ManageIsapiExtensionCouldNotFindExtensionException", "ExA09A6E", false, true, Strings.ResourceManager, new object[]
			{
				groupId,
				binary
			});
		}

		public static LocalizedString ADAttributeCustomAttribute6
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute6", "Ex607DA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCustomAttribute2
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute2", "Ex408EDE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DomainUsersGroupNotFoundException(string sid)
		{
			return new LocalizedString("DomainUsersGroupNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				sid
			});
		}

		public static LocalizedString ErrorFileNameCannotBeEmptyOrNull
		{
			get
			{
				return new LocalizedString("ErrorFileNameCannotBeEmptyOrNull", "Ex189BED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLinkedUserAccountIsAlreadyUsed(string user, string mailbox)
		{
			return new LocalizedString("ErrorLinkedUserAccountIsAlreadyUsed", "Ex72A197", false, true, Strings.ResourceManager, new object[]
			{
				user,
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageSetDetailsTemplate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDetailsTemplate", "Ex13B9C5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString AgentAlreadyRegistered(string assemblyPath)
		{
			return new LocalizedString("AgentAlreadyRegistered", "Ex3A5393", false, true, Strings.ResourceManager, new object[]
			{
				assemblyPath
			});
		}

		public static LocalizedString ProgressActivityRemovingAddressListTree(string id)
		{
			return new LocalizedString("ProgressActivityRemovingAddressListTree", "ExFD40E3", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageSetActiveSyncOrganizationSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetActiveSyncOrganizationSettings", "Ex907947", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorProvisioningDomainNotMatchAcceptedDomain(string domain, string organization)
		{
			return new LocalizedString("ErrorProvisioningDomainNotMatchAcceptedDomain", "ExE8FCBA", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				organization
			});
		}

		public static LocalizedString NewContentIndexTask
		{
			get
			{
				return new LocalizedString("NewContentIndexTask", "Ex2DD178", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLargeDataLossNotAccepted(string badItemLimitParamName, string badItemLimitValue, string acceptLargeDataLossParamName, string requestorIdentity)
		{
			return new LocalizedString("ErrorLargeDataLossNotAccepted", "ExD15B33", false, true, Strings.ResourceManager, new object[]
			{
				badItemLimitParamName,
				badItemLimitValue,
				acceptLargeDataLossParamName,
				requestorIdentity
			});
		}

		public static LocalizedString ErrorAmbiguousPolicyIdentity(string identity)
		{
			return new LocalizedString("ErrorAmbiguousPolicyIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorOabGenFailed(string oabId, string server, string errormsg)
		{
			return new LocalizedString("ErrorOabGenFailed", "ExA6B484", false, true, Strings.ResourceManager, new object[]
			{
				oabId,
				server,
				errormsg
			});
		}

		public static LocalizedString WarningDuplicatedPropertyModifiedEntry(string propertyName)
		{
			return new LocalizedString("WarningDuplicatedPropertyModifiedEntry", "ExEB2AA2", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString CasTransactionResultCaseNotHandled(CasTransactionResultEnum result)
		{
			return new LocalizedString("CasTransactionResultCaseNotHandled", "Ex576834", false, true, Strings.ResourceManager, new object[]
			{
				result
			});
		}

		public static LocalizedString MapiSubmitSystemProbeSuccesfullyDeleted
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeSuccesfullyDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetPop3Config
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetPop3Config", "ExD8EAB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_MissingOrganizerEmail
		{
			get
			{
				return new LocalizedString("Error_MissingOrganizerEmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProbeResult(string probeResultString)
		{
			return new LocalizedString("ProbeResult", "", false, false, Strings.ResourceManager, new object[]
			{
				probeResultString
			});
		}

		public static LocalizedString ConfirmationMessageAddSecondaryDomain(string organization, string domain)
		{
			return new LocalizedString("ConfirmationMessageAddSecondaryDomain", "Ex8908F1", false, true, Strings.ResourceManager, new object[]
			{
				organization,
				domain
			});
		}

		public static LocalizedString ConfirmationMessageAddMailboxDatabaseCopy(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxDatabaseCopy", "Ex8D02C4", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		public static LocalizedString WarningMustRunEnableAddressListPagingWithForceSwitch(string alname)
		{
			return new LocalizedString("WarningMustRunEnableAddressListPagingWithForceSwitch", "Ex6B2F38", false, true, Strings.ResourceManager, new object[]
			{
				alname
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroup", "ExA20DFE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ExchangeTracingProviderAlreadyExists
		{
			get
			{
				return new LocalizedString("ExchangeTracingProviderAlreadyExists", "Ex3AF8EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNonExistentContact(string user)
		{
			return new LocalizedString("ErrorNonExistentContact", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString InvalidBackupLeaseLocation
		{
			get
			{
				return new LocalizedString("InvalidBackupLeaseLocation", "Ex3B87B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseClearPreferredServer(string prop)
		{
			return new LocalizedString("VerboseClearPreferredServer", "Ex672D78", false, true, Strings.ResourceManager, new object[]
			{
				prop
			});
		}

		public static LocalizedString CouldNotFindAutodiscoverStandardAuthBindingTransportElement
		{
			get
			{
				return new LocalizedString("CouldNotFindAutodiscoverStandardAuthBindingTransportElement", "ExD1A9E8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorStoreMailboxNotUnique(string identity, string mdb)
		{
			return new LocalizedString("ErrorStoreMailboxNotUnique", "Ex9C1E54", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				mdb
			});
		}

		public static LocalizedString CasConfigurationCheckSuccess
		{
			get
			{
				return new LocalizedString("CasConfigurationCheckSuccess", "Ex48578E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRemoteAccountPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRemoteAccountPolicy", "Ex019485", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorSourceHoldNotTimedOut(string identity, string days, string retirementTimeStart)
		{
			return new LocalizedString("ErrorSourceHoldNotTimedOut", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				days,
				retirementTimeStart
			});
		}

		public static LocalizedString RetrievingGlobalThrottlingPolicy
		{
			get
			{
				return new LocalizedString("RetrievingGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringLegacyMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringLegacyMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SubscriptionInvalidEmailAddress(string emailAddress)
		{
			return new LocalizedString("SubscriptionInvalidEmailAddress", "Ex403F91", false, true, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		public static LocalizedString ErrorObjectNotFound(string name)
		{
			return new LocalizedString("ErrorObjectNotFound", "Ex82F2BD", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString VerboseFixingAddressBooksInNativeMode
		{
			get
			{
				return new LocalizedString("VerboseFixingAddressBooksInNativeMode", "ExDDFBE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasScenarioCreateItem
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioCreateItem", "Ex018E22", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateSKINotUnique(string cert1Thumbprint, string cert2Thumbprint, string SKI)
		{
			return new LocalizedString("ErrorCertificateSKINotUnique", "ExC19D43", false, true, Strings.ResourceManager, new object[]
			{
				cert1Thumbprint,
				cert2Thumbprint,
				SKI
			});
		}

		public static LocalizedString FfoWebServiceEcpComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServiceEcpComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingThrottlingService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingThrottlingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRecipientTemplateProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRecipientTemplateProvisioningPolicy", "Ex50735F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CasHealthOwaErrorPageErrorMessage(string message)
		{
			return new LocalizedString("CasHealthOwaErrorPageErrorMessage", "ExCBD689", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorNotEnoughConfigPermissions(string organization)
		{
			return new LocalizedString("ErrorNotEnoughConfigPermissions", "ExB82D08", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString ErrorRequestJobAlreadyOnProperQueue(string identity, string queue)
		{
			return new LocalizedString("ErrorRequestJobAlreadyOnProperQueue", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				queue
			});
		}

		public static LocalizedString TransitionStateActive
		{
			get
			{
				return new LocalizedString("TransitionStateActive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeConfigContainerDataValidationException(string validationError)
		{
			return new LocalizedString("ExchangeConfigContainerDataValidationException", "ExBE02AC", false, true, Strings.ResourceManager, new object[]
			{
				validationError
			});
		}

		public static LocalizedString UMCallAnsweringRuleDescriptionIf
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleDescriptionIf", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidTransportRule
		{
			get
			{
				return new LocalizedString("InvalidTransportRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImapExternalServerSettings
		{
			get
			{
				return new LocalizedString("ImapExternalServerSettings", "Ex2C05D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoPropertyWasModified
		{
			get
			{
				return new LocalizedString("ErrorNoPropertyWasModified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSearchUserNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorSearchUserNotUnique", "Ex59DA1F", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString DisclaimerText
		{
			get
			{
				return new LocalizedString("DisclaimerText", "Ex714D1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxDatabaseNotOnE15Server(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnE15Server", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString InterceptorWarningPathIgnored
		{
			get
			{
				return new LocalizedString("InterceptorWarningPathIgnored", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageConfigureWSRMPolicy(string name, string process)
		{
			return new LocalizedString("ConfirmationMessageConfigureWSRMPolicy", "Ex9D1A8A", false, true, Strings.ResourceManager, new object[]
			{
				name,
				process
			});
		}

		public static LocalizedString ErrorOrganizationThrottlingPolicyAlreadyExists(string orgId)
		{
			return new LocalizedString("ErrorOrganizationThrottlingPolicyAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString ErrorThrottlingPolicyNotFound(string policyDN)
		{
			return new LocalizedString("ErrorThrottlingPolicyNotFound", "Ex6ADD14", false, true, Strings.ResourceManager, new object[]
			{
				policyDN
			});
		}

		public static LocalizedString CannotCombineWildcardSenderAddress
		{
			get
			{
				return new LocalizedString("CannotCombineWildcardSenderAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressOwaInstantMessagingEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaInstantMessagingEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCleanupOldMailboxPlan
		{
			get
			{
				return new LocalizedString("SetupProgressCleanupOldMailboxPlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProtocolLogAttachmentNote(string protocol)
		{
			return new LocalizedString("ProtocolLogAttachmentNote", "Ex846F7E", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		public static LocalizedString ClassificationRuleCollectionOobRulesRemoved(string removedOobRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionOobRulesRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				removedOobRuleIds
			});
		}

		public static LocalizedString ErrorInvalidExternalUserId(string userId)
		{
			return new LocalizedString("ErrorInvalidExternalUserId", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		public static LocalizedString InvalidRejectEnhancedStatus
		{
			get
			{
				return new LocalizedString("InvalidRejectEnhancedStatus", "ExFD496E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetLiveFedUriReserveRequest(string domain)
		{
			return new LocalizedString("SetLiveFedUriReserveRequest", "ExFA3B01", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString DlpPolicyOptionalParameterNotSupplied(string parameterName)
		{
			return new LocalizedString("DlpPolicyOptionalParameterNotSupplied", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString CouldNotFindLocalhostDirectoryEntryException
		{
			get
			{
				return new LocalizedString("CouldNotFindLocalhostDirectoryEntryException", "Ex9A849C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TSCrashDumpsOnlyAvailableOnLocalMachine
		{
			get
			{
				return new LocalizedString("TSCrashDumpsOnlyAvailableOnLocalMachine", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFaildToWriteRegistry(string server, string errorMessage)
		{
			return new LocalizedString("ErrorFaildToWriteRegistry", "Ex124C3A", false, true, Strings.ResourceManager, new object[]
			{
				server,
				errorMessage
			});
		}

		public static LocalizedString ConfirmSetSyncDaemonArbitrationConfig
		{
			get
			{
				return new LocalizedString("ConfirmSetSyncDaemonArbitrationConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MustProvideValidSessionForFindingRequests
		{
			get
			{
				return new LocalizedString("MustProvideValidSessionForFindingRequests", "Ex1B013C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDistributionListJoinClosed(string id)
		{
			return new LocalizedString("ErrorDistributionListJoinClosed", "Ex3DE884", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString EBDInvalidBundle(string path)
		{
			return new LocalizedString("EBDInvalidBundle", "ExD4553A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString CasHealthAutodiscoverServer(string serverName, string emailAddress)
		{
			return new LocalizedString("CasHealthAutodiscoverServer", "ExE0C9CA", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				emailAddress
			});
		}

		public static LocalizedString ConfirmationMessageRemovePartnerApplication(string name)
		{
			return new LocalizedString("ConfirmationMessageRemovePartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorManagedFolderMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorManagedFolderMailboxPolicyNotUnique", "Ex5302A4", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString GetDbcsRpcQuery(string server, string sg)
		{
			return new LocalizedString("GetDbcsRpcQuery", "ExCFC639", false, true, Strings.ResourceManager, new object[]
			{
				server,
				sg
			});
		}

		public static LocalizedString ErrorWindowsLiveIdAssociatedWithAnotherRecipient(string liveID, string recipient)
		{
			return new LocalizedString("ErrorWindowsLiveIdAssociatedWithAnotherRecipient", "Ex78D924", false, true, Strings.ResourceManager, new object[]
			{
				liveID,
				recipient
			});
		}

		public static LocalizedString PopImapConnecting
		{
			get
			{
				return new LocalizedString("PopImapConnecting", "ExDA17F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentCommonTenantConfigLast
		{
			get
			{
				return new LocalizedString("SetupComponentCommonTenantConfigLast", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxNullOrEmptyStringInParameter(int i, string parameter)
		{
			return new LocalizedString("MoveMailboxNullOrEmptyStringInParameter", "Ex78A3FB", false, true, Strings.ResourceManager, new object[]
			{
				i,
				parameter
			});
		}

		public static LocalizedString ErrorLiveDomainServicesUnexpectedResult(string message)
		{
			return new LocalizedString("ErrorLiveDomainServicesUnexpectedResult", "Ex38DFE6", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString InstallShareIISLogFileDirectoryTask
		{
			get
			{
				return new LocalizedString("InstallShareIISLogFileDirectoryTask", "ExFA9D54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBPAConfigDataLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigDataLoad", "Ex605A60", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallHealthManagerServiceTask
		{
			get
			{
				return new LocalizedString("UninstallHealthManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RequiredReportingParameter(string property)
		{
			return new LocalizedString("RequiredReportingParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				property
			});
		}

		public static LocalizedString OutOfRangeSlaTaget(string start, string end)
		{
			return new LocalizedString("OutOfRangeSlaTaget", "Ex66C491", false, true, Strings.ResourceManager, new object[]
			{
				start,
				end
			});
		}

		public static LocalizedString MtrtEventSubmit
		{
			get
			{
				return new LocalizedString("MtrtEventSubmit", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxSearchTaskException(string failure)
		{
			return new LocalizedString("MailboxSearchTaskException", "ExBDC162", false, true, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		public static LocalizedString ErrorCertificateMissingPrivateKey
		{
			get
			{
				return new LocalizedString("ErrorCertificateMissingPrivateKey", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecipientNotFoundInOrganization(string recipient)
		{
			return new LocalizedString("RecipientNotFoundInOrganization", "ExC4D93A", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ErrorCannotModifyContentSettingsLinkedToTag(string idCs)
		{
			return new LocalizedString("ErrorCannotModifyContentSettingsLinkedToTag", "", false, false, Strings.ResourceManager, new object[]
			{
				idCs
			});
		}

		public static LocalizedString DbCopyAlreadyHostedOnServerException(string database, string hostServer)
		{
			return new LocalizedString("DbCopyAlreadyHostedOnServerException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				hostServer
			});
		}

		public static LocalizedString ConfirmationMessageEnableCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableCmdletExtensionAgent", "Ex7816A8", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ExTrustedSubsystemGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExTrustedSubsystemGroupNotFoundException", "Ex252350", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString RecipientDomainStarOnPremiseOutboundConnector
		{
			get
			{
				return new LocalizedString("RecipientDomainStarOnPremiseOutboundConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateStatusUntrusted
		{
			get
			{
				return new LocalizedString("CertificateStatusUntrusted", "ExADE808", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotDeleteAssociatedMailboxPolicyException(string dn)
		{
			return new LocalizedString("CannotDeleteAssociatedMailboxPolicyException", "ExCB739F", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ResumeSuccessInformationalMessage(string name)
		{
			return new LocalizedString("ResumeSuccessInformationalMessage", "ExFB44AA", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupProgressStartingReplayService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingReplayService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToCreateMember(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedToCreateMember", "ExC7E00A", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		public static LocalizedString InstallReplayServiceTask
		{
			get
			{
				return new LocalizedString("InstallReplayServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseCopyStateCheckDesc(CopyStatus copyState)
		{
			return new LocalizedString("DatabaseCopyStateCheckDesc", "Ex18D820", false, true, Strings.ResourceManager, new object[]
			{
				copyState
			});
		}

		public static LocalizedString CouldNotRemoveRequest(string identity)
		{
			return new LocalizedString("CouldNotRemoveRequest", "Ex808B80", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InvalidDirection
		{
			get
			{
				return new LocalizedString("InvalidDirection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetOwaVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOwaVirtualDirectory", "Ex0D9481", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressUpdateDatabaseSettings
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateDatabaseSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAssigneeUserNotFound(string id)
		{
			return new LocalizedString("ErrorAssigneeUserNotFound", "ExFDFD65", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorSetScopeToBlockSelf(string id, string assignmentId)
		{
			return new LocalizedString("ErrorSetScopeToBlockSelf", "ExB50DEA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		public static LocalizedString ErrorCannotChangeLinkedProperty
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeLinkedProperty", "ExA44DCA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidMemberName(string memberName)
		{
			return new LocalizedString("ErrorInvalidMemberName", "Ex37D68B", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString LanguagePackPerfCounterMergeStart
		{
			get
			{
				return new LocalizedString("LanguagePackPerfCounterMergeStart", "Ex2EE092", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DefaultSharingPolicyName
		{
			get
			{
				return new LocalizedString("DefaultSharingPolicyName", "Ex81D245", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMountDatabaseDataLoss(string id)
		{
			return new LocalizedString("VerboseMountDatabaseDataLoss", "Ex671475", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString MailboxSearchObjectWithHoldIdentityNotFound(string id)
		{
			return new LocalizedString("MailboxSearchObjectWithHoldIdentityNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupProgressCreateClassificationDefinitionsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateClassificationDefinitionsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidUMPilotIdentifierListEntry(string entryValue)
		{
			return new LocalizedString("InvalidUMPilotIdentifierListEntry", "ExF0C58D", false, true, Strings.ResourceManager, new object[]
			{
				entryValue
			});
		}

		public static LocalizedString SeedingErrorFileIsDirectory(string field, string directory)
		{
			return new LocalizedString("SeedingErrorFileIsDirectory", "ExB312D1", false, true, Strings.ResourceManager, new object[]
			{
				field,
				directory
			});
		}

		public static LocalizedString ConfirmationMessageRemoveClassificationRuleCollection(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveClassificationRuleCollection", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SecurityDescriptorBeingUpdatedMsg
		{
			get
			{
				return new LocalizedString("SecurityDescriptorBeingUpdatedMsg", "Ex7FF168", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCopyDatabaseLogFiles(string server, string oldDir, string newDir)
		{
			return new LocalizedString("VerboseCopyDatabaseLogFiles", "Ex82395F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir,
				newDir
			});
		}

		public static LocalizedString ConfirmationMessageSetPolicyTipConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetPolicyTipConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MtrtRequireDecryption
		{
			get
			{
				return new LocalizedString("MtrtRequireDecryption", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallIisWebServiceExtensionExists(string GroupID, string executablePath)
		{
			return new LocalizedString("InstallIisWebServiceExtensionExists", "Ex1345AC", false, true, Strings.ResourceManager, new object[]
			{
				GroupID,
				executablePath
			});
		}

		public static LocalizedString ErrorPfDatabaseAlreadyExists(string pfDatabaseName, string serverName)
		{
			return new LocalizedString("ErrorPfDatabaseAlreadyExists", "Ex7CCE1A", false, true, Strings.ResourceManager, new object[]
			{
				pfDatabaseName,
				serverName
			});
		}

		public static LocalizedString ErrorTeamMailboxCanNotLinkSharePointByNonOwner
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxCanNotLinkSharePointByNonOwner", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StatusMessageUpdatePublicFolderMailboxUnderProgress(string jobStatus)
		{
			return new LocalizedString("StatusMessageUpdatePublicFolderMailboxUnderProgress", "", false, false, Strings.ResourceManager, new object[]
			{
				jobStatus
			});
		}

		public static LocalizedString ConfirmationMessageRemoveSystemMessage(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSystemMessage", "ExBDA944", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorCannotParseUsefulHostnameFrom(string url)
		{
			return new LocalizedString("ErrorCannotParseUsefulHostnameFrom", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ErrorMailboxPlanInvalidInThisRelease
		{
			get
			{
				return new LocalizedString("ErrorMailboxPlanInvalidInThisRelease", "Ex08341A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BadWordsPolicyNotEnabledIfBadWordsListNull
		{
			get
			{
				return new LocalizedString("BadWordsPolicyNotEnabledIfBadWordsListNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidFingerprint(string content)
		{
			return new LocalizedString("ErrorInvalidFingerprint", "", false, false, Strings.ResourceManager, new object[]
			{
				content
			});
		}

		public static LocalizedString SeederEndDbSeedRpcFailedException(string dbName, string targetMachine, string errMessage)
		{
			return new LocalizedString("SeederEndDbSeedRpcFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				targetMachine,
				errMessage
			});
		}

		public static LocalizedString ErrorGroupNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorGroupNotFound", "Ex81E4F3", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorSetPublicFolderMailRecipientGuidNotFoundInAd(string mailRecipientGuid)
		{
			return new LocalizedString("ErrorSetPublicFolderMailRecipientGuidNotFoundInAd", "", false, false, Strings.ResourceManager, new object[]
			{
				mailRecipientGuid
			});
		}

		public static LocalizedString MaximumAllowedNumberOfGatewayIPAddressesExceededId(int maxAllowed)
		{
			return new LocalizedString("MaximumAllowedNumberOfGatewayIPAddressesExceededId", "", false, false, Strings.ResourceManager, new object[]
			{
				maxAllowed
			});
		}

		public static LocalizedString OutlookConnectivityErrorUserNotUnique(string identity)
		{
			return new LocalizedString("OutlookConnectivityErrorUserNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ProgressTaskComplete
		{
			get
			{
				return new LocalizedString("ProgressTaskComplete", "Ex7BB6B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCreatedWKGuid(string guid, string target, string container)
		{
			return new LocalizedString("InfoCreatedWKGuid", "Ex0E3D06", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				target,
				container
			});
		}

		public static LocalizedString SetupProgressDisableWMIRPCSS
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIRPCSS", "Ex4B3199", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDbCopyNotHostedOnServer(string db, string server)
		{
			return new LocalizedString("ErrorDbCopyNotHostedOnServer", "Ex924E27", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString ErrorAddressListOrGlobalAddressListNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListOrGlobalAddressListNotUnique", "ExECC38C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString OrgPrereqCheck
		{
			get
			{
				return new LocalizedString("OrgPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtSetHeader
		{
			get
			{
				return new LocalizedString("MtrtSetHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRunOnEdge
		{
			get
			{
				return new LocalizedString("CannotRunOnEdge", "ExD80F97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecipientNotUniqueException(string recipient)
		{
			return new LocalizedString("RecipientNotUniqueException", "ExB45496", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ErrorAuditLogMailboxShouldBeDeletedWithAuditLogSpecified(string identity)
		{
			return new LocalizedString("ErrorAuditLogMailboxShouldBeDeletedWithAuditLogSpecified", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InterceptorErrorConditionHeaderNameMissing
		{
			get
			{
				return new LocalizedString("InterceptorErrorConditionHeaderNameMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ParameterConflict(string parameter1, string parameter2)
		{
			return new LocalizedString("ParameterConflict", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		public static LocalizedString CasHealthOwaShortName
		{
			get
			{
				return new LocalizedString("CasHealthOwaShortName", "Ex4688EF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningSetAdminAuditLogOnPreR5(string org)
		{
			return new LocalizedString("WarningSetAdminAuditLogOnPreR5", "ExA06025", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString PopImapDisconnecting
		{
			get
			{
				return new LocalizedString("PopImapDisconnecting", "Ex584F72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmInvalidRoleDagServer(string machineName)
		{
			return new LocalizedString("AmInvalidRoleDagServer", "ExDE910B", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		public static LocalizedString CasHealthPowerShellConnectionUri(string uri, string type)
		{
			return new LocalizedString("CasHealthPowerShellConnectionUri", "ExCCFC85", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				type
			});
		}

		public static LocalizedString WillNotCreateGlobalThrottlingPolicy
		{
			get
			{
				return new LocalizedString("WillNotCreateGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FederationTrustHasOutdatedCertificates
		{
			get
			{
				return new LocalizedString("FederationTrustHasOutdatedCertificates", "ExD474BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEnableNonUniversalGroup
		{
			get
			{
				return new LocalizedString("ErrorEnableNonUniversalGroup", "ExE266D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConversationsFailedToCreateConversationsFolder
		{
			get
			{
				return new LocalizedString("ConversationsFailedToCreateConversationsFolder", "ExE2DDCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSaveADServerSettingsSucceed
		{
			get
			{
				return new LocalizedString("VerboseSaveADServerSettingsSucceed", "ExDC4A6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotFindExchangeServerDirectoryEntryException(string server)
		{
			return new LocalizedString("CouldNotFindExchangeServerDirectoryEntryException", "ExD5CD41", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorMailboxCreationFailure(string user, string errorMessage)
		{
			return new LocalizedString("ErrorMailboxCreationFailure", "Ex55B968", false, true, Strings.ResourceManager, new object[]
			{
				user,
				errorMessage
			});
		}

		public static LocalizedString ErrorStampSecondaryAddress(string message)
		{
			return new LocalizedString("ErrorStampSecondaryAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString SetupProgressPerMBXPlanRoleAssignmentPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressPerMBXPlanRoleAssignmentPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsCannotChangeScopeFilterOnDownlevelGroup(string groupName)
		{
			return new LocalizedString("ExchangeSettingsCannotChangeScopeFilterOnDownlevelGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		public static LocalizedString AllMapiTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("AllMapiTransactionsSucceeded", "Ex26CEAE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRestrictionWithWrongGroupType
		{
			get
			{
				return new LocalizedString("WarningRestrictionWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressShowInAddressListsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressShowInAddressListsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorConflictingMailboxFolder(string currentUser, string mailboxFolder)
		{
			return new LocalizedString("ErrorConflictingMailboxFolder", "Ex40A70F", false, true, Strings.ResourceManager, new object[]
			{
				currentUser,
				mailboxFolder
			});
		}

		public static LocalizedString NotSupportedForPre14Mailbox(string versionRequired, string mailbox, string currentVersion)
		{
			return new LocalizedString("NotSupportedForPre14Mailbox", "Ex7B3B4B", false, true, Strings.ResourceManager, new object[]
			{
				versionRequired,
				mailbox,
				currentVersion
			});
		}

		public static LocalizedString ErrorCanNotApplyMailboxSettingOnlyPolicy(string id)
		{
			return new LocalizedString("ErrorCanNotApplyMailboxSettingOnlyPolicy", "ExE87CF2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ComplianceSearchTimeoutError
		{
			get
			{
				return new LocalizedString("ComplianceSearchTimeoutError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveManagementRoleRecursive(string Identity, string roles)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRoleRecursive", "ExCF2F02", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				roles
			});
		}

		public static LocalizedString ConfirmationMessageDisableRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableRemoteMailbox", "Ex04456E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString OrganizationParamRequired
		{
			get
			{
				return new LocalizedString("OrganizationParamRequired", "Ex82AF27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMultipleDefaultRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("ErrorMultipleDefaultRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotGetMsoEndpoint
		{
			get
			{
				return new LocalizedString("CouldNotGetMsoEndpoint", "ExFBF7FD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsGroupNotFound(string name)
		{
			return new LocalizedString("ExchangeSettingsGroupNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MoveRequestIsMissing
		{
			get
			{
				return new LocalizedString("MoveRequestIsMissing", "Ex69DE90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotChangeAcceptMessagesFrom
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeAcceptMessagesFrom", "Ex775BFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthCalendarCheckSuccess(string scenario)
		{
			return new LocalizedString("CasHealthCalendarCheckSuccess", "Ex904C77", false, true, Strings.ResourceManager, new object[]
			{
				scenario
			});
		}

		public static LocalizedString FailedToEvictNode(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToEvictNode", "Ex376375", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		public static LocalizedString ErrorArchiveTargetIsNotAnMEU(string user)
		{
			return new LocalizedString("ErrorArchiveTargetIsNotAnMEU", "ExD8E0C0", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString MessageTraceMinimumCriteriaFieldsInError
		{
			get
			{
				return new LocalizedString("MessageTraceMinimumCriteriaFieldsInError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotChangeHiddenFromAddressListsEnabled
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeHiddenFromAddressListsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoTakeOwnership(string dn)
		{
			return new LocalizedString("InfoTakeOwnership", "Ex7C59E8", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString FailedToDecryptImportedTrustedPublishingDomain(Exception ex)
		{
			return new LocalizedString("FailedToDecryptImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString ErrorDefaultRoleAssignmentPolicyNotFound
		{
			get
			{
				return new LocalizedString("ErrorDefaultRoleAssignmentPolicyNotFound", "Ex29F972", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidOrgCapabilityParameter
		{
			get
			{
				return new LocalizedString("InvalidOrgCapabilityParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString JournalingReportNdrToSameAsJournalEmailAddress
		{
			get
			{
				return new LocalizedString("JournalingReportNdrToSameAsJournalEmailAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRpcHttpSSLOffloadingDisabled
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpSSLOffloadingDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ContinueOnEmptySearchQuery
		{
			get
			{
				return new LocalizedString("ContinueOnEmptySearchQuery", "ExE76F2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestMessageSent(string subject, string user)
		{
			return new LocalizedString("TestMessageSent", "Ex309C1D", false, true, Strings.ResourceManager, new object[]
			{
				subject,
				user
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDeliveryAgentConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDeliveryAgentConnector", "ExAF4294", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UninstallingIMAP4Service
		{
			get
			{
				return new LocalizedString("UninstallingIMAP4Service", "ExCFF7CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMoveRequestDebug(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMoveRequestDebug", "Ex8C3E03", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SourceAndTargetDialPlanURITypeMismatch(string sourceUriType, string targetUriType)
		{
			return new LocalizedString("SourceAndTargetDialPlanURITypeMismatch", "Ex090035", false, true, Strings.ResourceManager, new object[]
			{
				sourceUriType,
				targetUriType
			});
		}

		public static LocalizedString ErrorRemovedMailboxDoesNotHaveMailboxGuid(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxDoesNotHaveMailboxGuid", "Ex03BCF5", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		public static LocalizedString ErrorCannotRetrieveSyncDaemonArbitrationConfigContainer(string length)
		{
			return new LocalizedString("ErrorCannotRetrieveSyncDaemonArbitrationConfigContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				length
			});
		}

		public static LocalizedString ErrorFailedToPrepopulateCache(string databaseName, string server, string mailbox, string errorCode)
		{
			return new LocalizedString("ErrorFailedToPrepopulateCache", "ExA058BD", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				server,
				mailbox,
				errorCode
			});
		}

		public static LocalizedString WarningReturnDefaultOrganizationThrottlingPolicy
		{
			get
			{
				return new LocalizedString("WarningReturnDefaultOrganizationThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidIntegerConfiguration(string key, int value, int min, int max)
		{
			return new LocalizedString("InvalidIntegerConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				value,
				min,
				max
			});
		}

		public static LocalizedString ErrorStartAfterCanBeSetOnlyInQueued
		{
			get
			{
				return new LocalizedString("ErrorStartAfterCanBeSetOnlyInQueued", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClientAccessLocalPermissionsComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessLocalPermissionsComponentDescription", "Ex97F111", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorClientAccessArrayNotUnique(string identity)
		{
			return new LocalizedString("ErrorClientAccessArrayNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MoveMailboxToE14(string src, string targetServer)
		{
			return new LocalizedString("MoveMailboxToE14", "ExCBFBCF", false, true, Strings.ResourceManager, new object[]
			{
				src,
				targetServer
			});
		}

		public static LocalizedString MailboxDatabaseIsDown
		{
			get
			{
				return new LocalizedString("MailboxDatabaseIsDown", "ExC2D9F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToAccessInboxRulesGenericMessage(string details)
		{
			return new LocalizedString("ErrorUnableToAccessInboxRulesGenericMessage", "Ex845A14", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString ConfirmationMessageUpdateOfflineAddressBook(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateOfflineAddressBook", "Ex6AEAE3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorLogFolderPathNotUniqueUnderSameDAG(string filePath)
		{
			return new LocalizedString("ErrorLogFolderPathNotUniqueUnderSameDAG", "Ex3FEE39", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		public static LocalizedString ErrorRelocationConstraintsPresent(string tenant, string constraint)
		{
			return new LocalizedString("ErrorRelocationConstraintsPresent", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				constraint
			});
		}

		public static LocalizedString VerboseCheckingRecipientWriteScope(string id)
		{
			return new LocalizedString("VerboseCheckingRecipientWriteScope", "ExC4FE5E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupComponentClientAccessGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentClientAccessGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveTransportRuleThatBelongsToDLpPolicy(string Identity, string dlpPolicyName)
		{
			return new LocalizedString("ConfirmationMessageRemoveTransportRuleThatBelongsToDLpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity,
				dlpPolicyName
			});
		}

		public static LocalizedString ProvisioningRequestNotFound(string tenantName)
		{
			return new LocalizedString("ProvisioningRequestNotFound", "Ex7B31BA", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString JournalingExpiryDateAlreadyExpired
		{
			get
			{
				return new LocalizedString("JournalingExpiryDateAlreadyExpired", "ExF5840B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTargetEndpointRequired
		{
			get
			{
				return new LocalizedString("ErrorTargetEndpointRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressRecreateCannedRBACRoleGroups
		{
			get
			{
				return new LocalizedString("SetupProgressRecreateCannedRBACRoleGroups", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StoppinggMSExchangeFDS
		{
			get
			{
				return new LocalizedString("StoppinggMSExchangeFDS", "ExD30564", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtModerateMessageByUser
		{
			get
			{
				return new LocalizedString("MtrtModerateMessageByUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogonFailure
		{
			get
			{
				return new LocalizedString("LogonFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressStatusUpdateRecipient(string idRecipient)
		{
			return new LocalizedString("ProgressStatusUpdateRecipient", "ExFFD131", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		public static LocalizedString ErrorTeamMailboxSetShowInMyClientForClosedMailbox(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxSetShowInMyClientForClosedMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		public static LocalizedString CertificateInvalidFileName(string server)
		{
			return new LocalizedString("CertificateInvalidFileName", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString UnableToGrantFullControlOnEOA(string object1, string grantAceObject, string message)
		{
			return new LocalizedString("UnableToGrantFullControlOnEOA", "Ex1025D3", false, true, Strings.ResourceManager, new object[]
			{
				object1,
				grantAceObject,
				message
			});
		}

		public static LocalizedString TenantAlreadyHasMigrationActive(string tenantName)
		{
			return new LocalizedString("TenantAlreadyHasMigrationActive", "ExD4169C", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString ExceptionStorageOther(int errCode, string errMsg)
		{
			return new LocalizedString("ExceptionStorageOther", "Ex41A88A", false, true, Strings.ResourceManager, new object[]
			{
				errCode,
				errMsg
			});
		}

		public static LocalizedString ErrorServerIsNotInCasRole(string name)
		{
			return new LocalizedString("ErrorServerIsNotInCasRole", "Ex3538DD", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorImageImport
		{
			get
			{
				return new LocalizedString("ErrorImageImport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddressRewriteInvalidIdentity
		{
			get
			{
				return new LocalizedString("AddressRewriteInvalidIdentity", "Ex55771C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MsiInstallFailed(string packagePath, string message, int errorCode)
		{
			return new LocalizedString("MsiInstallFailed", "Ex96BCEE", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				message,
				errorCode
			});
		}

		public static LocalizedString NewPop3ConfigurationTask
		{
			get
			{
				return new LocalizedString("NewPop3ConfigurationTask", "ExD82460", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxRepairRequestDatabase(string job)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxRepairRequestDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				job
			});
		}

		public static LocalizedString ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked
		{
			get
			{
				return new LocalizedString("ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaHttpCode(int httpResultCode)
		{
			return new LocalizedString("CasHealthOwaHttpCode", "Ex9A39EE", false, true, Strings.ResourceManager, new object[]
			{
				httpResultCode
			});
		}

		public static LocalizedString ArchiveConnectivityResultArchiveNotProvisioned
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultArchiveNotProvisioned", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFixingVersionAndMinAdmin(string id)
		{
			return new LocalizedString("VerboseFixingVersionAndMinAdmin", "Ex54D347", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ReservedIPv4AddressesAreNotAllowedInGatewayIPAddressesId(string ip)
		{
			return new LocalizedString("ReservedIPv4AddressesAreNotAllowedInGatewayIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		public static LocalizedString ConfirmationMessageNewOutboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupExchangeHostedFilteringPerimeterEnabled
		{
			get
			{
				return new LocalizedString("SetupExchangeHostedFilteringPerimeterEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionDistinctRegexesExceedLimit(int distinctRegexesLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionDistinctRegexesExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				distinctRegexesLimit,
				offendingRuleIds
			});
		}

		public static LocalizedString CannotRunMonitoringTaskRemotelyException(string remoteServerName)
		{
			return new LocalizedString("CannotRunMonitoringTaskRemotelyException", "", false, false, Strings.ResourceManager, new object[]
			{
				remoteServerName
			});
		}

		public static LocalizedString ErrorInvalidMailboxPlanTransition(string oldMbxPlan, string oldMbxPlanCapability, string newMbxPlan, string newMbxPlanCapability)
		{
			return new LocalizedString("ErrorInvalidMailboxPlanTransition", "ExB0BE97", false, true, Strings.ResourceManager, new object[]
			{
				oldMbxPlan,
				oldMbxPlanCapability,
				newMbxPlan,
				newMbxPlanCapability
			});
		}

		public static LocalizedString ConfirmationMessageNewPswsVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageNewPswsVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		public static LocalizedString SetupComponentMidFileCopyCafe
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyCafe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EstimateOnlyLogLevelParameterConflict(string loglevel)
		{
			return new LocalizedString("EstimateOnlyLogLevelParameterConflict", "Ex28E39C", false, true, Strings.ResourceManager, new object[]
			{
				loglevel
			});
		}

		public static LocalizedString DagNetworkEmptyDagException(string dagName)
		{
			return new LocalizedString("DagNetworkEmptyDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		public static LocalizedString ErrorTargetDatabaseNotAllowedForRemotePush
		{
			get
			{
				return new LocalizedString("ErrorTargetDatabaseNotAllowedForRemotePush", "ExC29E2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorADOperationSucceededButMetabaseOperationFailed
		{
			get
			{
				return new LocalizedString("ErrorADOperationSucceededButMetabaseOperationFailed", "Ex9462FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMailboxDistinguishedName(string id)
		{
			return new LocalizedString("VerboseMailboxDistinguishedName", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorEdbFileLocationNotOnFixedDrive(string filePath)
		{
			return new LocalizedString("ErrorEdbFileLocationNotOnFixedDrive", "ExC8C8AA", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		public static LocalizedString SetupSettingAdminToolsConfiguredVersion
		{
			get
			{
				return new LocalizedString("SetupSettingAdminToolsConfiguredVersion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMCallAnsweringRuleUnknownContact
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleUnknownContact", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtSetAuditSeverity
		{
			get
			{
				return new LocalizedString("MtrtSetAuditSeverity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IISNotReachableException(string serverName, string errorMsg)
		{
			return new LocalizedString("IISNotReachableException", "Ex4CE676", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMsg
			});
		}

		public static LocalizedString ReservedString1
		{
			get
			{
				return new LocalizedString("ReservedString1", "Ex74954D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AppIDServiceUrl(string url)
		{
			return new LocalizedString("AppIDServiceUrl", "Ex1F8622", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SetupComponentConfigPermissionsFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentConfigPermissionsFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaGotOwaLogonPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGotOwaLogonPage", "Ex21C7A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToReserveUri(string uri, string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReserveUri", "ExB1ED7A", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				domain,
				appId,
				errdetails
			});
		}

		public static LocalizedString ErrorFailedToDetermineExchangeModeException(string errorMessage)
		{
			return new LocalizedString("ErrorFailedToDetermineExchangeModeException", "ExE0B94A", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		public static LocalizedString ConfirmationMessageNewTagELCContentSettings(string Name, string TageName, string MessageClass)
		{
			return new LocalizedString("ConfirmationMessageNewTagELCContentSettings", "Ex484760", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				TageName,
				MessageClass
			});
		}

		public static LocalizedString ConfirmationMessageNewMailMessage(string mailbox)
		{
			return new LocalizedString("ConfirmationMessageNewMailMessage", "Ex60A255", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ADAttributeOtherHomePhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributeOtherHomePhoneNumber", "ExA01E35", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotParseRemoteValue(string remoteName, string remoteValue)
		{
			return new LocalizedString("CouldNotParseRemoteValue", "Ex276509", false, true, Strings.ResourceManager, new object[]
			{
				remoteName,
				remoteValue
			});
		}

		public static LocalizedString TenantNotificationDebugEventResourceFileNotFound(string eventSource)
		{
			return new LocalizedString("TenantNotificationDebugEventResourceFileNotFound", "Ex0ABBB9", false, true, Strings.ResourceManager, new object[]
			{
				eventSource
			});
		}

		public static LocalizedString SubjectPrefix
		{
			get
			{
				return new LocalizedString("SubjectPrefix", "ExE21B5E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseNotMovedInServerModeException(string database, string sourceServer)
		{
			return new LocalizedString("DatabaseNotMovedInServerModeException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				sourceServer
			});
		}

		public static LocalizedString TestSearchCreateFolder(string MDB, string ID)
		{
			return new LocalizedString("TestSearchCreateFolder", "ExB455BA", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		public static LocalizedString SendConnectorSourceServersNotSet
		{
			get
			{
				return new LocalizedString("SendConnectorSourceServersNotSet", "Ex653167", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorWarningConditionInvalidCharacters(string value)
		{
			return new LocalizedString("InterceptorWarningConditionInvalidCharacters", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString ErrorInvalidAuditDelegateOperationType
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuditDelegateOperationType", "Ex34452D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRoleGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageRemoveRoleGroupMember", "Ex503E71", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		public static LocalizedString MissingMapping(string file, string programId, string offerId)
		{
			return new LocalizedString("MissingMapping", "Ex3CF576", false, true, Strings.ResourceManager, new object[]
			{
				file,
				programId,
				offerId
			});
		}

		public static LocalizedString InfoLicensingUri(Uri uri)
		{
			return new LocalizedString("InfoLicensingUri", "ExEC5918", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString ErrorCannotMoveWellKnownPublicFolders
		{
			get
			{
				return new LocalizedString("ErrorCannotMoveWellKnownPublicFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithCustomFilter(string Name, string RecipientFilter, string EnabledPrimarySMTPAddressTemplate)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithCustomFilter", "ExE1C3AB", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				RecipientFilter,
				EnabledPrimarySMTPAddressTemplate
			});
		}

		public static LocalizedString VerboseSyncTaskHighestCommittedUSN(string dc, long highestUSN)
		{
			return new LocalizedString("VerboseSyncTaskHighestCommittedUSN", "ExC084A2", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				highestUSN
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxWithWindowsLiveId(string Name, string liveID, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxWithWindowsLiveId", "Ex780B55", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				liveID,
				OrganizationalUnit
			});
		}

		public static LocalizedString ExceptionPerfCounterDefinitionFileNotFound(string definitionFileName)
		{
			return new LocalizedString("ExceptionPerfCounterDefinitionFileNotFound", "Ex8C2BA4", false, true, Strings.ResourceManager, new object[]
			{
				definitionFileName
			});
		}

		public static LocalizedString DagNetworkEnumerationFailed(string errMsg)
		{
			return new LocalizedString("DagNetworkEnumerationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				errMsg
			});
		}

		public static LocalizedString NoFederationMetadataEpr
		{
			get
			{
				return new LocalizedString("NoFederationMetadataEpr", "Ex2077F3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGroupOrIndividualRecipientNeeded(string badId)
		{
			return new LocalizedString("ErrorGroupOrIndividualRecipientNeeded", "Ex3B9460", false, true, Strings.ResourceManager, new object[]
			{
				badId
			});
		}

		public static LocalizedString VerboseResetMdb(string id)
		{
			return new LocalizedString("VerboseResetMdb", "ExB90F49", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CertificateNotValidForExchange(string thumbprint, string reason)
		{
			return new LocalizedString("CertificateNotValidForExchange", "ExB5BDFC", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				reason
			});
		}

		public static LocalizedString SetupProcessCreateDefaultThrottlingPolicy
		{
			get
			{
				return new LocalizedString("SetupProcessCreateDefaultThrottlingPolicy", "ExF34C7C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProvisioningTenantAlreadyHasMigrationPending(string tenantName)
		{
			return new LocalizedString("ProvisioningTenantAlreadyHasMigrationPending", "ExE0D276", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString ErrorRetentionTagNotFound(string tagid)
		{
			return new LocalizedString("ErrorRetentionTagNotFound", "Ex796044", false, true, Strings.ResourceManager, new object[]
			{
				tagid
			});
		}

		public static LocalizedString ConfirmationMessageTestMRSHealth(string server)
		{
			return new LocalizedString("ConfirmationMessageTestMRSHealth", "Ex6A81AB", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString VerboseExecuteCmd(string app, string argument, string output)
		{
			return new LocalizedString("VerboseExecuteCmd", "ExC96A2F", false, true, Strings.ResourceManager, new object[]
			{
				app,
				argument,
				output
			});
		}

		public static LocalizedString BadProtocolSettingsException(string param)
		{
			return new LocalizedString("BadProtocolSettingsException", "ExEB524D", false, true, Strings.ResourceManager, new object[]
			{
				param
			});
		}

		public static LocalizedString ToplogyScanFailed
		{
			get
			{
				return new LocalizedString("ToplogyScanFailed", "Ex44B606", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaTimeoutInternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaTimeoutInternal", "ExE704CF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRemoteMailbox", "ExF388C4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DisasterRecoveryClientAccessRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryClientAccessRoleDescription", "Ex4C2B32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRoleNameMustBeUnique(string roleName)
		{
			return new LocalizedString("ErrorRoleNameMustBeUnique", "Ex9482CE", false, true, Strings.ResourceManager, new object[]
			{
				roleName
			});
		}

		public static LocalizedString ConfirmationMessageNewOabVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewOabVirtualDirectory", "Ex39F6AC", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		public static LocalizedString MailboxReplicationServiceDescription
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmRemovalOfRequestForInaccessibleDatabase(string indexEntry, Guid mdbGuid)
		{
			return new LocalizedString("ConfirmRemovalOfRequestForInaccessibleDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				indexEntry,
				mdbGuid
			});
		}

		public static LocalizedString ErrorFolderTypeModified
		{
			get
			{
				return new LocalizedString("ErrorFolderTypeModified", "Ex0D116C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_DatabaseAttributesMismatch(string database, string constraintValue)
		{
			return new LocalizedString("Error_DatabaseAttributesMismatch", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				constraintValue
			});
		}

		public static LocalizedString CasHealthWebAppLogonScenarioName
		{
			get
			{
				return new LocalizedString("CasHealthWebAppLogonScenarioName", "ExDD8574", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOldTenantsCannotBeMigrated(string identity)
		{
			return new LocalizedString("ErrorOldTenantsCannotBeMigrated", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableFederatedOrgId(string org)
		{
			return new LocalizedString("ConfirmationMessageEnableFederatedOrgId", "ExA2F222", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ChangingGlobalPolicy(string policyName)
		{
			return new LocalizedString("ChangingGlobalPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		public static LocalizedString GetQueueDigestFromMtrtFailed(string details)
		{
			return new LocalizedString("GetQueueDigestFromMtrtFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString InstallCentralAdminRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCentralAdminRoleDescription", "ExA54782", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetContact", "Ex116E62", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TestSearchCatalogBacklog(string backlog, string retryQueue)
		{
			return new LocalizedString("TestSearchCatalogBacklog", "", false, false, Strings.ResourceManager, new object[]
			{
				backlog,
				retryQueue
			});
		}

		public static LocalizedString UnableToRetrieveFolderName(string folderPath)
		{
			return new LocalizedString("UnableToRetrieveFolderName", "", false, false, Strings.ResourceManager, new object[]
			{
				folderPath
			});
		}

		public static LocalizedString messageExternalUrlNotFoundException(ServerIdParameter serverId, Type type)
		{
			return new LocalizedString("messageExternalUrlNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverId,
				type
			});
		}

		public static LocalizedString StoppingIMAP4Service
		{
			get
			{
				return new LocalizedString("StoppingIMAP4Service", "Ex76B326", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskJoinedNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskJoinedNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SetupProgressSyncAccountsTimeBeforeDormant
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsTimeBeforeDormant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageResetADServerSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageResetADServerSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPidRealmIssuerDifferentFromMetadata(string newPid, string newRealm, string newIssuerId, string configPid, string configRealm, string configIssuerId)
		{
			return new LocalizedString("ErrorPidRealmIssuerDifferentFromMetadata", "", false, false, Strings.ResourceManager, new object[]
			{
				newPid,
				newRealm,
				newIssuerId,
				configPid,
				configRealm,
				configIssuerId
			});
		}

		public static LocalizedString ErrorLiveIdServiceDown(string message)
		{
			return new LocalizedString("ErrorLiveIdServiceDown", "Ex2AE2FD", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString NoAuthenticatedServerUri
		{
			get
			{
				return new LocalizedString("NoAuthenticatedServerUri", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IisUtilityInvalidApplicationRootPathException(string applicationRootPath)
		{
			return new LocalizedString("IisUtilityInvalidApplicationRootPathException", "ExFA5FF1", false, true, Strings.ResourceManager, new object[]
			{
				applicationRootPath
			});
		}

		public static LocalizedString NeedNonrestrictedScopeAssignment(string identity)
		{
			return new LocalizedString("NeedNonrestrictedScopeAssignment", "ExC78CC0", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CollectionConflictionError(string item, string property)
		{
			return new LocalizedString("CollectionConflictionError", "ExC7FF40", false, true, Strings.ResourceManager, new object[]
			{
				item,
				property
			});
		}

		public static LocalizedString VirtualDirectoryTypeRequired
		{
			get
			{
				return new LocalizedString("VirtualDirectoryTypeRequired", "Ex55A9D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMSOFullSyncRequest(string objectId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMSOFullSyncRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString ErrorNoArchiveWithManagedFolder(string user)
		{
			return new LocalizedString("ErrorNoArchiveWithManagedFolder", "ExBD24A7", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString FailedToGetPropertyFromPF(string propertyTag, string publicFolder, string error)
		{
			return new LocalizedString("FailedToGetPropertyFromPF", "ExA88BFB", false, true, Strings.ResourceManager, new object[]
			{
				propertyTag,
				publicFolder,
				error
			});
		}

		public static LocalizedString ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled
		{
			get
			{
				return new LocalizedString("ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BackSyncObjectExcluded(string objectId, DirectoryObjectErrorCode errorCode, ProcessingStage processingStage)
		{
			return new LocalizedString("BackSyncObjectExcluded", "Ex60241B", false, true, Strings.ResourceManager, new object[]
			{
				objectId,
				errorCode,
				processingStage
			});
		}

		public static LocalizedString RestoreMailboxDuplicateRecoveryMailbox(string mailboxGuid)
		{
			return new LocalizedString("RestoreMailboxDuplicateRecoveryMailbox", "Ex67FF1D", false, true, Strings.ResourceManager, new object[]
			{
				mailboxGuid
			});
		}

		public static LocalizedString ErrorBPAScanTypeNotFound(string scanType)
		{
			return new LocalizedString("ErrorBPAScanTypeNotFound", "ExD2BE1E", false, true, Strings.ResourceManager, new object[]
			{
				scanType
			});
		}

		public static LocalizedString VerboseInvokingRUS(string id, string type)
		{
			return new LocalizedString("VerboseInvokingRUS", "ExE2EA0D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		public static LocalizedString VerboseEvictMember(string memberName)
		{
			return new LocalizedString("VerboseEvictMember", "ExC96058", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ErrorWSManConfigFileNotFound(string file)
		{
			return new LocalizedString("ErrorWSManConfigFileNotFound", "ExA8A080", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString RuleIsCorrupt(string name, string error)
		{
			return new LocalizedString("RuleIsCorrupt", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				error
			});
		}

		public static LocalizedString SetupProgressMSOSyncEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressMSOSyncEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxReplicationServiceIsScanningForJobs(TimeSpan lastScanAge)
		{
			return new LocalizedString("MailboxReplicationServiceIsScanningForJobs", "Ex4EDA13", false, true, Strings.ResourceManager, new object[]
			{
				lastScanAge
			});
		}

		public static LocalizedString MtrtEventBadmail
		{
			get
			{
				return new LocalizedString("MtrtEventBadmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCheckingConfigWriteScope(string id)
		{
			return new LocalizedString("VerboseCheckingConfigWriteScope", "Ex14537E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CasHealthMailboxNotFound(string userPrincipalName)
		{
			return new LocalizedString("CasHealthMailboxNotFound", "Ex2E6628", false, true, Strings.ResourceManager, new object[]
			{
				userPrincipalName
			});
		}

		public static LocalizedString ErrorRemoveNonExistentParameters(string role, string cmdlet, string parameters)
		{
			return new LocalizedString("ErrorRemoveNonExistentParameters", "ExB1E6C8", false, true, Strings.ResourceManager, new object[]
			{
				role,
				cmdlet,
				parameters
			});
		}

		public static LocalizedString GetImap4ConfigurationTask
		{
			get
			{
				return new LocalizedString("GetImap4ConfigurationTask", "Ex40A60C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRecipientViewRootEmptyAndViewEntireForestToFalse
		{
			get
			{
				return new LocalizedString("ErrorRecipientViewRootEmptyAndViewEntireForestToFalse", "Ex4F6CED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetExchangeAssistance
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetExchangeAssistance", "ExD63660", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskServerMailboxServerIsInDifferentDagException(string mailboxServer, string otherDagName)
		{
			return new LocalizedString("DagTaskServerMailboxServerIsInDifferentDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				otherDagName
			});
		}

		public static LocalizedString DagTaskClusterWithDagNameIsSquattingException(string dagName)
		{
			return new LocalizedString("DagTaskClusterWithDagNameIsSquattingException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		public static LocalizedString UpdateServicePlanDescription
		{
			get
			{
				return new LocalizedString("UpdateServicePlanDescription", "ExD8339F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StartReplService
		{
			get
			{
				return new LocalizedString("StartReplService", "Ex648C7A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtEventSpam
		{
			get
			{
				return new LocalizedString("MtrtEventSpam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MsiInstallFailedDetailed(string packagePath, string message, int errorCode, string msiError)
		{
			return new LocalizedString("MsiInstallFailedDetailed", "ExA12D2D", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				message,
				errorCode,
				msiError
			});
		}

		public static LocalizedString ErrorConnectorNotEnabled(string connectorName)
		{
			return new LocalizedString("ErrorConnectorNotEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveFederatedDomain(string domain, string org)
		{
			return new LocalizedString("ConfirmationMessageRemoveFederatedDomain", "ExD04449", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				org
			});
		}

		public static LocalizedString CasHealthUriFoundViaAutodiscovery
		{
			get
			{
				return new LocalizedString("CasHealthUriFoundViaAutodiscovery", "ExA1AF1C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFederationCertificateNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorFederationCertificateNotSpecified", "ExA63267", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CannotInstallWithNonCurrentRoles(string nonCurrentRoles)
		{
			return new LocalizedString("CannotInstallWithNonCurrentRoles", "Ex7D3CA8", false, true, Strings.ResourceManager, new object[]
			{
				nonCurrentRoles
			});
		}

		public static LocalizedString InterceptorErrorInvalidXml(string objectId, string error)
		{
			return new LocalizedString("InterceptorErrorInvalidXml", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				error
			});
		}

		public static LocalizedString ErrorMserveException(string message)
		{
			return new LocalizedString("ErrorMserveException", "Ex68574C", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorReceiveConnectorNotFound(object idStringValue)
		{
			return new LocalizedString("ErrorReceiveConnectorNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString IISErrorReadingWritingException(string serverName, string errorMsg, int code)
		{
			return new LocalizedString("IISErrorReadingWritingException", "ExD3C5A5", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMsg,
				code
			});
		}

		public static LocalizedString SetupProgressInstallDefaultMessageFilterContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultMessageFilterContainer", "ExB84F0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFileIsTooSmallForFingerprint
		{
			get
			{
				return new LocalizedString("ErrorFileIsTooSmallForFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestTeamMailboxSharepointCallUnderOauthTask
		{
			get
			{
				return new LocalizedString("TestTeamMailboxSharepointCallUnderOauthTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveClassificationUsedByTransportRule(string id)
		{
			return new LocalizedString("ErrorRemoveClassificationUsedByTransportRule", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseMailboxDelegateSkip(string delegateUser)
		{
			return new LocalizedString("VerboseMailboxDelegateSkip", "Ex95DC39", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser
			});
		}

		public static LocalizedString CasHealthEcpLongName
		{
			get
			{
				return new LocalizedString("CasHealthEcpLongName", "Ex36727A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAccessingFederationMetadata(string message)
		{
			return new LocalizedString("ErrorAccessingFederationMetadata", "Ex8DA35D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString WarningModifySubjectValueNotSet
		{
			get
			{
				return new LocalizedString("WarningModifySubjectValueNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush
		{
			get
			{
				return new LocalizedString("ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush", "ExD12FE4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidNotifyAddress
		{
			get
			{
				return new LocalizedString("InvalidNotifyAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString QuarantineActionNotAvailable
		{
			get
			{
				return new LocalizedString("QuarantineActionNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceSearchTasksCreated(int nTasks)
		{
			return new LocalizedString("ComplianceSearchTasksCreated", "", false, false, Strings.ResourceManager, new object[]
			{
				nTasks
			});
		}

		public static LocalizedString ExceptionDirectoryNotFound(string path)
		{
			return new LocalizedString("ExceptionDirectoryNotFound", "Ex51939A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ComplianceSearchNameIsNotUnique(string name)
		{
			return new LocalizedString("ComplianceSearchNameIsNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MtrtRedirectMessage
		{
			get
			{
				return new LocalizedString("MtrtRedirectMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxPublicFolder(string Name, string Database, string Arbitration, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxPublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				Arbitration,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString ErrorCompletedMoveMustBeCleared(string mailbox)
		{
			return new LocalizedString("ErrorCompletedMoveMustBeCleared", "Ex46DA42", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxPlan(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxPlan", "ExF3265F", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString ConfirmationMessageRemoveRMSTPD(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveRMSTPD", "Ex12281E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ClassificationRuleCollectionReservedProcessorIdViolation(string processorIds)
		{
			return new LocalizedString("ClassificationRuleCollectionReservedProcessorIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				processorIds
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxTransportService(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxTransportService", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorDatabaseVersionUnsupported(string dbName, string serverName, string serverVersion)
		{
			return new LocalizedString("ErrorDatabaseVersionUnsupported", "Ex2AFEC8", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName,
				serverVersion
			});
		}

		public static LocalizedString ErrorCannotChangeObjectOutOfWriteScope(string name, string reason)
		{
			return new LocalizedString("ErrorCannotChangeObjectOutOfWriteScope", "Ex1DBE2D", false, true, Strings.ResourceManager, new object[]
			{
				name,
				reason
			});
		}

		public static LocalizedString InstallingMSIFor(string lang, string msiType)
		{
			return new LocalizedString("InstallingMSIFor", "ExCE08BE", false, true, Strings.ResourceManager, new object[]
			{
				lang,
				msiType
			});
		}

		public static LocalizedString CasHealthOwaUriScopeHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaUriScopeHeader", "Ex0B6DA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotMakeAcceptedDomainExternalRelaySinceItIsReferencedByAddressTemplate(SmtpDomainWithSubdomains domain, SmtpProxyAddressTemplate template)
		{
			return new LocalizedString("CannotMakeAcceptedDomainExternalRelaySinceItIsReferencedByAddressTemplate", "ExE59FB5", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				template
			});
		}

		public static LocalizedString EndPointNotRegisteredException
		{
			get
			{
				return new LocalizedString("EndPointNotRegisteredException", "Ex10CC44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EmptyStringConfiguration(string key)
		{
			return new LocalizedString("EmptyStringConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString MapiTransactionDiagnosticTargetDatabaseDismounted
		{
			get
			{
				return new LocalizedString("MapiTransactionDiagnosticTargetDatabaseDismounted", "Ex4B54EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringServiceHost
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringServiceHost", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyXmlInvalid
		{
			get
			{
				return new LocalizedString("DlpPolicyXmlInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressEnableWMIRPCSS
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIRPCSS", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressPopulateDatabases
		{
			get
			{
				return new LocalizedString("SetupProgressPopulateDatabases", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailboxShared(string Identity, string Shared)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxShared", "Ex1A62A4", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Shared
			});
		}

		public static LocalizedString ExceptionSourceMailboxNotFound(string id, string search)
		{
			return new LocalizedString("ExceptionSourceMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				search
			});
		}

		public static LocalizedString ErrorReferenceParameter(string parameter)
		{
			return new LocalizedString("ErrorReferenceParameter", "ExE5ED9B", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString VerboseNoExchangeServersUSG
		{
			get
			{
				return new LocalizedString("VerboseNoExchangeServersUSG", "Ex78D2BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImportCertificateDataIsNull(string server)
		{
			return new LocalizedString("ImportCertificateDataIsNull", "ExA07319", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorCannotDetermineEndpointForNewTenant(string location, string programId, string offerId)
		{
			return new LocalizedString("ErrorCannotDetermineEndpointForNewTenant", "Ex07DDCD", false, true, Strings.ResourceManager, new object[]
			{
				location,
				programId,
				offerId
			});
		}

		public static LocalizedString LogMigrationProgress(string alias, string progress)
		{
			return new LocalizedString("LogMigrationProgress", "Ex481311", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				progress
			});
		}

		public static LocalizedString RegisterFilterFailed
		{
			get
			{
				return new LocalizedString("RegisterFilterFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetHealthReportProgressProcessing(string healthSetName)
		{
			return new LocalizedString("GetHealthReportProgressProcessing", "", false, false, Strings.ResourceManager, new object[]
			{
				healthSetName
			});
		}

		public static LocalizedString ErrorCannotRemoveSpecialUser
		{
			get
			{
				return new LocalizedString("ErrorCannotRemoveSpecialUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToRunSiteFolderCheckTask(string server, string error)
		{
			return new LocalizedString("ErrorFailedToRunSiteFolderCheckTask", "Ex251AF0", false, true, Strings.ResourceManager, new object[]
			{
				server,
				error
			});
		}

		public static LocalizedString ErrorOnlyOnePartitionCanBeLocalForest(string partitionName)
		{
			return new LocalizedString("ErrorOnlyOnePartitionCanBeLocalForest", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		public static LocalizedString ErrorMoveDatabasePathAsSourceFileNotExist(string path)
		{
			return new LocalizedString("ErrorMoveDatabasePathAsSourceFileNotExist", "Ex9723E5", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString InvalidObjectIdForTenantWideDivergence(string objectId)
		{
			return new LocalizedString("InvalidObjectIdForTenantWideDivergence", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString RuleStateParameterValueIsInconsistentWithDlpPolicyState(string enabledParameterName)
		{
			return new LocalizedString("RuleStateParameterValueIsInconsistentWithDlpPolicyState", "", false, false, Strings.ResourceManager, new object[]
			{
				enabledParameterName
			});
		}

		public static LocalizedString ErrorApplicationNotDefined(string app)
		{
			return new LocalizedString("ErrorApplicationNotDefined", "", false, false, Strings.ResourceManager, new object[]
			{
				app
			});
		}

		public static LocalizedString MailboxTransportDeliveryServiceDescription
		{
			get
			{
				return new LocalizedString("MailboxTransportDeliveryServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaAttachmentTypeCharacterOutOfAsciiRange(char badChar, int charIndex, string badAttachmentType, int attachmentTypeIndex, string propertyName)
		{
			return new LocalizedString("OwaAttachmentTypeCharacterOutOfAsciiRange", "Ex1FD65B", false, true, Strings.ResourceManager, new object[]
			{
				badChar,
				charIndex,
				badAttachmentType,
				attachmentTypeIndex,
				propertyName
			});
		}

		public static LocalizedString DefaultAllUsers
		{
			get
			{
				return new LocalizedString("DefaultAllUsers", "Ex3C6B7B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewSendConnectorAddressSpaces(string Name, string AddressSpaces)
		{
			return new LocalizedString("ConfirmationMessageNewSendConnectorAddressSpaces", "Ex447A49", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AddressSpaces
			});
		}

		public static LocalizedString RemovingDefaultPolicyIsNotSupported(string policyName)
		{
			return new LocalizedString("RemovingDefaultPolicyIsNotSupported", "ExD32E3E", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		public static LocalizedString SetupProgressStoppingRemoteRegistryService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingRemoteRegistryService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UpdateDbcDeleteFilesInvalidParametersException
		{
			get
			{
				return new LocalizedString("UpdateDbcDeleteFilesInvalidParametersException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorChangeWinrmStartType(string error)
		{
			return new LocalizedString("ErrorChangeWinrmStartType", "ExA5456F", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString CasHealthEcpServiceResponse(string response)
		{
			return new LocalizedString("CasHealthEcpServiceResponse", "Ex392753", false, true, Strings.ResourceManager, new object[]
			{
				response
			});
		}

		public static LocalizedString ErrorInvalidDateRangeCondition
		{
			get
			{
				return new LocalizedString("ErrorInvalidDateRangeCondition", "Ex6EF563", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ResumeSgcOnHostServer(string db, string server)
		{
			return new LocalizedString("ResumeSgcOnHostServer", "Ex911C20", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString SetupProgressInstallDefaultEmailAddressPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultEmailAddressPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetQueueDigestServerIsNotHubTransport(ServerIdParameter adObjectId)
		{
			return new LocalizedString("GetQueueDigestServerIsNotHubTransport", "", false, false, Strings.ResourceManager, new object[]
			{
				adObjectId
			});
		}

		public static LocalizedString SetupProgressStoppingDagMgmtService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingDagMgmtService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseGenerateAliasBySiteDisplayName(string displayName)
		{
			return new LocalizedString("VerboseGenerateAliasBySiteDisplayName", "", false, false, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		public static LocalizedString WarningCannotGetLocalSite(string thumbprint)
		{
			return new LocalizedString("WarningCannotGetLocalSite", "Ex63407F", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString MoveStatusFailed
		{
			get
			{
				return new LocalizedString("MoveStatusFailed", "ExA759B9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AlsSubjectMailbox(string name, string requester)
		{
			return new LocalizedString("AlsSubjectMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				requester
			});
		}

		public static LocalizedString CasHealthCalendarScenarioTestICal
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestICal", "ExFE8551", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxAddressNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxAddressNotUnique", "Ex81119B", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString WarningSecurePipelineTracingPath
		{
			get
			{
				return new LocalizedString("WarningSecurePipelineTracingPath", "Ex44DDA6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageHostCannotBeResolved(string parameter)
		{
			return new LocalizedString("ConfirmationMessageHostCannotBeResolved", "Ex99E4DD", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxDatabaseRecovery(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxDatabaseRecovery", "Ex122649", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString EnableConfigCustomizationsDescription
		{
			get
			{
				return new LocalizedString("EnableConfigCustomizationsDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WrongLogLevel
		{
			get
			{
				return new LocalizedString("WrongLogLevel", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPublicFolderFree
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderFree", "ExF53150", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningFswNotValidPath(string identity, string path)
		{
			return new LocalizedString("WarningFswNotValidPath", "Ex09D84E", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				path
			});
		}

		public static LocalizedString ErrorUMInvalidParameters
		{
			get
			{
				return new LocalizedString("ErrorUMInvalidParameters", "ExDFDD6F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCustomAttribute10
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute10", "Ex716D14", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNonExchangeUserError(string user)
		{
			return new LocalizedString("ErrorNonExchangeUserError", "Ex31110D", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString AboutToInstallCertificateToMachineStore(string Thumbprint)
		{
			return new LocalizedString("AboutToInstallCertificateToMachineStore", "Ex83C203", false, true, Strings.ResourceManager, new object[]
			{
				Thumbprint
			});
		}

		public static LocalizedString DlpPolicyDescriptionDescription
		{
			get
			{
				return new LocalizedString("DlpPolicyDescriptionDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BadRtfParameterException(string value)
		{
			return new LocalizedString("BadRtfParameterException", "ExB497E8", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString SetupProgressStoppingThrottlingService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingThrottlingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaNotOwaPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaNotOwaPage", "Ex778FE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallOSPRoleDescription
		{
			get
			{
				return new LocalizedString("InstallOSPRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningReuseExistingFingerprints(string userProvidedDescriptions, string actualDescriptions)
		{
			return new LocalizedString("WarningReuseExistingFingerprints", "", false, false, Strings.ResourceManager, new object[]
			{
				userProvidedDescriptions,
				actualDescriptions
			});
		}

		public static LocalizedString AllTenantsScopedSessionNotSupported
		{
			get
			{
				return new LocalizedString("AllTenantsScopedSessionNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AppSettingKeyNotFound(string key)
		{
			return new LocalizedString("AppSettingKeyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString ErrorOutboundConnectorAlreadyExists(string name)
		{
			return new LocalizedString("ErrorOutboundConnectorAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRBACPolicyNotUnique(string id)
		{
			return new LocalizedString("ErrorRBACPolicyNotUnique", "Ex9797C0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseFixingObjectsUnderRootId(string root)
		{
			return new LocalizedString("VerboseFixingObjectsUnderRootId", "Ex030E53", false, true, Strings.ResourceManager, new object[]
			{
				root
			});
		}

		public static LocalizedString ErrorUnableToFindValidPublicFolderMailbox
		{
			get
			{
				return new LocalizedString("ErrorUnableToFindValidPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressChangeFsw
		{
			get
			{
				return new LocalizedString("ProgressChangeFsw", "ExD2E045", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite", "ExA8A0BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailboxPublicFolder(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxPublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests
		{
			get
			{
				return new LocalizedString("StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtRejectMessage
		{
			get
			{
				return new LocalizedString("MtrtRejectMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorValidationException(string message)
		{
			return new LocalizedString("ErrorValidationException", "Ex8AAC71", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMaster(string Identity, string sourceserver, string targetserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMaster", "Ex7D44A9", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				sourceserver,
				targetserver
			});
		}

		public static LocalizedString WarningConnectingPrimaryAsSecondary
		{
			get
			{
				return new LocalizedString("WarningConnectingPrimaryAsSecondary", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorImportLiveIdManagedMemberExists(string memberName)
		{
			return new LocalizedString("ErrorImportLiveIdManagedMemberExists", "Ex37ED7D", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString MapiTransactionResultUndefined
		{
			get
			{
				return new LocalizedString("MapiTransactionResultUndefined", "Ex07237B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArgumentNotSet
		{
			get
			{
				return new LocalizedString("ArgumentNotSet", "Ex4593BF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogExsetdataUninstallingAtom(string atomID)
		{
			return new LocalizedString("LogExsetdataUninstallingAtom", "Ex487616", false, true, Strings.ResourceManager, new object[]
			{
				atomID
			});
		}

		public static LocalizedString ClassificationRuleCollectionFingerprintValidationFailure(string fingerprints)
		{
			return new LocalizedString("ClassificationRuleCollectionFingerprintValidationFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				fingerprints
			});
		}

		public static LocalizedString VerboseNoWriteAccessToExchangeServers
		{
			get
			{
				return new LocalizedString("VerboseNoWriteAccessToExchangeServers", "ExEA7553", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ResponseHeader
		{
			get
			{
				return new LocalizedString("ResponseHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotChangeResourceProperties
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeResourceProperties", "ExA914D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionInvalidLangCodesInRuleName(string resourceIdRef, string invalidLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidLangCodesInRuleName", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				invalidLangCodes
			});
		}

		public static LocalizedString InstallingMSExchangeFDS
		{
			get
			{
				return new LocalizedString("InstallingMSExchangeFDS", "Ex741C7B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewHostedContentFilterRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorEnableWindowsLiveIdForEnterpriseMailbox
		{
			get
			{
				return new LocalizedString("ErrorEnableWindowsLiveIdForEnterpriseMailbox", "Ex082F69", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxStartDateEarlierThanEndDate(string parameter1, string parameter2)
		{
			return new LocalizedString("MoveMailboxStartDateEarlierThanEndDate", "ExE25887", false, true, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		public static LocalizedString ErrorUnableToReserveDomain(string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReserveDomain", "Ex703205", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				appId,
				errdetails
			});
		}

		public static LocalizedString ConfirmationMessageSetTenantRelocationRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTenantRelocationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupDiagnosticsServiceComponent
		{
			get
			{
				return new LocalizedString("SetupDiagnosticsServiceComponent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotConfigureAdfsOwaWithoutEcpFirst
		{
			get
			{
				return new LocalizedString("CannotConfigureAdfsOwaWithoutEcpFirst", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveDagDestroyingCluster(string clusterName, string lastServer, string dagName)
		{
			return new LocalizedString("RemoveDagDestroyingCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				lastServer,
				dagName
			});
		}

		public static LocalizedString InstallAdminAuditLogConfig
		{
			get
			{
				return new LocalizedString("InstallAdminAuditLogConfig", "Ex3AD425", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTranscationErrorMsgNoTimeLeft(int totalTransactionTimesInSeconds)
		{
			return new LocalizedString("MapiTranscationErrorMsgNoTimeLeft", "Ex7B287E", false, true, Strings.ResourceManager, new object[]
			{
				totalTransactionTimesInSeconds
			});
		}

		public static LocalizedString MoveMailboxExclusiveParameters(string parameter1, string parameter2)
		{
			return new LocalizedString("MoveMailboxExclusiveParameters", "Ex3B1084", false, true, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		public static LocalizedString ErrorNotEnoughInformationToFindRequest
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughInformationToFindRequest", "Ex319427", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GlobalRoutingEntryNotFound(string phoneNumber)
		{
			return new LocalizedString("GlobalRoutingEntryNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		public static LocalizedString SetupProgressStartingRemoteRegistryService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingRemoteRegistryService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorProofOfOwnershipNotValid
		{
			get
			{
				return new LocalizedString("ErrorProofOfOwnershipNotValid", "Ex7709C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRetentionTag(RetentionPolicyTagIdParameter Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRetentionTag", "Ex32D5D6", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableDatbaseCopy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableDatbaseCopy", "Ex029867", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString VerboseMemberNameToNetId(string memberName)
		{
			return new LocalizedString("VerboseMemberNameToNetId", "Ex195036", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString RmsUrlIsInvalidException(Uri uri)
		{
			return new LocalizedString("RmsUrlIsInvalidException", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString ConfirmationMessageRemoveContentFilterPhrase(string Phrase)
		{
			return new LocalizedString("ConfirmationMessageRemoveContentFilterPhrase", "ExB5E410", false, true, Strings.ResourceManager, new object[]
			{
				Phrase
			});
		}

		public static LocalizedString WarningMovingTeamMailboxesCrossForestOrCrossPremise(string mailbox)
		{
			return new LocalizedString("WarningMovingTeamMailboxesCrossForestOrCrossPremise", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ReportUpdateMovedMailboxFailureAfterADSwitchover(LocalizedString reason, string stack)
		{
			return new LocalizedString("ReportUpdateMovedMailboxFailureAfterADSwitchover", "ExDE978C", false, true, Strings.ResourceManager, new object[]
			{
				reason,
				stack
			});
		}

		public static LocalizedString WarningArchiveMailboxNotReachable(string mailboxAddress)
		{
			return new LocalizedString("WarningArchiveMailboxNotReachable", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		public static LocalizedString ErrorCannotBeFfoWithoutDatacenter(string component)
		{
			return new LocalizedString("ErrorCannotBeFfoWithoutDatacenter", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString ErrorFailedToGetCertificationUri
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetCertificationUri", "Ex3FC2A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseGenerateDefaultScopeByExistingAssignments(string id)
		{
			return new LocalizedString("VerboseGenerateDefaultScopeByExistingAssignments", "ExC734E1", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorNoRemoteCredentialSettingForLocalMove(string identity)
		{
			return new LocalizedString("ErrorNoRemoteCredentialSettingForLocalMove", "ExDB3EA3", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString UMCallAnsweringRuleExtension(string extensions)
		{
			return new LocalizedString("UMCallAnsweringRuleExtension", "", false, false, Strings.ResourceManager, new object[]
			{
				extensions
			});
		}

		public static LocalizedString ErrorLogFolderPathMissed(string database)
		{
			return new LocalizedString("ErrorLogFolderPathMissed", "Ex295630", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString TestSearchGetMDBCatalogState(string MDB)
		{
			return new LocalizedString("TestSearchGetMDBCatalogState", "Ex882717", false, true, Strings.ResourceManager, new object[]
			{
				MDB
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxFolderPermission(string Identity, string User)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxFolderPermission", "ExC406DE", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User
			});
		}

		public static LocalizedString InvalidOutlookProbeIdentity(string probeIdentity)
		{
			return new LocalizedString("InvalidOutlookProbeIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity
			});
		}

		public static LocalizedString SkipWriteEmptyTemplateGuid(string template)
		{
			return new LocalizedString("SkipWriteEmptyTemplateGuid", "Ex7B833D", false, true, Strings.ResourceManager, new object[]
			{
				template
			});
		}

		public static LocalizedString NewDagErrorDuplicateName(string dagname)
		{
			return new LocalizedString("NewDagErrorDuplicateName", "", false, false, Strings.ResourceManager, new object[]
			{
				dagname
			});
		}

		public static LocalizedString ErrorFailedToMoveDatabaseLogFiles(string fromPath, string toPath)
		{
			return new LocalizedString("ErrorFailedToMoveDatabaseLogFiles", "ExFBF317", false, true, Strings.ResourceManager, new object[]
			{
				fromPath,
				toPath
			});
		}

		public static LocalizedString InvalidClassification
		{
			get
			{
				return new LocalizedString("InvalidClassification", "Ex82671F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotChangeStandardUserCredentials(string username)
		{
			return new LocalizedString("CannotChangeStandardUserCredentials", "", false, false, Strings.ResourceManager, new object[]
			{
				username
			});
		}

		public static LocalizedString TraceCannotGetWindowsIdentity(string exception)
		{
			return new LocalizedString("TraceCannotGetWindowsIdentity", "Ex647D47", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString VerboseApprovalApplicationObjectExists(string name)
		{
			return new LocalizedString("VerboseApprovalApplicationObjectExists", "Ex005E4A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorLocatingLocalServerObject(string serverName)
		{
			return new LocalizedString("ErrorLocatingLocalServerObject", "ExF99DB2", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString InvalidSiteForOrganizationMessage(string organization, string redirectionUri)
		{
			return new LocalizedString("InvalidSiteForOrganizationMessage", "ExD6F5D7", false, true, Strings.ResourceManager, new object[]
			{
				organization,
				redirectionUri
			});
		}

		public static LocalizedString ErrorInvalidOperation
		{
			get
			{
				return new LocalizedString("ErrorInvalidOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentRoleSetterBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentRoleSetterBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressOwaExplicitLogonEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaExplicitLogonEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LoadedComponentWithTasks(string component, int count, string taskList)
		{
			return new LocalizedString("LoadedComponentWithTasks", "Ex493E2B", false, true, Strings.ResourceManager, new object[]
			{
				component,
				count,
				taskList
			});
		}

		public static LocalizedString ConfirmationMessageTestTopologyServiceIdentity(string identity)
		{
			return new LocalizedString("ConfirmationMessageTestTopologyServiceIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CannotModifyOneOffTemplates
		{
			get
			{
				return new LocalizedString("CannotModifyOneOffTemplates", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplayLagPlayDownReasonNone
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonNone", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuxHasChildren(string aux)
		{
			return new LocalizedString("ErrorAuxHasChildren", "", false, false, Strings.ResourceManager, new object[]
			{
				aux
			});
		}

		public static LocalizedString ConfirmationMessageSetTransportProcessingQuotaOverride(Guid externalDirectoryOrganizationId, bool throttle)
		{
			return new LocalizedString("ConfirmationMessageSetTransportProcessingQuotaOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				externalDirectoryOrganizationId,
				throttle
			});
		}

		public static LocalizedString DeviceBlocked
		{
			get
			{
				return new LocalizedString("DeviceBlocked", "ExC540BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetRemoteAccountSyncCache
		{
			get
			{
				return new LocalizedString("GetRemoteAccountSyncCache", "Ex310627", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UsingTargetMonitoringMailbox
		{
			get
			{
				return new LocalizedString("UsingTargetMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentMidFileCopyUnifiedMessaging
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyUnifiedMessaging", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRecipientDoesNotHavePicture(string name)
		{
			return new LocalizedString("ErrorRecipientDoesNotHavePicture", "Ex410878", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString StoppingHealthService
		{
			get
			{
				return new LocalizedString("StoppingHealthService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemovePerfCounters
		{
			get
			{
				return new LocalizedString("RemovePerfCounters", "ExC24E7E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSharedConfigurationUpgradeNotSupported
		{
			get
			{
				return new LocalizedString("ErrorSharedConfigurationUpgradeNotSupported", "Ex39D257", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdminAuditLogSearchStartDateIsLaterThanEndDate(string startDate, string endDate)
		{
			return new LocalizedString("AdminAuditLogSearchStartDateIsLaterThanEndDate", "ExF64D38", false, true, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		public static LocalizedString WebServicesTestErrorEventDetail(string cmdletName, string scenario, string result, string latency, string error, string verbose)
		{
			return new LocalizedString("WebServicesTestErrorEventDetail", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName,
				scenario,
				result,
				latency,
				error,
				verbose
			});
		}

		public static LocalizedString ConfirmationMessageAdminAuditLogAgeLimitSmaller(string org, string newAgeLimit)
		{
			return new LocalizedString("ConfirmationMessageAdminAuditLogAgeLimitSmaller", "Ex8D3193", false, true, Strings.ResourceManager, new object[]
			{
				org,
				newAgeLimit
			});
		}

		public static LocalizedString AllEssentialServicesForTheRoleRunning(string roleName)
		{
			return new LocalizedString("AllEssentialServicesForTheRoleRunning", "ExDA9036", false, true, Strings.ResourceManager, new object[]
			{
				roleName
			});
		}

		public static LocalizedString GetCalendarDiagnosticLog(string identity)
		{
			return new LocalizedString("GetCalendarDiagnosticLog", "Ex07D124", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString UMCallAnsweringRuleTransferToVoiceMailWithContext(string context, int key, string galContact)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToVoiceMailWithContext", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				galContact
			});
		}

		public static LocalizedString UMCallAnsweringRuleProvideTheCallerWithTheseOptions
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleProvideTheCallerWithTheseOptions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxNotEnabled(string recipientName)
		{
			return new LocalizedString("ErrorMailboxNotEnabled", "Ex20A280", false, true, Strings.ResourceManager, new object[]
			{
				recipientName
			});
		}

		public static LocalizedString ClientAccessRoleAbsent(string server)
		{
			return new LocalizedString("ClientAccessRoleAbsent", "ExF678DF", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString TestSearchTestThreadTimeOut
		{
			get
			{
				return new LocalizedString("TestSearchTestThreadTimeOut", "Ex4D796B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuxUnsupportedParent(string parent)
		{
			return new LocalizedString("ErrorAuxUnsupportedParent", "", false, false, Strings.ResourceManager, new object[]
			{
				parent
			});
		}

		public static LocalizedString SetupComponentCommonTransportConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentCommonTransportConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestSmtpConnectivity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestSmtpConnectivity", "Ex8071A5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallingPOP3Service
		{
			get
			{
				return new LocalizedString("UninstallingPOP3Service", "ExE87CCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidOperationOnRecoveryMailboxDatabase(string mailboxDatabase)
		{
			return new LocalizedString("ErrorInvalidOperationOnRecoveryMailboxDatabase", "Ex944D01", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		public static LocalizedString ConfirmationMessageInstallProvisioningAgent(string Name, string AssemblyPath)
		{
			return new LocalizedString("ConfirmationMessageInstallProvisioningAgent", "Ex77850A", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AssemblyPath
			});
		}

		public static LocalizedString MultipleAdminAuditLogConfig(string organization)
		{
			return new LocalizedString("MultipleAdminAuditLogConfig", "Ex3DFB35", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString InfoAlreadyIsMemberOfGroup(string obj, string group)
		{
			return new LocalizedString("InfoAlreadyIsMemberOfGroup", "Ex7CD3D3", false, true, Strings.ResourceManager, new object[]
			{
				obj,
				group
			});
		}

		public static LocalizedString ErrorMinorPartnerIdIsNotUnique(string id1)
		{
			return new LocalizedString("ErrorMinorPartnerIdIsNotUnique", "ExAABC4B", false, true, Strings.ResourceManager, new object[]
			{
				id1
			});
		}

		public static LocalizedString MigrationTypeDoesntMatchConnectionSettings
		{
			get
			{
				return new LocalizedString("MigrationTypeDoesntMatchConnectionSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidStartDate(int days)
		{
			return new LocalizedString("InvalidStartDate", "", false, false, Strings.ResourceManager, new object[]
			{
				days
			});
		}

		public static LocalizedString SeederAlreadyInProgressPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyInProgressPrompt", "Ex433B44", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		public static LocalizedString AppcmdExecutionFailed(int exitCode, string error)
		{
			return new LocalizedString("AppcmdExecutionFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				exitCode,
				error
			});
		}

		public static LocalizedString ClassificationRuleCollectionInconsistentDefaultInRuleResource(string resourceIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionInconsistentDefaultInRuleResource", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRefs
			});
		}

		public static LocalizedString UMCallAnsweringRuleTransferToWithoutContext(int key, string number)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToWithoutContext", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				number
			});
		}

		public static LocalizedString FailedToDeletePublicFolderTree(string id, string error)
		{
			return new LocalizedString("FailedToDeletePublicFolderTree", "Ex3E71AA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString FactoryIdentityInUse(string Assembly, string ClassFactory)
		{
			return new LocalizedString("FactoryIdentityInUse", "ExBB2B33", false, true, Strings.ResourceManager, new object[]
			{
				Assembly,
				ClassFactory
			});
		}

		public static LocalizedString ImapSelectingFolder(string name)
		{
			return new LocalizedString("ImapSelectingFolder", "Ex318C48", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorTeamMailboxContactSharePointSite(string siteUrl, string error)
		{
			return new LocalizedString("ErrorTeamMailboxContactSharePointSite", "", false, false, Strings.ResourceManager, new object[]
			{
				siteUrl,
				error
			});
		}

		public static LocalizedString FailedToGenerateSharedKey(Exception ex)
		{
			return new LocalizedString("FailedToGenerateSharedKey", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString messageTopologyServiceMissingDCExceptionThrown(string operationType)
		{
			return new LocalizedString("messageTopologyServiceMissingDCExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				operationType
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMalwareFilterRecoveryItem(string item)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterRecoveryItem", "", false, false, Strings.ResourceManager, new object[]
			{
				item
			});
		}

		public static LocalizedString DebugStartInternalBeginProcessing
		{
			get
			{
				return new LocalizedString("DebugStartInternalBeginProcessing", "Ex040A36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPreSetupMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxAssistantsServiceStarted(string serverName)
		{
			return new LocalizedString("MailboxAssistantsServiceStarted", "ExD3801C", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ComplianceJobTaskException(string failure)
		{
			return new LocalizedString("ComplianceJobTaskException", "", false, false, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		public static LocalizedString CannotFindRPSServerFile(string RPSServerFile)
		{
			return new LocalizedString("CannotFindRPSServerFile", "ExE645A3", false, true, Strings.ResourceManager, new object[]
			{
				RPSServerFile
			});
		}

		public static LocalizedString ADTopologyServiceDisplayName
		{
			get
			{
				return new LocalizedString("ADTopologyServiceDisplayName", "Ex17CDF6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InsufficientEmailsForCrossValidation(string mailbox)
		{
			return new LocalizedString("InsufficientEmailsForCrossValidation", "Ex3F1D0B", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ExceptionInvalidIisVersion
		{
			get
			{
				return new LocalizedString("ExceptionInvalidIisVersion", "Ex9212E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorNonE12SourceAndTargetServers
		{
			get
			{
				return new LocalizedString("SendConnectorNonE12SourceAndTargetServers", "ExD85815", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutodiscoverUrlsDiffer(string localUrl, string actualUrl)
		{
			return new LocalizedString("AutodiscoverUrlsDiffer", "Ex1D023C", false, true, Strings.ResourceManager, new object[]
			{
				localUrl,
				actualUrl
			});
		}

		public static LocalizedString ErrorInvalidJPEGFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidJPEGFormat", "Ex6C37E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtEventDefer
		{
			get
			{
				return new LocalizedString("MtrtEventDefer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPublicFolderDatabaseNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderDatabaseNotFound", "Ex5FC4A4", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString InvalidRmsTemplate
		{
			get
			{
				return new LocalizedString("InvalidRmsTemplate", "ExBC4410", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSuspendDatabaseCopyIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageSuspendDatabaseCopyIdentity", "ExE5C46E", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		public static LocalizedString ErrorUnableToResolveOwner(string userName, string exception)
		{
			return new LocalizedString("ErrorUnableToResolveOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				exception
			});
		}

		public static LocalizedString VerboseWillUpgradeServicePlan(string org, string oldServicePlan, string newServiceplan)
		{
			return new LocalizedString("VerboseWillUpgradeServicePlan", "ExB0EF4B", false, true, Strings.ResourceManager, new object[]
			{
				org,
				oldServicePlan,
				newServiceplan
			});
		}

		public static LocalizedString CasHealthCalendarScenarioTestICalDesc
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestICalDesc", "Ex89CF02", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetPop3ConfigurationTask
		{
			get
			{
				return new LocalizedString("SetPop3ConfigurationTask", "Ex2DAFE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetLinkedUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetLinkedUser", "ExF59DFB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString VerboseNoAccessControlSpecified(string server, string dir)
		{
			return new LocalizedString("VerboseNoAccessControlSpecified", "ExD30A18", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		public static LocalizedString ErrorAutoDiscoverValidatorOabNotFound(string xml)
		{
			return new LocalizedString("ErrorAutoDiscoverValidatorOabNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				xml
			});
		}

		public static LocalizedString VerboseSyncTaskCookieOriginatingDCNotAvailable(Guid orgDc)
		{
			return new LocalizedString("VerboseSyncTaskCookieOriginatingDCNotAvailable", "Ex551C68", false, true, Strings.ResourceManager, new object[]
			{
				orgDc
			});
		}

		public static LocalizedString ErrorStartAfter(int days)
		{
			return new LocalizedString("ErrorStartAfter", "", false, false, Strings.ResourceManager, new object[]
			{
				days
			});
		}

		public static LocalizedString SetupProgressOwaOrganizationEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaOrganizationEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseE12AdminGroupNotFound(string name)
		{
			return new LocalizedString("VerboseE12AdminGroupNotFound", "ExEF5ED3", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageNewSystemMessageQuota(string QuotaType, string Text, string Language)
		{
			return new LocalizedString("ConfirmationMessageNewSystemMessageQuota", "Ex9A9916", false, true, Strings.ResourceManager, new object[]
			{
				QuotaType,
				Text,
				Language
			});
		}

		public static LocalizedString FailedToRunGlobalMonitoringOverride(string container)
		{
			return new LocalizedString("FailedToRunGlobalMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				container
			});
		}

		public static LocalizedString MsoObjectNotFound(string syncobject, string errors)
		{
			return new LocalizedString("MsoObjectNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject,
				errors
			});
		}

		public static LocalizedString TestMailflowError(string source, string target, int errorLatency)
		{
			return new LocalizedString("TestMailflowError", "Ex542097", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target,
				errorLatency
			});
		}

		public static LocalizedString DownloadingFilesTasksRemaining(uint kBytesToDownload, uint kBytesDownloaded, int outstandingTasks)
		{
			return new LocalizedString("DownloadingFilesTasksRemaining", "Ex224FE2", false, true, Strings.ResourceManager, new object[]
			{
				kBytesToDownload,
				kBytesDownloaded,
				outstandingTasks
			});
		}

		public static LocalizedString AgentHandlesNoCmdlets(string assemblyPath)
		{
			return new LocalizedString("AgentHandlesNoCmdlets", "Ex345237", false, true, Strings.ResourceManager, new object[]
			{
				assemblyPath
			});
		}

		public static LocalizedString ClassificationRuleCollectionMissingRootElementViolation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionMissingRootElementViolation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveLiveFedUriReserveResponse(string domain)
		{
			return new LocalizedString("RemoveLiveFedUriReserveResponse", "ExD6D3DA", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorDistributionGroupNamingPolicy
		{
			get
			{
				return new LocalizedString("ErrorDistributionGroupNamingPolicy", "Ex289BCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetCASMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetCASMailbox", "Ex488301", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DomainNotFoundException(string dom)
		{
			return new LocalizedString("DomainNotFoundException", "Ex40E29A", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		public static LocalizedString ProgressStartUpdateOtherAD
		{
			get
			{
				return new LocalizedString("ProgressStartUpdateOtherAD", "ExD8303E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MsiPackageAlreadyInstalled(string packagePath)
		{
			return new LocalizedString("MsiPackageAlreadyInstalled", "ExE37B31", false, true, Strings.ResourceManager, new object[]
			{
				packagePath
			});
		}

		public static LocalizedString DlpRuleMustContainMessageContainsDataClassificationPredicate
		{
			get
			{
				return new LocalizedString("DlpRuleMustContainMessageContainsDataClassificationPredicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressConfigureSystemMessageClassification
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureSystemMessageClassification", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BPAScanCompleted
		{
			get
			{
				return new LocalizedString("BPAScanCompleted", "Ex5902F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDatabaseInNonMailboxServer(string database)
		{
			return new LocalizedString("ErrorDatabaseInNonMailboxServer", "Ex2BE11E", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString CannotCreateJunkEmailRule(string mailboxIdentity)
		{
			return new LocalizedString("CannotCreateJunkEmailRule", "Ex673F19", false, true, Strings.ResourceManager, new object[]
			{
				mailboxIdentity
			});
		}

		public static LocalizedString ProtocolTransactionsDetails(string casServer, string mailboxServer, string mailboxDatabae, string mailbox, string port, string connectionType, bool trustCertificate)
		{
			return new LocalizedString("ProtocolTransactionsDetails", "Ex55E593", false, true, Strings.ResourceManager, new object[]
			{
				casServer,
				mailboxServer,
				mailboxDatabae,
				mailbox,
				port,
				connectionType,
				trustCertificate
			});
		}

		public static LocalizedString VerboseTargetDcIsUpToDate(string dc)
		{
			return new LocalizedString("VerboseTargetDcIsUpToDate", "", false, false, Strings.ResourceManager, new object[]
			{
				dc
			});
		}

		public static LocalizedString WarningPublicFolderFree
		{
			get
			{
				return new LocalizedString("WarningPublicFolderFree", "Ex27EB17", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsAssemblyNotFound(string name, string path, string type)
		{
			return new LocalizedString("ExchangeSettingsAssemblyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				path,
				type
			});
		}

		public static LocalizedString SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled
		{
			get
			{
				return new LocalizedString("SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDistributionGroup", "Ex7B0F35", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DeleteMessageActionMustBeTheOnlyAction
		{
			get
			{
				return new LocalizedString("DeleteMessageActionMustBeTheOnlyAction", "ExA55B6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClientAccessPerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessPerfCountersComponentDescription", "Ex273511", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SMTPNotEnabledForTlsCertificate
		{
			get
			{
				return new LocalizedString("SMTPNotEnabledForTlsCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDisconnectedMailboxNotPrimary(string identity, string user)
		{
			return new LocalizedString("ErrorDisconnectedMailboxNotPrimary", "Ex69581C", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				user
			});
		}

		public static LocalizedString MonitoringServiceDescription
		{
			get
			{
				return new LocalizedString("MonitoringServiceDescription", "Ex8D2CCB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWarnTrustAllCertificates
		{
			get
			{
				return new LocalizedString("CasHealthWarnTrustAllCertificates", "ExB4A15C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceUnavaiable
		{
			get
			{
				return new LocalizedString("ServiceUnavaiable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestOAuthResponseDetails(string appid)
		{
			return new LocalizedString("TestOAuthResponseDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				appid
			});
		}

		public static LocalizedString BadNameParameterException(string value)
		{
			return new LocalizedString("BadNameParameterException", "Ex43EF7F", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString RestoreUsingExistingFile(string databaseName, string fileName)
		{
			return new LocalizedString("RestoreUsingExistingFile", "Ex98D5B8", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				fileName
			});
		}

		public static LocalizedString ClassificationRuleCollectionConfigValidationUnexpectedContents
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionConfigValidationUnexpectedContents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEndTimeSmallerThanNow
		{
			get
			{
				return new LocalizedString("ErrorEndTimeSmallerThanNow", "Ex6B5A5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSystemFolderPathMissed(string database)
		{
			return new LocalizedString("ErrorSystemFolderPathMissed", "ExF09156", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString FailedToStartRegSvr32
		{
			get
			{
				return new LocalizedString("FailedToStartRegSvr32", "ExAF7800", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMapiVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetMapiVirtualDirectory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDGOwnershipDeepSearch(string user, string group)
		{
			return new LocalizedString("VerboseDGOwnershipDeepSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				group
			});
		}

		public static LocalizedString UseDagDefaultOnOffNone
		{
			get
			{
				return new LocalizedString("UseDagDefaultOnOffNone", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MultipleMsoSyncObjectsRetrieved
		{
			get
			{
				return new LocalizedString("MultipleMsoSyncObjectsRetrieved", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EnableCertificateFederation
		{
			get
			{
				return new LocalizedString("EnableCertificateFederation", "ExCBA75F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplicationCheckResultPassed
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultPassed", "ExBF9827", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ParsingTokenIssuerPreviousCertificate(string thumbprint)
		{
			return new LocalizedString("ParsingTokenIssuerPreviousCertificate", "Ex7B0C39", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ReplicationCheckPassed(string checkTitle)
		{
			return new LocalizedString("ReplicationCheckPassed", "Ex4599B2", false, true, Strings.ResourceManager, new object[]
			{
				checkTitle
			});
		}

		public static LocalizedString ErrorCleanupRequestedAtWrongStage(string identity, string stateRequested, string currentState, string expectedState)
		{
			return new LocalizedString("ErrorCleanupRequestedAtWrongStage", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				stateRequested,
				currentState,
				expectedState
			});
		}

		public static LocalizedString DagTaskRemovedServerFromDag(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskRemovedServerFromDag", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString SetupComponentPreSetupUnifiedMessaging
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupUnifiedMessaging", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDlpPolicyTemplateIsNotInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyTemplateIsNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString AboutToUpdateCongigFile(string xmlConfigFile, string siteId)
		{
			return new LocalizedString("AboutToUpdateCongigFile", "Ex4624BA", false, true, Strings.ResourceManager, new object[]
			{
				xmlConfigFile,
				siteId
			});
		}

		public static LocalizedString SetupProgressCreateTransportSettingsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateTransportSettingsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFixingStart
		{
			get
			{
				return new LocalizedString("VerboseFixingStart", "Ex65B661", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressPublicFolderMailboxCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressPublicFolderMailboxCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMailboxAuditBypassAssociation(string user)
		{
			return new LocalizedString("ConfirmationMessageMailboxAuditBypassAssociation", "Ex11CFD2", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString SetupProgressHostedOutboundSpamFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressHostedOutboundSpamFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TaskTimeout(string scenario, TimeSpan overtime)
		{
			return new LocalizedString("TaskTimeout", "", false, false, Strings.ResourceManager, new object[]
			{
				scenario,
				overtime
			});
		}

		public static LocalizedString ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether
		{
			get
			{
				return new LocalizedString("ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether", "Ex2BA168", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskRemoveDagServerRunningChecks(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskRemoveDagServerRunningChecks", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString MigrationNotFound(string name)
		{
			return new LocalizedString("MigrationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorArchiveNotSupport(string mailbox)
		{
			return new LocalizedString("ErrorArchiveNotSupport", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString CasHealthTaskNotRunOnExchangeServer
		{
			get
			{
				return new LocalizedString("CasHealthTaskNotRunOnExchangeServer", "Ex24DDA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsGroupFoundMultipleTimes(string name)
		{
			return new LocalizedString("ExchangeSettingsGroupFoundMultipleTimes", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RemoveADServerMetadataServerNotFound(string name)
		{
			return new LocalizedString("RemoveADServerMetadataServerNotFound", "ExF61E6B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorWSManConfigSchemaFileNotFound(string file)
		{
			return new LocalizedString("ErrorWSManConfigSchemaFileNotFound", "Ex749D76", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString FailedToDeserializeDagConfigurationXMLString(string stringToDeserialize, string typeName)
		{
			return new LocalizedString("FailedToDeserializeDagConfigurationXMLString", "", false, false, Strings.ResourceManager, new object[]
			{
				stringToDeserialize,
				typeName
			});
		}

		public static LocalizedString CasHealthUserNotFound(string userPrincipalName, string errorString)
		{
			return new LocalizedString("CasHealthUserNotFound", "Ex6E8907", false, true, Strings.ResourceManager, new object[]
			{
				userPrincipalName,
				errorString
			});
		}

		public static LocalizedString WatchDogServiceDescription
		{
			get
			{
				return new LocalizedString("WatchDogServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageCancelUserPhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCancelUserPhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InconsistentADDbMasterServerNotADag(string databaseName, string masterName)
		{
			return new LocalizedString("InconsistentADDbMasterServerNotADag", "ExDFF542", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				masterName
			});
		}

		public static LocalizedString DagFswAndAlternateFswOnSameWitnessServerButPointToDifferentDirectoriesException(string witnessserver, string witnessdirectory, string alternatewitnessdirectory)
		{
			return new LocalizedString("DagFswAndAlternateFswOnSameWitnessServerButPointToDifferentDirectoriesException", "", false, false, Strings.ResourceManager, new object[]
			{
				witnessserver,
				witnessdirectory,
				alternatewitnessdirectory
			});
		}

		public static LocalizedString AmMoveRpcCompletedAnyServer(string db)
		{
			return new LocalizedString("AmMoveRpcCompletedAnyServer", "Ex05449E", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		public static LocalizedString MailboxReplicationServiceIsRespondingToRPCPing(string serverVersion)
		{
			return new LocalizedString("MailboxReplicationServiceIsRespondingToRPCPing", "ExDEA669", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion
			});
		}

		public static LocalizedString FindingEventSources
		{
			get
			{
				return new LocalizedString("FindingEventSources", "Ex656C70", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePackLogFile(string path)
		{
			return new LocalizedString("UmLanguagePackLogFile", "ExD661C5", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString SetupProgressPopEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPopEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributePOBox
		{
			get
			{
				return new LocalizedString("ADAttributePOBox", "Ex535040", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInstallationModeMustBeBuildToBuildUpgrade
		{
			get
			{
				return new LocalizedString("ErrorInstallationModeMustBeBuildToBuildUpgrade", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateSenderRepuationConfiguration
		{
			get
			{
				return new LocalizedString("SetupProgressCreateSenderRepuationConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskSkippingFormCluster(string clusterName, string dagName)
		{
			return new LocalizedString("DagTaskSkippingFormCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				dagName
			});
		}

		public static LocalizedString ErrorUsedByMbDb(string nameMbDb, string namePFDB)
		{
			return new LocalizedString("ErrorUsedByMbDb", "Ex1E1DE2", false, true, Strings.ResourceManager, new object[]
			{
				nameMbDb,
				namePFDB
			});
		}

		public static LocalizedString FailedToWriteAirSyncDebugLogging(string user, string error)
		{
			return new LocalizedString("FailedToWriteAirSyncDebugLogging", "Ex7D133A", false, true, Strings.ResourceManager, new object[]
			{
				user,
				error
			});
		}

		public static LocalizedString ServerAlreadyLicensed(string serverName)
		{
			return new LocalizedString("ServerAlreadyLicensed", "Ex7E95B0", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString NewDagConfigurationErrorDuplicateName(string dagname)
		{
			return new LocalizedString("NewDagConfigurationErrorDuplicateName", "", false, false, Strings.ResourceManager, new object[]
			{
				dagname
			});
		}

		public static LocalizedString ConfirmationMessageEnableHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorOnlyOneParameterMayBeUsed
		{
			get
			{
				return new LocalizedString("ErrorOnlyOneParameterMayBeUsed", "Ex8D2865", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxLegacyDNInUse(string legacyDN, string mailboxId, string userId)
		{
			return new LocalizedString("ErrorMailboxLegacyDNInUse", "Ex4F1873", false, true, Strings.ResourceManager, new object[]
			{
				legacyDN,
				mailboxId,
				userId
			});
		}

		public static LocalizedString Away
		{
			get
			{
				return new LocalizedString("Away", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopImapTransactionWarning(int port, string connection, int sslPort, int tlsPort)
		{
			return new LocalizedString("PopImapTransactionWarning", "Ex202064", false, true, Strings.ResourceManager, new object[]
			{
				port,
				connection,
				sslPort,
				tlsPort
			});
		}

		public static LocalizedString ErrorOnlyForestWideAllowIsAllowed
		{
			get
			{
				return new LocalizedString("ErrorOnlyForestWideAllowIsAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDomainAlreadyFederated(string domain)
		{
			return new LocalizedString("ErrorDomainAlreadyFederated", "Ex0AAEA5", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorFaildToSavePubllicFolderReferral(string errorMessage)
		{
			return new LocalizedString("ErrorFaildToSavePubllicFolderReferral", "ExC1DABD", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		public static LocalizedString SetupProgressPerMBXPlanRetentionPolicyEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPerMBXPlanRetentionPolicyEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidMailboxFolderIdentity(string identity)
		{
			return new LocalizedString("InvalidMailboxFolderIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorInGlsLookup(string error)
		{
			return new LocalizedString("ErrorInGlsLookup", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString AirSyncReportingProgressParsing(string filename)
		{
			return new LocalizedString("AirSyncReportingProgressParsing", "Ex4B594D", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		public static LocalizedString ErrorOabVirtualDirectoryNameIsImmutable
		{
			get
			{
				return new LocalizedString("ErrorOabVirtualDirectoryNameIsImmutable", "Ex2D96A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingMailboxReplicationService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingMailboxReplicationService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DiscoveryEndpointWasConstructed(string s)
		{
			return new LocalizedString("DiscoveryEndpointWasConstructed", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString ClassificationRuleCollectionOrphanedResourceViolation(string ruleIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionOrphanedResourceViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleIdRefs
			});
		}

		public static LocalizedString RFRIGetReferralScenario
		{
			get
			{
				return new LocalizedString("RFRIGetReferralScenario", "ExCFD951", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddIPAllowListEntryIPAddress(string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageAddIPAllowListEntryIPAddress", "Ex80237F", false, true, Strings.ResourceManager, new object[]
			{
				IPAddress
			});
		}

		public static LocalizedString EmailAddressNotInAcceptedDomain(string address)
		{
			return new LocalizedString("EmailAddressNotInAcceptedDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		public static LocalizedString ConfirmationMessageSetPowerShellVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageSetPowerShellVirtualDirectory", "Ex618E99", false, true, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		public static LocalizedString CrossPremiseMapMdbToServerFailure(string info)
		{
			return new LocalizedString("CrossPremiseMapMdbToServerFailure", "ExE75671", false, true, Strings.ResourceManager, new object[]
			{
				info
			});
		}

		public static LocalizedString SetLiveFedDomainReserveRequest(string domain)
		{
			return new LocalizedString("SetLiveFedDomainReserveRequest", "Ex815F87", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString SetupProgressCreateCmdletExtensionAgentContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateCmdletExtensionAgentContainer", "Ex868951", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransportSyncManagerServiceDisplayName
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutodiscoverScenario
		{
			get
			{
				return new LocalizedString("AutodiscoverScenario", "Ex932AAE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WipeSucceededNote
		{
			get
			{
				return new LocalizedString("WipeSucceededNote", "Ex301D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPerfCountersBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentPerfCountersBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveRequestAlreadyExistsInMDBQueue(string mdbName, string mailbox, Guid mailboxGuid)
		{
			return new LocalizedString("ErrorMoveRequestAlreadyExistsInMDBQueue", "Ex206C6E", false, true, Strings.ResourceManager, new object[]
			{
				mdbName,
				mailbox,
				mailboxGuid
			});
		}

		public static LocalizedString VerboseRemovePSFanInProvider(string name)
		{
			return new LocalizedString("VerboseRemovePSFanInProvider", "ExA23B61", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RemoteExchangeVersionNotSupported
		{
			get
			{
				return new LocalizedString("RemoteExchangeVersionNotSupported", "ExC2B6E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToFindFqdnForHost(string computerName)
		{
			return new LocalizedString("ErrorUnableToFindFqdnForHost", "", false, false, Strings.ResourceManager, new object[]
			{
				computerName
			});
		}

		public static LocalizedString ConfirmationMessageNewOrganizationRelationship(string Name, string DomainNames)
		{
			return new LocalizedString("ConfirmationMessageNewOrganizationRelationship", "Ex2C2A29", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainNames
			});
		}

		public static LocalizedString ProgressDeletingLogFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingLogFiles", "Ex6472C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPatternCannotBeginWithWildcardMultiMatch
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotBeginWithWildcardMultiMatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserWithMatchingWindowsLiveIdExists(string liveid, string recipient)
		{
			return new LocalizedString("ErrorUserWithMatchingWindowsLiveIdExists", "Ex5B5729", false, true, Strings.ResourceManager, new object[]
			{
				liveid,
				recipient
			});
		}

		public static LocalizedString WarningNoDefaultGAL
		{
			get
			{
				return new LocalizedString("WarningNoDefaultGAL", "ExDE24E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchMdbMonitorMbxIsNull(string mdb)
		{
			return new LocalizedString("TestSearchMdbMonitorMbxIsNull", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString BackSyncUrlInvalidProtcolFormat
		{
			get
			{
				return new LocalizedString("BackSyncUrlInvalidProtcolFormat", "ExA6B9C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddMonitoringOverride(string propertyName, string identity, string workitemType)
		{
			return new LocalizedString("ConfirmationMessageAddMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyName,
				identity,
				workitemType
			});
		}

		public static LocalizedString ErrorTargetDatabaseIsRecovery(string database)
		{
			return new LocalizedString("ErrorTargetDatabaseIsRecovery", "Ex3278EC", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString MSExchangeMGMTDescription
		{
			get
			{
				return new LocalizedString("MSExchangeMGMTDescription", "ExBA230E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProcessStart(string executableFilename, string arguments)
		{
			return new LocalizedString("ProcessStart", "Ex4ED166", false, true, Strings.ResourceManager, new object[]
			{
				executableFilename,
				arguments
			});
		}

		public static LocalizedString WarningShouldReadFromRidMaster(string dc1, string dc2)
		{
			return new LocalizedString("WarningShouldReadFromRidMaster", "", false, false, Strings.ResourceManager, new object[]
			{
				dc1,
				dc2
			});
		}

		public static LocalizedString TcpListenerCheckDesc
		{
			get
			{
				return new LocalizedString("TcpListenerCheckDesc", "Ex94BA5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestRHGetAmRoleRpc(string serverVersion, string rpcSupportedVersion)
		{
			return new LocalizedString("TestRHGetAmRoleRpc", "Ex2B4AC5", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportedVersion
			});
		}

		public static LocalizedString ServiceNotRunning(string service)
		{
			return new LocalizedString("ServiceNotRunning", "ExAAAF4E", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		public static LocalizedString CannotRemoveDefaultAcceptedDomain
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultAcceptedDomain", "Ex6EFA3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotResolvePartitionFromInstanceId(string serviceInstance)
		{
			return new LocalizedString("CannotResolvePartitionFromInstanceId", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstance
			});
		}

		public static LocalizedString ErrorMoveToArchiveAppliedToSystemFolder
		{
			get
			{
				return new LocalizedString("ErrorMoveToArchiveAppliedToSystemFolder", "Ex05C610", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDisconnectedMailboxNotArchive(string identity, string user)
		{
			return new LocalizedString("ErrorDisconnectedMailboxNotArchive", "Ex4BA973", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				user
			});
		}

		public static LocalizedString InvalidDateValueException(DateTime date, DateTime minDate, DateTime maxDate)
		{
			return new LocalizedString("InvalidDateValueException", "", false, false, Strings.ResourceManager, new object[]
			{
				date,
				minDate,
				maxDate
			});
		}

		public static LocalizedString ErrorDomainIsNotReservedWithWLCD(string domain)
		{
			return new LocalizedString("ErrorDomainIsNotReservedWithWLCD", "Ex865A4B", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorDisableJournalArchiveMailuserNotSoftDeleted
		{
			get
			{
				return new LocalizedString("ErrorDisableJournalArchiveMailuserNotSoftDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SiteMailboxDiagnosticsEmailSubject(string sm)
		{
			return new LocalizedString("SiteMailboxDiagnosticsEmailSubject", "", false, false, Strings.ResourceManager, new object[]
			{
				sm
			});
		}

		public static LocalizedString IisTasksValidationStringLengthOutOfRangeException(string propertyName, int minLength, int maxLength)
		{
			return new LocalizedString("IisTasksValidationStringLengthOutOfRangeException", "ExC79F19", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				minLength,
				maxLength
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDefaultActiveSyncMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDefaultActiveSyncMailboxPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MigrationCSVNotAllowedForRunningState
		{
			get
			{
				return new LocalizedString("MigrationCSVNotAllowedForRunningState", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveMailboxFindDomain(string domainController)
		{
			return new LocalizedString("ErrorMoveMailboxFindDomain", "ExC7B509", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		public static LocalizedString ConfirmationMessageSetEmailAddressPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetEmailAddressPolicy", "Ex06D85A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ReplicationCheckHighPriorityFailedException(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckHighPriorityFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		public static LocalizedString CouldNotFindServerDirectoryEntryException(string server)
		{
			return new LocalizedString("CouldNotFindServerDirectoryEntryException", "Ex02887B", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorManagedByInCoManagedByList(string groupManager)
		{
			return new LocalizedString("ErrorManagedByInCoManagedByList", "Ex6400D9", false, true, Strings.ResourceManager, new object[]
			{
				groupManager
			});
		}

		public static LocalizedString VerboseConnectionMapiRpcInterface(string server)
		{
			return new LocalizedString("VerboseConnectionMapiRpcInterface", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString AboutToAddForeginOrgUSGToLocalAdminGroup
		{
			get
			{
				return new LocalizedString("AboutToAddForeginOrgUSGToLocalAdminGroup", "Ex59CFDA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotFindElementWithTwoAttributes(string elementName, string attribute1, string attribute1Value, string attribute2, string attribute2Value)
		{
			return new LocalizedString("CouldNotFindElementWithTwoAttributes", "ExB1B8B7", false, true, Strings.ResourceManager, new object[]
			{
				elementName,
				attribute1,
				attribute1Value,
				attribute2,
				attribute2Value
			});
		}

		public static LocalizedString ConfirmationMessageNewAddressrewriteentry(string Name, string InternalAddress, string ExternalAddress)
		{
			return new LocalizedString("ConfirmationMessageNewAddressrewriteentry", "Ex44051D", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				InternalAddress,
				ExternalAddress
			});
		}

		public static LocalizedString AddDatabaseCopyAllCopiesMustBeInSameDagException(string databaseName, string server1, string dag1, string server2, string dag2)
		{
			return new LocalizedString("AddDatabaseCopyAllCopiesMustBeInSameDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				server1,
				dag1,
				server2,
				dag2
			});
		}

		public static LocalizedString SetupComponentPrepareSharedConfig
		{
			get
			{
				return new LocalizedString("SetupComponentPrepareSharedConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewDataClassification(string name)
		{
			return new LocalizedString("ConfirmationMessageNewDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ContinueUpgradeObjectVersion(string name)
		{
			return new LocalizedString("ContinueUpgradeObjectVersion", "Ex95E603", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MtrtGenerateIncidentReport
		{
			get
			{
				return new LocalizedString("MtrtGenerateIncidentReport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMoveOfflineAddressBook(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageMoveOfflineAddressBook", "Ex9EE4E3", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		public static LocalizedString SetRemoteAccountSyncCache
		{
			get
			{
				return new LocalizedString("SetRemoteAccountSyncCache", "ExB20EC0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FileNotFound
		{
			get
			{
				return new LocalizedString("FileNotFound", "ExAA9DB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotFindMailboxDatabaseById
		{
			get
			{
				return new LocalizedString("CouldNotFindMailboxDatabaseById", "Ex782F54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionIncorrectDocumentNamespaceViolation(string incorrectNs, string expectedNs)
		{
			return new LocalizedString("ClassificationRuleCollectionIncorrectDocumentNamespaceViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				incorrectNs,
				expectedNs
			});
		}

		public static LocalizedString ErrorDisableMailboxIsJournalReportNdrTo(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailboxIsJournalReportNdrTo", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString ReplServiceNotRunningOnNodeException(string nodeName)
		{
			return new LocalizedString("ReplServiceNotRunningOnNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		public static LocalizedString MissingPilotTargetOffer(string file, string targetOffer)
		{
			return new LocalizedString("MissingPilotTargetOffer", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				targetOffer
			});
		}

		public static LocalizedString MobileDeviceLogEMailFailure
		{
			get
			{
				return new LocalizedString("MobileDeviceLogEMailFailure", "ExD653D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidParameterValue(string parameterName, string parameterValue)
		{
			return new LocalizedString("ErrorInvalidParameterValue", "Ex653D7F", false, true, Strings.ResourceManager, new object[]
			{
				parameterName,
				parameterValue
			});
		}

		public static LocalizedString SetupProgressGenericComponent
		{
			get
			{
				return new LocalizedString("SetupProgressGenericComponent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProtocolConfrimationMessage(string protocol)
		{
			return new LocalizedString("ProtocolConfrimationMessage", "Ex689A84", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		public static LocalizedString InfoSetAces(string dn)
		{
			return new LocalizedString("InfoSetAces", "ExDF1562", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ErrorAuthentication
		{
			get
			{
				return new LocalizedString("ErrorAuthentication", "Ex86789E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoBindings(string fqdn)
		{
			return new LocalizedString("NoBindings", "Ex039EF7", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		public static LocalizedString ConfirmationMessageNewForeignConnectorAddressSpaces(string Name, string AddressSpaces)
		{
			return new LocalizedString("ConfirmationMessageNewForeignConnectorAddressSpaces", "ExA9833E", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AddressSpaces
			});
		}

		public static LocalizedString TenantNotificationVerboseSendingEmail
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseSendingEmail", "Ex1BA55F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSettingErrorReportingEnabledtoNull
		{
			get
			{
				return new LocalizedString("ErrorSettingErrorReportingEnabledtoNull", "Ex14DDF6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoOverallWarning
		{
			get
			{
				return new LocalizedString("InfoOverallWarning", "Ex72EAEE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRetrieveLocalForest
		{
			get
			{
				return new LocalizedString("ErrorCannotRetrieveLocalForest", "Ex19B9D6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantNotificationVerboseNotSendingEmailPastDay
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseNotSendingEmailPastDay", "Ex1CB423", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EventOtherActionFailed(string action, int exitCode, string errors)
		{
			return new LocalizedString("EventOtherActionFailed", "Ex499032", false, true, Strings.ResourceManager, new object[]
			{
				action,
				exitCode,
				errors
			});
		}

		public static LocalizedString MobileDeviceLogNotFound(string user)
		{
			return new LocalizedString("MobileDeviceLogNotFound", "Ex12DD21", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString PhoneNumberUsedByOthers
		{
			get
			{
				return new LocalizedString("PhoneNumberUsedByOthers", "Ex00DA09", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyConfigurationErrorException(string exception)
		{
			return new LocalizedString("CopyConfigurationErrorException", "", false, false, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString GlobalRoutingEntryNotFoundRetry(string phoneNumber, int secondsLeft)
		{
			return new LocalizedString("GlobalRoutingEntryNotFoundRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber,
				secondsLeft
			});
		}

		public static LocalizedString UnSupportedPermissionGroupsForEdge
		{
			get
			{
				return new LocalizedString("UnSupportedPermissionGroupsForEdge", "ExBD1BD7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveOabToTiFrondEndServer
		{
			get
			{
				return new LocalizedString("ErrorMoveOabToTiFrondEndServer", "Ex742C3D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorJPEGFileTooBig
		{
			get
			{
				return new LocalizedString("ErrorJPEGFileTooBig", "Ex1C5B4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EdgeParameterNotValidOnHubRole
		{
			get
			{
				return new LocalizedString("EdgeParameterNotValidOnHubRole", "ExA42A4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorGeneratingMailboxInvalid(string mailboxId)
		{
			return new LocalizedString("ErrorGeneratingMailboxInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		public static LocalizedString ErrorResolveFqdnForDomainController(string dc, string errormsg)
		{
			return new LocalizedString("ErrorResolveFqdnForDomainController", "Ex114F5A", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				errormsg
			});
		}

		public static LocalizedString RemovedDuplicateRecipients(int count, string parameter)
		{
			return new LocalizedString("RemovedDuplicateRecipients", "", false, false, Strings.ResourceManager, new object[]
			{
				count,
				parameter
			});
		}

		public static LocalizedString SetupProgressAutoGroupPermissions
		{
			get
			{
				return new LocalizedString("SetupProgressAutoGroupPermissions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePackInvalidExtraction
		{
			get
			{
				return new LocalizedString("UmLanguagePackInvalidExtraction", "Ex64CE3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUsedByOab(string nameOab, string database)
		{
			return new LocalizedString("ErrorUsedByOab", "ExFD37CE", false, true, Strings.ResourceManager, new object[]
			{
				nameOab,
				database
			});
		}

		public static LocalizedString UmLanguagePackMsiFileNotFound(string file)
		{
			return new LocalizedString("UmLanguagePackMsiFileNotFound", "ExBB9690", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeUsedOnAutoResumeJobs(string name)
		{
			return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeUsedOnAutoResumeJobs", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString Info_MessageItemHasBeenDeleted
		{
			get
			{
				return new LocalizedString("Info_MessageItemHasBeenDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxSearchStorageTransient
		{
			get
			{
				return new LocalizedString("ErrorMailboxSearchStorageTransient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConditionIncompatibleWithNotifySenderAction(string conditionName)
		{
			return new LocalizedString("ConditionIncompatibleWithNotifySenderAction", "", false, false, Strings.ResourceManager, new object[]
			{
				conditionName
			});
		}

		public static LocalizedString ErrorUserCannotChangePasswordAtNextLogon(string user)
		{
			return new LocalizedString("ErrorUserCannotChangePasswordAtNextLogon", "ExDE471A", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString SetupProgressSyncAccountsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceServerLocation(string attributeName, string exchangeServer, string serverLocation, string databaseLocation)
		{
			return new LocalizedString("Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceServerLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				attributeName,
				exchangeServer,
				serverLocation,
				databaseLocation
			});
		}

		public static LocalizedString ErrorEwsAllowListAndEwsBlockListSpecified
		{
			get
			{
				return new LocalizedString("ErrorEwsAllowListAndEwsBlockListSpecified", "Ex93014B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidTlsAuthLevel(string tlsAuthLevel)
		{
			return new LocalizedString("InvalidTlsAuthLevel", "", false, false, Strings.ResourceManager, new object[]
			{
				tlsAuthLevel
			});
		}

		public static LocalizedString ConfirmationMessageRemoveOutlookProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOutlookProvider", "Ex198D18", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString VerboseGenerateAliasByRandomString(string displayName, string randomAlias)
		{
			return new LocalizedString("VerboseGenerateAliasByRandomString", "", false, false, Strings.ResourceManager, new object[]
			{
				displayName,
				randomAlias
			});
		}

		public static LocalizedString ErrorMemberNameUnavailable(string memberName)
		{
			return new LocalizedString("ErrorMemberNameUnavailable", "Ex3B4070", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ReplayServiceDisplayName
		{
			get
			{
				return new LocalizedString("ReplayServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestIPAllowListProvider(string Identity, string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageTestIPAllowListProvider", "Ex309C8A", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				IPAddress
			});
		}

		public static LocalizedString VerboseDeletingChildVDir(string name, string parent)
		{
			return new LocalizedString("VerboseDeletingChildVDir", "Ex4E6A1D", false, true, Strings.ResourceManager, new object[]
			{
				name,
				parent
			});
		}

		public static LocalizedString InterceptorErrorActionInvalid
		{
			get
			{
				return new LocalizedString("InterceptorErrorActionInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidObjectMissingCriticalProperty(string type, string identity, string property)
		{
			return new LocalizedString("ErrorInvalidObjectMissingCriticalProperty", "Ex016D9C", false, true, Strings.ResourceManager, new object[]
			{
				type,
				identity,
				property
			});
		}

		public static LocalizedString ConfirmationMessageAddContentFilterPhrase(string Phrase, string Influence)
		{
			return new LocalizedString("ConfirmationMessageAddContentFilterPhrase", "Ex9C0659", false, true, Strings.ResourceManager, new object[]
			{
				Phrase,
				Influence
			});
		}

		public static LocalizedString ErrorRecoveryDatabase(string databaseName)
		{
			return new LocalizedString("ErrorRecoveryDatabase", "Ex9BDA67", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		public static LocalizedString ErrorCannotRetargetPrimaryForArchiveOnlyMoves(string identity)
		{
			return new LocalizedString("ErrorCannotRetargetPrimaryForArchiveOnlyMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InvalidDataException(string error)
		{
			return new LocalizedString("InvalidDataException", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ConfirmationMessageRemoveTenantRelocationRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTenantRelocationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorMetadataMustBeAbsoluteUrl
		{
			get
			{
				return new LocalizedString("ErrorMetadataMustBeAbsoluteUrl", "ExBC93FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidEapNewPriority(string priority)
		{
			return new LocalizedString("ErrorInvalidEapNewPriority", "ExE375F7", false, true, Strings.ResourceManager, new object[]
			{
				priority
			});
		}

		public static LocalizedString TenantNotificationDebugFormatMessageFailedSystemLang(int error)
		{
			return new LocalizedString("TenantNotificationDebugFormatMessageFailedSystemLang", "Ex597276", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ConnectorIncorrectUsageConnectorStillReferenced
		{
			get
			{
				return new LocalizedString("ConnectorIncorrectUsageConnectorStillReferenced", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ResubmitRequestStateInvalid
		{
			get
			{
				return new LocalizedString("ResubmitRequestStateInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasSyncDownTestItem
		{
			get
			{
				return new LocalizedString("CasHealthEasSyncDownTestItem", "Ex003174", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnparseableParameter(string parameterName)
		{
			return new LocalizedString("UnparseableParameter", "ExFBB7C2", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString CasHealthOwaUrlAndCredentialsArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthOwaUrlAndCredentialsArgumentError", "Ex98E4F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportFileNameMissing
		{
			get
			{
				return new LocalizedString("ExportFileNameMissing", "ExFCB1C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyStateStateInvalid
		{
			get
			{
				return new LocalizedString("DlpPolicyStateStateInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetServiceInstanceMapResultCodeUnknownError
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodeUnknownError", "Ex8E4AB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressUpgradeLegacyGlobalObjects
		{
			get
			{
				return new LocalizedString("SetupProgressUpgradeLegacyGlobalObjects", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RolePublishingAuthor
		{
			get
			{
				return new LocalizedString("RolePublishingAuthor", "ExF5CF43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMapiVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveMapiVirtualDirectory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroupConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CasHealthAutodiscoveryServerNotFound(string smtpAddress, string additionalInformation)
		{
			return new LocalizedString("CasHealthAutodiscoveryServerNotFound", "Ex76285B", false, true, Strings.ResourceManager, new object[]
			{
				smtpAddress,
				additionalInformation
			});
		}

		public static LocalizedString ErrorReadMatchingRecipients(string id, string ldapFilter, string error)
		{
			return new LocalizedString("ErrorReadMatchingRecipients", "ExD3D054", false, true, Strings.ResourceManager, new object[]
			{
				id,
				ldapFilter,
				error
			});
		}

		public static LocalizedString UMCallAnsweringRuleTransferToVoiceMailWithoutContext(int key, string galContact)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToVoiceMailWithoutContext", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				galContact
			});
		}

		public static LocalizedString ErrorFederationTrustNotFound(string trust)
		{
			return new LocalizedString("ErrorFederationTrustNotFound", "Ex8718C6", false, true, Strings.ResourceManager, new object[]
			{
				trust
			});
		}

		public static LocalizedString SetupProgressAddSeverToDag
		{
			get
			{
				return new LocalizedString("SetupProgressAddSeverToDag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressDisableWMIInbound
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIInbound", "ExB39600", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreatingEdgeContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingEdgeContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorConfirmDelayAction
		{
			get
			{
				return new LocalizedString("InterceptorConfirmDelayAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RuleNameAlreadyExist
		{
			get
			{
				return new LocalizedString("RuleNameAlreadyExist", "Ex74F5F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDisallowMergeRequestForPublicFolderMailbox(string identity)
		{
			return new LocalizedString("ErrorDisallowMergeRequestForPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString UsageTypeInternet
		{
			get
			{
				return new LocalizedString("UsageTypeInternet", "ExFEF66D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeZipCode
		{
			get
			{
				return new LocalizedString("ADAttributeZipCode", "ExA234B3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateFound
		{
			get
			{
				return new LocalizedString("CertificateFound", "Ex4C872A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageStartMailboxSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStartMailboxSearch", "Ex222435", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MoveMailboxSourceCleanupTypeDeleteSourceNTAccount
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeDeleteSourceNTAccount", "Ex345CD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageDisableInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageDisableInboxRule", "ExEEC687", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		public static LocalizedString ErrorSiteMailboxCannotLoadAddressTemplate
		{
			get
			{
				return new LocalizedString("ErrorSiteMailboxCannotLoadAddressTemplate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LanguagePackPerfCounterMergeStatus(string fileName)
		{
			return new LocalizedString("LanguagePackPerfCounterMergeStatus", "Ex80A296", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		public static LocalizedString InfoDatacenterMode
		{
			get
			{
				return new LocalizedString("InfoDatacenterMode", "Ex8A3680", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCouldNotStartFullSyncForFirstOrg
		{
			get
			{
				return new LocalizedString("ErrorCouldNotStartFullSyncForFirstOrg", "Ex877D33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPatternCannotEndWithWildcardMultiMatch
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotEndWithWildcardMultiMatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImportCertificateFileInvalid(string server, string message)
		{
			return new LocalizedString("ImportCertificateFileInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				message
			});
		}

		public static LocalizedString FormsAuthenticationDeleteMarkErrorPathNotFound
		{
			get
			{
				return new LocalizedString("FormsAuthenticationDeleteMarkErrorPathNotFound", "Ex001BCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PublicFolderDatabaseDoesNotBelongToTenant(string pfId, string tenantId)
		{
			return new LocalizedString("PublicFolderDatabaseDoesNotBelongToTenant", "Ex9468C9", false, true, Strings.ResourceManager, new object[]
			{
				pfId,
				tenantId
			});
		}

		public static LocalizedString ErrorFederatedIdentityandPasswordTogether
		{
			get
			{
				return new LocalizedString("ErrorFederatedIdentityandPasswordTogether", "Ex0629C4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFixingRecipientsOnE12AdminGroup
		{
			get
			{
				return new LocalizedString("VerboseFixingRecipientsOnE12AdminGroup", "ExCBCC5A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IncomingServerTooLong
		{
			get
			{
				return new LocalizedString("IncomingServerTooLong", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPublicFolderReferralIncludeSelf
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderReferralIncludeSelf", "Ex9CB5E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEwsEnforceAllowListAndEwsBlockListSpecified
		{
			get
			{
				return new LocalizedString("ErrorEwsEnforceAllowListAndEwsBlockListSpecified", "Ex5F92DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_EndDateCheck
		{
			get
			{
				return new LocalizedString("Error_EndDateCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDeleteSystemAttendantObject(string idSA)
		{
			return new LocalizedString("VerboseDeleteSystemAttendantObject", "Ex8DFA05", false, true, Strings.ResourceManager, new object[]
			{
				idSA
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMonitoringOverride(string propertyName, string identity, string workitemType)
		{
			return new LocalizedString("ConfirmationMessageRemoveMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyName,
				identity,
				workitemType
			});
		}

		public static LocalizedString NoOwnProcessService(string serviceName)
		{
			return new LocalizedString("NoOwnProcessService", "Ex4D7CCC", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		public static LocalizedString ConfirmationMessageSetMailPublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailPublicFolder", "ExD0486A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorArgumentIsOfWrongType(string expectedType)
		{
			return new LocalizedString("ErrorArgumentIsOfWrongType", "ExC72138", false, true, Strings.ResourceManager, new object[]
			{
				expectedType
			});
		}

		public static LocalizedString HybridMailflowNoOrganizationError
		{
			get
			{
				return new LocalizedString("HybridMailflowNoOrganizationError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFolderIsNotOrganizational(string folderName)
		{
			return new LocalizedString("ErrorFolderIsNotOrganizational", "Ex874726", false, true, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		public static LocalizedString ADAttributeHomePhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributeHomePhoneNumber", "Ex966752", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoFederationTrust
		{
			get
			{
				return new LocalizedString("NoFederationTrust", "ExECC916", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSyncMailboxWithMasterAccountSidNull
		{
			get
			{
				return new LocalizedString("ErrorSyncMailboxWithMasterAccountSidNull", "ExC71EC1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotMovePublicFoldersFromDifferentSourceMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFoldersFromDifferentSourceMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageConnectMailboxLinked(string Identity, string LinkedMasterAccount, string LinkedDomainController, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxLinked", "Ex05C853", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				LinkedMasterAccount,
				LinkedDomainController,
				Database
			});
		}

		public static LocalizedString Word
		{
			get
			{
				return new LocalizedString("Word", "Ex78FDE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxRepairRequestMailbox(string database, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRepairRequestMailbox", "Ex4A3A7F", false, true, Strings.ResourceManager, new object[]
			{
				database,
				mailbox
			});
		}

		public static LocalizedString CasHealthOwaGetFbaPageNonOKCode
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetFbaPageNonOKCode", "Ex735762", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ParameterErrorForInternetUsage
		{
			get
			{
				return new LocalizedString("ParameterErrorForInternetUsage", "Ex5B79FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidReportingDateRange(DateTime startDate, DateTime endDate)
		{
			return new LocalizedString("InvalidReportingDateRange", "Ex32B822", false, true, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		public static LocalizedString LanguagePackCfgDescription
		{
			get
			{
				return new LocalizedString("LanguagePackCfgDescription", "Ex2177B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnifiedMessagingPrereqCheck
		{
			get
			{
				return new LocalizedString("UnifiedMessagingPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ParsingTokenIssuerEndPoint(string tokenIssuerEpr)
		{
			return new LocalizedString("ParsingTokenIssuerEndPoint", "ExF31BED", false, true, Strings.ResourceManager, new object[]
			{
				tokenIssuerEpr
			});
		}

		public static LocalizedString ReservedString2
		{
			get
			{
				return new LocalizedString("ReservedString2", "Ex43F614", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagFswUnableToCreateWitnessShareException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswUnableToCreateWitnessShareException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		public static LocalizedString ErrorRpcHttpInvalidSwitchCombo
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpInvalidSwitchCombo", "Ex2597DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasScenarioSyncTestItem
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncTestItem", "ExC9F0C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MessageTypeVoicemail
		{
			get
			{
				return new LocalizedString("MessageTypeVoicemail", "ExBD81B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallMonitoringRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallMonitoringRoleDescription", "Ex3DFC08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RunCmdletOnDomain(string domain)
		{
			return new LocalizedString("RunCmdletOnDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ShouldSpecifyEitherIdentityOrMailbox
		{
			get
			{
				return new LocalizedString("ShouldSpecifyEitherIdentityOrMailbox", "Ex50C9BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidTemplate
		{
			get
			{
				return new LocalizedString("InvalidTemplate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CantAddDeviceFilterRuleSinceApplyForAllDevicesSetToTrue(string name)
		{
			return new LocalizedString("CantAddDeviceFilterRuleSinceApplyForAllDevicesSetToTrue", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString DlpPolicyMissingRequiredParameter(string cmdlet, string parameterName)
		{
			return new LocalizedString("DlpPolicyMissingRequiredParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet,
				parameterName
			});
		}

		public static LocalizedString ReportMovedMailUserMorphedToMailbox(string domainController)
		{
			return new LocalizedString("ReportMovedMailUserMorphedToMailbox", "Ex1E60FF", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		public static LocalizedString TowsFoundScpBySite(string scp, string site, string url)
		{
			return new LocalizedString("TowsFoundScpBySite", "", false, false, Strings.ResourceManager, new object[]
			{
				scp,
				site,
				url
			});
		}

		public static LocalizedString ErrorCannotRemoveLastArbitrationMailboxInOrganization(string mbxId)
		{
			return new LocalizedString("ErrorCannotRemoveLastArbitrationMailboxInOrganization", "Ex458D31", false, true, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMessageClassification(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMessageClassification", "Ex4270D3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorUserAlreadyExistsInPermissionEntry(string userId)
		{
			return new LocalizedString("ErrorUserAlreadyExistsInPermissionEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		public static LocalizedString ADAttributeCustomAttribute14
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute14", "Ex14A19C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningInboxRuleInError(string ruleName)
		{
			return new LocalizedString("WarningInboxRuleInError", "ExC5E072", false, true, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		public static LocalizedString TenantExecutionNotSupported
		{
			get
			{
				return new LocalizedString("TenantExecutionNotSupported", "Ex9040B3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateNotExportable(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotExportable", "Ex7BAD1D", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString ValidationOrgCurrentOrgNotMatchException(string validationOrg, string currentOrg)
		{
			return new LocalizedString("ValidationOrgCurrentOrgNotMatchException", "", false, false, Strings.ResourceManager, new object[]
			{
				validationOrg,
				currentOrg
			});
		}

		public static LocalizedString FormsAuthenticationDeleteMarkErrorUnknownOpenError(int hresult)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarkErrorUnknownOpenError", "ExCC2E38", false, true, Strings.ResourceManager, new object[]
			{
				hresult
			});
		}

		public static LocalizedString SetupComponentStartingGatewayServices
		{
			get
			{
				return new LocalizedString("SetupComponentStartingGatewayServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorModifyJournalArchiveAddress
		{
			get
			{
				return new LocalizedString("ErrorModifyJournalArchiveAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionResultMdbMoved
		{
			get
			{
				return new LocalizedString("MapiTransactionResultMdbMoved", "Ex1B107D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorActivationPreferenceInvalid(uint activationPref, int max)
		{
			return new LocalizedString("ErrorActivationPreferenceInvalid", "Ex469A9F", false, true, Strings.ResourceManager, new object[]
			{
				activationPref,
				max
			});
		}

		public static LocalizedString ConfirmationMessageAddDelegate(string Identity, string Group, string Role)
		{
			return new LocalizedString("ConfirmationMessageAddDelegate", "Ex697294", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Group,
				Role
			});
		}

		public static LocalizedString ErrorCannotRestoreIntoSelf(string identity)
		{
			return new LocalizedString("ErrorCannotRestoreIntoSelf", "ExFB528F", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString UninstallMailboxRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallMailboxRoleDescription", "Ex447ED6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RepairUrgencyProhibited
		{
			get
			{
				return new LocalizedString("RepairUrgencyProhibited", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogExsetdataInstallingAtom(string atomID)
		{
			return new LocalizedString("LogExsetdataInstallingAtom", "Ex49321A", false, true, Strings.ResourceManager, new object[]
			{
				atomID
			});
		}

		public static LocalizedString ErrorCannotRestoreFromPublicToPrivateMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotRestoreFromPublicToPrivateMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMismatchedMailboxRelease(string mailbox, string database, string serverMailboxRelease, string desiredMailboxRelease)
		{
			return new LocalizedString("ErrorMismatchedMailboxRelease", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				database,
				serverMailboxRelease,
				desiredMailboxRelease
			});
		}

		public static LocalizedString SupportedToolsDataInvalidTenantVersionRange(string toolName)
		{
			return new LocalizedString("SupportedToolsDataInvalidTenantVersionRange", "Ex92557E", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		public static LocalizedString ErrorMoveToDestinationFolderInvalid
		{
			get
			{
				return new LocalizedString("ErrorMoveToDestinationFolderInvalid", "ExCE6CB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidOperationIdentityWithShowDeletion
		{
			get
			{
				return new LocalizedString("InvalidOperationIdentityWithShowDeletion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxIdentityAndNotLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxIdentityAndNotLiveId", "Ex11E24C", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		public static LocalizedString MailboxNotUmEnabled(string mailbox)
		{
			return new LocalizedString("MailboxNotUmEnabled", "ExCCDBF0", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ErrorInvalidServerRole(string idStringValue)
		{
			return new LocalizedString("ErrorInvalidServerRole", "Ex16AE6C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString QuorumGroupNotOnline(string group, string node, string cluster, string resources, string newline)
		{
			return new LocalizedString("QuorumGroupNotOnline", "Ex7E69BA", false, true, Strings.ResourceManager, new object[]
			{
				group,
				node,
				cluster,
				resources,
				newline
			});
		}

		public static LocalizedString ErrorTenantIsUpgrading
		{
			get
			{
				return new LocalizedString("ErrorTenantIsUpgrading", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EmptyToken(string line, string file, string position)
		{
			return new LocalizedString("EmptyToken", "ExB98700", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				position
			});
		}

		public static LocalizedString ErrorTargetPartitionSctMissing(string oldTenant, string newPartition, string sct)
		{
			return new LocalizedString("ErrorTargetPartitionSctMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				oldTenant,
				newPartition,
				sct
			});
		}

		public static LocalizedString JournalingParameterErrorGccTenantSettingNotExist
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccTenantSettingNotExist", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOccuredInFixingObject(string id, string message)
		{
			return new LocalizedString("ErrorOccuredInFixingObject", "Ex97BF07", false, true, Strings.ResourceManager, new object[]
			{
				id,
				message
			});
		}

		public static LocalizedString LiveIdAuthenticationResultFailure
		{
			get
			{
				return new LocalizedString("LiveIdAuthenticationResultFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EventManifestNotUpdated(string manifestFileName, string msgDllName, string providerName)
		{
			return new LocalizedString("EventManifestNotUpdated", "Ex9AA4E8", false, true, Strings.ResourceManager, new object[]
			{
				manifestFileName,
				msgDllName,
				providerName
			});
		}

		public static LocalizedString FDS_UM_PerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("FDS_UM_PerfCountersComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaVdirColon(string vdir)
		{
			return new LocalizedString("CasHealthOwaVdirColon", "Ex838710", false, true, Strings.ResourceManager, new object[]
			{
				vdir
			});
		}

		public static LocalizedString MigrationEndpointIdentityAmbiguous(string identity)
		{
			return new LocalizedString("MigrationEndpointIdentityAmbiguous", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString FormsAuthenticationDeleteCloseException(int hresult)
		{
			return new LocalizedString("FormsAuthenticationDeleteCloseException", "Ex5824B7", false, true, Strings.ResourceManager, new object[]
			{
				hresult
			});
		}

		public static LocalizedString GzipLowDoesNotUseDynamicCompression
		{
			get
			{
				return new LocalizedString("GzipLowDoesNotUseDynamicCompression", "ExD3B951", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidServiceInstanceMapXmlFormat(string reason)
		{
			return new LocalizedString("InvalidServiceInstanceMapXmlFormat", "Ex2D7C90", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString ErrorCmdExecutionFailed(string app, string argument, string output, string errors, string exitCode)
		{
			return new LocalizedString("ErrorCmdExecutionFailed", "Ex8B95D7", false, true, Strings.ResourceManager, new object[]
			{
				app,
				argument,
				output,
				errors,
				exitCode
			});
		}

		public static LocalizedString WarningPushFailed(string thumbprint)
		{
			return new LocalizedString("WarningPushFailed", "Ex22737D", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ExchangeUpgradeBucketInvalidOrganizationVersion(string organizationVersion, string bucketVersionMask)
		{
			return new LocalizedString("ExchangeUpgradeBucketInvalidOrganizationVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				organizationVersion,
				bucketVersionMask
			});
		}

		public static LocalizedString ConfirmationMessageNewRemoteMailbox(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewRemoteMailbox", "ExBABF50", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString ProgressStatusFinished
		{
			get
			{
				return new LocalizedString("ProgressStatusFinished", "Ex4B87D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotFindObjectById
		{
			get
			{
				return new LocalizedString("CouldNotFindObjectById", "Ex46BB0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchCurrentMailbox(string displayName)
		{
			return new LocalizedString("TestSearchCurrentMailbox", "Ex1FA164", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		public static LocalizedString UMCallAnsweringRuleInvalidValue
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleInvalidValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveOrganizationRelationship(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOrganizationRelationship", "ExFA87EE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TestSearchFindMessage(string MDB, string ID)
		{
			return new LocalizedString("TestSearchFindMessage", "Ex98401B", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		public static LocalizedString KeyNoMatch(string name)
		{
			return new LocalizedString("KeyNoMatch", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SchemaValidationError(string errorMessage, int rowNumber, string columnTitle)
		{
			return new LocalizedString("SchemaValidationError", "Ex529CBC", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage,
				rowNumber,
				columnTitle
			});
		}

		public static LocalizedString ServiceDidNotReachStatusDuringWait(string servicename, string status, uint time)
		{
			return new LocalizedString("ServiceDidNotReachStatusDuringWait", "Ex99E00E", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status,
				time
			});
		}

		public static LocalizedString ErrorRpcHttpNotUnique(string server)
		{
			return new LocalizedString("ErrorRpcHttpNotUnique", "Ex8BFA6F", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString InvalidIPRangeFormatId(string ipRange)
		{
			return new LocalizedString("InvalidIPRangeFormatId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		public static LocalizedString StopReplService
		{
			get
			{
				return new LocalizedString("StopReplService", "Ex3FF7F4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoMatchedUserFound
		{
			get
			{
				return new LocalizedString("ErrorNoMatchedUserFound", "Ex615841", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportCertificateFileInvalid(string message)
		{
			return new LocalizedString("ExportCertificateFileInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorExchangeUpgradeBucketNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeUpgradeBucketNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorVirtualDirectoryNameNull
		{
			get
			{
				return new LocalizedString("ErrorVirtualDirectoryNameNull", "Ex78F19A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveAlreadySuspended(string identity)
		{
			return new LocalizedString("MoveAlreadySuspended", "Ex113DC5", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorDefaultHostedContentFilterPolicyCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultHostedContentFilterPolicyCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PrimaryAndArchiveNotOnSameVersionPostMove(string primaryVersion, string archiveVersion)
		{
			return new LocalizedString("PrimaryAndArchiveNotOnSameVersionPostMove", "", false, false, Strings.ResourceManager, new object[]
			{
				primaryVersion,
				archiveVersion
			});
		}

		public static LocalizedString ExchangeSettingsNonExistingSettingNotRemoved(string key, string groupname)
		{
			return new LocalizedString("ExchangeSettingsNonExistingSettingNotRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				groupname
			});
		}

		public static LocalizedString ConfirmationMessageSwitchRBACPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchRBACPolicy", "ExB8EE3F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SettingRequest
		{
			get
			{
				return new LocalizedString("SettingRequest", "ExB1A98D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotFindSchemaClassException(string objclass, string schemaDN, string server)
		{
			return new LocalizedString("CannotFindSchemaClassException", "Ex9E9C53", false, true, Strings.ResourceManager, new object[]
			{
				objclass,
				schemaDN,
				server
			});
		}

		public static LocalizedString ErrorReportingEnabledLegalMessage
		{
			get
			{
				return new LocalizedString("ErrorReportingEnabledLegalMessage", "Ex5D62B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionAlreadyExists
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionAlreadyExists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportFileNameShouldNotBeSet
		{
			get
			{
				return new LocalizedString("ExportFileNameShouldNotBeSet", "Ex73C24B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OabVirtualDirectoryAmbiguous(string alID)
		{
			return new LocalizedString("OabVirtualDirectoryAmbiguous", "Ex1DE11B", false, true, Strings.ResourceManager, new object[]
			{
				alID
			});
		}

		public static LocalizedString ADAttributeState
		{
			get
			{
				return new LocalizedString("ADAttributeState", "Ex4586DB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PhoneNumberAllowedOnlyWithDialplanWithCountryCode
		{
			get
			{
				return new LocalizedString("PhoneNumberAllowedOnlyWithDialplanWithCountryCode", "Ex6630C3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthResetCredentialsScenario(string serverName)
		{
			return new LocalizedString("CasHealthResetCredentialsScenario", "Ex954137", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SetupComponentDataStorageConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentDataStorageConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetMailboxForwardingAddressConfirmationMessage
		{
			get
			{
				return new LocalizedString("SetMailboxForwardingAddressConfirmationMessage", "Ex03AEB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressPermissionManagementEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPermissionManagementEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToResetMdb(string id, string error)
		{
			return new LocalizedString("FailedToResetMdb", "ExE08014", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString OAuthRequestEndPoint(string s)
		{
			return new LocalizedString("OAuthRequestEndPoint", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString HybridMailflowUnexpectedType(string cmdletName)
		{
			return new LocalizedString("HybridMailflowUnexpectedType", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName
			});
		}

		public static LocalizedString SetImap4ConfigurationTask
		{
			get
			{
				return new LocalizedString("SetImap4ConfigurationTask", "Ex95921B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagNetworkSingleDNSNicViolation(string nodeName)
		{
			return new LocalizedString("DagNetworkSingleDNSNicViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		public static LocalizedString ConfirmationMessageResumeRequest(string identity)
		{
			return new LocalizedString("ConfirmationMessageResumeRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ExchVirtualDirectoryTooManyRpcsToIisMetabase(string serverName)
		{
			return new LocalizedString("ExchVirtualDirectoryTooManyRpcsToIisMetabase", "Ex8BCEA6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString AlsEmailBodyExternalAccess(bool? externalAccess)
		{
			return new LocalizedString("AlsEmailBodyExternalAccess", "", false, false, Strings.ResourceManager, new object[]
			{
				externalAccess
			});
		}

		public static LocalizedString MoveMailboxUnexpectedAfterMove(string error)
		{
			return new LocalizedString("MoveMailboxUnexpectedAfterMove", "ExF92374", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ErrorRemoveAddressListWithAssociatedAddressBookPolicies(string name)
		{
			return new LocalizedString("ErrorRemoveAddressListWithAssociatedAddressBookPolicies", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorSourceEndpointRequired
		{
			get
			{
				return new LocalizedString("ErrorSourceEndpointRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NonRoomMailboxAddToRoomListException(string group)
		{
			return new LocalizedString("NonRoomMailboxAddToRoomListException", "Ex205A6E", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString FailedToSetPfdbAsFirstInstance(string id, string error)
		{
			return new LocalizedString("FailedToSetPfdbAsFirstInstance", "Ex7D2F11", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString LPPrepareInstallationSource
		{
			get
			{
				return new LocalizedString("LPPrepareInstallationSource", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWellKnownHostedMailboxSGNotFound(string name, string org)
		{
			return new LocalizedString("ErrorWellKnownHostedMailboxSGNotFound", "ExD2C6DC", false, true, Strings.ResourceManager, new object[]
			{
				name,
				org
			});
		}

		public static LocalizedString InconsistentAFSettingsError(string partition1, string partition2)
		{
			return new LocalizedString("InconsistentAFSettingsError", "", false, false, Strings.ResourceManager, new object[]
			{
				partition1,
				partition2
			});
		}

		public static LocalizedString ConfirmationMessageNewProvisioningRequest(string timeZone, string fileName, string tenantName)
		{
			return new LocalizedString("ConfirmationMessageNewProvisioningRequest", "Ex772DD7", false, true, Strings.ResourceManager, new object[]
			{
				timeZone,
				fileName,
				tenantName
			});
		}

		public static LocalizedString ErrorExternalDirectoryObjectIdNotUnique(string id)
		{
			return new LocalizedString("ErrorExternalDirectoryObjectIdNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString EnableDBCSuspendReplayNoDbComment(string db)
		{
			return new LocalizedString("EnableDBCSuspendReplayNoDbComment", "ExA93BCF", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		public static LocalizedString EADCWeakSourceCreds
		{
			get
			{
				return new LocalizedString("EADCWeakSourceCreds", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEdbFileLocationNotUniqueUnderSameNode(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFileLocationNotUniqueUnderSameNode", "Ex566EB8", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		public static LocalizedString idCreateActiveSyncOraganizationSettings
		{
			get
			{
				return new LocalizedString("idCreateActiveSyncOraganizationSettings", "ExBFD77B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer
		{
			get
			{
				return new LocalizedString("ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoreThanOneRecipientForRecipientId(string recipId)
		{
			return new LocalizedString("MoreThanOneRecipientForRecipientId", "ExB872F0", false, true, Strings.ResourceManager, new object[]
			{
				recipId
			});
		}

		public static LocalizedString SetupProgressStoppingHTTPFilterService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingHTTPFilterService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArchiveRecoveryArchiveDatabaseDeleted(string user, string databaseId)
		{
			return new LocalizedString("ErrorArchiveRecoveryArchiveDatabaseDeleted", "Ex06A71D", false, true, Strings.ResourceManager, new object[]
			{
				user,
				databaseId
			});
		}

		public static LocalizedString ConfirmationMessageStopComplianceSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStopComplianceSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRemovedMailboxNotFound(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxNotFound", "Ex16CF6C", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		public static LocalizedString FailedToReadPefCounter(int failedReads)
		{
			return new LocalizedString("FailedToReadPefCounter", "Ex2C7FE9", false, true, Strings.ResourceManager, new object[]
			{
				failedReads
			});
		}

		public static LocalizedString Pop3ServiceDescription
		{
			get
			{
				return new LocalizedString("Pop3ServiceDescription", "ExA0754F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorParametersRequiredForNewTenant
		{
			get
			{
				return new LocalizedString("ErrorParametersRequiredForNewTenant", "ExC7F718", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBookmarkIndexOutOfRange
		{
			get
			{
				return new LocalizedString("ErrorBookmarkIndexOutOfRange", "Ex72ECF3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetQueueDigestUnexpectedError(string error)
		{
			return new LocalizedString("GetQueueDigestUnexpectedError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString RetentionPolicyNotEnabled
		{
			get
			{
				return new LocalizedString("RetentionPolicyNotEnabled", "Ex7A7025", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRemoveMailboxCatchAllRecipient(string domain)
		{
			return new LocalizedString("CannotRemoveMailboxCatchAllRecipient", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString AutodiscoverUsingDomain(string domain)
		{
			return new LocalizedString("AutodiscoverUsingDomain", "ExED1D1F", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ProcessStandardError(string output)
		{
			return new LocalizedString("ProcessStandardError", "Ex3374B8", false, true, Strings.ResourceManager, new object[]
			{
				output
			});
		}

		public static LocalizedString ErrorTeamMailboxFeatureNotInstalled(string url)
		{
			return new LocalizedString("ErrorTeamMailboxFeatureNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailboxArbitration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxArbitration", "Ex39E03C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString PublicFolderSourcesFolderDoesnotExist(string publicFolderPath)
		{
			return new LocalizedString("PublicFolderSourcesFolderDoesnotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				publicFolderPath
			});
		}

		public static LocalizedString ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaIncorrectAuthTypes(string expectedAuthTypes, string actualAuthTypes)
		{
			return new LocalizedString("CasHealthOwaIncorrectAuthTypes", "Ex92FF2A", false, true, Strings.ResourceManager, new object[]
			{
				expectedAuthTypes,
				actualAuthTypes
			});
		}

		public static LocalizedString InvalidTPRTask(string taskName)
		{
			return new LocalizedString("InvalidTPRTask", "Ex4DBA65", false, true, Strings.ResourceManager, new object[]
			{
				taskName
			});
		}

		public static LocalizedString CompletePublicFolderMigrationBatchRequiresSourceLockDown
		{
			get
			{
				return new LocalizedString("CompletePublicFolderMigrationBatchRequiresSourceLockDown", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMailboxDelegateRemoved(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateRemoved", "ExED840A", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		public static LocalizedString ErrorPublicFolderMigrationCompletedPreviously
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderMigrationCompletedPreviously", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DataMartTimeoutException
		{
			get
			{
				return new LocalizedString("DataMartTimeoutException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteTeamMailboxIsNotChangeable(string tm)
		{
			return new LocalizedString("ErrorRemoteTeamMailboxIsNotChangeable", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		public static LocalizedString ProgressDeletingEdbFile
		{
			get
			{
				return new LocalizedString("ProgressDeletingEdbFile", "Ex8E1997", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOwaMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOwaMailboxPolicyNotUnique", "ExA4FB60", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageRemoveOwaMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOwaMailboxPolicy", "ExAA5D4F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CannotSubscribeToMultipleSites(string server, string site)
		{
			return new LocalizedString("CannotSubscribeToMultipleSites", "Ex1A56A0", false, true, Strings.ResourceManager, new object[]
			{
				server,
				site
			});
		}

		public static LocalizedString TestSearchCurrentMDB(string mdbName)
		{
			return new LocalizedString("TestSearchCurrentMDB", "ExAC70FF", false, true, Strings.ResourceManager, new object[]
			{
				mdbName
			});
		}

		public static LocalizedString DebugStartSetDatabase
		{
			get
			{
				return new LocalizedString("DebugStartSetDatabase", "ExB705A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UpdatingLegDnForDatabaseToServer(string databaseName, string legdn, string serverName)
		{
			return new LocalizedString("UpdatingLegDnForDatabaseToServer", "Ex54467C", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				legdn,
				serverName
			});
		}

		public static LocalizedString SearchServiceDisplayName
		{
			get
			{
				return new LocalizedString("SearchServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotOperateOnOrgInCurrentState
		{
			get
			{
				return new LocalizedString("ErrorCannotOperateOnOrgInCurrentState", "Ex75E7C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserNotFoundOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorUserNotFoundOnDomainController", "Ex560194", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		public static LocalizedString ErrorInvalidNameOrDescriptionParameters(string parameterName, int length, int maxLength)
		{
			return new LocalizedString("ErrorInvalidNameOrDescriptionParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				length,
				maxLength
			});
		}

		public static LocalizedString ErrorSecondaryDomainNotUnique(string identity)
		{
			return new LocalizedString("ErrorSecondaryDomainNotUnique", "Ex9F39EF", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InvalidNumberOfSegments(int numberOfSegments)
		{
			return new LocalizedString("InvalidNumberOfSegments", "Ex4B9A6B", false, true, Strings.ResourceManager, new object[]
			{
				numberOfSegments
			});
		}

		public static LocalizedString ErrorExtendedProtectionSPNHasToStartWithHTTP(string spn)
		{
			return new LocalizedString("ErrorExtendedProtectionSPNHasToStartWithHTTP", "Ex311E9B", false, true, Strings.ResourceManager, new object[]
			{
				spn
			});
		}

		public static LocalizedString SetupProgressPerMBXPlanOWAPolicyEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPerMBXPlanOWAPolicyEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingASUpdateService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingASUpdateService", "ExE4827E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveDataClassification(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotMoveArbitrationMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveArbitrationMailboxesDownlevel", "Ex7165C5", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString LastConfigLoadTime(string d, string t)
		{
			return new LocalizedString("LastConfigLoadTime", "", false, false, Strings.ResourceManager, new object[]
			{
				d,
				t
			});
		}

		public static LocalizedString SetupProgressStartingWMIProviderService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingWMIProviderService", "Ex57F7AD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePackException(string exception)
		{
			return new LocalizedString("UmLanguagePackException", "Ex018229", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString VerboseTestOabFromAutoDiscover(string url)
		{
			return new LocalizedString("VerboseTestOabFromAutoDiscover", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString InvalidRequestJob
		{
			get
			{
				return new LocalizedString("InvalidRequestJob", "Ex2C6075", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaAdminObjectNotFoundException(string name, string webSite, string virtualDirectory, string applicationRoot, string identity)
		{
			return new LocalizedString("OwaAdminObjectNotFoundException", "ExD91128", false, true, Strings.ResourceManager, new object[]
			{
				name,
				webSite,
				virtualDirectory,
				applicationRoot,
				identity
			});
		}

		public static LocalizedString MalboxFolderRightsFolderVisible
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsFolderVisible", "Ex09450A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewPolicyTipConfigInvalidName(string supportedLocalesString, string supportedActionsString)
		{
			return new LocalizedString("NewPolicyTipConfigInvalidName", "", false, false, Strings.ResourceManager, new object[]
			{
				supportedLocalesString,
				supportedActionsString
			});
		}

		public static LocalizedString ErrorArchiveNotEnabled(string user)
		{
			return new LocalizedString("ErrorArchiveNotEnabled", "Ex83B7D1", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorRemovePolicyRoleAssignment(string user, string role, string policy)
		{
			return new LocalizedString("ErrorRemovePolicyRoleAssignment", "Ex8BA225", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				policy
			});
		}

		public static LocalizedString TowsAutodiscoverUrl(string url)
		{
			return new LocalizedString("TowsAutodiscoverUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString BadCharSetParameterException(string value)
		{
			return new LocalizedString("BadCharSetParameterException", "Ex9D6F4B", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString SuspendSgcTimeout
		{
			get
			{
				return new LocalizedString("SuspendSgcTimeout", "Ex6060FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NonUniqueCategoryObject
		{
			get
			{
				return new LocalizedString("NonUniqueCategoryObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeedingPathWarningException(string error)
		{
			return new LocalizedString("SeedingPathWarningException", "Ex2C108E", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString AggregationTaskMailboxNotFound(string mailbox)
		{
			return new LocalizedString("AggregationTaskMailboxNotFound", "Ex594AF0", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageSetOWAMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOWAMailboxPolicy", "Ex1A978F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SendConnectorValidTargetServerNotFound
		{
			get
			{
				return new LocalizedString("SendConnectorValidTargetServerNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRpcHttpAlreadyEnabled(string server)
		{
			return new LocalizedString("ErrorRpcHttpAlreadyEnabled", "Ex0B9039", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString CasHealthFailedToPopulateFromMetabase(string vDir, string errorMessage)
		{
			return new LocalizedString("CasHealthFailedToPopulateFromMetabase", "ExBAFDD1", false, true, Strings.ResourceManager, new object[]
			{
				vDir,
				errorMessage
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDynamicDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDynamicDistributionGroup", "Ex7E3815", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarningLegacyExchangeServer
		{
			get
			{
				return new LocalizedString("WarningLegacyExchangeServer", "Ex549F52", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteSourceArchiveMailboxDoesNotExist(string localUser)
		{
			return new LocalizedString("ErrorRemoteSourceArchiveMailboxDoesNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				localUser
			});
		}

		public static LocalizedString ErrorLegacyPublicFolder(string path)
		{
			return new LocalizedString("ErrorLegacyPublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ConfirmationMessageNewHostedConnectionFilterRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString IntegratedVDirDisabledWarning
		{
			get
			{
				return new LocalizedString("IntegratedVDirDisabledWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTooManyAddedRecipientsInRuleCollection(int currentRecipients, int maxRecipients)
		{
			return new LocalizedString("ErrorTooManyAddedRecipientsInRuleCollection", "Ex6685E0", false, true, Strings.ResourceManager, new object[]
			{
				currentRecipients,
				maxRecipients
			});
		}

		public static LocalizedString SetupProgressStoppingReplayService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingReplayService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceBindingUnknownError(string name)
		{
			return new LocalizedString("ComplianceBindingUnknownError", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RemoteCertificateExchangeVersionNotSupported(string server)
		{
			return new LocalizedString("RemoteCertificateExchangeVersionNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString CasHealthOwaLogonScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonScenarioDescription", "Ex0BC280", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdminGroupsNotFoundException
		{
			get
			{
				return new LocalizedString("AdminGroupsNotFoundException", "Ex50B367", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DiscoveryMailboxDisplayName
		{
			get
			{
				return new LocalizedString("DiscoveryMailboxDisplayName", "Ex6DADFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArbitrationMbxNotSetForApproval(string id)
		{
			return new LocalizedString("ErrorArbitrationMbxNotSetForApproval", "ExC6011E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString FailedToDeleteDatabaseCopy(string id, string error)
		{
			return new LocalizedString("FailedToDeleteDatabaseCopy", "Ex15286D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString ConfirmationMessageEnableReplayLag(string dbName, string serverName)
		{
			return new LocalizedString("ConfirmationMessageEnableReplayLag", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName
			});
		}

		public static LocalizedString ErrorAssignmentMethodWithoutRoleAssignee
		{
			get
			{
				return new LocalizedString("ErrorAssignmentMethodWithoutRoleAssignee", "Ex170019", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthCouldNotObtainFqdn
		{
			get
			{
				return new LocalizedString("CasHealthCouldNotObtainFqdn", "Ex55D09B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotDetermineEndpointForTenant(string domain)
		{
			return new LocalizedString("ErrorCannotDetermineEndpointForTenant", "Ex390FA7", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString CasHealthOwaErrorPageExceptionType(string type)
		{
			return new LocalizedString("CasHealthOwaErrorPageExceptionType", "Ex222DC3", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		public static LocalizedString DsnCodeNotADefault(EnhancedStatusCode code)
		{
			return new LocalizedString("DsnCodeNotADefault", "", false, false, Strings.ResourceManager, new object[]
			{
				code
			});
		}

		public static LocalizedString ErrorUnableToCheckMountedStatusNoResult(string pfdb, string server)
		{
			return new LocalizedString("ErrorUnableToCheckMountedStatusNoResult", "ExB8DCBE", false, true, Strings.ResourceManager, new object[]
			{
				pfdb,
				server
			});
		}

		public static LocalizedString ErrorSetPasswordWithoutPermission
		{
			get
			{
				return new LocalizedString("ErrorSetPasswordWithoutPermission", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressUpdateMailboxes
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveEstimateMailboxSearchConfirmation(string identity)
		{
			return new LocalizedString("RemoveEstimateMailboxSearchConfirmation", "Ex1A23CB", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorMissLinkedDomainController
		{
			get
			{
				return new LocalizedString("ErrorMissLinkedDomainController", "Ex1301D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InitializingFileCopy(string server)
		{
			return new LocalizedString("InitializingFileCopy", "ExBA8C50", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString BadNumberOfProcessesForService(string serviceName, string numberOfProcesses)
		{
			return new LocalizedString("BadNumberOfProcessesForService", "Ex82D9DB", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				numberOfProcesses
			});
		}

		public static LocalizedString WarningRemoveApprovalRequiredGroupOwners(string id)
		{
			return new LocalizedString("WarningRemoveApprovalRequiredGroupOwners", "Ex93E0B0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString FailedToDeleteOldEdbFile(string path)
		{
			return new LocalizedString("FailedToDeleteOldEdbFile", "ExC35B11", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString CasHealthOwaGetLogoffStart
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetLogoffStart", "Ex75DCA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionDiagnosticStoreServiceCheckFailure(string errorMsg)
		{
			return new LocalizedString("MapiTransactionDiagnosticStoreServiceCheckFailure", "Ex79013E", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString ConfirmNewMailboxSearchTask(string name)
		{
			return new LocalizedString("ConfirmNewMailboxSearchTask", "Ex27A260", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString DebugEndCreateMemberRequest
		{
			get
			{
				return new LocalizedString("DebugEndCreateMemberRequest", "Ex5A4C09", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressNewTLSCertificate
		{
			get
			{
				return new LocalizedString("SetupProgressNewTLSCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePackTempFilesNotDeleted(string exception)
		{
			return new LocalizedString("UmLanguagePackTempFilesNotDeleted", "Ex48966F", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString UninstallingMSExchangeFDS
		{
			get
			{
				return new LocalizedString("UninstallingMSExchangeFDS", "Ex4A44F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGroupCannotBeEmptyRoleAssignmentConstraint(string roleGroupName, string membersToRemove, string roleAssignment, string role)
		{
			return new LocalizedString("ErrorGroupCannotBeEmptyRoleAssignmentConstraint", "Ex03F2F8", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupName,
				membersToRemove,
				roleAssignment,
				role
			});
		}

		public static LocalizedString WarningLastPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("WarningLastPublicFolderDatabase", "ExB7DD39", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSharePointSiteHasNoValidUrl(string url)
		{
			return new LocalizedString("ErrorSharePointSiteHasNoValidUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ScriptDontExist(string fileName)
		{
			return new LocalizedString("ScriptDontExist", "ExC21F51", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		public static LocalizedString DNSRoutingEnabledMustBeSpecifiedForAuthMechanism
		{
			get
			{
				return new LocalizedString("DNSRoutingEnabledMustBeSpecifiedForAuthMechanism", "Ex12CD3D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArchiveAlreadyInTargetArchiveDatabase(string mailbox, string database)
		{
			return new LocalizedString("ErrorArchiveAlreadyInTargetArchiveDatabase", "ExAF2EF5", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				database
			});
		}

		public static LocalizedString MsiProperty(string name, string value)
		{
			return new LocalizedString("MsiProperty", "Ex9C8175", false, true, Strings.ResourceManager, new object[]
			{
				name,
				value
			});
		}

		public static LocalizedString SetupProgressCreateModeratedRecipients
		{
			get
			{
				return new LocalizedString("SetupProgressCreateModeratedRecipients", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSendNotificationForSiteMailbox(string tm, string error)
		{
			return new LocalizedString("ErrorSendNotificationForSiteMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				error
			});
		}

		public static LocalizedString ErrorUpdatingVDir(string identity, string errorMsg)
		{
			return new LocalizedString("ErrorUpdatingVDir", "Ex2B509C", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				errorMsg
			});
		}

		public static LocalizedString ConfirmationResetProvisioningCache(string server, string application)
		{
			return new LocalizedString("ConfirmationResetProvisioningCache", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				application
			});
		}

		public static LocalizedString FileUploadServiceDisplayName
		{
			get
			{
				return new LocalizedString("FileUploadServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveVirtualDirectoryGetApplicationPoolUnknownError(string path)
		{
			return new LocalizedString("RemoveVirtualDirectoryGetApplicationPoolUnknownError", "ExAA1485", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString DegubStartConnectingToDomainServices
		{
			get
			{
				return new LocalizedString("DegubStartConnectingToDomainServices", "Ex022AC3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidMessageIdentity
		{
			get
			{
				return new LocalizedString("InvalidMessageIdentity", "ExDC3413", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TraceCannotGetExchangeVersion(string exception)
		{
			return new LocalizedString("TraceCannotGetExchangeVersion", "Ex519C91", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString ComplianceSearchTaskCreationError
		{
			get
			{
				return new LocalizedString("ComplianceSearchTaskCreationError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RpcHttpTiSp1FeatureDisabled(string servers)
		{
			return new LocalizedString("RpcHttpTiSp1FeatureDisabled", "ExD90A80", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		public static LocalizedString ConfirmationMessageSwitchActiveSyncDefaultPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchActiveSyncDefaultPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorSourceMailboxDatabaseVersionUnsupported
		{
			get
			{
				return new LocalizedString("ErrorSourceMailboxDatabaseVersionUnsupported", "ExB13C48", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallClientAccessIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("UninstallClientAccessIisWebServiceExtensions", "ExE00443", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetTeamMailboxProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTeamMailboxProvisioningPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UninstallExchangeStreamingOpticsTask
		{
			get
			{
				return new LocalizedString("UninstallExchangeStreamingOpticsTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMailUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailUser", "Ex6CDBD2", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString StatusMessageStartUpdatePublicFolderMailbox(string mbxIdentity)
		{
			return new LocalizedString("StatusMessageStartUpdatePublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxIdentity
			});
		}

		public static LocalizedString ConfirmationMessageRemoveCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCmdletExtensionAgent", "ExCC8E0B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MailboxAssociationReplicationRpcRequest(string mailboxIdentity, string remoteServer)
		{
			return new LocalizedString("MailboxAssociationReplicationRpcRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxIdentity,
				remoteServer
			});
		}

		public static LocalizedString InstallIisWebServiceExtensionAdding(string GroupID, string executablePath)
		{
			return new LocalizedString("InstallIisWebServiceExtensionAdding", "Ex072B3F", false, true, Strings.ResourceManager, new object[]
			{
				GroupID,
				executablePath
			});
		}

		public static LocalizedString SetupComponentConfiguringCore
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringCore", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeStreet
		{
			get
			{
				return new LocalizedString("ADAttributeStreet", "ExB65057", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ForeignForestRootDomainNotFoundException(string foreignforest)
		{
			return new LocalizedString("ForeignForestRootDomainNotFoundException", "ExAD66EC", false, true, Strings.ResourceManager, new object[]
			{
				foreignforest
			});
		}

		public static LocalizedString RemoveVirtualDirectoryApplicationPoolSearchError(string applicationPool, int hresult)
		{
			return new LocalizedString("RemoveVirtualDirectoryApplicationPoolSearchError", "Ex79F250", false, true, Strings.ResourceManager, new object[]
			{
				applicationPool,
				hresult
			});
		}

		public static LocalizedString ErrorCannotUpdateRecipient(string id, string details)
		{
			return new LocalizedString("ErrorCannotUpdateRecipient", "Ex4301D0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				details
			});
		}

		public static LocalizedString SmtpConnectivityNoneSucceeded
		{
			get
			{
				return new LocalizedString("SmtpConnectivityNoneSucceeded", "ExACB8FA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerbosePendingServicePlanUpgradeDetected(string org)
		{
			return new LocalizedString("VerbosePendingServicePlanUpgradeDetected", "Ex5C754E", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString SetupComponentStartingMailboxServices
		{
			get
			{
				return new LocalizedString("SetupComponentStartingMailboxServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToUnlockMailboxDueToOutstandingMoveRequest(string mailboxId, string moveStatus)
		{
			return new LocalizedString("UnableToUnlockMailboxDueToOutstandingMoveRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId,
				moveStatus
			});
		}

		public static LocalizedString ConfirmationMessageRemoveProvisioningRequest(string fileName)
		{
			return new LocalizedString("ConfirmationMessageRemoveProvisioningRequest", "ExAA84B4", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		public static LocalizedString ErrorRoleEntryNotUnique(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryNotUnique", "Ex1A1B5D", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		public static LocalizedString FrontEndTransportServiceDescription
		{
			get
			{
				return new LocalizedString("FrontEndTransportServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidPageSize
		{
			get
			{
				return new LocalizedString("InvalidPageSize", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateApplicationMailDestinationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateApplicationMailDestinationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMultipleSystemFolderTagConfliction(string policyId, string type)
		{
			return new LocalizedString("ErrorMultipleSystemFolderTagConfliction", "", false, false, Strings.ResourceManager, new object[]
			{
				policyId,
				type
			});
		}

		public static LocalizedString ProvisioningRequestAlreadyCanceling
		{
			get
			{
				return new LocalizedString("ProvisioningRequestAlreadyCanceling", "ExF32A67", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewWebServicesVirtualDirectory(string Server)
		{
			return new LocalizedString("ConfirmationMessageNewWebServicesVirtualDirectory", "Ex067979", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString MaximumWaitTimeSetTo(string time)
		{
			return new LocalizedString("MaximumWaitTimeSetTo", "Ex6ADAC9", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		public static LocalizedString SetupProgressStoppingCredentialService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingCredentialService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetDatabaseAvailabilityGroup(string Server)
		{
			return new LocalizedString("ConfirmationMessageSetDatabaseAvailabilityGroup", "ExC20D3C", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString DagNetworkHasMultiNicForNode(string logicalNetName, string nodeName)
		{
			return new LocalizedString("DagNetworkHasMultiNicForNode", "", false, false, Strings.ResourceManager, new object[]
			{
				logicalNetName,
				nodeName
			});
		}

		public static LocalizedString RemainingTimeForServiceWait(string time)
		{
			return new LocalizedString("RemainingTimeForServiceWait", "Ex95E883", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		public static LocalizedString SetupProgressImapEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressImapEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewUMMailboxPolicy(string Name, string UMDialPlan)
		{
			return new LocalizedString("ConfirmationMessageNewUMMailboxPolicy", "Ex612BCF", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UMDialPlan
			});
		}

		public static LocalizedString GetOwaVersionException(string owaDllPath)
		{
			return new LocalizedString("GetOwaVersionException", "Ex0BF3D1", false, true, Strings.ResourceManager, new object[]
			{
				owaDllPath
			});
		}

		public static LocalizedString ErrorTargetServicePlanDifferent(string oldservicePlan, string oldtargetservicePlan, string newtargetservicePlan)
		{
			return new LocalizedString("ErrorTargetServicePlanDifferent", "Ex6D5F78", false, true, Strings.ResourceManager, new object[]
			{
				oldservicePlan,
				oldtargetservicePlan,
				newtargetservicePlan
			});
		}

		public static LocalizedString ProgressValidation
		{
			get
			{
				return new LocalizedString("ProgressValidation", "ExA7D4A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskUpdatingMasterServerOnDatabase(string databaseName, string newMasterServer)
		{
			return new LocalizedString("DagTaskUpdatingMasterServerOnDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				newMasterServer
			});
		}

		public static LocalizedString ErrorRecipientContainerInvalidOrNotExists
		{
			get
			{
				return new LocalizedString("ErrorRecipientContainerInvalidOrNotExists", "ExFCCEFE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewRecipientEnforcementProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewRecipientEnforcementProvisioningPolicy", "ExB1FA50", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorUnableToDetermineTargetDatabase(string identity)
		{
			return new LocalizedString("ErrorUnableToDetermineTargetDatabase", "ExE34781", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorLinkedGroupInTheCurrentForest(string forest)
		{
			return new LocalizedString("ErrorLinkedGroupInTheCurrentForest", "ExD55859", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		public static LocalizedString ConfirmationMessageUpdateSafeList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateSafeList", "Ex385BCC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DomainsNotFoundException
		{
			get
			{
				return new LocalizedString("DomainsNotFoundException", "Ex4D7487", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederCancelCalled(string dbCopy)
		{
			return new LocalizedString("SeederCancelCalled", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		public static LocalizedString CannotOperateOnAcceptedDomainPendingRemoval(string domain)
		{
			return new LocalizedString("CannotOperateOnAcceptedDomainPendingRemoval", "ExCD3184", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString SetupProgressCreateMoveToArchiveRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMoveToArchiveRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSyncMailboxWithDS(string id, string mdb, string server)
		{
			return new LocalizedString("VerboseSyncMailboxWithDS", "Ex76C3FB", false, true, Strings.ResourceManager, new object[]
			{
				id,
				mdb,
				server
			});
		}

		public static LocalizedString ErrorDisableMailboxWithDiscoveryHold(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailboxWithDiscoveryHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString FailedToFindFederationTrust
		{
			get
			{
				return new LocalizedString("FailedToFindFederationTrust", "Ex744A76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotUpgradeAllContentSettings(string managedFolder)
		{
			return new LocalizedString("CouldNotUpgradeAllContentSettings", "Ex7150D9", false, true, Strings.ResourceManager, new object[]
			{
				managedFolder
			});
		}

		public static LocalizedString MailboxConnectScenario
		{
			get
			{
				return new LocalizedString("MailboxConnectScenario", "Ex474555", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ElcUserConfigurationConfigurationItemNotAvailable
		{
			get
			{
				return new LocalizedString("ElcUserConfigurationConfigurationItemNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailUser(string Identity, string ExternalEmailAddress)
		{
			return new LocalizedString("ConfirmationMessageEnableMailUser", "ExE64235", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ExternalEmailAddress
			});
		}

		public static LocalizedString MissingPropertyInFederationTrust(string propertyName)
		{
			return new LocalizedString("MissingPropertyInFederationTrust", "Ex9F715F", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString CookieAndParameterServiceInstanceIdMismatch(string cookieServiceInstanceId, string paramterServiceInstanceId)
		{
			return new LocalizedString("CookieAndParameterServiceInstanceIdMismatch", "", false, false, Strings.ResourceManager, new object[]
			{
				cookieServiceInstanceId,
				paramterServiceInstanceId
			});
		}

		public static LocalizedString FormsAuthenticationMarkPathErrorUnknownOpenError(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationMarkPathErrorUnknownOpenError", "Ex71B233", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		public static LocalizedString ErrorUserMissingADData(string identity)
		{
			return new LocalizedString("ErrorUserMissingADData", "ExC348DC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString OutlookProtectionRuleInvalidPriority
		{
			get
			{
				return new LocalizedString("OutlookProtectionRuleInvalidPriority", "Ex6A1C63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExecutingUserOutOfTargetOrg(string cmdletName)
		{
			return new LocalizedString("ErrorExecutingUserOutOfTargetOrg", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName
			});
		}

		public static LocalizedString ErrorUMPolicyNotFound(string name, string globalCatlog)
		{
			return new LocalizedString("ErrorUMPolicyNotFound", "Ex3C3C6C", false, true, Strings.ResourceManager, new object[]
			{
				name,
				globalCatlog
			});
		}

		public static LocalizedString ErrorCannotRemoveLastOrgAdmin(string id)
		{
			return new LocalizedString("ErrorCannotRemoveLastOrgAdmin", "Ex33D730", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CouldNotFindEWSStandardAuthBindingTransportElement
		{
			get
			{
				return new LocalizedString("CouldNotFindEWSStandardAuthBindingTransportElement", "Ex8D1E98", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateArbitrationMailboxRetentionPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateArbitrationMailboxRetentionPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmSearchMailboxAuditLogTask(string org)
		{
			return new LocalizedString("ConfirmSearchMailboxAuditLogTask", "ExCB2D88", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString AddressRewriteIdentityNotFound
		{
			get
			{
				return new LocalizedString("AddressRewriteIdentityNotFound", "Ex70496A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningUMCallAnsweringRuleInError(string ruleName)
		{
			return new LocalizedString("WarningUMCallAnsweringRuleInError", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		public static LocalizedString WarningInitLegacyAlreadyDone(string dom)
		{
			return new LocalizedString("WarningInitLegacyAlreadyDone", "ExD10B5D", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxPermanent(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermanent", "Ex58418B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableOutlookProtectionRule", "Ex8F863C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorFailedToGetRacAndClcTenant
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetRacAndClcTenant", "ExFF8225", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReadingE14ServerRoles(string serverName)
		{
			return new LocalizedString("ReadingE14ServerRoles", "Ex1673A8", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString RemoveCertificateFederation
		{
			get
			{
				return new LocalizedString("RemoveCertificateFederation", "Ex6800D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RpcHttpOldOSServers(string servers)
		{
			return new LocalizedString("RpcHttpOldOSServers", "Ex9283BC", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		public static LocalizedString ErrorWMAFileTooBig
		{
			get
			{
				return new LocalizedString("ErrorWMAFileTooBig", "Ex734A61", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateDatabaseCopy(string dbCopy)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopy", "ExB227AF", false, true, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		public static LocalizedString ADAttributeCustomAttribute3
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute3", "Ex41C14F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAggregatedMailboxNotFound(Guid aggregatedMailboxGuid, string identity)
		{
			return new LocalizedString("ErrorAggregatedMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				aggregatedMailboxGuid,
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSetRecipientEnforcementProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRecipientEnforcementProvisioningPolicy", "Ex2B8574", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TenantNotificationDebugLoadLibraryFailed(string file, int error)
		{
			return new LocalizedString("TenantNotificationDebugLoadLibraryFailed", "ExE63926", false, true, Strings.ResourceManager, new object[]
			{
				file,
				error
			});
		}

		public static LocalizedString ErrorWorkloadManagementPolicyNotFound(string id)
		{
			return new LocalizedString("ErrorWorkloadManagementPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxAuditLogSearch(string org)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxAuditLogSearch", "Ex3C6A20", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString CannotRemoveMailContactCatchAllRecipient(string domain)
		{
			return new LocalizedString("CannotRemoveMailContactCatchAllRecipient", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString IMSAdminHelperGetDataPathsCouldNotAllocateException
		{
			get
			{
				return new LocalizedString("IMSAdminHelperGetDataPathsCouldNotAllocateException", "ExE9B7B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagFswUnableToBindWitnessDirectoryException(string host)
		{
			return new LocalizedString("DagFswUnableToBindWitnessDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				host
			});
		}

		public static LocalizedString InterceptorErrorCustomTextInvalid(string value)
		{
			return new LocalizedString("InterceptorErrorCustomTextInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString VerboseDeleteDatabaseCatalogFiles(string server, string oldDir)
		{
			return new LocalizedString("VerboseDeleteDatabaseCatalogFiles", "Ex639E2B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		public static LocalizedString ErrorRequestQueueIsTooLong(string requestQueueName, int currentQueueLength)
		{
			return new LocalizedString("ErrorRequestQueueIsTooLong", "ExC83239", false, true, Strings.ResourceManager, new object[]
			{
				requestQueueName,
				currentQueueLength
			});
		}

		public static LocalizedString ConfirmationMessageNewTransportRule(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewTransportRule", "ExEE2BAE", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMigrationBatchWithPendingItems(string batchName, int pendingItemCount)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationBatchWithPendingItems", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName,
				pendingItemCount
			});
		}

		public static LocalizedString CasHealthMustSpecifyCas
		{
			get
			{
				return new LocalizedString("CasHealthMustSpecifyCas", "Ex7F9AD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPrimaryDatabaseLocationNotFound(string database)
		{
			return new LocalizedString("ErrorPrimaryDatabaseLocationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ConfirmationMessageSetSupervisionPolicy
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSupervisionPolicy", "Ex744C25", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetMailboxLitigationHoldDuration
		{
			get
			{
				return new LocalizedString("ErrorSetMailboxLitigationHoldDuration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchSucceeded(string mdb)
		{
			return new LocalizedString("TestSearchSucceeded", "Ex46F09A", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString ClassificationRuleCollectionInvalidLangCodesInRulePackDescriptor(string invalidLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidLangCodesInRulePackDescriptor", "", false, false, Strings.ResourceManager, new object[]
			{
				invalidLangCodes
			});
		}

		public static LocalizedString AddressBookServiceDisplayName
		{
			get
			{
				return new LocalizedString("AddressBookServiceDisplayName", "ExFBF71D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTransportRuleLimitTooSmall(int newValue, int ruleCount)
		{
			return new LocalizedString("ErrorTransportRuleLimitTooSmall", "", false, false, Strings.ResourceManager, new object[]
			{
				newValue,
				ruleCount
			});
		}

		public static LocalizedString NoMdbForOperation(string serverName)
		{
			return new LocalizedString("NoMdbForOperation", "Ex7010D6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ConfirmationRemoveAccountPartitionWithTenants(string partitionName)
		{
			return new LocalizedString("ConfirmationRemoveAccountPartitionWithTenants", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		public static LocalizedString MigrationNoLargeItemLimitForLocalBatches
		{
			get
			{
				return new LocalizedString("MigrationNoLargeItemLimitForLocalBatches", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressConfigureAntispamObjects
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureAntispamObjects", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewOWAMailboxPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewOWAMailboxPolicy", "Ex797F63", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ErrorServerNotUnique(object idStringValue)
		{
			return new LocalizedString("ErrorServerNotUnique", "Ex43D074", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ADAttributeDepartment
		{
			get
			{
				return new LocalizedString("ADAttributeDepartment", "ExD11E97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemovedMailboxDoesNotHaveDatabase(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxDoesNotHaveDatabase", "Ex4522BD", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		public static LocalizedString ErrorGrantingEraFullAccessOnMailbox(string mailbox, string errorMsg)
		{
			return new LocalizedString("ErrorGrantingEraFullAccessOnMailbox", "Ex01F252", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				errorMsg
			});
		}

		public static LocalizedString CanceledMoveHistoryEntry(string timestamp, string dbName)
		{
			return new LocalizedString("CanceledMoveHistoryEntry", "ExD2377E", false, true, Strings.ResourceManager, new object[]
			{
				timestamp,
				dbName
			});
		}

		public static LocalizedString DagTaskAddClusterNodeUnexpectedlyFailedException(string nodeName, string dagName)
		{
			return new LocalizedString("DagTaskAddClusterNodeUnexpectedlyFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		public static LocalizedString ErrorFreeBusyResponsibility
		{
			get
			{
				return new LocalizedString("ErrorFreeBusyResponsibility", "Ex6D7183", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentCommonGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentCommonGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnlineIsIntegRemoveJobException(string database, string job, string failure)
		{
			return new LocalizedString("OnlineIsIntegRemoveJobException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				job,
				failure
			});
		}

		public static LocalizedString DurationShouldBeGreaterThanZero(string duration)
		{
			return new LocalizedString("DurationShouldBeGreaterThanZero", "", false, false, Strings.ResourceManager, new object[]
			{
				duration
			});
		}

		public static LocalizedString TopologyServiceSuccess(string operation)
		{
			return new LocalizedString("TopologyServiceSuccess", "", false, false, Strings.ResourceManager, new object[]
			{
				operation
			});
		}

		public static LocalizedString CasHealthOwaExtraAuthType(string schemeName)
		{
			return new LocalizedString("CasHealthOwaExtraAuthType", "Ex106063", false, true, Strings.ResourceManager, new object[]
			{
				schemeName
			});
		}

		public static LocalizedString NonExistantDialPlan(object idString)
		{
			return new LocalizedString("NonExistantDialPlan", "ExCCF330", false, true, Strings.ResourceManager, new object[]
			{
				idString
			});
		}

		public static LocalizedString MetabaseSetPropertiesFailure
		{
			get
			{
				return new LocalizedString("MetabaseSetPropertiesFailure", "ExAA0DE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateNotFound(string thumbprint)
		{
			return new LocalizedString("CertificateNotFound", "ExE0274A", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString StagedMigrationRequiresValidTargetDomain(string tenantName)
		{
			return new LocalizedString("StagedMigrationRequiresValidTargetDomain", "Ex072F28", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString ErrorLinkedMailboxesAreNotSupported
		{
			get
			{
				return new LocalizedString("ErrorLinkedMailboxesAreNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsEnableUsage
		{
			get
			{
				return new LocalizedString("ExchangeSettingsEnableUsage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningClusterGroupNotFormed(string identity)
		{
			return new LocalizedString("WarningClusterGroupNotFormed", "Ex4E3BDC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WaveDirectoryNotFoundException(string p1)
		{
			return new LocalizedString("WaveDirectoryNotFoundException", "Ex6CA273", false, true, Strings.ResourceManager, new object[]
			{
				p1
			});
		}

		public static LocalizedString DebugStartUpnUniquenessCheck
		{
			get
			{
				return new LocalizedString("DebugStartUpnUniquenessCheck", "Ex07F71A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationCannotBeCompleted
		{
			get
			{
				return new LocalizedString("MigrationCannotBeCompleted", "Ex62FE51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IsapiDLLPathNotFoundException
		{
			get
			{
				return new LocalizedString("IsapiDLLPathNotFoundException", "Ex2BB60A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthSpecifiedMailboxServerVersionNotMatched(string cmdletName, int mailboxVersion)
		{
			return new LocalizedString("CasHealthSpecifiedMailboxServerVersionNotMatched", "ExACA7A5", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				mailboxVersion
			});
		}

		public static LocalizedString ErrorOabVirtualDirectoryIISObjectAlreadyExists(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryIISObjectAlreadyExists", "Ex397675", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		public static LocalizedString RunConfigUpdaterRpcFailedWarning(string server, string database, string error)
		{
			return new LocalizedString("RunConfigUpdaterRpcFailedWarning", "Ex9F2794", false, true, Strings.ResourceManager, new object[]
			{
				server,
				database,
				error
			});
		}

		public static LocalizedString MtrtMessageFail
		{
			get
			{
				return new LocalizedString("MtrtMessageFail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthCouldNotLogUser(string userName, string mailboxServerName, string scriptName, string errorString)
		{
			return new LocalizedString("CasHealthCouldNotLogUser", "Ex3009B2", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				mailboxServerName,
				scriptName,
				errorString
			});
		}

		public static LocalizedString DagTaskAddedServerToDag(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskAddedServerToDag", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString ErrorInvalidAuthenticationTypeValue(string authType)
		{
			return new LocalizedString("ErrorInvalidAuthenticationTypeValue", "ExA79FA1", false, true, Strings.ResourceManager, new object[]
			{
				authType
			});
		}

		public static LocalizedString ConfirmationMessageStartMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageStartMigrationBatch", "ExB9D78E", false, true, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		public static LocalizedString CannotRemoveSharingPolicyWithUsersAssigned
		{
			get
			{
				return new LocalizedString("CannotRemoveSharingPolicyWithUsersAssigned", "Ex581258", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MissingDataClassificationsParameter
		{
			get
			{
				return new LocalizedString("MissingDataClassificationsParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IisTasksReadRegistryValueSecurityException(string key, string value)
		{
			return new LocalizedString("IisTasksReadRegistryValueSecurityException", "Ex0D3429", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		public static LocalizedString MsiRebootRequiredToContinue(string packageIdentifier)
		{
			return new LocalizedString("MsiRebootRequiredToContinue", "ExDCE99D", false, true, Strings.ResourceManager, new object[]
			{
				packageIdentifier
			});
		}

		public static LocalizedString CannotRemoveNonProvisionedServerException(string server)
		{
			return new LocalizedString("CannotRemoveNonProvisionedServerException", "Ex12B140", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString Debug
		{
			get
			{
				return new LocalizedString("Debug", "Ex6C3798", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotOverrideConflictingRedirectionEntry(string domain, string entry)
		{
			return new LocalizedString("ErrorCannotOverrideConflictingRedirectionEntry", "ExF0199A", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				entry
			});
		}

		public static LocalizedString ErrorFromSyncClientAndMembersUsedTogether
		{
			get
			{
				return new LocalizedString("ErrorFromSyncClientAndMembersUsedTogether", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoAction
		{
			get
			{
				return new LocalizedString("NoAction", "Ex3DCBB1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSuspendWRTCForOnlineOnly
		{
			get
			{
				return new LocalizedString("ErrorSuspendWRTCForOnlineOnly", "ExF64CD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMinimumAccountExpiry
		{
			get
			{
				return new LocalizedString("ErrorMinimumAccountExpiry", "ExAE4FEA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComInteropTlbNotFound
		{
			get
			{
				return new LocalizedString("ComInteropTlbNotFound", "ExD96FB0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallContentIndexingServiceTask
		{
			get
			{
				return new LocalizedString("InstallContentIndexingServiceTask", "ExE6EE3E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeReSubscriptionExpirationWarning(string expiry)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeReSubscriptionExpirationWarning", "Ex5E7AB4", false, true, Strings.ResourceManager, new object[]
			{
				expiry
			});
		}

		public static LocalizedString ErrorCannotMoveRoleAssignmentOfDeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotMoveRoleAssignmentOfDeprecatedRole", "Ex021BDA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupComponentSMTPConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentSMTPConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveEdgeSyncMservConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSyncMservConnector", "ExD127AA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString InvalidOrganization
		{
			get
			{
				return new LocalizedString("InvalidOrganization", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SyncNowAlreadyStartedException
		{
			get
			{
				return new LocalizedString("SyncNowAlreadyStartedException", "Ex30EDFC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningPropertiesIgnored
		{
			get
			{
				return new LocalizedString("WarningPropertiesIgnored", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveAlreadyCanceled(string identity)
		{
			return new LocalizedString("ErrorMoveAlreadyCanceled", "Ex132C28", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DagTaskCouldNotFindAnyMatchingNetworkException(string machineName)
		{
			return new LocalizedString("DagTaskCouldNotFindAnyMatchingNetworkException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		public static LocalizedString UserCanNotBeEnabledForUM(string user, LocalizedString reason)
		{
			return new LocalizedString("UserCanNotBeEnabledForUM", "ExD77E8D", false, true, Strings.ResourceManager, new object[]
			{
				user,
				reason
			});
		}

		public static LocalizedString MoveMailboxGenerateWatsonDump
		{
			get
			{
				return new LocalizedString("MoveMailboxGenerateWatsonDump", "Ex032DA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LiveIdConnectivityExceptionThrown(string e)
		{
			return new LocalizedString("LiveIdConnectivityExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString CertificateInvalidRequestFile(string server)
		{
			return new LocalizedString("CertificateInvalidRequestFile", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString MailboxCouldNotBeUmDisabled(string mailbox, LocalizedString reason)
		{
			return new LocalizedString("MailboxCouldNotBeUmDisabled", "Ex6DAF0B", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				reason
			});
		}

		public static LocalizedString FailedDocumentsNoResultsMailbox(string mailbox)
		{
			return new LocalizedString("FailedDocumentsNoResultsMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString RoleNotConfigured(string message)
		{
			return new LocalizedString("RoleNotConfigured", "Ex637066", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString TopologyServiceExceptionThrown(string e)
		{
			return new LocalizedString("TopologyServiceExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString AuthenticationMethodFba
		{
			get
			{
				return new LocalizedString("AuthenticationMethodFba", "ExB8024F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEapObjectTooNew(string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorEapObjectTooNew", "Ex532FCD", false, true, Strings.ResourceManager, new object[]
			{
				objectVersion,
				currentVersion
			});
		}

		public static LocalizedString DagTaskJoiningNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskJoiningNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorOabGenFailedSinceNoOrgMbxFound(string oabId)
		{
			return new LocalizedString("ErrorOabGenFailedSinceNoOrgMbxFound", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId
			});
		}

		public static LocalizedString GetFedDomainStatusInfo(string domain)
		{
			return new LocalizedString("GetFedDomainStatusInfo", "Ex1E4B0C", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString DebugResolvingUserSid(string userid, string sid)
		{
			return new LocalizedString("DebugResolvingUserSid", "Ex4A982E", false, true, Strings.ResourceManager, new object[]
			{
				userid,
				sid
			});
		}

		public static LocalizedString WarningGeneratingMailboxIsNullOABWillNotBeGenerated
		{
			get
			{
				return new LocalizedString("WarningGeneratingMailboxIsNullOABWillNotBeGenerated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToReadAdamPortFromRegistry(string error)
		{
			return new LocalizedString("FailedToReadAdamPortFromRegistry", "Ex5F234B", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString WarningForceMessage
		{
			get
			{
				return new LocalizedString("WarningForceMessage", "ExBB2838", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateRBACContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveOwaVirtualDirectoryCannotFindVirtualDirectoryException(string applicationRoot, string webSite, string virtualDirectory)
		{
			return new LocalizedString("RemoveOwaVirtualDirectoryCannotFindVirtualDirectoryException", "ExCD3E43", false, true, Strings.ResourceManager, new object[]
			{
				applicationRoot,
				webSite,
				virtualDirectory
			});
		}

		public static LocalizedString MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix
		{
			get
			{
				return new LocalizedString("MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionValidatingConditionFailed(string e)
		{
			return new LocalizedString("ExceptionValidatingConditionFailed", "Ex303E81", false, true, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString ConfirmationMessageNewPublicFolderDatabase(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderDatabase", "ExC4B261", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString MissingNonAuthoritativeDomain(SmtpDomain domain)
		{
			return new LocalizedString("MissingNonAuthoritativeDomain", "ExD55B20", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString InvalidStartAndEndTime
		{
			get
			{
				return new LocalizedString("InvalidStartAndEndTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaUrlAndCasArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthOwaUrlAndCasArgumentError", "ExE47BE9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarnAboutStarAcceptedDomain
		{
			get
			{
				return new LocalizedString("WarnAboutStarAcceptedDomain", "Ex684CAB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoTPDsImported
		{
			get
			{
				return new LocalizedString("NoTPDsImported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetOutlookProtectionRule", "ExAA8737", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupProgressCleanEmptyDirs
		{
			get
			{
				return new LocalizedString("SetupProgressCleanEmptyDirs", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SearchServiceDescription
		{
			get
			{
				return new LocalizedString("SearchServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPostSetupBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppTestStepFinished(string stepName)
		{
			return new LocalizedString("CasHealthWebAppTestStepFinished", "", false, false, Strings.ResourceManager, new object[]
			{
				stepName
			});
		}

		public static LocalizedString ProgressSavingADObject
		{
			get
			{
				return new LocalizedString("ProgressSavingADObject", "Ex93E3AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantOrganizationMissing2
		{
			get
			{
				return new LocalizedString("TenantOrganizationMissing2", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MultipleCoexistenceDomainsFoundException
		{
			get
			{
				return new LocalizedString("MultipleCoexistenceDomainsFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMessageMoveMailboxFailed(string step, string message)
		{
			return new LocalizedString("ErrorMessageMoveMailboxFailed", "ExA683DB", false, true, Strings.ResourceManager, new object[]
			{
				step,
				message
			});
		}

		public static LocalizedString SetupLogHeader(string noun, string verb, DateTime startTime)
		{
			return new LocalizedString("SetupLogHeader", "ExB4E2B2", false, true, Strings.ResourceManager, new object[]
			{
				noun,
				verb,
				startTime
			});
		}

		public static LocalizedString ErrorNotEnoughPermissions
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughPermissions", "Ex88DCF7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaGetAuthSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetAuthSucceeded", "ExA1CA45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoreThanOneMailTipTranslationForThisCulture(string culture)
		{
			return new LocalizedString("ErrorMoreThanOneMailTipTranslationForThisCulture", "ExD26A1C", false, true, Strings.ResourceManager, new object[]
			{
				culture
			});
		}

		public static LocalizedString PAMOtherError(string ex)
		{
			return new LocalizedString("PAMOtherError", "Ex0297E7", false, true, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString ErrorCannotUnlinkMailboxPlanForTenant
		{
			get
			{
				return new LocalizedString("ErrorCannotUnlinkMailboxPlanForTenant", "Ex190EFE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOabVirtualDirctoryPathNotOnFixedDrive(string path)
		{
			return new LocalizedString("ErrorOabVirtualDirctoryPathNotOnFixedDrive", "ExAD1065", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ErrorCannotLocalizeDefaultFolders(string mbx, string reason)
		{
			return new LocalizedString("ErrorCannotLocalizeDefaultFolders", "ExDD9AF3", false, true, Strings.ResourceManager, new object[]
			{
				mbx,
				reason
			});
		}

		public static LocalizedString FDServiceDisplayName
		{
			get
			{
				return new LocalizedString("FDServiceDisplayName", "Ex60EEB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMailFlowPartnerConfigWithName(string name)
		{
			return new LocalizedString("ConfirmationMessageSetMailFlowPartnerConfigWithName", "Ex02CE38", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString AlsEmailBodyMailboxIds(string mailbox)
		{
			return new LocalizedString("AlsEmailBodyMailboxIds", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString DlpPolicyParsingError(string error)
		{
			return new LocalizedString("DlpPolicyParsingError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ErrorPublicFolderNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderNotUnique", "ExF2EE85", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString MailboxAssistantsServiceCouldNotBeKilled(string serverName)
		{
			return new LocalizedString("MailboxAssistantsServiceCouldNotBeKilled", "Ex244E6D", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorMailboxAddressNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxAddressNotFound", "Ex7EBB80", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString CasHealthUserNameHeader
		{
			get
			{
				return new LocalizedString("CasHealthUserNameHeader", "Ex4470E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetIPBlockListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetIPBlockListProvider", "ExC346D8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorInboxRuleHasNoAction
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleHasNoAction", "Ex084D92", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageNewInboxRule", "ExDFF2BB", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		public static LocalizedString ErrorNotSupportInCrossOrg
		{
			get
			{
				return new LocalizedString("ErrorNotSupportInCrossOrg", "ExFF7594", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSyncTaskNullCookie
		{
			get
			{
				return new LocalizedString("VerboseSyncTaskNullCookie", "Ex0DD462", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnpackedRoles(string roles)
		{
			return new LocalizedString("UnpackedRoles", "Ex8D11B5", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		public static LocalizedString ErrorOnlyAllowChangeMembersOnUniversalGroup(string groupName)
		{
			return new LocalizedString("ErrorOnlyAllowChangeMembersOnUniversalGroup", "ExE76FF7", false, true, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		public static LocalizedString SetupdProgressPrivacyLink
		{
			get
			{
				return new LocalizedString("SetupdProgressPrivacyLink", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressTemplateTenant
		{
			get
			{
				return new LocalizedString("SetupProgressTemplateTenant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaConnectionError
		{
			get
			{
				return new LocalizedString("CasHealthOwaConnectionError", "ExD6BF00", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingInformationStoreService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingInformationStoreService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressGatewayPerfCounters
		{
			get
			{
				return new LocalizedString("SetupProgressGatewayPerfCounters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxSearchInPlaceHoldIdentityExists(string identity)
		{
			return new LocalizedString("MailboxSearchInPlaceHoldIdentityExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString FailedToUnregisterContentIndexingBinaries
		{
			get
			{
				return new LocalizedString("FailedToUnregisterContentIndexingBinaries", "ExF1FAB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CreateDefaultActiveSyncMailboxPolicy
		{
			get
			{
				return new LocalizedString("CreateDefaultActiveSyncMailboxPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateAutoDiscoverContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAutoDiscoverContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeedingLogFileExists(string path)
		{
			return new LocalizedString("SeedingLogFileExists", "ExD4A651", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString FBAServiceDescription
		{
			get
			{
				return new LocalizedString("FBAServiceDescription", "Ex17089F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMemberNameBlocked(string memberName)
		{
			return new LocalizedString("ErrorMemberNameBlocked", "ExF26221", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString AirSyncReportingProgressActivity
		{
			get
			{
				return new LocalizedString("AirSyncReportingProgressActivity", "Ex546CA9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressForceCleanupNode(string node)
		{
			return new LocalizedString("ProgressForceCleanupNode", "", false, false, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		public static LocalizedString ReplicationCheckFatalError(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckFatalError", "ExC79833", false, true, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		public static LocalizedString ServerComponentStateInvalidComponentName(string component)
		{
			return new LocalizedString("ServerComponentStateInvalidComponentName", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString CasHealthTransactionFailedSummary(string transactionTarget, string errorMsg, string details)
		{
			return new LocalizedString("CasHealthTransactionFailedSummary", "ExAEE8EE", false, true, Strings.ResourceManager, new object[]
			{
				transactionTarget,
				errorMsg,
				details
			});
		}

		public static LocalizedString TowsFoundScpByDomain(string scp, string domain, string url)
		{
			return new LocalizedString("TowsFoundScpByDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				scp,
				domain,
				url
			});
		}

		public static LocalizedString SetupProgressStoppingExchangeMGMTService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingExchangeMGMTService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningSetAdminAuditLogConfigDelay(double minutes)
		{
			return new LocalizedString("WarningSetAdminAuditLogConfigDelay", "ExF6342B", false, true, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		public static LocalizedString TaskBothConfigurationOnlyAndQuorumOnlySpecified
		{
			get
			{
				return new LocalizedString("TaskBothConfigurationOnlyAndQuorumOnlySpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseMustBeInDagException(string dbName)
		{
			return new LocalizedString("DatabaseMustBeInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName
			});
		}

		public static LocalizedString DidntCompleteInHours(int hours)
		{
			return new LocalizedString("DidntCompleteInHours", "ExD116A0", false, true, Strings.ResourceManager, new object[]
			{
				hours
			});
		}

		public static LocalizedString ErrorBackupInProgress(string databaseName)
		{
			return new LocalizedString("ErrorBackupInProgress", "Ex8889AD", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveGroup", "Ex228529", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MigrationUserSubscriptionInaccessible(string userName, LocalizedString error)
		{
			return new LocalizedString("MigrationUserSubscriptionInaccessible", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				error
			});
		}

		public static LocalizedString ErrorCorruptFederationMetadata
		{
			get
			{
				return new LocalizedString("ErrorCorruptFederationMetadata", "Ex5A4F3A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFoundInvalidADObject(string DN)
		{
			return new LocalizedString("ErrorFoundInvalidADObject", "ExD816AA", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		public static LocalizedString SetupProgressCreateAutoGroup
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAutoGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseVerifyServerSucceed(string server)
		{
			return new LocalizedString("VerboseVerifyServerSucceed", "Ex544252", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString VerboseVerifyingRecipientViewRoot(string ou)
		{
			return new LocalizedString("VerboseVerifyingRecipientViewRoot", "ExF22F6E", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		public static LocalizedString SetupProgressCleanupFiles
		{
			get
			{
				return new LocalizedString("SetupProgressCleanupFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BlockedSendersNotUpdated(int safeRecipients, int safeRecipientDomains, string identity)
		{
			return new LocalizedString("BlockedSendersNotUpdated", "ExE6D808", false, true, Strings.ResourceManager, new object[]
			{
				safeRecipients,
				safeRecipientDomains,
				identity
			});
		}

		public static LocalizedString CasHealthWebAppNoCasMbxUmHtArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthWebAppNoCasMbxUmHtArgumentError", "ExD08CF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingSystemAttendantService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingSystemAttendantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedDocumentsResultsServer(string server, int total)
		{
			return new LocalizedString("FailedDocumentsResultsServer", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				total
			});
		}

		public static LocalizedString VerboseIgnoreFixingOneDynamicDistributionGroupFilterMetadata(string id)
		{
			return new LocalizedString("VerboseIgnoreFixingOneDynamicDistributionGroupFilterMetadata", "Ex0BF31B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString WarningMessageExistsInReplayQueue(string item)
		{
			return new LocalizedString("WarningMessageExistsInReplayQueue", "", false, false, Strings.ResourceManager, new object[]
			{
				item
			});
		}

		public static LocalizedString ErrorBPAMoreThanOnePrereqServerSpecified
		{
			get
			{
				return new LocalizedString("ErrorBPAMoreThanOnePrereqServerSpecified", "Ex000839", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDotNetInstallPathNotFound
		{
			get
			{
				return new LocalizedString("ErrorDotNetInstallPathNotFound", "Ex247940", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallImap4BeServiceTask
		{
			get
			{
				return new LocalizedString("InstallImap4BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationMustSpecifyEmailOrMailboxDN
		{
			get
			{
				return new LocalizedString("MigrationMustSpecifyEmailOrMailboxDN", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotLocateTargetServiceEndpoint
		{
			get
			{
				return new LocalizedString("CannotLocateTargetServiceEndpoint", "Ex0B95ED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDomainIsNotFederated(string domain)
		{
			return new LocalizedString("ErrorDomainIsNotFederated", "Ex2BC0E1", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ConfirmationMessageRemoveWorkloadPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveWorkloadPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString UnregisterFilterFailed
		{
			get
			{
				return new LocalizedString("UnregisterFilterFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAllRoomListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAllRoomListNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString RegSvr32FailedToExit
		{
			get
			{
				return new LocalizedString("RegSvr32FailedToExit", "Ex25A3AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceAuditServiceNotUninstalled
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceNotUninstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressUninstallTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallTransportLogSearchService", "Ex01AB5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppAddingTestInstance(string casServerName, string url)
		{
			return new LocalizedString("CasHealthWebAppAddingTestInstance", "Ex5AEF64", false, true, Strings.ResourceManager, new object[]
			{
				casServerName,
				url
			});
		}

		public static LocalizedString ClassificationRuleCollectionNestedAnyDepthExceedLimit(int nestedAnyDepthLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionNestedAnyDepthExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				nestedAnyDepthLimit,
				offendingRuleIds
			});
		}

		public static LocalizedString InterceptorErrorConditionInvalidProperty(string propertyName)
		{
			return new LocalizedString("InterceptorErrorConditionInvalidProperty", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString SetupProgressDisableFastSearchSeedingPortRule
		{
			get
			{
				return new LocalizedString("SetupProgressDisableFastSearchSeedingPortRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GlobalLocatorServiceResultSuccess
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestConversations(string Identity)
		{
			return new LocalizedString("ConfirmationMessageTestConversations", "Ex1DF512", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorSiteNameIsLongerThanLimit(string siteName)
		{
			return new LocalizedString("ErrorSiteNameIsLongerThanLimit", "ExEF6681", false, true, Strings.ResourceManager, new object[]
			{
				siteName
			});
		}

		public static LocalizedString DagNetworkInconsistentRoleException
		{
			get
			{
				return new LocalizedString("DagNetworkInconsistentRoleException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetInstallPathInAppConfig
		{
			get
			{
				return new LocalizedString("SetInstallPathInAppConfig", "ExACB48A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UserCreateFailed(string username, string exception)
		{
			return new LocalizedString("UserCreateFailed", "ExE23D6A", false, true, Strings.ResourceManager, new object[]
			{
				username,
				exception
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAutodiscoverVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveAutodiscoverVirtualDirectory", "Ex5C1A1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMigrationEndpoint(string connectorName)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		public static LocalizedString DomainControllerName
		{
			get
			{
				return new LocalizedString("DomainControllerName", "Ex623F94", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallADTopologyServiceTask
		{
			get
			{
				return new LocalizedString("UninstallADTopologyServiceTask", "ExF0BD0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidMailboxTypeConversion(string id, string fromType, string toType)
		{
			return new LocalizedString("ErrorInvalidMailboxTypeConversion", "Ex752B6C", false, true, Strings.ResourceManager, new object[]
			{
				id,
				fromType,
				toType
			});
		}

		public static LocalizedString ErrorFailedToSwitchBackToEarlierPermissionModel(Guid groupMailbox, string error)
		{
			return new LocalizedString("ErrorFailedToSwitchBackToEarlierPermissionModel", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				error
			});
		}

		public static LocalizedString SmtpConnectivityAllTested
		{
			get
			{
				return new LocalizedString("SmtpConnectivityAllTested", "Ex85C04E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInboxRuleNotSupported
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleNotSupported", "Ex64B5B3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetMailboxPlanRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorSetMailboxPlanRoleAssignment", "ExF60FD0", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		public static LocalizedString GetFederationInformationProxy(string proxyAddress)
		{
			return new LocalizedString("GetFederationInformationProxy", "Ex8349C6", false, true, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		public static LocalizedString ErrorDomainNameNotAcceptedDomain(string domain)
		{
			return new LocalizedString("ErrorDomainNameNotAcceptedDomain", "ExF8ECE1", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString Verbose
		{
			get
			{
				return new LocalizedString("Verbose", "Ex1E07E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseTaskParameters(string exchangeInstallPath, string relativePath, string fullPath, string xmlNodeName)
		{
			return new LocalizedString("VerboseTaskParameters", "Ex591DBF", false, true, Strings.ResourceManager, new object[]
			{
				exchangeInstallPath,
				relativePath,
				fullPath,
				xmlNodeName
			});
		}

		public static LocalizedString messageRFROperationException(string operation, int returnValue, string serverId, string userName)
		{
			return new LocalizedString("messageRFROperationException", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				returnValue,
				serverId,
				userName
			});
		}

		public static LocalizedString ContinueToRemoveHoldForInactive
		{
			get
			{
				return new LocalizedString("ContinueToRemoveHoldForInactive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoAclNotCanonical(string dn)
		{
			return new LocalizedString("InfoAclNotCanonical", "Ex28423C", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ConfirmationMessageSetActiveSyncDeviceAutoblockThreshold(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetActiveSyncDeviceAutoblockThreshold", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CasHealthLatencyHeader
		{
			get
			{
				return new LocalizedString("CasHealthLatencyHeader", "ExCBB702", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeFaxNumber
		{
			get
			{
				return new LocalizedString("ADAttributeFaxNumber", "Ex8F68E5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxSearchNameIsNotUnique(string name)
		{
			return new LocalizedString("MailboxSearchNameIsNotUnique", "ExD7CA77", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString FailedToEvictNodeException(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToEvictNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDistributionGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageRemoveDistributionGroupMember", "Ex6A77B7", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		public static LocalizedString VerboseSkipCreatingRoleAssignment(string roleAssignee, string role, string delegationType)
		{
			return new LocalizedString("VerboseSkipCreatingRoleAssignment", "ExA35AB5", false, true, Strings.ResourceManager, new object[]
			{
				roleAssignee,
				role,
				delegationType
			});
		}

		public static LocalizedString SetupProgressCreateOutlookContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutlookContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeedingEdbFileExists(string path)
		{
			return new LocalizedString("SeedingEdbFileExists", "ExD724EB", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString InvalidCategoryObject
		{
			get
			{
				return new LocalizedString("InvalidCategoryObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OfficeDataLoaderServiceDisplayName
		{
			get
			{
				return new LocalizedString("OfficeDataLoaderServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserWithMatchingWindowsLiveIdAndDifferentNetIdExists(string liveID, string recipient)
		{
			return new LocalizedString("ErrorUserWithMatchingWindowsLiveIdAndDifferentNetIdExists", "ExF0B632", false, true, Strings.ResourceManager, new object[]
			{
				liveID,
				recipient
			});
		}

		public static LocalizedString MoveStatusSucceeded
		{
			get
			{
				return new LocalizedString("MoveStatusSucceeded", "ExEE3E53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxSearchRpcCallFailed(string serverName, int errorCode)
		{
			return new LocalizedString("MailboxSearchRpcCallFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		public static LocalizedString ErrorFailedToRemoveMonitoringMailbox(string databaseName, string exceptionString)
		{
			return new LocalizedString("ErrorFailedToRemoveMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				exceptionString
			});
		}

		public static LocalizedString LoadCredentialsSuccess
		{
			get
			{
				return new LocalizedString("LoadCredentialsSuccess", "ExF932F6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LegacyIncludeOriginalMailParameterWillBeUpgraded
		{
			get
			{
				return new LocalizedString("LegacyIncludeOriginalMailParameterWillBeUpgraded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseEndTextExtraction(int streamCount)
		{
			return new LocalizedString("VerboseEndTextExtraction", "", false, false, Strings.ResourceManager, new object[]
			{
				streamCount
			});
		}

		public static LocalizedString FileShareQuorumCheckDesc
		{
			get
			{
				return new LocalizedString("FileShareQuorumCheckDesc", "Ex2C21C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClientAccessComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessComponentDescription", "ExC425FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FindingServer(string serverName)
		{
			return new LocalizedString("FindingServer", "Ex511645", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString StopADTopologyService
		{
			get
			{
				return new LocalizedString("StopADTopologyService", "Ex4C49B0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotChangeRoleGroupType
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeRoleGroupType", "ExC3DBCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InternalTransportCertificateMustBeCAPICertificate(string thumbprint)
		{
			return new LocalizedString("InternalTransportCertificateMustBeCAPICertificate", "Ex504474", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString IllegalVoipPlatformException(string p1, string p2)
		{
			return new LocalizedString("IllegalVoipPlatformException", "Ex4739B0", false, true, Strings.ResourceManager, new object[]
			{
				p1,
				p2
			});
		}

		public static LocalizedString ErrorInvalidCasting
		{
			get
			{
				return new LocalizedString("ErrorInvalidCasting", "ExE160BB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPhoneNumberIsNotValid(string phoneNumber)
		{
			return new LocalizedString("ErrorPhoneNumberIsNotValid", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		public static LocalizedString SetupProgressCreatingNewPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingNewPublicFolderDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SortedAvailablePatches
		{
			get
			{
				return new LocalizedString("SortedAvailablePatches", "Ex9294F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningSetMailboxLitigationHoldDuration
		{
			get
			{
				return new LocalizedString("WarningSetMailboxLitigationHoldDuration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRecordReport(string message, int count)
		{
			return new LocalizedString("ErrorRecordReport", "Ex79EAB1", false, true, Strings.ResourceManager, new object[]
			{
				message,
				count
			});
		}

		public static LocalizedString ErrorCasArrayOrServerAlreadyExists(string idStringValue)
		{
			return new LocalizedString("ErrorCasArrayOrServerAlreadyExists", "ExDBA271", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ADUserIsMissingData
		{
			get
			{
				return new LocalizedString("ADUserIsMissingData", "ExF18C62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DirectoryObjectNotFoundException(string dn)
		{
			return new LocalizedString("DirectoryObjectNotFoundException", "Ex6CE03A", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ExpiryCertMessage
		{
			get
			{
				return new LocalizedString("ExpiryCertMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMigrationUser(string userName)
		{
			return new LocalizedString("ConfirmationMessageRemoveMigrationUser", "", false, false, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		public static LocalizedString ContentIndexAlreadyExists
		{
			get
			{
				return new LocalizedString("ContentIndexAlreadyExists", "Ex8A1A5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxResolveUser(string error)
		{
			return new LocalizedString("ErrorTeamMailboxResolveUser", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString WarningNonZeroItemLimitMerge(string badItemLimitParamName)
		{
			return new LocalizedString("WarningNonZeroItemLimitMerge", "", false, false, Strings.ResourceManager, new object[]
			{
				badItemLimitParamName
			});
		}

		public static LocalizedString TestApiCallUnderOauthTask(string appid)
		{
			return new LocalizedString("TestApiCallUnderOauthTask", "", false, false, Strings.ResourceManager, new object[]
			{
				appid
			});
		}

		public static LocalizedString DatabaseCopyFailedCheck(string configType, string sgName, string failedState, string serverName, string failedMessage)
		{
			return new LocalizedString("DatabaseCopyFailedCheck", "Ex5DDB70", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				failedState,
				serverName,
				failedMessage
			});
		}

		public static LocalizedString ErrorAddressListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListNotFound", "Ex4F5430", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString VerboseEatUpException(string error)
		{
			return new LocalizedString("VerboseEatUpException", "Ex688C50", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString NoActiveSyncOrganizationSettingsException(string organizationId)
		{
			return new LocalizedString("NoActiveSyncOrganizationSettingsException", "Ex1D7279", false, true, Strings.ResourceManager, new object[]
			{
				organizationId
			});
		}

		public static LocalizedString ImportCertificateBase64DataInvalid
		{
			get
			{
				return new LocalizedString("ImportCertificateBase64DataInvalid", "Ex6769A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotCalculateDefaultScope(string id, string details)
		{
			return new LocalizedString("ErrorCannotCalculateDefaultScope", "Ex86ECCD", false, true, Strings.ResourceManager, new object[]
			{
				id,
				details
			});
		}

		public static LocalizedString ConfirmationMessageNewClientAccessArray(string name, string definition, int count, string site)
		{
			return new LocalizedString("ConfirmationMessageNewClientAccessArray", "ExC32595", false, true, Strings.ResourceManager, new object[]
			{
				name,
				definition,
				count,
				site
			});
		}

		public static LocalizedString ErrorRBACPolicyLinkNotFound(string name)
		{
			return new LocalizedString("ErrorRBACPolicyLinkNotFound", "ExEA178F", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageNewTeamMailboxProvisioningPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewTeamMailboxProvisioningPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString InterceptorErrorPathInvalidCharacters(string path)
		{
			return new LocalizedString("InterceptorErrorPathInvalidCharacters", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString InfoUL
		{
			get
			{
				return new LocalizedString("InfoUL", "Ex929FAD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLocalMachineIsNotExchangeServer
		{
			get
			{
				return new LocalizedString("ErrorLocalMachineIsNotExchangeServer", "ExA5D4CD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEwsEnforceBlockListAndEwsAllowListSpecified
		{
			get
			{
				return new LocalizedString("ErrorEwsEnforceBlockListAndEwsAllowListSpecified", "Ex8C58B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorIisConfigurationWillRetry(string errortype, string error, int retry)
		{
			return new LocalizedString("ErrorIisConfigurationWillRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				errortype,
				error,
				retry
			});
		}

		public static LocalizedString VerbosePfdbIsSetAsFirstInstance(string id)
		{
			return new LocalizedString("VerbosePfdbIsSetAsFirstInstance", "Ex6AF845", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString MoveMailboxSourceCleanupTypeCreateSourceContact
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeCreateSourceContact", "Ex69F361", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOrgUserBeAssignedToParentOrg(string id)
		{
			return new LocalizedString("ErrorOrgUserBeAssignedToParentOrg", "Ex0CA982", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseWillSkipUpdateServicePlan(string org)
		{
			return new LocalizedString("VerboseWillSkipUpdateServicePlan", "Ex8AC90A", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ErrorExcludedDCConflict(string hostName)
		{
			return new LocalizedString("ErrorExcludedDCConflict", "Ex1A6B15", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		public static LocalizedString ErrorCouldNotLocateMailboxPlanForMailUser(string user)
		{
			return new LocalizedString("ErrorCouldNotLocateMailboxPlanForMailUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString MRSHealthPassed
		{
			get
			{
				return new LocalizedString("MRSHealthPassed", "Ex361CB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAccessingTransportSettings
		{
			get
			{
				return new LocalizedString("ErrorAccessingTransportSettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopImapLoggingOff
		{
			get
			{
				return new LocalizedString("PopImapLoggingOff", "Ex096E00", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory", "Ex7D213E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtMessageSubmitDetailMessage
		{
			get
			{
				return new LocalizedString("MtrtMessageSubmitDetailMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TheOnlySourceMailboxIsTheTargetMailbox
		{
			get
			{
				return new LocalizedString("TheOnlySourceMailboxIsTheTargetMailbox", "ExEBE54F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorNonSmtpAddressSpaceOnDNSConnector(string addressSpace)
		{
			return new LocalizedString("SendConnectorNonSmtpAddressSpaceOnDNSConnector", "Ex4E1D72", false, true, Strings.ResourceManager, new object[]
			{
				addressSpace
			});
		}

		public static LocalizedString UnifiedMessagingRoleDisplayName
		{
			get
			{
				return new LocalizedString("UnifiedMessagingRoleDisplayName", "Ex5C8072", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToConnectToEdge(string edgeName, string hubName, string message)
		{
			return new LocalizedString("UnableToConnectToEdge", "ExD6CA53", false, true, Strings.ResourceManager, new object[]
			{
				edgeName,
				hubName,
				message
			});
		}

		public static LocalizedString ErrorUnexpectedAccountForestValueInGls(string tenant, string actual, string expected)
		{
			return new LocalizedString("ErrorUnexpectedAccountForestValueInGls", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				actual,
				expected
			});
		}

		public static LocalizedString ReportUpdateMovedMailboxError(LocalizedString reason)
		{
			return new LocalizedString("ReportUpdateMovedMailboxError", "ExD3D9B0", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString CasHealthWebAppBuildVdirList(LocalizedString applicationLongName, string hostName)
		{
			return new LocalizedString("CasHealthWebAppBuildVdirList", "ExB7570D", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName,
				hostName
			});
		}

		public static LocalizedString ErrorBadItemLimitOutOfRange(string identity, int actual, int min, int max)
		{
			return new LocalizedString("ErrorBadItemLimitOutOfRange", "Ex0A0EC7", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				actual,
				min,
				max
			});
		}

		public static LocalizedString ComAdminPropertyException(string objectName, string propertyName, string propertyValue)
		{
			return new LocalizedString("ComAdminPropertyException", "Ex64F3C5", false, true, Strings.ResourceManager, new object[]
			{
				objectName,
				propertyName,
				propertyValue
			});
		}

		public static LocalizedString TpdAlreadyImported
		{
			get
			{
				return new LocalizedString("TpdAlreadyImported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaIsapiFilterException(string errorMessage, int hresult)
		{
			return new LocalizedString("OwaIsapiFilterException", "ExE25DBF", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage,
				hresult
			});
		}

		public static LocalizedString ErrorCommandExecutionException(string script, string message)
		{
			return new LocalizedString("ErrorCommandExecutionException", "Ex88D115", false, true, Strings.ResourceManager, new object[]
			{
				script,
				message
			});
		}

		public static LocalizedString LogExecutingCommand(string commandLine)
		{
			return new LocalizedString("LogExecutingCommand", "ExD63ABD", false, true, Strings.ResourceManager, new object[]
			{
				commandLine
			});
		}

		public static LocalizedString WarningMaxCmdletsRatioNotSupported(string psMaxCmdlets, string exMaxCmdlets)
		{
			return new LocalizedString("WarningMaxCmdletsRatioNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				psMaxCmdlets,
				exMaxCmdlets
			});
		}

		public static LocalizedString SetupProgressStoppingNotificationsBrokerService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingNotificationsBrokerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewOwaVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewOwaVirtualDirectory", "ExC32765", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		public static LocalizedString TestSearchNoMailbox(string role, string id)
		{
			return new LocalizedString("TestSearchNoMailbox", "Ex9B4ACD", false, true, Strings.ResourceManager, new object[]
			{
				role,
				id
			});
		}

		public static LocalizedString CannotBypassDomainNameValidation
		{
			get
			{
				return new LocalizedString("CannotBypassDomainNameValidation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InitialOrIncrementalMigrationArgument
		{
			get
			{
				return new LocalizedString("InitialOrIncrementalMigrationArgument", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoArchiveForPublicMailbox(string user)
		{
			return new LocalizedString("ErrorNoArchiveForPublicMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString VerboseBeginFingerprint
		{
			get
			{
				return new LocalizedString("VerboseBeginFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxReplicationServiceNotRunning
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceNotRunning", "Ex0D08D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetHostedContentFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString AddressBookServiceDescription
		{
			get
			{
				return new LocalizedString("AddressBookServiceDescription", "Ex03307E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MonitoringCorrelationServiceDescription
		{
			get
			{
				return new LocalizedString("MonitoringCorrelationServiceDescription", "ExEB1F62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRetrieveLocalSite
		{
			get
			{
				return new LocalizedString("ErrorCannotRetrieveLocalSite", "Ex8FFBBA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTargetMailboxDnNotFound(string originalId, string originalAlias)
		{
			return new LocalizedString("ErrorTargetMailboxDnNotFound", "ExF5B981", false, true, Strings.ResourceManager, new object[]
			{
				originalId,
				originalAlias
			});
		}

		public static LocalizedString SetupProgressDiscoveryMailboxes
		{
			get
			{
				return new LocalizedString("SetupProgressDiscoveryMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskUpdatingAdDagStartedStoppedMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatingAdDagStartedStoppedMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString SetMailForestContactNotAllowed(string name)
		{
			return new LocalizedString("SetMailForestContactNotAllowed", "Ex144C0E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorApprovalApplicationIdentityUnsupported
		{
			get
			{
				return new LocalizedString("ErrorApprovalApplicationIdentityUnsupported", "ExAC0556", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaInternalTrustCertificate
		{
			get
			{
				return new LocalizedString("CasHealthOwaInternalTrustCertificate", "Ex7A970D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EnableCertificateServiceNotInstalled
		{
			get
			{
				return new LocalizedString("EnableCertificateServiceNotInstalled", "Ex6D34A4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateOutlookProtectionRulesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutlookProtectionRulesContainer", "ExCCC19F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestMAPIConnectivityIdentity(string Identity)
		{
			return new LocalizedString("ConfirmationMessageTestMAPIConnectivityIdentity", "Ex079C4A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MailboxReplicationServiceIsRunning
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceIsRunning", "Ex722054", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidMessageDataClassificationParameterLessThanOne(string paramName)
		{
			return new LocalizedString("InvalidMessageDataClassificationParameterLessThanOne", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		public static LocalizedString PolicyNeededForAutotagging
		{
			get
			{
				return new LocalizedString("PolicyNeededForAutotagging", "Ex604251", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRecipientTypeDetailsIgnored(string details)
		{
			return new LocalizedString("VerboseRecipientTypeDetailsIgnored", "ExD0432B", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString ConfirmationMessageRemoveManagementRoleAssignment(string Identity, string Role, string RoleAssignee, string DelegationType, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRoleAssignment", "Ex321B0B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Role,
				RoleAssignee,
				DelegationType,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		public static LocalizedString CasHealthOwaLogonScenarioName
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonScenarioName", "ExFF8B2D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOabGenFailedForAllOrgMailboxes(string oabId)
		{
			return new LocalizedString("ErrorOabGenFailedForAllOrgMailboxes", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId
			});
		}

		public static LocalizedString RemoveSecondaryDomainDescription
		{
			get
			{
				return new LocalizedString("RemoveSecondaryDomainDescription", "ExA03D3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWillNotPerformOnInheritedAce(string rights, string controlType, string id)
		{
			return new LocalizedString("ErrorWillNotPerformOnInheritedAce", "Ex0811FC", false, true, Strings.ResourceManager, new object[]
			{
				rights,
				controlType,
				id
			});
		}

		public static LocalizedString CasHealthWebAppBadVdirConfig(LocalizedString applicationShortName)
		{
			return new LocalizedString("CasHealthWebAppBadVdirConfig", "Ex9EC38B", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName
			});
		}

		public static LocalizedString TestSearchStoreServiceNotRunning(string mdb)
		{
			return new LocalizedString("TestSearchStoreServiceNotRunning", "ExE7D720", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString CurrentExternalDirectoryOrganizationId(string externalOrganizationId)
		{
			return new LocalizedString("CurrentExternalDirectoryOrganizationId", "", false, false, Strings.ResourceManager, new object[]
			{
				externalOrganizationId
			});
		}

		public static LocalizedString SetupProgressSkipResetPasswordOnFirstLogonEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSkipResetPasswordOnFirstLogonEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RejectMessageParameterWillBeIgnored
		{
			get
			{
				return new LocalizedString("RejectMessageParameterWillBeIgnored", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplayLagStatusLabelConfigured
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelConfigured", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningTooManyLegacyGALsCreated
		{
			get
			{
				return new LocalizedString("WarningTooManyLegacyGALsCreated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ContentFilterUsedVerbose(string restrictionStr)
		{
			return new LocalizedString("ContentFilterUsedVerbose", "ExC967DC", false, true, Strings.ResourceManager, new object[]
			{
				restrictionStr
			});
		}

		public static LocalizedString ErrorTargetUserAlreadyHasArchiveMailbox(string user)
		{
			return new LocalizedString("ErrorTargetUserAlreadyHasArchiveMailbox", "ExE0955B", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorLegacyPublicFolderDatabaseExist
		{
			get
			{
				return new LocalizedString("ErrorLegacyPublicFolderDatabaseExist", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMailboxJunkEmailConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxJunkEmailConfiguration", "ExB79F0A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UninstallMailboxTransportDeliveryServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailboxTransportDeliveryServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LiveIdAuthenticationResultUndefined
		{
			get
			{
				return new LocalizedString("LiveIdAuthenticationResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SenderIPAddressOverlapsExistingTenantInboundConnectors(string ipRanges, string inboundConnectorNames)
		{
			return new LocalizedString("SenderIPAddressOverlapsExistingTenantInboundConnectors", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRanges,
				inboundConnectorNames
			});
		}

		public static LocalizedString AspnetConfigFileNotFound
		{
			get
			{
				return new LocalizedString("AspnetConfigFileNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotMoveOabToE15OrLaterServer
		{
			get
			{
				return new LocalizedString("CannotMoveOabToE15OrLaterServer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSaveUserPhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSaveUserPhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString FormsAuthenticationMarkPathErrorPathNotFoundException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationMarkPathErrorPathNotFoundException", "Ex24D1AC", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		public static LocalizedString CasHealthWebAppResponseReceived(Uri responseUri, HttpStatusCode statusCode, string serverName, string additionalInfo)
		{
			return new LocalizedString("CasHealthWebAppResponseReceived", "Ex83EB8C", false, true, Strings.ResourceManager, new object[]
			{
				responseUri,
				statusCode,
				serverName,
				additionalInfo
			});
		}

		public static LocalizedString ErrorNotSupportedModifyMultivaluedProperties
		{
			get
			{
				return new LocalizedString("ErrorNotSupportedModifyMultivaluedProperties", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRetentionPolicyTagCorrupted(string tag)
		{
			return new LocalizedString("WarningRetentionPolicyTagCorrupted", "Ex660FC6", false, true, Strings.ResourceManager, new object[]
			{
				tag
			});
		}

		public static LocalizedString ClassificationRuleCollectionRegexValidationFailure(string names)
		{
			return new LocalizedString("ClassificationRuleCollectionRegexValidationFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				names
			});
		}

		public static LocalizedString RuleCollectionInvalid
		{
			get
			{
				return new LocalizedString("RuleCollectionInvalid", "Ex6FF8B0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IsNetlogonRunningScenario
		{
			get
			{
				return new LocalizedString("IsNetlogonRunningScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUninstallDlpPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUninstallDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TestCNGPrivateKeyNotSupported
		{
			get
			{
				return new LocalizedString("TestCNGPrivateKeyNotSupported", "Ex23C9D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSettingDisableGls(string value)
		{
			return new LocalizedString("VerboseSettingDisableGls", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString CannotLicenseServer(string serverName)
		{
			return new LocalizedString("CannotLicenseServer", "Ex7A3EEA", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ConfirmationMessageSetMigrationEndpoint(string connectorName)
		{
			return new LocalizedString("ConfirmationMessageSetMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		public static LocalizedString InvalidSmtpAddressOrAlias(string address)
		{
			return new LocalizedString("InvalidSmtpAddressOrAlias", "ExAEDFFB", false, true, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		public static LocalizedString ErrorNoNeedApplyMandatoryProperties(string mailbox)
		{
			return new LocalizedString("ErrorNoNeedApplyMandatoryProperties", "Ex3776CE", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ParameterDoesNotExist(string paramName)
		{
			return new LocalizedString("ParameterDoesNotExist", "ExC6B6BD", false, true, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		public static LocalizedString Info_MessageItemHasBeenCreated
		{
			get
			{
				return new LocalizedString("Info_MessageItemHasBeenCreated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString E4eRuleRmsTemplateNotFound(string name)
		{
			return new LocalizedString("E4eRuleRmsTemplateNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorScopeNotExclusive(string scope, string parameterName)
		{
			return new LocalizedString("ErrorScopeNotExclusive", "ExD0C3D2", false, true, Strings.ResourceManager, new object[]
			{
				scope,
				parameterName
			});
		}

		public static LocalizedString NewDagServerIsAlreadyInDifferentDagException(string mailboxServer, string currentDag, string desiredDag)
		{
			return new LocalizedString("NewDagServerIsAlreadyInDifferentDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				currentDag,
				desiredDag
			});
		}

		public static LocalizedString SetupProgressCleanManagement
		{
			get
			{
				return new LocalizedString("SetupProgressCleanManagement", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateNoSKI(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNoSKI", "Ex335442", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString ErrorSystemAttendantObjectMissing
		{
			get
			{
				return new LocalizedString("ErrorSystemAttendantObjectMissing", "Ex89B6EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidAction
		{
			get
			{
				return new LocalizedString("InvalidAction", "Ex33EE3E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToUnmountDatabase(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToUnmountDatabase", "ExFE29E2", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		public static LocalizedString NewServiceConnectionPointInvalidParameters
		{
			get
			{
				return new LocalizedString("NewServiceConnectionPointInvalidParameters", "Ex8699E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OauthIsTurnedOff
		{
			get
			{
				return new LocalizedString("OauthIsTurnedOff", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutoDiscoverUrlIsBad
		{
			get
			{
				return new LocalizedString("AutoDiscoverUrlIsBad", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLocalAccountPartitionRequiredForTT
		{
			get
			{
				return new LocalizedString("ErrorLocalAccountPartitionRequiredForTT", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidFqdnFromAD
		{
			get
			{
				return new LocalizedString("InvalidFqdnFromAD", "Ex55878E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnsupportedConfigScopeType(string id, string type)
		{
			return new LocalizedString("ErrorUnsupportedConfigScopeType", "ExB5A420", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		public static LocalizedString ErrorRetentionIdConflictsWithRetentionTag(string retentionId, string tagName)
		{
			return new LocalizedString("ErrorRetentionIdConflictsWithRetentionTag", "Ex42F496", false, true, Strings.ResourceManager, new object[]
			{
				retentionId,
				tagName
			});
		}

		public static LocalizedString NewDagServerIsAlreadyManuallyConfiguredForClusteringButIsNotInDagException(string mailboxServer, string dagName)
		{
			return new LocalizedString("NewDagServerIsAlreadyManuallyConfiguredForClusteringButIsNotInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				dagName
			});
		}

		public static LocalizedString VerboseStartAuditLogSearch
		{
			get
			{
				return new LocalizedString("VerboseStartAuditLogSearch", "ExC1B8E1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthCalendarLongName
		{
			get
			{
				return new LocalizedString("CasHealthCalendarLongName", "ExA14EDE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWhileFolderSync
		{
			get
			{
				return new LocalizedString("ErrorWhileFolderSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Pop3ServiceDisplayName
		{
			get
			{
				return new LocalizedString("Pop3ServiceDisplayName", "Ex358132", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageConnectMailboxUser(string Identity, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxUser", "Ex05EA4B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Database
			});
		}

		public static LocalizedString ConfirmationMessageNewPublicFolderMigrationRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderMigrationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorGetSyncDeletedRecipientRetryFailed
		{
			get
			{
				return new LocalizedString("ErrorGetSyncDeletedRecipientRetryFailed", "ExF37111", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDefaultOABIsNewerThanVersionE12(string DN, string version)
		{
			return new LocalizedString("VerboseDefaultOABIsNewerThanVersionE12", "Ex7A2A93", false, true, Strings.ResourceManager, new object[]
			{
				DN,
				version
			});
		}

		public static LocalizedString ErrorActiveManagerIsNotReachable(string machineName, string errorMessage)
		{
			return new LocalizedString("ErrorActiveManagerIsNotReachable", "ExA1E5E9", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				errorMessage
			});
		}

		public static LocalizedString VerboseExtractedTextStreams(int textStreamCount, string streamNames)
		{
			return new LocalizedString("VerboseExtractedTextStreams", "", false, false, Strings.ResourceManager, new object[]
			{
				textStreamCount,
				streamNames
			});
		}

		public static LocalizedString ErrorChangingBadwordsTransportRule
		{
			get
			{
				return new LocalizedString("ErrorChangingBadwordsTransportRule", "Ex60201F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatacenterEnvironmentOnlyOperationException
		{
			get
			{
				return new LocalizedString("DatacenterEnvironmentOnlyOperationException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInstallDlpPolicyRuleWithThisNameAlreadyExists(string name)
		{
			return new LocalizedString("ErrorInstallDlpPolicyRuleWithThisNameAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RemoveOrganizationFailWithExistingMailboxes
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailWithExistingMailboxes", "Ex8A8468", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFederationEnabledIsImmutable
		{
			get
			{
				return new LocalizedString("ErrorFederationEnabledIsImmutable", "Ex8096EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringInformationStore
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringInformationStore", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopImapComponentDescription
		{
			get
			{
				return new LocalizedString("PopImapComponentDescription", "ExADD449", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxSourceCleanupTypeDeleteSourceMailbox
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeDeleteSourceMailbox", "Ex30C216", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplayLagStatusLabelEnabled
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MsiCouldNotOpenPackage(string package, string message, int errorCode)
		{
			return new LocalizedString("MsiCouldNotOpenPackage", "ExDB4197", false, true, Strings.ResourceManager, new object[]
			{
				package,
				message,
				errorCode
			});
		}

		public static LocalizedString ErrorWorkloadManagementPolicyName(string Name, string restrictedPrefix1, string restrictedPrefix2)
		{
			return new LocalizedString("ErrorWorkloadManagementPolicyName", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				restrictedPrefix1,
				restrictedPrefix2
			});
		}

		public static LocalizedString FileDistributionServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("FileDistributionServiceControlComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetAuthRedirect(string name)
		{
			return new LocalizedString("ConfirmationMessageSetAuthRedirect", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRelocationStateRequestedIsMandatory(string tenant)
		{
			return new LocalizedString("ErrorRelocationStateRequestedIsMandatory", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		public static LocalizedString VerboseVerifyRecipientViewRootSucceed
		{
			get
			{
				return new LocalizedString("VerboseVerifyRecipientViewRootSucceed", "ExE33C84", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LiveIdAuthenticationSuccess(string userType)
		{
			return new LocalizedString("LiveIdAuthenticationSuccess", "", false, false, Strings.ResourceManager, new object[]
			{
				userType
			});
		}

		public static LocalizedString NewOrganizationDescription
		{
			get
			{
				return new LocalizedString("NewOrganizationDescription", "Ex565C80", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArchiveConnectivityResultPrimaryFailure
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultPrimaryFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotSaveBecauseTooNew(string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorCannotSaveBecauseTooNew", "Ex2E3E75", false, true, Strings.ResourceManager, new object[]
			{
				objectVersion,
				currentVersion
			});
		}

		public static LocalizedString ErrorMailboxVersionTooOld(string name)
		{
			return new LocalizedString("ErrorMailboxVersionTooOld", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarningCannotResolveUser(string idStringValue)
		{
			return new LocalizedString("WarningCannotResolveUser", "Ex5BD406", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageUpdateAddressBookPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableAntiSpamUpdates
		{
			get
			{
				return new LocalizedString("ConfirmationMessageEnableAntiSpamUpdates", "ExF05AF9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewManagementRoleEntry(string Name, string Role)
		{
			return new LocalizedString("ConfirmationMessageNewManagementRoleEntry", "Ex7DFC24", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role
			});
		}

		public static LocalizedString ErrorAssigneeUserNotUnique(string id)
		{
			return new LocalizedString("ErrorAssigneeUserNotUnique", "ExC56720", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString WarningUseConfigurationOnly
		{
			get
			{
				return new LocalizedString("WarningUseConfigurationOnly", "Ex9DC5AD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IsapiExtensionMustHavePhysicalPathException
		{
			get
			{
				return new LocalizedString("IsapiExtensionMustHavePhysicalPathException", "Ex0AEB0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetMailboxSearchActivity
		{
			get
			{
				return new LocalizedString("SetMailboxSearchActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateFederationContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateFederationContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToGetDatabaseSize(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseSize", "Ex493F24", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		public static LocalizedString ExchangeTracingProviderInstalledSuccess
		{
			get
			{
				return new LocalizedString("ExchangeTracingProviderInstalledSuccess", "ExDC6A5A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorManagedConentSettinsNonUnique(string tagName)
		{
			return new LocalizedString("ErrorManagedConentSettinsNonUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				tagName
			});
		}

		public static LocalizedString MigrationStartAfterIncorrectMigrationType
		{
			get
			{
				return new LocalizedString("MigrationStartAfterIncorrectMigrationType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorChildFolderNotExistsOnServer(string path, string serverName)
		{
			return new LocalizedString("ErrorChildFolderNotExistsOnServer", "Ex5886CE", false, true, Strings.ResourceManager, new object[]
			{
				path,
				serverName
			});
		}

		public static LocalizedString SetupProgressCreateRulesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRulesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorIncompatbileManagementSiteLink(string domain, string siteLink)
		{
			return new LocalizedString("ErrorIncompatbileManagementSiteLink", "Ex5B71FA", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				siteLink
			});
		}

		public static LocalizedString ThrottlingServiceDisplayName
		{
			get
			{
				return new LocalizedString("ThrottlingServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthTestNewUserDataCenterScriptName
		{
			get
			{
				return new LocalizedString("CasHealthTestNewUserDataCenterScriptName", "ExC48967", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtModerateMessageByManager
		{
			get
			{
				return new LocalizedString("MtrtModerateMessageByManager", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthInstructResetCredentials
		{
			get
			{
				return new LocalizedString("CasHealthInstructResetCredentials", "Ex7E8C85", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SystemMailboxTarget(string shortTarget)
		{
			return new LocalizedString("SystemMailboxTarget", "ExB91254", false, true, Strings.ResourceManager, new object[]
			{
				shortTarget
			});
		}

		public static LocalizedString ErrorInvalidDlpPolicyTemplateIdentity
		{
			get
			{
				return new LocalizedString("ErrorInvalidDlpPolicyTemplateIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageTestTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorPidRealmDifferentFromMetadata(string newPid, string newRealm, string configPid, string configRealm)
		{
			return new LocalizedString("ErrorPidRealmDifferentFromMetadata", "", false, false, Strings.ResourceManager, new object[]
			{
				newPid,
				newRealm,
				configPid,
				configRealm
			});
		}

		public static LocalizedString RoleReviewer
		{
			get
			{
				return new LocalizedString("RoleReviewer", "Ex5C4F56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemovedDeviceFilterRuleByNameAndCharacteristic(string filterName, string ruleName, string characteristic)
		{
			return new LocalizedString("RemovedDeviceFilterRuleByNameAndCharacteristic", "", false, false, Strings.ResourceManager, new object[]
			{
				filterName,
				ruleName,
				characteristic
			});
		}

		public static LocalizedString StartSetupProcess
		{
			get
			{
				return new LocalizedString("StartSetupProcess", "Ex9C0D1A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMountDatabase(string id)
		{
			return new LocalizedString("VerboseMountDatabase", "Ex6D0CE2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SmtpConnectivityFailures(string results)
		{
			return new LocalizedString("SmtpConnectivityFailures", "ExD60C3F", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		public static LocalizedString ConfirmationMessageRemoveSecondaryDomain(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSecondaryDomain", "ExA249D3", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan
		{
			get
			{
				return new LocalizedString("SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan", "ExBF3A75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningNoActiveDatabasesFoundOnServer(string server)
		{
			return new LocalizedString("WarningNoActiveDatabasesFoundOnServer", "ExD6C729", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString NoKeyInformationInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoKeyInformationInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOrganizationIdentityRequired
		{
			get
			{
				return new LocalizedString("ErrorOrganizationIdentityRequired", "Ex2183FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxDatabaseNotOnCurrentCmdletVersion2(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnCurrentCmdletVersion2", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString InfoProcessRemoveMember(string server)
		{
			return new LocalizedString("InfoProcessRemoveMember", "Ex53DB37", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString TransportSyncManagerServiceNotInstalled
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceNotInstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMissingWindowsLiveIdHandler
		{
			get
			{
				return new LocalizedString("ErrorMissingWindowsLiveIdHandler", "Ex71777D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationJobCorrupted
		{
			get
			{
				return new LocalizedString("MigrationJobCorrupted", "ExA45A32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMalwareFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupProgressCreateDSNContainerHierarcy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDSNContainerHierarcy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseLogonSuccessful(Guid groupMailbox, string server, string domainController)
		{
			return new LocalizedString("DatabaseLogonSuccessful", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				server,
				domainController
			});
		}

		public static LocalizedString ErrorEndTimeSmallerThanStartTime
		{
			get
			{
				return new LocalizedString("ErrorEndTimeSmallerThanStartTime", "ExAF7A27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateNotValid(string certSubject, string certThumbprint, string message)
		{
			return new LocalizedString("ErrorCertificateNotValid", "Ex97444B", false, true, Strings.ResourceManager, new object[]
			{
				certSubject,
				certThumbprint,
				message
			});
		}

		public static LocalizedString ErrorArbitrationMbxNotSetForModeration(string id)
		{
			return new LocalizedString("ErrorArbitrationMbxNotSetForModeration", "Ex0B0A8E", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorMaxConcurrentMigrationsExceeded(int currentMax)
		{
			return new LocalizedString("ErrorMaxConcurrentMigrationsExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				currentMax
			});
		}

		public static LocalizedString PasscodeInformation(string passcode)
		{
			return new LocalizedString("PasscodeInformation", "Ex96FB7B", false, true, Strings.ResourceManager, new object[]
			{
				passcode
			});
		}

		public static LocalizedString DataClassificationAmbiguousName(string name)
		{
			return new LocalizedString("DataClassificationAmbiguousName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ChangedMessageClass(string setting, string messageClass)
		{
			return new LocalizedString("ChangedMessageClass", "Ex433B89", false, true, Strings.ResourceManager, new object[]
			{
				setting,
				messageClass
			});
		}

		public static LocalizedString StoppingMonitoringService
		{
			get
			{
				return new LocalizedString("StoppingMonitoringService", "Ex0DC4FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MtrtAddCopyToRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddCopyToRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionPayloadSizeExceededLimitFailure(ulong inputSize, ulong limitSize)
		{
			return new LocalizedString("ClassificationRuleCollectionPayloadSizeExceededLimitFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				inputSize,
				limitSize
			});
		}

		public static LocalizedString OpeningClusterDatabase(string serverName)
		{
			return new LocalizedString("OpeningClusterDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorPasswordIncludesInvalidChars(string memberName)
		{
			return new LocalizedString("ErrorPasswordIncludesInvalidChars", "Ex83AEAD", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString SetupProgressCreateMailboxContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMailboxContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentCafeGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentCafeGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDatabaseCountInServerExceedLimit
		{
			get
			{
				return new LocalizedString("ErrorDatabaseCountInServerExceedLimit", "ExD46B3F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRoleAssignmentPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorRoleAssignmentPolicyNotFound", "Ex3D5867", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString NoKeyIDTypeInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoKeyIDTypeInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailuserWithWindowsLiveId(string Name, string liveID, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailuserWithWindowsLiveId", "Ex126E4F", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				liveID,
				OrganizationalUnit
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAttachmentfilterentry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAttachmentfilterentry", "ExC32C75", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString NoLocalDomainIsFederatedRemotely(string remoteName)
		{
			return new LocalizedString("NoLocalDomainIsFederatedRemotely", "Ex7B15E6", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		public static LocalizedString ResumeSgcUseState(string server, string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("ResumeSgcUseState", "Ex08EC9E", false, true, Strings.ResourceManager, new object[]
			{
				server,
				serverVersion,
				rpcSupportVersion
			});
		}

		public static LocalizedString ErrorChangePartnerApplicationDirectTrust
		{
			get
			{
				return new LocalizedString("ErrorChangePartnerApplicationDirectTrust", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCompilingMFL(string filePath, string toLCIDStr, int errorCode)
		{
			return new LocalizedString("ErrorCompilingMFL", "Ex4EF61D", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				toLCIDStr,
				errorCode
			});
		}

		public static LocalizedString CmdletHandlerAlreadyDefined(string name, string path)
		{
			return new LocalizedString("CmdletHandlerAlreadyDefined", "Ex4259C6", false, true, Strings.ResourceManager, new object[]
			{
				name,
				path
			});
		}

		public static LocalizedString ProtectedServiceHostDisplayName
		{
			get
			{
				return new LocalizedString("ProtectedServiceHostDisplayName", "ExC03C8C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNameNotAvailable(string name)
		{
			return new LocalizedString("ErrorNameNotAvailable", "ExBF87FF", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorPilotServicePlanCanBeUsedToCreateSharedOrgsOnly(string programid, string offerid)
		{
			return new LocalizedString("ErrorPilotServicePlanCanBeUsedToCreateSharedOrgsOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		public static LocalizedString EcpAuthenticationNotMatchOwaWarning
		{
			get
			{
				return new LocalizedString("EcpAuthenticationNotMatchOwaWarning", "ExA42EFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallDefaultSharingPolicy(string organization)
		{
			return new LocalizedString("InstallDefaultSharingPolicy", "Ex88E040", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString ErrorMovePublicFolderDistributionDisabledOabToTiServer(string oab)
		{
			return new LocalizedString("ErrorMovePublicFolderDistributionDisabledOabToTiServer", "ExA8628D", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		public static LocalizedString InfoRemovingAce(string dn, string ace)
		{
			return new LocalizedString("InfoRemovingAce", "Ex666508", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				ace
			});
		}

		public static LocalizedString RemoveDefaultTPD(string name)
		{
			return new LocalizedString("RemoveDefaultTPD", "Ex05E978", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString AlsEmailBodyMailboxLogonTypes(string logonTypes)
		{
			return new LocalizedString("AlsEmailBodyMailboxLogonTypes", "", false, false, Strings.ResourceManager, new object[]
			{
				logonTypes
			});
		}

		public static LocalizedString ErrorNewRoleNeedHierarchicalRoleAssignmentWithoutScopeRestriction(string roleId)
		{
			return new LocalizedString("ErrorNewRoleNeedHierarchicalRoleAssignmentWithoutScopeRestriction", "Ex2B90F0", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		public static LocalizedString AlreadyConfiguredComponent(string component)
		{
			return new LocalizedString("AlreadyConfiguredComponent", "Ex994BAE", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString UMCallAnsweringRuleFindMeWithContext(string context, int key, string firstNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithContext", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				firstNumber
			});
		}

		public static LocalizedString WarningChangeDefaultTPD(string oldTPD, string newTPD)
		{
			return new LocalizedString("WarningChangeDefaultTPD", "Ex8ED679", false, true, Strings.ResourceManager, new object[]
			{
				oldTPD,
				newTPD
			});
		}

		public static LocalizedString SetupProgressStartingSystemAttendantService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingSystemAttendantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorErrorEventInvalid
		{
			get
			{
				return new LocalizedString("InterceptorErrorEventInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CutoverMigrationNotSupportedForProtocol(string protocol)
		{
			return new LocalizedString("CutoverMigrationNotSupportedForProtocol", "", false, false, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		public static LocalizedString ErrorInvalidArbitrationMbxTypeForModerationAndAutogroup(string arbitrationMailbox)
		{
			return new LocalizedString("ErrorInvalidArbitrationMbxTypeForModerationAndAutogroup", "Ex984F78", false, true, Strings.ResourceManager, new object[]
			{
				arbitrationMailbox
			});
		}

		public static LocalizedString SendConnectorNonSmtpAddressSpaceOnEdge(string addressSpace)
		{
			return new LocalizedString("SendConnectorNonSmtpAddressSpaceOnEdge", "Ex5D8D71", false, true, Strings.ResourceManager, new object[]
			{
				addressSpace
			});
		}

		public static LocalizedString OtherDatabaseCopyHasHighestPreference(string othercopyName)
		{
			return new LocalizedString("OtherDatabaseCopyHasHighestPreference", "ExAB12DC", false, true, Strings.ResourceManager, new object[]
			{
				othercopyName
			});
		}

		public static LocalizedString CouldNotRemoveCompletedRequest(string indexEntry)
		{
			return new LocalizedString("CouldNotRemoveCompletedRequest", "ExEE7BFD", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		public static LocalizedString ErrorOneManagementOrgMailboxIsRequired(string tenant, string count)
		{
			return new LocalizedString("ErrorOneManagementOrgMailboxIsRequired", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				count
			});
		}

		public static LocalizedString ErrorCannotModifyCrossVersionObject(string id)
		{
			return new LocalizedString("ErrorCannotModifyCrossVersionObject", "Ex58CD4C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString GetDagHealthInfoRequestException(string serverFqdn, string errorMsg)
		{
			return new LocalizedString("GetDagHealthInfoRequestException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverFqdn,
				errorMsg
			});
		}

		public static LocalizedString NewPerfCounters
		{
			get
			{
				return new LocalizedString("NewPerfCounters", "Ex8A6C53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CalendarAnalysisMixedModeNotSupported
		{
			get
			{
				return new LocalizedString("CalendarAnalysisMixedModeNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestTeamMailboxConstraintError(string para1, string para2)
		{
			return new LocalizedString("TestTeamMailboxConstraintError", "", false, false, Strings.ResourceManager, new object[]
			{
				para1,
				para2
			});
		}

		public static LocalizedString ConfirmationMessageDisableMailPublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailPublicFolder", "ExBD4FA7", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DebugResolvingUserCN(string userid, string cn)
		{
			return new LocalizedString("DebugResolvingUserCN", "Ex508BE0", false, true, Strings.ResourceManager, new object[]
			{
				userid,
				cn
			});
		}

		public static LocalizedString ConfirmationMessageRemoveGls(string entryType, string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveGls", "", false, false, Strings.ResourceManager, new object[]
			{
				entryType,
				id
			});
		}

		public static LocalizedString ErrorCannotCreateFolderUnderNonIpmSubtree(string name, string parent)
		{
			return new LocalizedString("ErrorCannotCreateFolderUnderNonIpmSubtree", "Ex26B5A2", false, true, Strings.ResourceManager, new object[]
			{
				name,
				parent
			});
		}

		public static LocalizedString MapiSubmitSystemProbeFail
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeFail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FinishedUpdatingMFLFiles
		{
			get
			{
				return new LocalizedString("FinishedUpdatingMFLFiles", "ExFF1847", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ElcServerNotFound(string mailboxAddress)
		{
			return new LocalizedString("ElcServerNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		public static LocalizedString FailedToChangeServiceConfig
		{
			get
			{
				return new LocalizedString("FailedToChangeServiceConfig", "Ex7D97F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConnectionFailedException(int number)
		{
			return new LocalizedString("ConnectionFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		public static LocalizedString JournalNdrMailboxWarning
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewExchangeSettings(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewExchangeSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString DeleteOperation
		{
			get
			{
				return new LocalizedString("DeleteOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantNotificationVerboseNotSendingEmailNoRecipients
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseNotSendingEmailNoRecipients", "ExC1C7E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnPremisesOrganizationConfirmationMessageRemove(OnPremisesOrganizationIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationConfirmationMessageRemove", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotMovePrimaryAndArchiveInDifferentDirections(string srcPrimary, string targetPrimary, string srcArchive, string targetArchive)
		{
			return new LocalizedString("ErrorCannotMovePrimaryAndArchiveInDifferentDirections", "", false, false, Strings.ResourceManager, new object[]
			{
				srcPrimary,
				targetPrimary,
				srcArchive,
				targetArchive
			});
		}

		public static LocalizedString ErrorMoveUnableToGetCopyStatusException(string server, string errorMsg)
		{
			return new LocalizedString("ErrorMoveUnableToGetCopyStatusException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				errorMsg
			});
		}

		public static LocalizedString ApplicationUrisDiffer(string localUri, string remoteUri)
		{
			return new LocalizedString("ApplicationUrisDiffer", "Ex42BBFC", false, true, Strings.ResourceManager, new object[]
			{
				localUri,
				remoteUri
			});
		}

		public static LocalizedString WarnRpcHttpAdOrphanFound(string id, string server)
		{
			return new LocalizedString("WarnRpcHttpAdOrphanFound", "ExBAC862", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		public static LocalizedString OnPremisesOrganizationInboundConnectorNotExists(InboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationInboundConnectorNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InternalJournalRuleScope
		{
			get
			{
				return new LocalizedString("InternalJournalRuleScope", "Ex26BF62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestMigrationServerConnectionFailed
		{
			get
			{
				return new LocalizedString("TestMigrationServerConnectionFailed", "Ex6E3836", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseTestSourceSite(string site)
		{
			return new LocalizedString("VerboseTestSourceSite", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString BackupFileNotCreated(string originalFilename, string backupFileName)
		{
			return new LocalizedString("BackupFileNotCreated", "Ex33B9D4", false, true, Strings.ResourceManager, new object[]
			{
				originalFilename,
				backupFileName
			});
		}

		public static LocalizedString ErrorCanNotFindWebObject(string name, string webObjectType, string hostName)
		{
			return new LocalizedString("ErrorCanNotFindWebObject", "Ex45DB41", false, true, Strings.ResourceManager, new object[]
			{
				name,
				webObjectType,
				hostName
			});
		}

		public static LocalizedString ErrorUnknownAssignmentMethod(string userIdentity)
		{
			return new LocalizedString("ErrorUnknownAssignmentMethod", "ExAAC657", false, true, Strings.ResourceManager, new object[]
			{
				userIdentity
			});
		}

		public static LocalizedString VerboseDomainControllerUsedOutOfSiteDatabase(string dcName)
		{
			return new LocalizedString("VerboseDomainControllerUsedOutOfSiteDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				dcName
			});
		}

		public static LocalizedString CannotRemoveDefaultSharingPolicy
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultSharingPolicy", "ExBF79C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoMailboxRoleInstalledException(string serverName)
		{
			return new LocalizedString("NoMailboxRoleInstalledException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString MalwareFilterActionDescription(string policy)
		{
			return new LocalizedString("MalwareFilterActionDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		public static LocalizedString DatabaseOffline
		{
			get
			{
				return new LocalizedString("DatabaseOffline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveManagementScope(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementScope", "ExF3CC94", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString FileAlreadyExists
		{
			get
			{
				return new LocalizedString("FileAlreadyExists", "Ex68AA52", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotLoadFingerprintCreator
		{
			get
			{
				return new LocalizedString("ErrorCannotLoadFingerprintCreator", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseChangeWinrmStartType
		{
			get
			{
				return new LocalizedString("VerboseChangeWinrmStartType", "Ex9C1CCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfiguringMailboxSystemAttendantDependentTasks
		{
			get
			{
				return new LocalizedString("ConfiguringMailboxSystemAttendantDependentTasks", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMessageClassificationExtended(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMessageClassificationExtended", "Ex3DD3A8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorAddressListOrGlobalAddressListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressListOrGlobalAddressListNotFound", "ExB447D6", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString StartingMSExchangeFDS
		{
			get
			{
				return new LocalizedString("StartingMSExchangeFDS", "ExEB50A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskProblemChangingQuorumExceptionAccessDenied(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionAccessDenied", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		public static LocalizedString ErrorInvalidExcludedCmdletPattern
		{
			get
			{
				return new LocalizedString("ErrorInvalidExcludedCmdletPattern", "Ex997ECF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SupportedToolsDataOverlappingTenantVersionRanges(string toolName)
		{
			return new LocalizedString("SupportedToolsDataOverlappingTenantVersionRanges", "ExECBEF5", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		public static LocalizedString CasHealthTaskCasHasNoTopologySite
		{
			get
			{
				return new LocalizedString("CasHealthTaskCasHasNoTopologySite", "Ex6A583B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisasterRecoveryGatewayRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryGatewayRoleDescription", "ExE24119", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRollbackGlsExpectsSynchronizationFinishedFullSync(string identity)
		{
			return new LocalizedString("ErrorRollbackGlsExpectsSynchronizationFinishedFullSync", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString GlobalLocatorServiceResultUndefined
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToNetIdToMemberName(string netId, string message)
		{
			return new LocalizedString("ErrorFailedToNetIdToMemberName", "ExAB54F3", false, true, Strings.ResourceManager, new object[]
			{
				netId,
				message
			});
		}

		public static LocalizedString SetupProgressCustomScriptsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressCustomScriptsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RetentionPolicyTagTaskException(string reason)
		{
			return new LocalizedString("RetentionPolicyTagTaskException", "Ex212177", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString MessageTypeCalendaring
		{
			get
			{
				return new LocalizedString("MessageTypeCalendaring", "ExECAD45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallRecoveryActionArbiterServiceTask
		{
			get
			{
				return new LocalizedString("InstallRecoveryActionArbiterServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidNameOrDescriptionForDefaultLocale
		{
			get
			{
				return new LocalizedString("InvalidNameOrDescriptionForDefaultLocale", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantAlreadyHasRequestPending(string tenantName)
		{
			return new LocalizedString("TenantAlreadyHasRequestPending", "Ex66DAF5", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount
		{
			get
			{
				return new LocalizedString("ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionProductInfoRequired
		{
			get
			{
				return new LocalizedString("ExceptionProductInfoRequired", "ExE3DAB5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString verboseNetIdToMemberName(string netId)
		{
			return new LocalizedString("verboseNetIdToMemberName", "ExE35BA9", false, true, Strings.ResourceManager, new object[]
			{
				netId
			});
		}

		public static LocalizedString VerboseSucceedToPrepopulateCache
		{
			get
			{
				return new LocalizedString("VerboseSucceedToPrepopulateCache", "ExEF157A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorSourceAndTargetServersInOneRg(string routingGroupName)
		{
			return new LocalizedString("SendConnectorSourceAndTargetServersInOneRg", "Ex0A0A38", false, true, Strings.ResourceManager, new object[]
			{
				routingGroupName
			});
		}

		public static LocalizedString ErrorDiscoveryMailboxDatabase(string server)
		{
			return new LocalizedString("ErrorDiscoveryMailboxDatabase", "Ex7A1216", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ClassificationRuleCollectionKeywordTooLong(int maxLength, string offendingKeywordProcessorIds)
		{
			return new LocalizedString("ClassificationRuleCollectionKeywordTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				maxLength,
				offendingKeywordProcessorIds
			});
		}

		public static LocalizedString PopImapDeleteMsg(int msgID)
		{
			return new LocalizedString("PopImapDeleteMsg", "ExA3F70B", false, true, Strings.ResourceManager, new object[]
			{
				msgID
			});
		}

		public static LocalizedString GetEcpVersionException(string ecpDllPath)
		{
			return new LocalizedString("GetEcpVersionException", "Ex96421A", false, true, Strings.ResourceManager, new object[]
			{
				ecpDllPath
			});
		}

		public static LocalizedString NotMailboxDatabase
		{
			get
			{
				return new LocalizedString("NotMailboxDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidAuditSeverityLevel(string severityLevel)
		{
			return new LocalizedString("InvalidAuditSeverityLevel", "", false, false, Strings.ResourceManager, new object[]
			{
				severityLevel
			});
		}

		public static LocalizedString ErrorExtendedRightNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorExtendedRightNotFound", "Ex837658", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ReadDeletedObjectsAclPermissionDeniedException(string msg)
		{
			return new LocalizedString("ReadDeletedObjectsAclPermissionDeniedException", "Ex936FFA", false, true, Strings.ResourceManager, new object[]
			{
				msg
			});
		}

		public static LocalizedString Error_CheckClientInfo
		{
			get
			{
				return new LocalizedString("Error_CheckClientInfo", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetMailboxLitigationHoldDurationNotReadError(string error)
		{
			return new LocalizedString("ErrorSetMailboxLitigationHoldDurationNotReadError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString EcpAdOrphanFound(string id)
		{
			return new LocalizedString("EcpAdOrphanFound", "ExD8A458", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString DelegationTokenRequestSuccess
		{
			get
			{
				return new LocalizedString("DelegationTokenRequestSuccess", "Ex41391D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotConnectToClusterError(string machineName, string error)
		{
			return new LocalizedString("CouldNotConnectToClusterError", "ExCAD707", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString ErrorWSManModuleFileNotFound(string file)
		{
			return new LocalizedString("ErrorWSManModuleFileNotFound", "ExE8EB8F", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString MOWADeviceTypePrefix
		{
			get
			{
				return new LocalizedString("MOWADeviceTypePrefix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FFoDisablePrepareSct
		{
			get
			{
				return new LocalizedString("FFoDisablePrepareSct", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AuditLogSearchArbitrationMailboxNotFound(string organization)
		{
			return new LocalizedString("AuditLogSearchArbitrationMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString SetupProgressConfiguringOAB
		{
			get
			{
				return new LocalizedString("SetupProgressConfiguringOAB", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToAddE12DStoExSReplicationException(string dom)
		{
			return new LocalizedString("UnableToAddE12DStoExSReplicationException", "Ex06E5C7", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		public static LocalizedString ErrorDefaultSpamConfigCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultSpamConfigCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedDocumentsResultsMailbox(string mailbox, int total)
		{
			return new LocalizedString("FailedDocumentsResultsMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				total
			});
		}

		public static LocalizedString TopologyServiceADServerInfo(string serverFqdn)
		{
			return new LocalizedString("TopologyServiceADServerInfo", "", false, false, Strings.ResourceManager, new object[]
			{
				serverFqdn
			});
		}

		public static LocalizedString ErrorDCNotFound(string hostName)
		{
			return new LocalizedString("ErrorDCNotFound", "Ex78C55D", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		public static LocalizedString messageTopologyServiceWCFExceptionThrown(string e)
		{
			return new LocalizedString("messageTopologyServiceWCFExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString DagTaskServersInClusterNotInAd(string serverNames)
		{
			return new LocalizedString("DagTaskServersInClusterNotInAd", "", false, false, Strings.ResourceManager, new object[]
			{
				serverNames
			});
		}

		public static LocalizedString VerboseSyncTaskDomainControllerToUse(string dc, Guid Id)
		{
			return new LocalizedString("VerboseSyncTaskDomainControllerToUse", "Ex0BD52D", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				Id
			});
		}

		public static LocalizedString MoveMailboxConfigurationOnlyShouldMoveE14ToLowerVersion(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxConfigurationOnlyShouldMoveE14ToLowerVersion", "Ex620313", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		public static LocalizedString SetupComponentPreSetupFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPostSetupGateway
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupGateway", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ValidatingTestCasConnectivityRunInstance
		{
			get
			{
				return new LocalizedString("ValidatingTestCasConnectivityRunInstance", "Ex65C5D4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningCertificateSameAsPrevious(string thumbprint)
		{
			return new LocalizedString("WarningCertificateSameAsPrevious", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorMovingCatalogs(string databaseName, string errorMessage)
		{
			return new LocalizedString("ErrorMovingCatalogs", "Ex2C3441", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				errorMessage
			});
		}

		public static LocalizedString ConfirmationClearingChainedProperties(string propertiesToBeCleared)
		{
			return new LocalizedString("ConfirmationClearingChainedProperties", "Ex8C54AA", false, true, Strings.ResourceManager, new object[]
			{
				propertiesToBeCleared
			});
		}

		public static LocalizedString RootNodeCannotBeRemoved(string node, string fileName)
		{
			return new LocalizedString("RootNodeCannotBeRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				node,
				fileName
			});
		}

		public static LocalizedString InstallTranscodingServiceEx
		{
			get
			{
				return new LocalizedString("InstallTranscodingServiceEx", "Ex8D1AE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoPublicFolderDatabaseOnServer(string serverName)
		{
			return new LocalizedString("ErrorNoPublicFolderDatabaseOnServer", "Ex84E963", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString GlobalJournalRuleScope
		{
			get
			{
				return new LocalizedString("GlobalJournalRuleScope", "Ex41C6EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederProgressMsgNoNetwork(string edbName, string serverName, long bytesRead, long bytesWritten, long bytesRemaining, string databaseName)
		{
			return new LocalizedString("SeederProgressMsgNoNetwork", "Ex3F1AE7", false, true, Strings.ResourceManager, new object[]
			{
				edbName,
				serverName,
				bytesRead,
				bytesWritten,
				bytesRemaining,
				databaseName
			});
		}

		public static LocalizedString AmMoveRpcCompleted(string db, string server)
		{
			return new LocalizedString("AmMoveRpcCompleted", "Ex84E318", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString ActiveManagerCheckDesc
		{
			get
			{
				return new LocalizedString("ActiveManagerCheckDesc", "Ex135886", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LookingForTask(string action, string watermark)
		{
			return new LocalizedString("LookingForTask", "Ex807F10", false, true, Strings.ResourceManager, new object[]
			{
				action,
				watermark
			});
		}

		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterToDisabledServer(string targetserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterToDisabledServer", "", false, false, Strings.ResourceManager, new object[]
			{
				targetserver
			});
		}

		public static LocalizedString CannotValidateIfVOAdmin(string admin)
		{
			return new LocalizedString("CannotValidateIfVOAdmin", "Ex8D1C4C", false, true, Strings.ResourceManager, new object[]
			{
				admin
			});
		}

		public static LocalizedString ErrorSpecifiedPropertyCannotBeSet(string propertyName)
		{
			return new LocalizedString("ErrorSpecifiedPropertyCannotBeSet", "Ex6A3E5C", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString SetupComponentConfigurationBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentConfigurationBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionDecryptionFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionDecryptionFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressRestoringDatabaseStatus
		{
			get
			{
				return new LocalizedString("ProgressRestoringDatabaseStatus", "Ex4ED4CC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidMetadataUrl(string urlString)
		{
			return new LocalizedString("ErrorInvalidMetadataUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				urlString
			});
		}

		public static LocalizedString CasHealthOwaTimeoutExternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaTimeoutExternal", "ExB41BDF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchCheckMailbox
		{
			get
			{
				return new LocalizedString("TestSearchCheckMailbox", "Ex3B3811", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToGetServiceStatusForNodeException(string server, string error)
		{
			return new LocalizedString("FailedToGetServiceStatusForNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				error
			});
		}

		public static LocalizedString SendConnectorDashdashAddressSpaceNotUnique
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashAddressSpaceNotUnique", "Ex8FC27F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxAssociation(string associationIdentity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxAssociation", "", false, false, Strings.ResourceManager, new object[]
			{
				associationIdentity
			});
		}

		public static LocalizedString ExceptionIncomparableType(Type type)
		{
			return new LocalizedString("ExceptionIncomparableType", "ExAF0E67", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		public static LocalizedString UninstallImap4BeServiceTask
		{
			get
			{
				return new LocalizedString("UninstallImap4BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusDisconnectedAndHealthy
		{
			get
			{
				return new LocalizedString("CopyStatusDisconnectedAndHealthy", "ExCC3CD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningADServerSettingsUnchanged
		{
			get
			{
				return new LocalizedString("WarningADServerSettingsUnchanged", "Ex794E74", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CreateMailboxSession
		{
			get
			{
				return new LocalizedString("CreateMailboxSession", "Ex692200", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoNextCertificate
		{
			get
			{
				return new LocalizedString("ErrorNoNextCertificate", "Ex757208", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RequestFailedValidation(string validationMessage)
		{
			return new LocalizedString("RequestFailedValidation", "ExB91703", false, true, Strings.ResourceManager, new object[]
			{
				validationMessage
			});
		}

		public static LocalizedString VerboseLogLocationAvailableCondition(string server, string path)
		{
			return new LocalizedString("VerboseLogLocationAvailableCondition", "Ex5AF182", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		public static LocalizedString CannotResolveObjectTypeDefined(string guid)
		{
			return new LocalizedString("CannotResolveObjectTypeDefined", "Ex4CC84F", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString ConfirmationMessageMountDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMountDatabase", "ExD84D09", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarningSuspendSupportedOnlyDuringSync(string currentState, string s1, string s2)
		{
			return new LocalizedString("WarningSuspendSupportedOnlyDuringSync", "", false, false, Strings.ResourceManager, new object[]
			{
				currentState,
				s1,
				s2
			});
		}

		public static LocalizedString TokenValidationFailed
		{
			get
			{
				return new LocalizedString("TokenValidationFailed", "ExE27C7D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRemovePrimaryPublicFolderMailbox(string name)
		{
			return new LocalizedString("ErrorCannotRemovePrimaryPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorManagedByWrongRecipientTypeDetails(string group, string manageBy, string supportedTypeDetails)
		{
			return new LocalizedString("ErrorManagedByWrongRecipientTypeDetails", "ExDC8D94", false, true, Strings.ResourceManager, new object[]
			{
				group,
				manageBy,
				supportedTypeDetails
			});
		}

		public static LocalizedString VerboseOabLinkedToPfdb(string oab, string pfdb)
		{
			return new LocalizedString("VerboseOabLinkedToPfdb", "Ex4A7209", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				pfdb
			});
		}

		public static LocalizedString GetFederationInformationTokenIssuerMatches(string local, string remote)
		{
			return new LocalizedString("GetFederationInformationTokenIssuerMatches", "Ex0496EF", false, true, Strings.ResourceManager, new object[]
			{
				local,
				remote
			});
		}

		public static LocalizedString ErrorRoleAssignmentConstraintViolation(string assignmentName, string roleName, string groupName)
		{
			return new LocalizedString("ErrorRoleAssignmentConstraintViolation", "Ex752EB3", false, true, Strings.ResourceManager, new object[]
			{
				assignmentName,
				roleName,
				groupName
			});
		}

		public static LocalizedString SetFedAcceptedDomainCleanup(string domain)
		{
			return new LocalizedString("SetFedAcceptedDomainCleanup", "ExB8CF81", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString CannotCreateAuditLogSearchDueToSearchQuota
		{
			get
			{
				return new LocalizedString("CannotCreateAuditLogSearchDueToSearchQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthMailboxServerNotFound(string serverName)
		{
			return new LocalizedString("CasHealthMailboxServerNotFound", "Ex4C3731", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SavingCalendarLogs
		{
			get
			{
				return new LocalizedString("SavingCalendarLogs", "ExF9F233", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDatabaseNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorDatabaseNotFound", "Ex3997F7", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString AIDatabaseStatusPollThreadHung(string serverName, double currentValue)
		{
			return new LocalizedString("AIDatabaseStatusPollThreadHung", "ExCB8667", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				currentValue
			});
		}

		public static LocalizedString ManageDelegationProvisioningInDNS(string appid)
		{
			return new LocalizedString("ManageDelegationProvisioningInDNS", "ExCBF692", false, true, Strings.ResourceManager, new object[]
			{
				appid
			});
		}

		public static LocalizedString ReplayServiceDescription
		{
			get
			{
				return new LocalizedString("ReplayServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeNotes
		{
			get
			{
				return new LocalizedString("ADAttributeNotes", "Ex254850", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateRequestMissingForArgument(string server)
		{
			return new LocalizedString("CertificateRequestMissingForArgument", "Ex19F85D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorPasswordTooLong(string memberName)
		{
			return new LocalizedString("ErrorPasswordTooLong", "ExE652FA", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString SetupProgressLinkOutOfTheBoxMrmTags
		{
			get
			{
				return new LocalizedString("SetupProgressLinkOutOfTheBoxMrmTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallPop3ServiceTask
		{
			get
			{
				return new LocalizedString("InstallPop3ServiceTask", "ExE09926", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseTestEwsFromParameter(string url)
		{
			return new LocalizedString("VerboseTestEwsFromParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ErrorMailboxSearchStoragePermanent
		{
			get
			{
				return new LocalizedString("ErrorMailboxSearchStoragePermanent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallingPackage(string packageFileName)
		{
			return new LocalizedString("InstallingPackage", "ExBE4DD8", false, true, Strings.ResourceManager, new object[]
			{
				packageFileName
			});
		}

		public static LocalizedString RunFromServer(string serverName)
		{
			return new LocalizedString("RunFromServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorCannotSetRecipientContainer
		{
			get
			{
				return new LocalizedString("ErrorCannotSetRecipientContainer", "Ex89A541", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmimeConfigAmbiguous
		{
			get
			{
				return new LocalizedString("SmimeConfigAmbiguous", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetFederationInformationShouldUseInvalidCertificate(string url, string hostname, string certificateHostnames)
		{
			return new LocalizedString("GetFederationInformationShouldUseInvalidCertificate", "ExA36D2D", false, true, Strings.ResourceManager, new object[]
			{
				url,
				hostname,
				certificateHostnames
			});
		}

		public static LocalizedString ErrorConnectToApplicationTimeout(string app, string server)
		{
			return new LocalizedString("ErrorConnectToApplicationTimeout", "", false, false, Strings.ResourceManager, new object[]
			{
				app,
				server
			});
		}

		public static LocalizedString CasHealthOwaAuthResponseHeaderMissing
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthResponseHeaderMissing", "Ex43CD59", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPathIsNotOnFixedDrive(string field)
		{
			return new LocalizedString("ErrorPathIsNotOnFixedDrive", "Ex327B2B", false, true, Strings.ResourceManager, new object[]
			{
				field
			});
		}

		public static LocalizedString MsiFullPackagePath(string packagePath, string packageFullPath)
		{
			return new LocalizedString("MsiFullPackagePath", "Ex479106", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				packageFullPath
			});
		}

		public static LocalizedString ErrorFailedRmsVersionCheck
		{
			get
			{
				return new LocalizedString("ErrorFailedRmsVersionCheck", "Ex14BA8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagMemberPausedFailed(string nodeName, string dagName)
		{
			return new LocalizedString("DagMemberPausedFailed", "ExB11713", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		public static LocalizedString ErrorFailedToMoveEdbFile(string fromFilePath, string toFilePath)
		{
			return new LocalizedString("ErrorFailedToMoveEdbFile", "ExE9F1BD", false, true, Strings.ResourceManager, new object[]
			{
				fromFilePath,
				toFilePath
			});
		}

		public static LocalizedString ErrorParametersMandatory
		{
			get
			{
				return new LocalizedString("ErrorParametersMandatory", "ExD05CC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoAddGroupToGroup(string group1, string group2)
		{
			return new LocalizedString("InfoAddGroupToGroup", "Ex18EB9D", false, true, Strings.ResourceManager, new object[]
			{
				group1,
				group2
			});
		}

		public static LocalizedString ServiceHostServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("ServiceHostServiceControlComponentDescription", "ExA27BD9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageCompareTextMessagingVerificationCode(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCompareTextMessagingVerificationCode", "Ex09A663", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorRefreshMetadataOptionNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorRefreshMetadataOptionNotAllowed", "Ex51F5C3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewPartnerApplication(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorUnexpectedResults(string domain, string length)
		{
			return new LocalizedString("ErrorUnexpectedResults", "Ex3FF0D5", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				length
			});
		}

		public static LocalizedString ErrorFailedToGetULEnterprise
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetULEnterprise", "Ex8B1773", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageDisableHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InfoTpdFromRmsOnlineChecked
		{
			get
			{
				return new LocalizedString("InfoTpdFromRmsOnlineChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetUMMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUMMailboxPolicy", "Ex9CC071", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString FailedToDecryptPrivateKey(Exception e)
		{
			return new LocalizedString("FailedToDecryptPrivateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString ErrorCannotExportPstFromPublicFolderMailbox(string mailbox)
		{
			return new LocalizedString("ErrorCannotExportPstFromPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ProgressEmailAddressPolicyRollingBackPriority(string id)
		{
			return new LocalizedString("ProgressEmailAddressPolicyRollingBackPriority", "ExE11E89", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorArchiveLegacyDNDoesNotMatchUser(string archiveLegDN, string userLegDN)
		{
			return new LocalizedString("ErrorArchiveLegacyDNDoesNotMatchUser", "Ex31046D", false, true, Strings.ResourceManager, new object[]
			{
				archiveLegDN,
				userLegDN
			});
		}

		public static LocalizedString ErrorCannotChangeResourceMailboxToUserMailbox(string id)
		{
			return new LocalizedString("ErrorCannotChangeResourceMailboxToUserMailbox", "Ex85DBB8", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CasHealthOwaLogonFailed
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonFailed", "ExEA10BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DelegateRoleTypeServerAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeServerAdmin", "ExD6ADE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailUserArchive(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailUserArchive", "ExFC892F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressCreateMailboxPlan
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMailboxPlan", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaMetabaseGetPropertiesFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseGetPropertiesFailure", "Ex8F1E18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotLicenseRemoteServerWith32BitAdmin(string serverName)
		{
			return new LocalizedString("CannotLicenseRemoteServerWith32BitAdmin", "ExA1675F", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveIPBlockListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPBlockListProvider", "ExE5C38B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CertificateExpired(string thumbprint)
		{
			return new LocalizedString("CertificateExpired", "Ex3F4B0A", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ConfirmationMessageDisableCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotConvertBuiltInGroup(string group)
		{
			return new LocalizedString("ErrorCannotConvertBuiltInGroup", "Ex048DFD", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString CannotModifyRuleDueToVersion(string name)
		{
			return new LocalizedString("CannotModifyRuleDueToVersion", "ExA1D25E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageNewSharingPolicy(string Name, string Domains)
		{
			return new LocalizedString("ConfirmationMessageNewSharingPolicy", "Ex05DBB6", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Domains
			});
		}

		public static LocalizedString TenantCannotChangeIsDataMigrationRequested(bool previous, bool now)
		{
			return new LocalizedString("TenantCannotChangeIsDataMigrationRequested", "ExF2DB77", false, true, Strings.ResourceManager, new object[]
			{
				previous,
				now
			});
		}

		public static LocalizedString ConfirmOverwriteInternalTransportCertificate(string oldthumb, DateTime oldexpiry, string newthumb, DateTime newexpiry)
		{
			return new LocalizedString("ConfirmOverwriteInternalTransportCertificate", "Ex2C85A0", false, true, Strings.ResourceManager, new object[]
			{
				oldthumb,
				oldexpiry,
				newthumb,
				newexpiry
			});
		}

		public static LocalizedString ErrorDatabaseOffline
		{
			get
			{
				return new LocalizedString("ErrorDatabaseOffline", "Ex51C10D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreatingNewMailboxDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingNewMailboxDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LiveDomainServicesRequestFailed(string exception)
		{
			return new LocalizedString("LiveDomainServicesRequestFailed", "Ex296903", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString MailboxPrereqCheck
		{
			get
			{
				return new LocalizedString("MailboxPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DuplicateCapabilityMapping(string line, string file, string position)
		{
			return new LocalizedString("DuplicateCapabilityMapping", "Ex937C26", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				position
			});
		}

		public static LocalizedString OnPremisesConfigurationObjectNotFound
		{
			get
			{
				return new LocalizedString("OnPremisesConfigurationObjectNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString JournalingParameterErrorGccTenantNotFound(string tenant)
		{
			return new LocalizedString("JournalingParameterErrorGccTenantNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		public static LocalizedString RoleAuthor
		{
			get
			{
				return new LocalizedString("RoleAuthor", "ExF40A25", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedMoveHistoryEntry(string timestamp, string dbName, string errorString)
		{
			return new LocalizedString("FailedMoveHistoryEntry", "Ex387980", false, true, Strings.ResourceManager, new object[]
			{
				timestamp,
				dbName,
				errorString
			});
		}

		public static LocalizedString PrepareDomainDescription
		{
			get
			{
				return new LocalizedString("PrepareDomainDescription", "ExC30DB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagUnableToFindCnoError(string cnoName)
		{
			return new LocalizedString("DagUnableToFindCnoError", "", false, false, Strings.ResourceManager, new object[]
			{
				cnoName
			});
		}

		public static LocalizedString CantFindCertByThumbprint(string SHA1Thumbprint)
		{
			return new LocalizedString("CantFindCertByThumbprint", "Ex68F572", false, true, Strings.ResourceManager, new object[]
			{
				SHA1Thumbprint
			});
		}

		public static LocalizedString OwaNameParameterIgnored
		{
			get
			{
				return new LocalizedString("OwaNameParameterIgnored", "Ex658DBD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidPostMasterAddress
		{
			get
			{
				return new LocalizedString("ErrorInvalidPostMasterAddress", "Ex29F25A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorDashdashSmarthostNotUnique
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashSmarthostNotUnique", "ExFF7D42", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidDlpPolicyParameter
		{
			get
			{
				return new LocalizedString("InvalidDlpPolicyParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAccessingRegistryRaisesException(string hostName, string message)
		{
			return new LocalizedString("ErrorAccessingRegistryRaisesException", "Ex384DA7", false, true, Strings.ResourceManager, new object[]
			{
				hostName,
				message
			});
		}

		public static LocalizedString ReportMovedMailboxUpdated(string domainController)
		{
			return new LocalizedString("ReportMovedMailboxUpdated", "Ex412D19", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		public static LocalizedString InvalidTrafficType(string trafficType)
		{
			return new LocalizedString("InvalidTrafficType", "", false, false, Strings.ResourceManager, new object[]
			{
				trafficType
			});
		}

		public static LocalizedString UninstallBridgeheadRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallBridgeheadRoleDescription", "ExA725B6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OldVersionMailboxSkipped
		{
			get
			{
				return new LocalizedString("OldVersionMailboxSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRemoveUMCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveUMCertificate", "ExB88C8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRestoreFromConnectedMailbox(string identity)
		{
			return new LocalizedString("ErrorCannotRestoreFromConnectedMailbox", "Ex2D07AD", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupProcessCreateDefaultDataClassificationConfig
		{
			get
			{
				return new LocalizedString("SetupProcessCreateDefaultDataClassificationConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToAddCrossDomainGroupMember(string member, string group, string rootdomserver, string localdomserver, string error)
		{
			return new LocalizedString("ErrorFailedToAddCrossDomainGroupMember", "ExB105A6", false, true, Strings.ResourceManager, new object[]
			{
				member,
				group,
				rootdomserver,
				localdomserver,
				error
			});
		}

		public static LocalizedString ErrorUserNotBeingMoved(string mailbox)
		{
			return new LocalizedString("ErrorUserNotBeingMoved", "ExDA598F", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString PhoneNumberInvalidLength
		{
			get
			{
				return new LocalizedString("PhoneNumberInvalidLength", "Ex1B4651", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPathTooLong
		{
			get
			{
				return new LocalizedString("ErrorPathTooLong", "Ex8E6862", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoExecutableForService(string serviceName)
		{
			return new LocalizedString("NoExecutableForService", "ExED0906", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		public static LocalizedString ErrorInvalidDomainInSmtpAddressTemplate(SmtpProxyAddressTemplate template)
		{
			return new LocalizedString("ErrorInvalidDomainInSmtpAddressTemplate", "Ex322581", false, true, Strings.ResourceManager, new object[]
			{
				template
			});
		}

		public static LocalizedString PatchFileFound(string filename)
		{
			return new LocalizedString("PatchFileFound", "Ex1AE950", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		public static LocalizedString ErrorRemoteAccountPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRemoteAccountPolicyNotUnique", "ExB7C634", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageCompleteMigrationBatchWithFailedItems(string batchName, int pendingItemCount)
		{
			return new LocalizedString("ConfirmationMessageCompleteMigrationBatchWithFailedItems", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName,
				pendingItemCount
			});
		}

		public static LocalizedString CertificateStatusRevocationCheckFailure
		{
			get
			{
				return new LocalizedString("CertificateStatusRevocationCheckFailure", "ExC70D46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxSourceCleanupTypeNone
		{
			get
			{
				return new LocalizedString("MoveMailboxSourceCleanupTypeNone", "ExED63E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMemberNameInUse(string memberName)
		{
			return new LocalizedString("ErrorMemberNameInUse", "Ex679957", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ConfirmationMessageTestFederationTrustCertificate
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestFederationTrustCertificate", "ExEB3A9B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoProcessAction(string obj)
		{
			return new LocalizedString("InfoProcessAction", "Ex0D66D7", false, true, Strings.ResourceManager, new object[]
			{
				obj
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMicrosoftExchangeRecipient
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveMicrosoftExchangeRecipient", "Ex552D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExistingAuthServerWithSameRealm(string authServer, string realm)
		{
			return new LocalizedString("ErrorExistingAuthServerWithSameRealm", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer,
				realm
			});
		}

		public static LocalizedString CasHealthNoHttpResponseRecieved(string domain, string userName)
		{
			return new LocalizedString("CasHealthNoHttpResponseRecieved", "Ex3DED7B", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName
			});
		}

		public static LocalizedString ErrorAddExistentParameters(string role, string cmdlet, string parameters)
		{
			return new LocalizedString("ErrorAddExistentParameters", "ExA63909", false, true, Strings.ResourceManager, new object[]
			{
				role,
				cmdlet,
				parameters
			});
		}

		public static LocalizedString ScenarioAutoDiscoverSoapProvider
		{
			get
			{
				return new LocalizedString("ScenarioAutoDiscoverSoapProvider", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseNotFoundException(string p1)
		{
			return new LocalizedString("DatabaseNotFoundException", "ExB0815E", false, true, Strings.ResourceManager, new object[]
			{
				p1
			});
		}

		public static LocalizedString CouldNotFindEWSStandardAuthBinding
		{
			get
			{
				return new LocalizedString("CouldNotFindEWSStandardAuthBinding", "ExD4582F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthPortnumber
		{
			get
			{
				return new LocalizedString("CasHealthPortnumber", "ExFB21A4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningFswFailed(string identity)
		{
			return new LocalizedString("WarningFswFailed", "ExF18752", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString LookupAccountNameFailedException(string account, long err)
		{
			return new LocalizedString("LookupAccountNameFailedException", "ExDB6283", false, true, Strings.ResourceManager, new object[]
			{
				account,
				err
			});
		}

		public static LocalizedString RecipientNotValidException(string recipient)
		{
			return new LocalizedString("RecipientNotValidException", "ExA805D8", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ErrorElcPolicyToPreE12
		{
			get
			{
				return new LocalizedString("ErrorElcPolicyToPreE12", "Ex63BDA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FoundComponents(int count)
		{
			return new LocalizedString("FoundComponents", "ExB86C50", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString CasHealthEasScenarioFolderSync
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioFolderSync", "Ex8F741D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveOabBetweenTwoTiServers
		{
			get
			{
				return new LocalizedString("ErrorMoveOabBetweenTwoTiServers", "Ex904793", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DiscoveryManagementSecurityGroupNotFound
		{
			get
			{
				return new LocalizedString("DiscoveryManagementSecurityGroupNotFound", "Ex063440", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveADServerMetadataDomainControllerNotFound(string name)
		{
			return new LocalizedString("RemoveADServerMetadataDomainControllerNotFound", "Ex50F6AF", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorLinkedAccountInTheCurrentForest(string forest)
		{
			return new LocalizedString("ErrorLinkedAccountInTheCurrentForest", "ExC227F6", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		public static LocalizedString ReleaseAgentBinaryReference
		{
			get
			{
				return new LocalizedString("ReleaseAgentBinaryReference", "ExD27C8B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorServerNotFound(object idStringValue)
		{
			return new LocalizedString("ErrorServerNotFound", "Ex740290", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorCannotDeletePrecannedRole(string id)
		{
			return new LocalizedString("ErrorCannotDeletePrecannedRole", "Ex540C34", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupComponentConfiguringMSARPSService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMSARPSService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisasterRecoveryBridgeheadRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryBridgeheadRoleDescription", "Ex81372A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveAvailabilityConfig(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveAvailabilityConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupComponentConfiguringRpcProxy
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringRpcProxy", "ExF4892D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemovingFile(string fileName)
		{
			return new LocalizedString("RemovingFile", "Ex90C399", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		public static LocalizedString VerboseFixingDynamicDistributionGroupFilterMetadata
		{
			get
			{
				return new LocalizedString("VerboseFixingDynamicDistributionGroupFilterMetadata", "ExCBC2CF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedRemoveDatabaseFileManually(string databaseName, string edbPath)
		{
			return new LocalizedString("NeedRemoveDatabaseFileManually", "Ex78BE59", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				edbPath
			});
		}

		public static LocalizedString SetupProgressEnableWMIOutbound
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIOutbound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EmptySearchQuery
		{
			get
			{
				return new LocalizedString("EmptySearchQuery", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaReturnedErrorPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaReturnedErrorPage", "Ex316685", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DiscoveringDomain(string domain)
		{
			return new LocalizedString("DiscoveringDomain", "Ex407C44", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString SpecifiedOUNotUnique
		{
			get
			{
				return new LocalizedString("SpecifiedOUNotUnique", "Ex134177", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateDatabaseCopyServerBegin(string serverName)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopyServerBegin", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorNoDefaultMailTipTranslationSpecified
		{
			get
			{
				return new LocalizedString("ErrorNoDefaultMailTipTranslationSpecified", "ExC26EDC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressTeamMailboxCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressTeamMailboxCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GlobalLocatorServiceFailed(string error)
		{
			return new LocalizedString("GlobalLocatorServiceFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString DlpPolicyDuplicateLocalizedString(string elementName, string elementValue)
		{
			return new LocalizedString("DlpPolicyDuplicateLocalizedString", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				elementValue
			});
		}

		public static LocalizedString ErrorPartnerApplicationRealmNotFoundInAuthServer
		{
			get
			{
				return new LocalizedString("ErrorPartnerApplicationRealmNotFoundInAuthServer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRetentionPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorRetentionPolicyNotFound", "ExB6A2E4", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString PerfCounterCategoryDefinition(string categoryName)
		{
			return new LocalizedString("PerfCounterCategoryDefinition", "Ex250D8E", false, true, Strings.ResourceManager, new object[]
			{
				categoryName
			});
		}

		public static LocalizedString MaSGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("MaSGroupNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString ConfirmationMessageSetFederationTrust3(string Identity, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust3", "Ex187943", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				metadataUrl
			});
		}

		public static LocalizedString ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithPrecannedFilter(string Name, string IncludedRecipients, string EnabledPrimarySMTPAddressTemplate)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithPrecannedFilter", "ExA6B678", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				IncludedRecipients,
				EnabledPrimarySMTPAddressTemplate
			});
		}

		public static LocalizedString ServiceInstanceNotMatchMessage(string objectId, string requestServiceInstance, string objectServiceInstance)
		{
			return new LocalizedString("ServiceInstanceNotMatchMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				requestServiceInstance,
				objectServiceInstance
			});
		}

		public static LocalizedString ConfirmationMessageEnableRpcHttpInternalOnly(string WebSiteName, string Server, string InternalHostname, string InternalClientAuthenticationMethod, string IISAuthenticationMethods)
		{
			return new LocalizedString("ConfirmationMessageEnableRpcHttpInternalOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server,
				InternalHostname,
				InternalClientAuthenticationMethod,
				IISAuthenticationMethods
			});
		}

		public static LocalizedString UnableToGeneratedWatsonReportForHungService(string serviceName, string exception)
		{
			return new LocalizedString("UnableToGeneratedWatsonReportForHungService", "Ex34D500", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				exception
			});
		}

		public static LocalizedString ErrorOabVDirAlreadyAssigned(string oab, string oabVdir)
		{
			return new LocalizedString("ErrorOabVDirAlreadyAssigned", "Ex177667", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				oabVdir
			});
		}

		public static LocalizedString WarningRetentionPolicyIdChange(string policyName)
		{
			return new LocalizedString("WarningRetentionPolicyIdChange", "Ex5351D7", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		public static LocalizedString ErrorUMInvalidE164OrExtensionAddressFormat(string s)
		{
			return new LocalizedString("ErrorUMInvalidE164OrExtensionAddressFormat", "Ex902757", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString ErrorCannotSetTransportServerPropertyOnSubscribedEdge(string propertyName)
		{
			return new LocalizedString("ErrorCannotSetTransportServerPropertyOnSubscribedEdge", "Ex694AC1", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString ExchangeTrustedSubsystemDescription
		{
			get
			{
				return new LocalizedString("ExchangeTrustedSubsystemDescription", "Ex84BB35", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationMaxConcurrentIncrementalSyncsVerificationFailed(Unlimited<int> value, Unlimited<int> maxValue)
		{
			return new LocalizedString("MigrationMaxConcurrentIncrementalSyncsVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				maxValue
			});
		}

		public static LocalizedString InstallingLanguages
		{
			get
			{
				return new LocalizedString("InstallingLanguages", "Ex0CECC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmartHostsIPValidationFailedId(string ipAddress)
		{
			return new LocalizedString("SmartHostsIPValidationFailedId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipAddress
			});
		}

		public static LocalizedString CasHealthCalendarVDirWarning(string vdir, string server)
		{
			return new LocalizedString("CasHealthCalendarVDirWarning", "Ex47832B", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				server
			});
		}

		public static LocalizedString ConstraintError(DataMoveReplicationConstraintParameter desired, string database)
		{
			return new LocalizedString("ConstraintError", "", false, false, Strings.ResourceManager, new object[]
			{
				desired,
				database
			});
		}

		public static LocalizedString VerboseMailboxNotExistInStore(string identity)
		{
			return new LocalizedString("VerboseMailboxNotExistInStore", "Ex559AE9", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CannotOnlySpecifyCredential
		{
			get
			{
				return new LocalizedString("CannotOnlySpecifyCredential", "ExDBE898", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotAssignCertificateToUM(string thumbprint)
		{
			return new LocalizedString("CannotAssignCertificateToUM", "Ex54C2B9", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString FrontendTransportPrereqCheck
		{
			get
			{
				return new LocalizedString("FrontendTransportPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SettingMoveRequest
		{
			get
			{
				return new LocalizedString("SettingMoveRequest", "Ex650678", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMissingDependentParameter(string missingParamName, string specifiedParamName)
		{
			return new LocalizedString("ErrorMissingDependentParameter", "Ex769B53", false, true, Strings.ResourceManager, new object[]
			{
				missingParamName,
				specifiedParamName
			});
		}

		public static LocalizedString ConfirmationMessageSetPublicFolderDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetPublicFolderDatabase", "ExD65F49", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TenantGuidNotIdentified
		{
			get
			{
				return new LocalizedString("TenantGuidNotIdentified", "Ex4A6868", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DivergenceAlreadyExists(string objectId)
		{
			return new LocalizedString("DivergenceAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString ConfirmationMessageEnableConversations(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableConversations", "Ex75027D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InfoTemplate
		{
			get
			{
				return new LocalizedString("InfoTemplate", "Ex6D630B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotChangeBecauseTooOld(string objectVersion, string currentVersion)
		{
			return new LocalizedString("ErrorCannotChangeBecauseTooOld", "", false, false, Strings.ResourceManager, new object[]
			{
				objectVersion,
				currentVersion
			});
		}

		public static LocalizedString AllGroupMembers
		{
			get
			{
				return new LocalizedString("AllGroupMembers", "Ex133491", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidCspForCryptoModeInImportedTrustedPublishingDomain(string cspName, int cryptoMode)
		{
			return new LocalizedString("InvalidCspForCryptoModeInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				cspName,
				cryptoMode
			});
		}

		public static LocalizedString AddAccountRightsFailedException(string account, uint err)
		{
			return new LocalizedString("AddAccountRightsFailedException", "Ex87E61E", false, true, Strings.ResourceManager, new object[]
			{
				account,
				err
			});
		}

		public static LocalizedString CasHealthWebAppVdirNotFoundError(LocalizedString applicationShortName, string vdirName)
		{
			return new LocalizedString("CasHealthWebAppVdirNotFoundError", "ExFC1A78", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				vdirName
			});
		}

		public static LocalizedString JournalNdrMailboxInJournalRuleJournalEmailAddress
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxInJournalRuleJournalEmailAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToLocatePublicFolder(string id, string error)
		{
			return new LocalizedString("FailedToLocatePublicFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString SetupComponentConfiguringGatewaySettings
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringGatewaySettings", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AuthenticationMethodBasic
		{
			get
			{
				return new LocalizedString("AuthenticationMethodBasic", "Ex71E1C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePackDirectory(string path)
		{
			return new LocalizedString("UmLanguagePackDirectory", "Ex1A599A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString RmsSharedIdentityComputerNotFound(string serverName)
		{
			return new LocalizedString("RmsSharedIdentityComputerNotFound", "Ex280FC6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString LogMigrationOpenRegistryKey(string keyPath)
		{
			return new LocalizedString("LogMigrationOpenRegistryKey", "Ex66604E", false, true, Strings.ResourceManager, new object[]
			{
				keyPath
			});
		}

		public static LocalizedString SetupComponentConfiguringContentIndexing
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringContentIndexing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDisableMailboxWithAssociatedApprovalRecipents(string id)
		{
			return new LocalizedString("ErrorDisableMailboxWithAssociatedApprovalRecipents", "Ex68CDCC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString TestSearchCreateSearchFolderError(string ID, string database)
		{
			return new LocalizedString("TestSearchCreateSearchFolderError", "Ex4B3264", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		public static LocalizedString ProcessingComponent(string component, string description)
		{
			return new LocalizedString("ProcessingComponent", "ExB472CA", false, true, Strings.ResourceManager, new object[]
			{
				component,
				description
			});
		}

		public static LocalizedString ConfirmationMessageSetRMSTemplate(string name)
		{
			return new LocalizedString("ConfirmationMessageSetRMSTemplate", "Ex02D536", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorDbMountedOnServer(string db, string server)
		{
			return new LocalizedString("ErrorDbMountedOnServer", "ExEF7303", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString OperationNotAllowed
		{
			get
			{
				return new LocalizedString("OperationNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewDistributionGroup(string Name, string organizationUnit)
		{
			return new LocalizedString("ConfirmationMessageNewDistributionGroup", "ExC208C0", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				organizationUnit
			});
		}

		public static LocalizedString EnableMessageHistory
		{
			get
			{
				return new LocalizedString("EnableMessageHistory", "ExE73C75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseCopySuspendedCheck(string configType, string sgName, string suspendedState, string serverName, string suspendComment)
		{
			return new LocalizedString("DatabaseCopySuspendedCheck", "ExD9BDDD", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				suspendedState,
				serverName,
				suspendComment
			});
		}

		public static LocalizedString ConfirmationMessageMoveActiveMailboxDatabasePrefToServer(string targetServer)
		{
			return new LocalizedString("ConfirmationMessageMoveActiveMailboxDatabasePrefToServer", "", false, false, Strings.ResourceManager, new object[]
			{
				targetServer
			});
		}

		public static LocalizedString AddAccessRuleCOM(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleCOM", "Ex09D17F", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString NoFoldersInMailbox
		{
			get
			{
				return new LocalizedString("NoFoldersInMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarnCertificateWillNotBeUsedBestIsPKI(string bestMatchThumbprint, string fqdn, string connectors)
		{
			return new LocalizedString("WarnCertificateWillNotBeUsedBestIsPKI", "Ex5A9F39", false, true, Strings.ResourceManager, new object[]
			{
				bestMatchThumbprint,
				fqdn,
				connectors
			});
		}

		public static LocalizedString InstallFreeBusyFolderGeneralFailure(string exception)
		{
			return new LocalizedString("InstallFreeBusyFolderGeneralFailure", "Ex51ED78", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString ErrorUserNotUniqueOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorUserNotUniqueOnDomainController", "ExB75A67", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		public static LocalizedString WarningInternalLicensingDisabled
		{
			get
			{
				return new LocalizedString("WarningInternalLicensingDisabled", "ExCDD7CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToReleaseUri(string uri, string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReleaseUri", "Ex1FCF67", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				domain,
				appId,
				errdetails
			});
		}

		public static LocalizedString MapiTransactionDiagnosticTargetDatabaseNotAttached
		{
			get
			{
				return new LocalizedString("MapiTransactionDiagnosticTargetDatabaseNotAttached", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BridgeheadExchangeCertificateComponentDescription
		{
			get
			{
				return new LocalizedString("BridgeheadExchangeCertificateComponentDescription", "ExE5AAD5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains
		{
			get
			{
				return new LocalizedString("CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString HybridMailflowNullConnector(string TaskName, string Identity)
		{
			return new LocalizedString("HybridMailflowNullConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				TaskName,
				Identity
			});
		}

		public static LocalizedString UninstallMomConnectorServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMomConnectorServiceTask", "ExFEC057", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionVersionViolation(string newRulePackVersion, string existingRulePackVersion)
		{
			return new LocalizedString("ClassificationRuleCollectionVersionViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				newRulePackVersion,
				existingRulePackVersion
			});
		}

		public static LocalizedString ExsetdataOrganizationName
		{
			get
			{
				return new LocalizedString("ExsetdataOrganizationName", "ExC2930B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotDetermineInitialDomain(string tenant)
		{
			return new LocalizedString("ErrorCannotDetermineInitialDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		public static LocalizedString ErrorAccountDisabledForUserMailbox
		{
			get
			{
				return new LocalizedString("ErrorAccountDisabledForUserMailbox", "Ex09727A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorObjectIsNotLiveIDEnabled(string user)
		{
			return new LocalizedString("ErrorObjectIsNotLiveIDEnabled", "Ex8CD9E3", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString SetupProgressStoppingUMService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingUMService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToGetULTenant
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetULTenant", "Ex9057A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaAuthFailInternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthFailInternal", "Ex8CC178", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallMigrationWorkflowServiceTask
		{
			get
			{
				return new LocalizedString("InstallMigrationWorkflowServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidRegistryHive(string hive)
		{
			return new LocalizedString("ErrorInvalidRegistryHive", "Ex0DDEE5", false, true, Strings.ResourceManager, new object[]
			{
				hive
			});
		}

		public static LocalizedString ActiveDirectorySearchViaADDriverScenario
		{
			get
			{
				return new LocalizedString("ActiveDirectorySearchViaADDriverScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarnAboutDeprecatedParameter(string ParameterName)
		{
			return new LocalizedString("WarnAboutDeprecatedParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				ParameterName
			});
		}

		public static LocalizedString ErrorDisableMailuserWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailuserWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString ErrorSchemaVersionDoesntApply(string database)
		{
			return new LocalizedString("ErrorSchemaVersionDoesntApply", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ADTopologyServiceDescription
		{
			get
			{
				return new LocalizedString("ADTopologyServiceDescription", "Ex10B390", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOperationOnOldServer(string serverName)
		{
			return new LocalizedString("ErrorOperationOnOldServer", "Ex96C9FD", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString GetHealthReportProgressFinished
		{
			get
			{
				return new LocalizedString("GetHealthReportProgressFinished", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseChecksFailed
		{
			get
			{
				return new LocalizedString("DatabaseChecksFailed", "ExDA9A43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidExpression(string expression)
		{
			return new LocalizedString("InvalidExpression", "", false, false, Strings.ResourceManager, new object[]
			{
				expression
			});
		}

		public static LocalizedString CopyStatusDisconnectedAndResynchronizing
		{
			get
			{
				return new LocalizedString("CopyStatusDisconnectedAndResynchronizing", "ExC95AEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEwsValidatorFailed
		{
			get
			{
				return new LocalizedString("ErrorEwsValidatorFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRemoveMigrationUserOnCurrentState(string user, string batchName)
		{
			return new LocalizedString("ErrorCannotRemoveMigrationUserOnCurrentState", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				batchName
			});
		}

		public static LocalizedString IPListEntryTypeMismatch
		{
			get
			{
				return new LocalizedString("IPListEntryTypeMismatch", "Ex35A74D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorConnectSystemAttendantMailbox(string identity, string database)
		{
			return new LocalizedString("ErrorConnectSystemAttendantMailbox", "ExBFE7AA", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				database
			});
		}

		public static LocalizedString ErrorPublicFolderDatabaseNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderDatabaseNotUnique", "Ex601939", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageSetWebServicesVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetWebServicesVirtualDirectory", "Ex64C5BD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageNewMalwareFilterRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageNewAddressBookPolicy(string Name, string AddressLists, string GlobalAddressList, string RoomList, string OfflineAddressBook)
		{
			return new LocalizedString("ConfirmationMessageNewAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				AddressLists,
				GlobalAddressList,
				RoomList,
				OfflineAddressBook
			});
		}

		public static LocalizedString OrganizationWide
		{
			get
			{
				return new LocalizedString("OrganizationWide", "ExEF13A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidContentMailbox(string name)
		{
			return new LocalizedString("ErrorInvalidContentMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageNewAvailabilityConfig(string orgWideAccount)
		{
			return new LocalizedString("ConfirmationMessageNewAvailabilityConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				orgWideAccount
			});
		}

		public static LocalizedString ElementNotFound(string element)
		{
			return new LocalizedString("ElementNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				element
			});
		}

		public static LocalizedString AdminAuditLogSearchCriteria(string searchCriteria)
		{
			return new LocalizedString("AdminAuditLogSearchCriteria", "Ex5034ED", false, true, Strings.ResourceManager, new object[]
			{
				searchCriteria
			});
		}

		public static LocalizedString ErrorMailboxDatabaseNotFound(string identity)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotFound", "Ex23B42B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString OfferIdMatchError(string org, string programid, string offerid, string sharedOrg, string sharedProgramid, string sharedOfferid)
		{
			return new LocalizedString("OfferIdMatchError", "Ex476FFB", false, true, Strings.ResourceManager, new object[]
			{
				org,
				programid,
				offerid,
				sharedOrg,
				sharedProgramid,
				sharedOfferid
			});
		}

		public static LocalizedString NoGCsAvailableException(string forest)
		{
			return new LocalizedString("NoGCsAvailableException", "ExBCCB0E", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		public static LocalizedString ErrorNonExistentDefaultContactsFolder
		{
			get
			{
				return new LocalizedString("ErrorNonExistentDefaultContactsFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSyncTaskCookieHasPageData(Guid orgDc, Guid newDc)
		{
			return new LocalizedString("VerboseSyncTaskCookieHasPageData", "ExE8C1DF", false, true, Strings.ResourceManager, new object[]
			{
				orgDc,
				newDc
			});
		}

		public static LocalizedString ErrorVerificationCodeNeverSent(string phonenumber)
		{
			return new LocalizedString("ErrorVerificationCodeNeverSent", "Ex1CBE3B", false, true, Strings.ResourceManager, new object[]
			{
				phonenumber
			});
		}

		public static LocalizedString CouldNotFindHostDirectoryEntryException(string host)
		{
			return new LocalizedString("CouldNotFindHostDirectoryEntryException", "Ex845095", false, true, Strings.ResourceManager, new object[]
			{
				host
			});
		}

		public static LocalizedString CustomCannotBeUsedForPermissionGroups
		{
			get
			{
				return new LocalizedString("CustomCannotBeUsedForPermissionGroups", "Ex89FF54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionAbortedMsg
		{
			get
			{
				return new LocalizedString("MapiTransactionAbortedMsg", "ExD17184", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestMigrationServerAvailabilityException(string hostname, int port)
		{
			return new LocalizedString("TestMigrationServerAvailabilityException", "ExCEE596", false, true, Strings.ResourceManager, new object[]
			{
				hostname,
				port
			});
		}

		public static LocalizedString CertAuthWithoutSSLError
		{
			get
			{
				return new LocalizedString("CertAuthWithoutSSLError", "ExC10437", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedEitherAssemblyPathOrName
		{
			get
			{
				return new LocalizedString("NeedEitherAssemblyPathOrName", "Ex9F0C3A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotFindTestUser
		{
			get
			{
				return new LocalizedString("CannotFindTestUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningEESandEDSNotFound(string dom)
		{
			return new LocalizedString("WarningEESandEDSNotFound", "Ex0215B2", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		public static LocalizedString UnableToResolveValidDomainExchangeCertificateTasksException(string hostName, string physicalName, string fullyQualifiedName, string physicalFullyQualifiedName)
		{
			return new LocalizedString("UnableToResolveValidDomainExchangeCertificateTasksException", "", false, false, Strings.ResourceManager, new object[]
			{
				hostName,
				physicalName,
				fullyQualifiedName,
				physicalFullyQualifiedName
			});
		}

		public static LocalizedString MalboxFolderRightsEditAllItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsEditAllItems", "Ex422AFD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RestoreFailedDagUp(string serverName)
		{
			return new LocalizedString("RestoreFailedDagUp", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString CertificateStatusPendingRequest
		{
			get
			{
				return new LocalizedString("CertificateStatusPendingRequest", "Ex98BB17", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddressRewriteExternalAddressExists
		{
			get
			{
				return new LocalizedString("AddressRewriteExternalAddressExists", "Ex8FE332", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMessageClassificationName(string Name, string DisplayName, string SenderDescription)
		{
			return new LocalizedString("ConfirmationMessageNewMessageClassificationName", "Ex541C01", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DisplayName,
				SenderDescription
			});
		}

		public static LocalizedString PopImapSettingsPortMismatch(string settings, string protocol, string noun)
		{
			return new LocalizedString("PopImapSettingsPortMismatch", "Ex4D7CCF", false, true, Strings.ResourceManager, new object[]
			{
				settings,
				protocol,
				noun
			});
		}

		public static LocalizedString ErrorMoveDatabasePathInvalidOnReplicated
		{
			get
			{
				return new LocalizedString("ErrorMoveDatabasePathInvalidOnReplicated", "Ex9A62BF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasTransactionResultFailure
		{
			get
			{
				return new LocalizedString("CasTransactionResultFailure", "Ex37EA24", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GlobalRoutingEntryFound(string phoneNumber)
		{
			return new LocalizedString("GlobalRoutingEntryFound", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		public static LocalizedString RoleOwner
		{
			get
			{
				return new LocalizedString("RoleOwner", "ExFCDCEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestIRMConfiguration
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestIRMConfiguration", "ExC0893B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDeleteSystemMailbox(string id)
		{
			return new LocalizedString("VerboseDeleteSystemMailbox", "Ex1BB5A3", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString RejectMessageActionMustBeTheOnlyAction
		{
			get
			{
				return new LocalizedString("RejectMessageActionMustBeTheOnlyAction", "Ex6D70BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseIgnoreDefaultScope
		{
			get
			{
				return new LocalizedString("VerboseIgnoreDefaultScope", "ExC09283", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFreeBusyFolderAlreadyExists
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderAlreadyExists", "ExBD7F1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeUserLogonName
		{
			get
			{
				return new LocalizedString("ADAttributeUserLogonName", "ExE6AB32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemovePublicFolderDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemovePublicFolderDatabase", "ExB1FD34", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CertificateStatusInvalid
		{
			get
			{
				return new LocalizedString("CertificateStatusInvalid", "ExD20896", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailboxUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxUser", "Ex6A7109", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarningDiscoveryHoldDelay(double minutes)
		{
			return new LocalizedString("WarningDiscoveryHoldDelay", "", false, false, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		public static LocalizedString ErrorInvalidExpansionServer(string expansionServer)
		{
			return new LocalizedString("ErrorInvalidExpansionServer", "Ex6696F7", false, true, Strings.ResourceManager, new object[]
			{
				expansionServer
			});
		}

		public static LocalizedString MailboxSearchServiceUnavailable(string serverName, int errorCode)
		{
			return new LocalizedString("MailboxSearchServiceUnavailable", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		public static LocalizedString WarningPushCertificate(string thumbprint, string server)
		{
			return new LocalizedString("WarningPushCertificate", "ExF1B854", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				server
			});
		}

		public static LocalizedString TestMigrationServerAvailabilitySuccess(string hostname, int port)
		{
			return new LocalizedString("TestMigrationServerAvailabilitySuccess", "Ex082B81", false, true, Strings.ResourceManager, new object[]
			{
				hostname,
				port
			});
		}

		public static LocalizedString NewDagCompletedSuccessfully
		{
			get
			{
				return new LocalizedString("NewDagCompletedSuccessfully", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveOutboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorRoleNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorRoleNotFound", "ExC5FD6B", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ProgressActivityPushFederationCertificate(string thumbprint)
		{
			return new LocalizedString("ProgressActivityPushFederationCertificate", "ExC85FAE", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ConfirmationMessageNewMobileSyncVirtualDirectory(string WebSiteName, string Server)
		{
			return new LocalizedString("ConfirmationMessageNewMobileSyncVirtualDirectory", "Ex356117", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server
			});
		}

		public static LocalizedString CallingDomainServicesEndPoint(string method, string endpoint)
		{
			return new LocalizedString("CallingDomainServicesEndPoint", "Ex731C41", false, true, Strings.ResourceManager, new object[]
			{
				method,
				endpoint
			});
		}

		public static LocalizedString Error_CheckClientIntent
		{
			get
			{
				return new LocalizedString("Error_CheckClientIntent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MediumPriorityChecksFailed
		{
			get
			{
				return new LocalizedString("MediumPriorityChecksFailed", "Ex9B04F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetHybridMailflow
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetHybridMailflow", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BPATestSystemHealthTaskName
		{
			get
			{
				return new LocalizedString("BPATestSystemHealthTaskName", "Ex7B762B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMissingNetIDWhenBypassWLID
		{
			get
			{
				return new LocalizedString("ErrorMissingNetIDWhenBypassWLID", "Ex3E81D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidFqdn
		{
			get
			{
				return new LocalizedString("InvalidFqdn", "ExF89D67", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxImportRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxImportRequest", "Ex24A6C0", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorExecutingUserIsNull
		{
			get
			{
				return new LocalizedString("ErrorExecutingUserIsNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotModifyDeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotModifyDeprecatedRole", "Ex9CC3B4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorOperationOnlyOnMailboxServer(string serverName)
		{
			return new LocalizedString("ErrorOperationOnlyOnMailboxServer", "ExE89A0A", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorUnsupportedMailboxShapeFeatureVersionException(string identity)
		{
			return new LocalizedString("ErrorUnsupportedMailboxShapeFeatureVersionException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotParseFsmoRoleOwnerVersion(string metadata, string exception)
		{
			return new LocalizedString("ErrorCannotParseFsmoRoleOwnerVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				metadata,
				exception
			});
		}

		public static LocalizedString MapiTransactionErrorMsgNoMailboxMdbDismounted
		{
			get
			{
				return new LocalizedString("MapiTransactionErrorMsgNoMailboxMdbDismounted", "Ex530148", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NotEnoughPrioritiesAvailable
		{
			get
			{
				return new LocalizedString("NotEnoughPrioritiesAvailable", "ExC68907", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotStartRunningJob(string name)
		{
			return new LocalizedString("CannotStartRunningJob", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageNewRecipientTemplateProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewRecipientTemplateProvisioningPolicy", "Ex86368A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorPolicyValidationFailed(string detailError)
		{
			return new LocalizedString("ErrorPolicyValidationFailed", "Ex47BFE3", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		public static LocalizedString DagMemberStopped(string serverName)
		{
			return new LocalizedString("DagMemberStopped", "Ex567566", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString InformationSkippedAsForAutodiscover
		{
			get
			{
				return new LocalizedString("InformationSkippedAsForAutodiscover", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTargetServicePlanHasNoMatchingMailboxPlan
		{
			get
			{
				return new LocalizedString("ErrorTargetServicePlanHasNoMatchingMailboxPlan", "ExF0AA19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveWebServicesVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveWebServicesVirtualDirectory", "Ex0942CC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetMalwareFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailboxWithArchive(string Name)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxWithArchive", "Ex91F4AB", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString DagFswInsufficientPermissionsToAccessFswException(string fswMachine, Exception ex)
		{
			return new LocalizedString("DagFswInsufficientPermissionsToAccessFswException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				ex
			});
		}

		public static LocalizedString TenantAlreadyHasFinalizedMigration
		{
			get
			{
				return new LocalizedString("TenantAlreadyHasFinalizedMigration", "Ex88154F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCouldNotFindMigrationEndpoint
		{
			get
			{
				return new LocalizedString("ErrorCouldNotFindMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WillContinueProcessing
		{
			get
			{
				return new LocalizedString("WillContinueProcessing", "Ex85AFA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ScenarioExchangeWebServices
		{
			get
			{
				return new LocalizedString("ScenarioExchangeWebServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EmptyDeviceFilterRemoved(string name)
		{
			return new LocalizedString("EmptyDeviceFilterRemoved", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString FDS_GM_PerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("FDS_GM_PerfCountersComponentDescription", "Ex46E79B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AssistantsServiceDescription
		{
			get
			{
				return new LocalizedString("AssistantsServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmtpConnectivityServerNotConfigured(string server)
		{
			return new LocalizedString("SmtpConnectivityServerNotConfigured", "Ex13BD7D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString SetupProgressMaxReceiveTransportQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMaxReceiveTransportQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToRetrieveAuditLogSearch
		{
			get
			{
				return new LocalizedString("FailedToRetrieveAuditLogSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDlpPolicyAlreadyInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyAlreadyInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ADAttributeCountry
		{
			get
			{
				return new LocalizedString("ADAttributeCountry", "ExB43378", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDuplicatedPropertyOriginalEntry(string propertyName)
		{
			return new LocalizedString("WarningDuplicatedPropertyOriginalEntry", "Ex0061EB", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString MaxDeviceDeletesPerMonthReached(int deviceDeleteCount, uint maxDeviceDeleteCount)
		{
			return new LocalizedString("MaxDeviceDeletesPerMonthReached", "Ex3D202B", false, true, Strings.ResourceManager, new object[]
			{
				deviceDeleteCount,
				maxDeviceDeleteCount
			});
		}

		public static LocalizedString VerboseSavePublicFolderReferral(string idServer)
		{
			return new LocalizedString("VerboseSavePublicFolderReferral", "Ex7F8558", false, true, Strings.ResourceManager, new object[]
			{
				idServer
			});
		}

		public static LocalizedString MapiTransactionResultFailure
		{
			get
			{
				return new LocalizedString("MapiTransactionResultFailure", "ExD1D11D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MissingPilotOffer(string file, string pilotOffer)
		{
			return new LocalizedString("MissingPilotOffer", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				pilotOffer
			});
		}

		public static LocalizedString RemoveResubmiRequestMessage
		{
			get
			{
				return new LocalizedString("RemoveResubmiRequestMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaPingScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingScenarioDescription", "Ex2839B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageInvokePreMoveAction(string identity)
		{
			return new LocalizedString("ConfirmationMessageInvokePreMoveAction", "ExD19E15", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorUnableToCheckMountedStatus(string pfdb, string error)
		{
			return new LocalizedString("ErrorUnableToCheckMountedStatus", "Ex0B05F5", false, true, Strings.ResourceManager, new object[]
			{
				pfdb,
				error
			});
		}

		public static LocalizedString ErrorServerDacedAndNotStarted(string dag, string server)
		{
			return new LocalizedString("ErrorServerDacedAndNotStarted", "Ex8E5AA0", false, true, Strings.ResourceManager, new object[]
			{
				dag,
				server
			});
		}

		public static LocalizedString VerboseBumpOrganizationExchangeVersion(string org, string oldVersion, string newVersion)
		{
			return new LocalizedString("VerboseBumpOrganizationExchangeVersion", "ExBCB038", false, true, Strings.ResourceManager, new object[]
			{
				org,
				oldVersion,
				newVersion
			});
		}

		public static LocalizedString ExceptionStorageAccessDenied(int errCode, string errMsg)
		{
			return new LocalizedString("ExceptionStorageAccessDenied", "ExA245C7", false, true, Strings.ResourceManager, new object[]
			{
				errCode,
				errMsg
			});
		}

		public static LocalizedString EnableConversationsProcessingItems(string user)
		{
			return new LocalizedString("EnableConversationsProcessingItems", "ExA32C84", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString DlpPolicyContainsEmptyKeywords
		{
			get
			{
				return new LocalizedString("DlpPolicyContainsEmptyKeywords", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RoleDoesNotSupportExchangeCertificateTasksException
		{
			get
			{
				return new LocalizedString("RoleDoesNotSupportExchangeCertificateTasksException", "Ex4CE051", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RunningAspNetRegIis
		{
			get
			{
				return new LocalizedString("RunningAspNetRegIis", "ExC9B897", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToRemoveDatabaseSection(string database)
		{
			return new LocalizedString("FailedToRemoveDatabaseSection", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString FailToValidateSubscripionPrincipalOnEdge(string user, string message)
		{
			return new LocalizedString("FailToValidateSubscripionPrincipalOnEdge", "Ex591719", false, true, Strings.ResourceManager, new object[]
			{
				user,
				message
			});
		}

		public static LocalizedString MultipleOnPremisesOrganizationsFoundException
		{
			get
			{
				return new LocalizedString("MultipleOnPremisesOrganizationsFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToGetElcUserConfigurationFromService(string responseclass, string code, string error)
		{
			return new LocalizedString("FailedToGetElcUserConfigurationFromService", "", false, false, Strings.ResourceManager, new object[]
			{
				responseclass,
				code,
				error
			});
		}

		public static LocalizedString WarningRoleEntryAlreadyExists(string roleId, string entryName)
		{
			return new LocalizedString("WarningRoleEntryAlreadyExists", "ExD64134", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		public static LocalizedString VerboseMailboxDelegateAdded(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateAdded", "ExB17C5F", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		public static LocalizedString ConfirmationMessageRemoveEmailAddressPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEmailAddressPolicy", "Ex4BFE79", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressStoppingTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingTransportLogSearchService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusFailedAndSuspended
		{
			get
			{
				return new LocalizedString("CopyStatusFailedAndSuspended", "Ex1F76A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorStorageMailboxDatabaseVersionUnsupported
		{
			get
			{
				return new LocalizedString("ErrorStorageMailboxDatabaseVersionUnsupported", "Ex43F1B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveLinkedUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveLinkedUser", "Ex83FD72", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString VerboseRemoveWSManGlobalModule(string name, string file)
		{
			return new LocalizedString("VerboseRemoveWSManGlobalModule", "ExCA7D7C", false, true, Strings.ResourceManager, new object[]
			{
				name,
				file
			});
		}

		public static LocalizedString ProvisioningRequestAlreadyStarted
		{
			get
			{
				return new LocalizedString("ProvisioningRequestAlreadyStarted", "Ex1FDB63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningCouldNotCreateDefaultRoleAssignment(string error)
		{
			return new LocalizedString("WarningCouldNotCreateDefaultRoleAssignment", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString CasHealthOwaDoLanguageSelection
		{
			get
			{
				return new LocalizedString("CasHealthOwaDoLanguageSelection", "ExFD0D0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetTransportServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTransportServer", "ExE13B1D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString NoRemoteInstallPath(string s)
		{
			return new LocalizedString("NoRemoteInstallPath", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString SetupProgressStartingW3SVCService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingW3SVCService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AccessStoreError(string detailedInformation)
		{
			return new LocalizedString("AccessStoreError", "Ex4C4CCA", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		public static LocalizedString ErrorMRSIsDownlevel(string serverName, string serverVersion)
		{
			return new LocalizedString("ErrorMRSIsDownlevel", "Ex88C422", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				serverVersion
			});
		}

		public static LocalizedString NotFederated
		{
			get
			{
				return new LocalizedString("NotFederated", "Ex9E44D1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImportDlpPolicyFileDataIsNull
		{
			get
			{
				return new LocalizedString("ImportDlpPolicyFileDataIsNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateDefaultOWAMailboxPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDefaultOWAMailboxPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AgentDoesNotExist(string name)
		{
			return new LocalizedString("AgentDoesNotExist", "Ex04DD94", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString StartPostFileCopyDescription
		{
			get
			{
				return new LocalizedString("StartPostFileCopyDescription", "Ex7D19DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPSTFileNotExist(string path)
		{
			return new LocalizedString("ErrorPSTFileNotExist", "ExF6EC47", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ErrorNoAccountNamespace
		{
			get
			{
				return new LocalizedString("ErrorNoAccountNamespace", "Ex0ADCDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Imap4BeServiceDisplayName
		{
			get
			{
				return new LocalizedString("Imap4BeServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MessageTypeOof
		{
			get
			{
				return new LocalizedString("MessageTypeOof", "Ex32FE16", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorServerIsNotCasServer(string server)
		{
			return new LocalizedString("ErrorServerIsNotCasServer", "Ex93723D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString MtrtAddManagerAsRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddManagerAsRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidBase64String
		{
			get
			{
				return new LocalizedString("ErrorInvalidBase64String", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotReadRolesFromRegistry(string errorMsg)
		{
			return new LocalizedString("CannotReadRolesFromRegistry", "ExA30854", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString InvalidMessageDataClassificationParameterConfidenceExceedsMaxAllowed(string paramName, int maxAllowedValue)
		{
			return new LocalizedString("InvalidMessageDataClassificationParameterConfidenceExceedsMaxAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName,
				maxAllowedValue
			});
		}

		public static LocalizedString FormsAuthenticationErrorPathBusyException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationErrorPathBusyException", "ExE1D70D", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		public static LocalizedString ErrorSuspendCommentWithoutSuspend
		{
			get
			{
				return new LocalizedString("ErrorSuspendCommentWithoutSuspend", "ExB99F6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserIsAlreadyBeingMoved(string mailbox, string target)
		{
			return new LocalizedString("ErrorUserIsAlreadyBeingMoved", "Ex8DC9F2", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				target
			});
		}

		public static LocalizedString CasHealthLatency
		{
			get
			{
				return new LocalizedString("CasHealthLatency", "Ex914CF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabasesRedundancyCheckFailed(string nodeName, string error)
		{
			return new LocalizedString("DatabasesRedundancyCheckFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				error
			});
		}

		public static LocalizedString BridgeheadRoleDisplayName
		{
			get
			{
				return new LocalizedString("BridgeheadRoleDisplayName", "Ex18F6DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEnterpriseOrgOutOfDate
		{
			get
			{
				return new LocalizedString("ErrorEnterpriseOrgOutOfDate", "Ex49A48F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSetSystemAttendantObject(string idSA, string idDatabase)
		{
			return new LocalizedString("VerboseSetSystemAttendantObject", "Ex6455E0", false, true, Strings.ResourceManager, new object[]
			{
				idSA,
				idDatabase
			});
		}

		public static LocalizedString ErrorElcUserConfigurationServiceCall
		{
			get
			{
				return new LocalizedString("ErrorElcUserConfigurationServiceCall", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAssociatedUserMailboxExistInDC
		{
			get
			{
				return new LocalizedString("ErrorAssociatedUserMailboxExistInDC", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoPrivilegeAlreadyPresent(string account, string right)
		{
			return new LocalizedString("InfoPrivilegeAlreadyPresent", "Ex1F304D", false, true, Strings.ResourceManager, new object[]
			{
				account,
				right
			});
		}

		public static LocalizedString ErrorOfflineAddressBookNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorOfflineAddressBookNotFound", "ExFFF1D3", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfigFileNotFoundException(string p1, string p2)
		{
			return new LocalizedString("ConfigFileNotFoundException", "Ex545CA8", false, true, Strings.ResourceManager, new object[]
			{
				p1,
				p2
			});
		}

		public static LocalizedString VerboseParsingOPathFilterFailed(string filter, string err)
		{
			return new LocalizedString("VerboseParsingOPathFilterFailed", "ExA52D2E", false, true, Strings.ResourceManager, new object[]
			{
				filter,
				err
			});
		}

		public static LocalizedString MigrationMaxConcurrentConnectionsVerificationFailed(string value, string minValue, string maxValue)
		{
			return new LocalizedString("MigrationMaxConcurrentConnectionsVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				minValue,
				maxValue
			});
		}

		public static LocalizedString ConfirmationMessageRemoveTransportProcessingQuotaOverride(Guid externalDirectoryOrganizationId)
		{
			return new LocalizedString("ConfirmationMessageRemoveTransportProcessingQuotaOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				externalDirectoryOrganizationId
			});
		}

		public static LocalizedString ErrorMinVersionGreaterThanMaxVersion(string minVersion, string maxVersion)
		{
			return new LocalizedString("ErrorMinVersionGreaterThanMaxVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				minVersion,
				maxVersion
			});
		}

		public static LocalizedString ErrorPropertyParameter
		{
			get
			{
				return new LocalizedString("ErrorPropertyParameter", "Ex402097", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMsnIsNotSupportedInEnterprise
		{
			get
			{
				return new LocalizedString("ErrorMsnIsNotSupportedInEnterprise", "ExF6FDF7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LongAddressesEnabledOnEdge
		{
			get
			{
				return new LocalizedString("LongAddressesEnabledOnEdge", "ExBFFA27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SiteMailboxLanguageSet(string language)
		{
			return new LocalizedString("SiteMailboxLanguageSet", "", false, false, Strings.ResourceManager, new object[]
			{
				language
			});
		}

		public static LocalizedString ComplianceAuditServiceDescription
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxAssistantsServiceStopped(string serverName)
		{
			return new LocalizedString("MailboxAssistantsServiceStopped", "ExA9397F", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString InfoRmsOnlineAuthenticationCertificateChecked
		{
			get
			{
				return new LocalizedString("InfoRmsOnlineAuthenticationCertificateChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningMessageSetWebServicesVirtualDirectoryWindowsAuthentication(string Identity)
		{
			return new LocalizedString("WarningMessageSetWebServicesVirtualDirectoryWindowsAuthentication", "ExF76263", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorInvalidIso3166Alpha2Code(string code)
		{
			return new LocalizedString("ErrorInvalidIso3166Alpha2Code", "", false, false, Strings.ResourceManager, new object[]
			{
				code
			});
		}

		public static LocalizedString ErrorCannotConnectToMailboxDatabase(string mdb)
		{
			return new LocalizedString("ErrorCannotConnectToMailboxDatabase", "ExE63F9A", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString CasHealthWebAppLiveIdError(Uri requestUri, string exception)
		{
			return new LocalizedString("CasHealthWebAppLiveIdError", "ExD811D5", false, true, Strings.ResourceManager, new object[]
			{
				requestUri,
				exception
			});
		}

		public static LocalizedString InvalidMailboxContainerGuid(string specifiedMailboxContainerGuid, string linkedMailboxContainerGuid)
		{
			return new LocalizedString("InvalidMailboxContainerGuid", "", false, false, Strings.ResourceManager, new object[]
			{
				specifiedMailboxContainerGuid,
				linkedMailboxContainerGuid
			});
		}

		public static LocalizedString ComplianceSearchSendStartMessageError(string workload)
		{
			return new LocalizedString("ComplianceSearchSendStartMessageError", "", false, false, Strings.ResourceManager, new object[]
			{
				workload
			});
		}

		public static LocalizedString ErrorSoftDeletedParmatersConflict
		{
			get
			{
				return new LocalizedString("ErrorSoftDeletedParmatersConflict", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DefaultGlobalAddressList
		{
			get
			{
				return new LocalizedString("DefaultGlobalAddressList", "Ex7BE90C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoCASE15SP1ServersFoundException
		{
			get
			{
				return new LocalizedString("NoCASE15SP1ServersFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchDatabaseIsNull(string database)
		{
			return new LocalizedString("TestSearchDatabaseIsNull", "Ex765031", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ErrorLogFolderPathNotUniqueUnderTheSameNode(string filePath, string serverName)
		{
			return new LocalizedString("ErrorLogFolderPathNotUniqueUnderTheSameNode", "ExFE89E0", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		public static LocalizedString DebugResolvingDomainAccount(string userid, string domain, string sam)
		{
			return new LocalizedString("DebugResolvingDomainAccount", "ExCFC36A", false, true, Strings.ResourceManager, new object[]
			{
				userid,
				domain,
				sam
			});
		}

		public static LocalizedString VerboseMRSRequestDistinguishedName(string id)
		{
			return new LocalizedString("VerboseMRSRequestDistinguishedName", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString UnableToRetrieveArchivePolicyTag
		{
			get
			{
				return new LocalizedString("UnableToRetrieveArchivePolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskClusterServiceNotRunningOnNodeException(string nodeName)
		{
			return new LocalizedString("DagTaskClusterServiceNotRunningOnNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		public static LocalizedString ConfirmCreatingExclusiveScope(string scope)
		{
			return new LocalizedString("ConfirmCreatingExclusiveScope", "Ex4516CC", false, true, Strings.ResourceManager, new object[]
			{
				scope
			});
		}

		public static LocalizedString ErrorParametersCannotHaveEmbeddedDot
		{
			get
			{
				return new LocalizedString("ErrorParametersCannotHaveEmbeddedDot", "Ex0FE191", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GeneratedWatsonReportForHungService(string serviceName)
		{
			return new LocalizedString("GeneratedWatsonReportForHungService", "ExFB7082", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		public static LocalizedString ErrorSourcePrimaryMailboxDoesNotExist(string user)
		{
			return new LocalizedString("ErrorSourcePrimaryMailboxDoesNotExist", "Ex5DC67F", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorArchiveDumpsterExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorArchiveDumpsterExceedsTargetQuota", "Ex5FE4E6", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		public static LocalizedString ErrorNoAvailableDefaultFilePath(string fileExt)
		{
			return new LocalizedString("ErrorNoAvailableDefaultFilePath", "Ex9FD64A", false, true, Strings.ResourceManager, new object[]
			{
				fileExt
			});
		}

		public static LocalizedString SetupProgressCreateAcceptedDomainsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAcceptedDomainsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorErrorInvalidEventActionPair(string evt, string action, string validActions)
		{
			return new LocalizedString("InterceptorErrorInvalidEventActionPair", "", false, false, Strings.ResourceManager, new object[]
			{
				evt,
				action,
				validActions
			});
		}

		public static LocalizedString ContinueMountWhenDBFilesNotExist
		{
			get
			{
				return new LocalizedString("ContinueMountWhenDBFilesNotExist", "Ex532CC3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToMoveMailboxWithSubscriptions(string name)
		{
			return new LocalizedString("UnableToMoveMailboxWithSubscriptions", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ExceptionRetryIntervalInvalid
		{
			get
			{
				return new LocalizedString("ExceptionRetryIntervalInvalid", "ExAC88EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidRuleName
		{
			get
			{
				return new LocalizedString("InvalidRuleName", "Ex20E77C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPathNotExistsOnServer(string path, string serverName)
		{
			return new LocalizedString("ErrorPathNotExistsOnServer", "ExDBF912", false, true, Strings.ResourceManager, new object[]
			{
				path,
				serverName
			});
		}

		public static LocalizedString RuleCollectionAlreadyExists(string name)
		{
			return new LocalizedString("RuleCollectionAlreadyExists", "Ex32B279", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CouldNotUpgradeRetentionTrigger(string setting, string newTrigger, string oldTrigger)
		{
			return new LocalizedString("CouldNotUpgradeRetentionTrigger", "Ex4219E8", false, true, Strings.ResourceManager, new object[]
			{
				setting,
				newTrigger,
				oldTrigger
			});
		}

		public static LocalizedString DetermineSourceMailbox
		{
			get
			{
				return new LocalizedString("DetermineSourceMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionNonUniqueLangCodesInRulePackDescriptor(string nonUniqueLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueLangCodesInRulePackDescriptor", "", false, false, Strings.ResourceManager, new object[]
			{
				nonUniqueLangCodes
			});
		}

		public static LocalizedString ProgressCopyingEdbFile
		{
			get
			{
				return new LocalizedString("ProgressCopyingEdbFile", "ExCDA831", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveStatusSkipped
		{
			get
			{
				return new LocalizedString("MoveStatusSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUniversalGroupCannotHaveForeignSP(string universalGroup, string foreignSP)
		{
			return new LocalizedString("ErrorUniversalGroupCannotHaveForeignSP", "ExC03CC1", false, true, Strings.ResourceManager, new object[]
			{
				universalGroup,
				foreignSP
			});
		}

		public static LocalizedString SetupProgressStartingHygieneUpdateService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingHygieneUpdateService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAutoTagCrossValidate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageAutoTagCrossValidate", "Ex5ABB15", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString IsIntegQueueFull
		{
			get
			{
				return new LocalizedString("IsIntegQueueFull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidCidrRangeId(string ipRange, int minCidrLength)
		{
			return new LocalizedString("InvalidCidrRangeId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange,
				minCidrLength
			});
		}

		public static LocalizedString ErrorInvalidEndpointParameterReasonUsedForConnectionTest
		{
			get
			{
				return new LocalizedString("ErrorInvalidEndpointParameterReasonUsedForConnectionTest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TargetMailboxInSourceIsSkipped(string identity)
		{
			return new LocalizedString("TargetMailboxInSourceIsSkipped", "Ex493753", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString StartPostSetupDescription
		{
			get
			{
				return new LocalizedString("StartPostSetupDescription", "ExA33F67", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StatusSpecifiedForProvisionedServer
		{
			get
			{
				return new LocalizedString("StatusSpecifiedForProvisionedServer", "Ex6DA135", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabasesReplayKeepingUpCheckDesc
		{
			get
			{
				return new LocalizedString("DatabasesReplayKeepingUpCheckDesc", "Ex1439FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProcessingAceStatus(string obj)
		{
			return new LocalizedString("ProcessingAceStatus", "Ex4FB1A1", false, true, Strings.ResourceManager, new object[]
			{
				obj
			});
		}

		public static LocalizedString RemoveRuleSyncAcrossDifferentVersionsNeeded
		{
			get
			{
				return new LocalizedString("RemoveRuleSyncAcrossDifferentVersionsNeeded", "Ex406C0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString messageADServerNotFoundException(string serverId)
		{
			return new LocalizedString("messageADServerNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverId
			});
		}

		public static LocalizedString messageSystemMailboxNotFoundException(string systemMailbox, string database)
		{
			return new LocalizedString("messageSystemMailboxNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				systemMailbox,
				database
			});
		}

		public static LocalizedString LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains
		{
			get
			{
				return new LocalizedString("LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains", "Ex81A9B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToResolvePublicToGroup(string userName, string exception)
		{
			return new LocalizedString("ErrorUnableToResolvePublicToGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				exception
			});
		}

		public static LocalizedString InterceptorErrorInvalidBehavior(string action, string valid)
		{
			return new LocalizedString("InterceptorErrorInvalidBehavior", "", false, false, Strings.ResourceManager, new object[]
			{
				action,
				valid
			});
		}

		public static LocalizedString DetailsTemplateMailboxAgent
		{
			get
			{
				return new LocalizedString("DetailsTemplateMailboxAgent", "Ex87050A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveGroupRoleAssignment(string user, string role, string group)
		{
			return new LocalizedString("ErrorRemoveGroupRoleAssignment", "Ex2870DA", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				group
			});
		}

		public static LocalizedString CrossPremiseNoEgressTargets(string server)
		{
			return new LocalizedString("CrossPremiseNoEgressTargets", "Ex5EC3EB", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString RemoveDagDestroyedCluster(string clusterName, string lastServer, string dagName)
		{
			return new LocalizedString("RemoveDagDestroyedCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				lastServer,
				dagName
			});
		}

		public static LocalizedString CalendarNotificationConfirmation
		{
			get
			{
				return new LocalizedString("CalendarNotificationConfirmation", "Ex61272F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotAssignPartnerAppRole(string role, string assignee)
		{
			return new LocalizedString("ErrorCannotAssignPartnerAppRole", "", false, false, Strings.ResourceManager, new object[]
			{
				role,
				assignee
			});
		}

		public static LocalizedString ConfirmationMessageEnableTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableTransportRule", "Ex20D4F3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UnableToAddE12DStoExSPermissionsException(string dom, string e12ds, string exs, string exsShort, string localdomdc, string rootdomdc)
		{
			return new LocalizedString("UnableToAddE12DStoExSPermissionsException", "Ex3BB3B9", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				e12ds,
				exs,
				exsShort,
				localdomdc,
				rootdomdc
			});
		}

		public static LocalizedString WarningCouldNotRemoveRoleAssignment(string id, string error)
		{
			return new LocalizedString("WarningCouldNotRemoveRoleAssignment", "Ex647E7F", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString OpenPolicyFailedException(uint err, string account, string dom)
		{
			return new LocalizedString("OpenPolicyFailedException", "ExF3CB2F", false, true, Strings.ResourceManager, new object[]
			{
				err,
				account,
				dom
			});
		}

		public static LocalizedString PatchAttributeValue(string patchvalue)
		{
			return new LocalizedString("PatchAttributeValue", "ExCC505B", false, true, Strings.ResourceManager, new object[]
			{
				patchvalue
			});
		}

		public static LocalizedString InstallComplianceServiceTask
		{
			get
			{
				return new LocalizedString("InstallComplianceServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxParameterError(string parameter, string error)
		{
			return new LocalizedString("MoveMailboxParameterError", "Ex956015", false, true, Strings.ResourceManager, new object[]
			{
				parameter,
				error
			});
		}

		public static LocalizedString ErrorCouldNotFindRequest(string identity)
		{
			return new LocalizedString("ErrorCouldNotFindRequest", "Ex0EC886", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorPowerShellVdirAppPoolNotExist(string name, string configFile)
		{
			return new LocalizedString("ErrorPowerShellVdirAppPoolNotExist", "Ex8A1DA9", false, true, Strings.ResourceManager, new object[]
			{
				name,
				configFile
			});
		}

		public static LocalizedString InterceptorConfirmModifyingOlderVersion(string oldVersion, string newVersion)
		{
			return new LocalizedString("InterceptorConfirmModifyingOlderVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				oldVersion,
				newVersion
			});
		}

		public static LocalizedString ErrorTpdCheckingFailed
		{
			get
			{
				return new LocalizedString("ErrorTpdCheckingFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OpenDomainRoutingDisabled
		{
			get
			{
				return new LocalizedString("OpenDomainRoutingDisabled", "Ex2552C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BPALoadingLocalConfiguration
		{
			get
			{
				return new LocalizedString("BPALoadingLocalConfiguration", "ExC78B48", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FormsAuthenticationDeleteAccessDeniedException(string paths)
		{
			return new LocalizedString("FormsAuthenticationDeleteAccessDeniedException", "ExFAC54C", false, true, Strings.ResourceManager, new object[]
			{
				paths
			});
		}

		public static LocalizedString ExServerSGroupNotFoundException(string dn)
		{
			return new LocalizedString("ExServerSGroupNotFoundException", "Ex09B98D", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ErrorCannotUpdateReplicationLatency(string id, string dc)
		{
			return new LocalizedString("ErrorCannotUpdateReplicationLatency", "Ex0D143D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		public static LocalizedString ErrorDefaultTagHasConflictedMessageClasses(string policyId, string msgClass)
		{
			return new LocalizedString("ErrorDefaultTagHasConflictedMessageClasses", "", false, false, Strings.ResourceManager, new object[]
			{
				policyId,
				msgClass
			});
		}

		public static LocalizedString ConfirmationMessageSetRoutingGroupConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRoutingGroupConnector", "Ex0A9ACA", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UninstallFfoPrimingServiceTask
		{
			get
			{
				return new LocalizedString("UninstallFfoPrimingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingNotificationsBrokerService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingNotificationsBrokerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederAsyncBeginCalled(string dbCopy)
		{
			return new LocalizedString("SeederAsyncBeginCalled", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		public static LocalizedString ErrorParsingScript(string fileName, string exception)
		{
			return new LocalizedString("ErrorParsingScript", "Ex51E2F7", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				exception
			});
		}

		public static LocalizedString ErrorSingleDbCopyMove(string db, string server)
		{
			return new LocalizedString("ErrorSingleDbCopyMove", "Ex0C4975", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise
		{
			get
			{
				return new LocalizedString("ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise", "ExC81551", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToMountDatabaseMissingLogFile(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToMountDatabaseMissingLogFile", "Ex416F5F", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		public static LocalizedString ErrorClientAccessArrayNotFound(string identity)
		{
			return new LocalizedString("ErrorClientAccessArrayNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CasHealthTransactionFailures(string detailedInformation)
		{
			return new LocalizedString("CasHealthTransactionFailures", "Ex4A5C75", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		public static LocalizedString VerboseSearchCompleted(int resultsize)
		{
			return new LocalizedString("VerboseSearchCompleted", "Ex45AEE2", false, true, Strings.ResourceManager, new object[]
			{
				resultsize
			});
		}

		public static LocalizedString CannotCancelWipe(string device)
		{
			return new LocalizedString("CannotCancelWipe", "Ex4CCC43", false, true, Strings.ResourceManager, new object[]
			{
				device
			});
		}

		public static LocalizedString MtrtRequireEncryption
		{
			get
			{
				return new LocalizedString("MtrtRequireEncryption", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoPublishingUri(Uri uri)
		{
			return new LocalizedString("InfoPublishingUri", "ExCE8545", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString ErrorFailedRmsVersionCheckInitialization
		{
			get
			{
				return new LocalizedString("ErrorFailedRmsVersionCheckInitialization", "ExCDFCA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDlpPolicyTemplateNotFound(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyTemplateNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString HybridMailflowInboundConnectorComment
		{
			get
			{
				return new LocalizedString("HybridMailflowInboundConnectorComment", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusMounted
		{
			get
			{
				return new LocalizedString("CopyStatusMounted", "ExBD78B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToResetRecoveryDatabase(string idDatabase, string errMessage)
		{
			return new LocalizedString("FailedToResetRecoveryDatabase", "Ex5941CF", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase,
				errMessage
			});
		}

		public static LocalizedString VerboseBackupIISConfig(string cfgFile)
		{
			return new LocalizedString("VerboseBackupIISConfig", "ExE15DF8", false, true, Strings.ResourceManager, new object[]
			{
				cfgFile
			});
		}

		public static LocalizedString CouldNotFindEWSService
		{
			get
			{
				return new LocalizedString("CouldNotFindEWSService", "Ex1B7626", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewPolicyTipConfig(string name, string val)
		{
			return new LocalizedString("ConfirmationMessageNewPolicyTipConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				val
			});
		}

		public static LocalizedString ErrorNotEnoughInformationToFindUniqueRequest
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughInformationToFindUniqueRequest", "Ex997EF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToStartNodeException(string nodeNames, string dagName)
		{
			return new LocalizedString("FailedToStartNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeNames,
				dagName
			});
		}

		public static LocalizedString DomainControllerNotSpecifiedException
		{
			get
			{
				return new LocalizedString("DomainControllerNotSpecifiedException", "Ex308D26", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CantFindCertBySubject(string IssuedTo)
		{
			return new LocalizedString("CantFindCertBySubject", "Ex1E7C44", false, true, Strings.ResourceManager, new object[]
			{
				IssuedTo
			});
		}

		public static LocalizedString RecipientWithTenantServiceInstanceNotSet(string syncobject)
		{
			return new LocalizedString("RecipientWithTenantServiceInstanceNotSet", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		public static LocalizedString ErrorWebSiteNullOrEmpty
		{
			get
			{
				return new LocalizedString("ErrorWebSiteNullOrEmpty", "ExEA4281", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewPublicFolderMoveRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderMoveRequest", "Ex38B1D5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString VerboseSaveStoreMailboxSecurityDescriptor(string id, string server)
		{
			return new LocalizedString("VerboseSaveStoreMailboxSecurityDescriptor", "Ex67FD32", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		public static LocalizedString ProtectedServiceHostServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("ProtectedServiceHostServiceControlComponentDescription", "ExC89626", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConnectionToIPListRPCEndpointFailed(string serverName)
		{
			return new LocalizedString("ConnectionToIPListRPCEndpointFailed", "Ex65CC7E", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString RemoveOrganizationFailWithSharedConfigurationBacklinks
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailWithSharedConfigurationBacklinks", "ExC1D855", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDeleteDatabaseLogFiles(string server, string oldDir)
		{
			return new LocalizedString("VerboseDeleteDatabaseLogFiles", "Ex3829B7", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		public static LocalizedString ErrorNonZeroValueForShadowRetry(string name, string shadowPreference)
		{
			return new LocalizedString("ErrorNonZeroValueForShadowRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				shadowPreference
			});
		}

		public static LocalizedString ErrorOutlook2010OrLaterRequired(string serverName)
		{
			return new LocalizedString("ErrorOutlook2010OrLaterRequired", "Ex7B33AF", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString PropertyAlreadyHasAnOverride(string property, string overrideName, string workitemType)
		{
			return new LocalizedString("PropertyAlreadyHasAnOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				property,
				overrideName,
				workitemType
			});
		}

		public static LocalizedString InternalTransportCertificateCorruptedInADOnHub
		{
			get
			{
				return new LocalizedString("InternalTransportCertificateCorruptedInADOnHub", "ExE1EC84", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskRemovedNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskRemovedNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorNoDefaultPFDatabaseForTenant
		{
			get
			{
				return new LocalizedString("ErrorNoDefaultPFDatabaseForTenant", "Ex5E3546", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRenamingRole(string roleName, string validationError)
		{
			return new LocalizedString("WarningRenamingRole", "ExF5819A", false, true, Strings.ResourceManager, new object[]
			{
				roleName,
				validationError
			});
		}

		public static LocalizedString ExceptionPerfCounterInvalidDefinitionFile
		{
			get
			{
				return new LocalizedString("ExceptionPerfCounterInvalidDefinitionFile", "Ex505447", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRetentionTagNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRetentionTagNotUnique", "Ex660F33", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmGenerateExchangeCertificate(string friendlyName, string subjectName, string domainNames, AllowedServices services, int keySize)
		{
			return new LocalizedString("ConfirmGenerateExchangeCertificate", "Ex247C34", false, true, Strings.ResourceManager, new object[]
			{
				friendlyName,
				subjectName,
				domainNames,
				services,
				keySize
			});
		}

		public static LocalizedString ConfirmationMessageStartOrganizationUpgrade(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageStartOrganizationUpgrade", "ExC4E446", false, true, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		public static LocalizedString UserNotFoundException(string key)
		{
			return new LocalizedString("UserNotFoundException", "Ex08B9F8", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString PhoneNumberReachQuota
		{
			get
			{
				return new LocalizedString("PhoneNumberReachQuota", "Ex877E6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetExchangeServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeServer", "ExBC3B4C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressInitializeExchangeConfigurationContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInitializeExchangeConfigurationContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecipientHasNoExternalId(string syncobject)
		{
			return new LocalizedString("RecipientHasNoExternalId", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		public static LocalizedString ErrorUserNull
		{
			get
			{
				return new LocalizedString("ErrorUserNull", "Ex4BC4CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OrgIsntOptinError
		{
			get
			{
				return new LocalizedString("OrgIsntOptinError", "Ex967838", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningFailedToDeleteSourceMailbox(string detailError)
		{
			return new LocalizedString("WarningFailedToDeleteSourceMailbox", "ExC7CB45", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		public static LocalizedString SetupProgressMailPublicFolderCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMailPublicFolderCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRunDeliveryAgentConnectorTaskOnEdge
		{
			get
			{
				return new LocalizedString("CannotRunDeliveryAgentConnectorTaskOnEdge", "ExB43CE1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSchemaVersionOutOfRange(string min, string max)
		{
			return new LocalizedString("ErrorSchemaVersionOutOfRange", "", false, false, Strings.ResourceManager, new object[]
			{
				min,
				max
			});
		}

		public static LocalizedString CouldNotGetExecutingUser
		{
			get
			{
				return new LocalizedString("CouldNotGetExecutingUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoUpdatesDirectorySpecified
		{
			get
			{
				return new LocalizedString("NoUpdatesDirectorySpecified", "ExB1159D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SubscriptionCacheOperationFailed(LocalizedString info)
		{
			return new LocalizedString("SubscriptionCacheOperationFailed", "Ex99FDBE", false, true, Strings.ResourceManager, new object[]
			{
				info
			});
		}

		public static LocalizedString SourceMailboxMustBeE15OrLater(string mailbox)
		{
			return new LocalizedString("SourceMailboxMustBeE15OrLater", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString SetupProgressDisableWMIOutbound
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIOutbound", "Ex7DF14B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToReplicateMailbox(string identity, string siteId)
		{
			return new LocalizedString("ErrorFailedToReplicateMailbox", "ExF8F3B2", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				siteId
			});
		}

		public static LocalizedString ValidatingUserObject
		{
			get
			{
				return new LocalizedString("ValidatingUserObject", "ExEA3770", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConversationsADUserIsNull(string user)
		{
			return new LocalizedString("ConversationsADUserIsNull", "ExE60F1E", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorUserNotHaveRoleAssignmentPolicy(string id)
		{
			return new LocalizedString("ErrorUserNotHaveRoleAssignmentPolicy", "Ex7DC2A7", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupProgressAddressListsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressAddressListsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotAutoSuspendMoveAlreadyCompleting(string identity)
		{
			return new LocalizedString("ErrorCannotAutoSuspendMoveAlreadyCompleting", "ExFBB6FF", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotDeletePrecannedRoleAssignmentToRoleGroup(string roleAssignment, string roleGroup)
		{
			return new LocalizedString("ErrorCannotDeletePrecannedRoleAssignmentToRoleGroup", "ExDBF83A", false, true, Strings.ResourceManager, new object[]
			{
				roleAssignment,
				roleGroup
			});
		}

		public static LocalizedString DagTaskUpdatedAdDagMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatedAdDagMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString ErrorGroupNotUniqueOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorGroupNotUniqueOnGlobalCatalog", "Ex3B1259", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		public static LocalizedString ErrorCannotRemoveNonActiveOrganization(string identity)
		{
			return new LocalizedString("ErrorCannotRemoveNonActiveOrganization", "Ex48A3D6", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString RemoveDagConfigurationNeedsZeroDagsException(int dagCount)
		{
			return new LocalizedString("RemoveDagConfigurationNeedsZeroDagsException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagCount
			});
		}

		public static LocalizedString DagFswUnableToParseWitnessServerNameException(Exception ex)
		{
			return new LocalizedString("DagFswUnableToParseWitnessServerNameException", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString SetupComponentAllADRolesPrecompileManagementBinaries
		{
			get
			{
				return new LocalizedString("SetupComponentAllADRolesPrecompileManagementBinaries", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NotifySenderAndRejectMessageShouldBeSingletonAction
		{
			get
			{
				return new LocalizedString("NotifySenderAndRejectMessageShouldBeSingletonAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceNameAs
		{
			get
			{
				return new LocalizedString("ServiceNameAs", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MultipleWebServicesExternalUrlsFound
		{
			get
			{
				return new LocalizedString("MultipleWebServicesExternalUrlsFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmMoveRpcRequested(string db, string server)
		{
			return new LocalizedString("AmMoveRpcRequested", "Ex337ED6", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString MoveMailboxCrossOrgToPt(string src, string targetServer)
		{
			return new LocalizedString("MoveMailboxCrossOrgToPt", "Ex0B3F99", false, true, Strings.ResourceManager, new object[]
			{
				src,
				targetServer
			});
		}

		public static LocalizedString CasHealthSyntaxErrorInResponse(string expectedString, string xmlDocStr)
		{
			return new LocalizedString("CasHealthSyntaxErrorInResponse", "ExD98AF0", false, true, Strings.ResourceManager, new object[]
			{
				expectedString,
				xmlDocStr
			});
		}

		public static LocalizedString ConfirmationMessageRemoveIntraOrganizationConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SuccessDisableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("SuccessDisableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageTestLiveIdAuthenticationIdentity(string identity)
		{
			return new LocalizedString("ConfirmationMessageTestLiveIdAuthenticationIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotRemoveMigrationUserFromPublicFolderBatch
		{
			get
			{
				return new LocalizedString("ErrorCannotRemoveMigrationUserFromPublicFolderBatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithCustomFilter(string Name, string RecipientFilter, string EnabledEmailAddressTemplates)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithCustomFilter", "ExAFA4E1", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				RecipientFilter,
				EnabledEmailAddressTemplates
			});
		}

		public static LocalizedString ConfirmationMessageSuspendOnlineMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSuspendOnlineMoveRequest", "Ex21BFDB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetSecondaryDomain(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetSecondaryDomain", "Ex9742B9", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString RemoteContinuousReplication
		{
			get
			{
				return new LocalizedString("RemoteContinuousReplication", "ExE5C216", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaAuthMethodSeparator
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthMethodSeparator", "ExF16DA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagNetworkSubnetAssignmentIncomplete
		{
			get
			{
				return new LocalizedString("DagNetworkSubnetAssignmentIncomplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetPop3ConfigurationTask
		{
			get
			{
				return new LocalizedString("GetPop3ConfigurationTask", "ExE956A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddDatabaseCopyAllCopiesMustBeInTheDagException(string databaseName, string server1, string dag1, string server2)
		{
			return new LocalizedString("AddDatabaseCopyAllCopiesMustBeInTheDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName,
				server1,
				dag1,
				server2
			});
		}

		public static LocalizedString CasHealthOwaCasColon(string casServerName)
		{
			return new LocalizedString("CasHealthOwaCasColon", "Ex87C095", false, true, Strings.ResourceManager, new object[]
			{
				casServerName
			});
		}

		public static LocalizedString ResourceOnly(string parm)
		{
			return new LocalizedString("ResourceOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				parm
			});
		}

		public static LocalizedString MultipleOrgMbxesWithCapability(string capability)
		{
			return new LocalizedString("MultipleOrgMbxesWithCapability", "", false, false, Strings.ResourceManager, new object[]
			{
				capability
			});
		}

		public static LocalizedString ErrorMailboxDumpsterExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorMailboxDumpsterExceedsTargetQuota", "Ex23FD58", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		public static LocalizedString UninstallTransportSyncManagerServiceTask
		{
			get
			{
				return new LocalizedString("UninstallTransportSyncManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuxToAuxAttachment(string parent)
		{
			return new LocalizedString("ErrorAuxToAuxAttachment", "", false, false, Strings.ResourceManager, new object[]
			{
				parent
			});
		}

		public static LocalizedString ConfirmationMessageUninstallDlpPolicyTemplate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUninstallDlpPolicyTemplate", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString RegSvr32NotFound
		{
			get
			{
				return new LocalizedString("RegSvr32NotFound", "Ex33AE2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRedirectionEntryFailedToAdd(string domainName)
		{
			return new LocalizedString("ErrorRedirectionEntryFailedToAdd", "Ex4F8CFC", false, true, Strings.ResourceManager, new object[]
			{
				domainName
			});
		}

		public static LocalizedString ErrorTeamMailboxGetByNonMember(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxGetByNonMember", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		public static LocalizedString ErrorDlpPolicyIsNotInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyIsNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningCloseGroupMemberJoinForNoArbitrationMbx(string id)
		{
			return new LocalizedString("WarningCloseGroupMemberJoinForNoArbitrationMbx", "Ex326511", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorOfProtocolCommand(string protocol, string response)
		{
			return new LocalizedString("ErrorOfProtocolCommand", "ExA72350", false, true, Strings.ResourceManager, new object[]
			{
				protocol,
				response
			});
		}

		public static LocalizedString DagTaskDagNameMustBeComputerNameExceptionM1(string dagName)
		{
			return new LocalizedString("DagTaskDagNameMustBeComputerNameExceptionM1", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		public static LocalizedString ErrorNoRetentionPolicyForTeamMailbox(string user)
		{
			return new LocalizedString("ErrorNoRetentionPolicyForTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorRemoveMailboxWithAssociatedApprovalRecipents(string id)
		{
			return new LocalizedString("ErrorRemoveMailboxWithAssociatedApprovalRecipents", "Ex4DCA40", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageAddMailboxPermissionAccessRights(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxPermissionAccessRights", "Ex205202", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxPlan(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxPlan", "Ex3F35AF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString RPSSvcNotRunning
		{
			get
			{
				return new LocalizedString("RPSSvcNotRunning", "Ex969798", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceReachedStatus(string servicename, string status)
		{
			return new LocalizedString("ServiceReachedStatus", "ExA7C908", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status
			});
		}

		public static LocalizedString ErrorLiveDomainInaccessibleEpr(string message, string Url)
		{
			return new LocalizedString("ErrorLiveDomainInaccessibleEpr", "Ex35E364", false, true, Strings.ResourceManager, new object[]
			{
				message,
				Url
			});
		}

		public static LocalizedString ConfirmationMessageUnconfigureWSManIISHosting
		{
			get
			{
				return new LocalizedString("ConfirmationMessageUnconfigureWSManIISHosting", "ExA89BAF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationTestAssistantHealth
		{
			get
			{
				return new LocalizedString("ConfirmationTestAssistantHealth", "Ex36D70B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetInterceptorRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetInterceptorRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningPreferredServerReplaced(string newDc, string oldDc, string domain)
		{
			return new LocalizedString("WarningPreferredServerReplaced", "ExB9F160", false, true, Strings.ResourceManager, new object[]
			{
				newDc,
				oldDc,
				domain
			});
		}

		public static LocalizedString ErrorPerfcountersInvalid
		{
			get
			{
				return new LocalizedString("ErrorPerfcountersInvalid", "Ex3B2256", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthCouldNotLogUserNoDetailedInfo(string userName, string mailboxServerName, string scriptName)
		{
			return new LocalizedString("CasHealthCouldNotLogUserNoDetailedInfo", "Ex8C03F4", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				mailboxServerName,
				scriptName
			});
		}

		public static LocalizedString ConnectorIPRangeContainsInvalidIPv4AddressId(string ipRange)
		{
			return new LocalizedString("ConnectorIPRangeContainsInvalidIPv4AddressId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		public static LocalizedString ProgressActivityPushFederationServer(string server)
		{
			return new LocalizedString("ProgressActivityPushFederationServer", "ExF189AC", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString IPv6AddressesRangesAreNotAllowedInConnectorId(string ipRange)
		{
			return new LocalizedString("IPv6AddressesRangesAreNotAllowedInConnectorId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		public static LocalizedString ReplicationCheckWarningsLabel
		{
			get
			{
				return new LocalizedString("ReplicationCheckWarningsLabel", "Ex35B661", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AvailabilityConfigReadException(string dn)
		{
			return new LocalizedString("AvailabilityConfigReadException", "Ex0707DC", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ErrorCannotDisableLastArbitrationMailboxInOrganization(string mbxId)
		{
			return new LocalizedString("ErrorCannotDisableLastArbitrationMailboxInOrganization", "ExE44936", false, true, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString WarningNoNeedToConvertMailboxType(string id, string type)
		{
			return new LocalizedString("WarningNoNeedToConvertMailboxType", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		public static LocalizedString GetQueueDigestServerNoServerFoundInDag(string dag)
		{
			return new LocalizedString("GetQueueDigestServerNoServerFoundInDag", "", false, false, Strings.ResourceManager, new object[]
			{
				dag
			});
		}

		public static LocalizedString VerboseFindAutoDiscoverUrl(string url, string address)
		{
			return new LocalizedString("VerboseFindAutoDiscoverUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url,
				address
			});
		}

		public static LocalizedString WarningFailedToMailEnableSourceAccount(string detailError)
		{
			return new LocalizedString("WarningFailedToMailEnableSourceAccount", "Ex9F930F", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		public static LocalizedString UserHasNoFederatedIdentity(string user)
		{
			return new LocalizedString("UserHasNoFederatedIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorInvalidOperationOnAddDBCopyForRecoveryDB(string pfdb)
		{
			return new LocalizedString("ErrorInvalidOperationOnAddDBCopyForRecoveryDB", "Ex5EE46A", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString ErrorInheritedObjectTypeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorInheritedObjectTypeNotFound", "ExD2EE76", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString MigrationPortVerificationFailed(int port, int minValue, int maxValue)
		{
			return new LocalizedString("MigrationPortVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				port,
				minValue,
				maxValue
			});
		}

		public static LocalizedString ElcUserConfigurationServiceBindingNotAvailable
		{
			get
			{
				return new LocalizedString("ElcUserConfigurationServiceBindingNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMailboxCalendarConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxCalendarConfiguration", "ExFF4964", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UninstallFrontendTransportRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallFrontendTransportRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetExchangeUpgradeBucket(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeUpgradeBucket", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorBadItemLimitAlreadyExceeded(string identity, int encountered, int newlimit)
		{
			return new LocalizedString("ErrorBadItemLimitAlreadyExceeded", "ExD61E59", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				encountered,
				newlimit
			});
		}

		public static LocalizedString FailedDeleteTempDatabaseLogFiles(string server, string oldDir)
		{
			return new LocalizedString("FailedDeleteTempDatabaseLogFiles", "Ex9622C7", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		public static LocalizedString ActiveDirectoryConnectivityExceptionThrown(string e)
		{
			return new LocalizedString("ActiveDirectoryConnectivityExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString AdminAuditLogSearchTimeout(string timeout)
		{
			return new LocalizedString("AdminAuditLogSearchTimeout", "ExD48EFD", false, true, Strings.ResourceManager, new object[]
			{
				timeout
			});
		}

		public static LocalizedString ConfirmationMessageNewManagementScope(string type, string filter, string root)
		{
			return new LocalizedString("ConfirmationMessageNewManagementScope", "ExB475EA", false, true, Strings.ResourceManager, new object[]
			{
				type,
				filter,
				root
			});
		}

		public static LocalizedString CommentsTooLong(int limit, int actual)
		{
			return new LocalizedString("CommentsTooLong", "Ex2A9DD7", false, true, Strings.ResourceManager, new object[]
			{
				limit,
				actual
			});
		}

		public static LocalizedString SetupProgressStartingTransportSyncManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingTransportSyncManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAlsEncounteredUnexpectedException
		{
			get
			{
				return new LocalizedString("ErrorAlsEncounteredUnexpectedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CrossPremiseProbesPending(string source, string target)
		{
			return new LocalizedString("CrossPremiseProbesPending", "ExA7E7AB", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString InvalidEventType
		{
			get
			{
				return new LocalizedString("InvalidEventType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOffboardingDisabled
		{
			get
			{
				return new LocalizedString("ErrorOffboardingDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressOwaSmsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaSmsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyScriptExecutionError(string error)
		{
			return new LocalizedString("DlpPolicyScriptExecutionError", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString WarningRemoveRoleAssignmentToBlockSelf(string id, string roleId)
		{
			return new LocalizedString("WarningRemoveRoleAssignmentToBlockSelf", "ExF169FA", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleId
			});
		}

		public static LocalizedString CasHealthOwaPingStart(string url)
		{
			return new LocalizedString("CasHealthOwaPingStart", "Ex2C9979", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString E4eLicensingIsDisabledEnableRule
		{
			get
			{
				return new LocalizedString("E4eLicensingIsDisabledEnableRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddResubmitRequestFailed(AddResubmitRequestStatus status)
		{
			return new LocalizedString("AddResubmitRequestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				status
			});
		}

		public static LocalizedString ConfirmationMessageSetFailedMSOSyncObject(string objectId)
		{
			return new LocalizedString("ConfirmationMessageSetFailedMSOSyncObject", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString ErrorInvalidRecipientType(string recipientName, string recipientType)
		{
			return new LocalizedString("ErrorInvalidRecipientType", "ExADDDAF", false, true, Strings.ResourceManager, new object[]
			{
				recipientName,
				recipientType
			});
		}

		public static LocalizedString ErrorWorkloadManagementPolicyNotUnique(string id)
		{
			return new LocalizedString("ErrorWorkloadManagementPolicyNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString IsNTDSRunningScenario
		{
			get
			{
				return new LocalizedString("IsNTDSRunningScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UsingAuthenticationCredentials(string credentials)
		{
			return new LocalizedString("UsingAuthenticationCredentials", "", false, false, Strings.ResourceManager, new object[]
			{
				credentials
			});
		}

		public static LocalizedString VerboseUpdatingVersion(string id, string oldVersion, string newVersion)
		{
			return new LocalizedString("VerboseUpdatingVersion", "ExDBDAE9", false, true, Strings.ResourceManager, new object[]
			{
				id,
				oldVersion,
				newVersion
			});
		}

		public static LocalizedString SetupProgressGenericPerfCounters
		{
			get
			{
				return new LocalizedString("SetupProgressGenericPerfCounters", "Ex566DC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxUserNotFoundException(string mailboxName)
		{
			return new LocalizedString("MailboxUserNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxName
			});
		}

		public static LocalizedString MomConnectorServiceDescription
		{
			get
			{
				return new LocalizedString("MomConnectorServiceDescription", "ExDA154B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotFindMoveRequestWithStatusNone
		{
			get
			{
				return new LocalizedString("ErrorCannotFindMoveRequestWithStatusNone", "Ex5EF75D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveEdgeSubscription(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSubscription", "ExD8E144", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SendConnectorDashdashSmarthostNotOffEdge
		{
			get
			{
				return new LocalizedString("SendConnectorDashdashSmarthostNotOffEdge", "Ex34434F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRetentionPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRetentionPolicy", "Ex4A7AF4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ProgressCompleting
		{
			get
			{
				return new LocalizedString("ProgressCompleting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressInstallTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressInstallTransportLogSearchService", "Ex2CBF6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUpdateManagementVDirForRemoteServer(string id, string localServerFqdn, string remoteServerDN)
		{
			return new LocalizedString("ErrorUpdateManagementVDirForRemoteServer", "Ex7C8264", false, true, Strings.ResourceManager, new object[]
			{
				id,
				localServerFqdn,
				remoteServerDN
			});
		}

		public static LocalizedString FailedToResetOabPublicFolderDistribution(string offlineAddressBook, string pfdb, string error)
		{
			return new LocalizedString("FailedToResetOabPublicFolderDistribution", "Ex9E0B76", false, true, Strings.ResourceManager, new object[]
			{
				offlineAddressBook,
				pfdb,
				error
			});
		}

		public static LocalizedString ErrorMailboxDatabaseToRecoverIsRecoveryMailboxDatabase(string mailboxDatabase)
		{
			return new LocalizedString("ErrorMailboxDatabaseToRecoverIsRecoveryMailboxDatabase", "ExA83633", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		public static LocalizedString ErrorCannotRetrieveRidManagerContainer(string length)
		{
			return new LocalizedString("ErrorCannotRetrieveRidManagerContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				length
			});
		}

		public static LocalizedString RequestIndexEntryIsMissingLocalUserData(string name)
		{
			return new LocalizedString("RequestIndexEntryIsMissingLocalUserData", "Ex3D3B69", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorParameterRequired(string parameterName)
		{
			return new LocalizedString("ErrorParameterRequired", "Ex947A03", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxShared(string Name, string Shared, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxShared", "ExD6A8D8", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Shared,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString GetProtocolLogNeedsRecipients
		{
			get
			{
				return new LocalizedString("GetProtocolLogNeedsRecipients", "Ex70EA20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClusterNetworkCheckDesc
		{
			get
			{
				return new LocalizedString("ClusterNetworkCheckDesc", "Ex14C346", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailuserAndLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailuserAndLiveId", "ExB93C68", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		public static LocalizedString CannotSetTargetDeliveryDomainOnWildCardDomains(string domain)
		{
			return new LocalizedString("CannotSetTargetDeliveryDomainOnWildCardDomains", "Ex30BC5D", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString SetupComponentConfiguringRpcClientAccessProtocol
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringRpcClientAccessProtocol", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SiteMailboxLinkedToSharePointSite(string url)
		{
			return new LocalizedString("SiteMailboxLinkedToSharePointSite", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString VerboseSettingDisableAggregation(string value)
		{
			return new LocalizedString("VerboseSettingDisableAggregation", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString CannotSetWebServiceRoleEntry(string entryName)
		{
			return new LocalizedString("CannotSetWebServiceRoleEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				entryName
			});
		}

		public static LocalizedString ErrorWSManRegistryCorrupted
		{
			get
			{
				return new LocalizedString("ErrorWSManRegistryCorrupted", "ExC9BC62", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdminAuditLogSearchOutOfRangeResultSize(int maxResultSize)
		{
			return new LocalizedString("AdminAuditLogSearchOutOfRangeResultSize", "Ex635891", false, true, Strings.ResourceManager, new object[]
			{
				maxResultSize
			});
		}

		public static LocalizedString InvalidTestAccountRequest
		{
			get
			{
				return new LocalizedString("InvalidTestAccountRequest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotFindTargetDeliveryDomain
		{
			get
			{
				return new LocalizedString("ErrorCannotFindTargetDeliveryDomain", "Ex1E71DA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxRoleDisplayName
		{
			get
			{
				return new LocalizedString("MailboxRoleDisplayName", "Ex4A06BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringInfoWorker
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringInfoWorker", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClientAccessIisWebServiceExtensionsDescription
		{
			get
			{
				return new LocalizedString("ClientAccessIisWebServiceExtensionsDescription", "Ex303662", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuthenticationFailed(string errstring)
		{
			return new LocalizedString("ErrorAuthenticationFailed", "ExD1234C", false, true, Strings.ResourceManager, new object[]
			{
				errstring
			});
		}

		public static LocalizedString ErrorManageDelegation2ProofDomainOwnership
		{
			get
			{
				return new LocalizedString("ErrorManageDelegation2ProofDomainOwnership", "ExAB4E6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImportNodeNameDoesNotMatch(string expectedName, string actualName)
		{
			return new LocalizedString("ImportNodeNameDoesNotMatch", "", false, false, Strings.ResourceManager, new object[]
			{
				expectedName,
				actualName
			});
		}

		public static LocalizedString CasHealthOwaHttpGetNonOkayForLogoff(int code, string name)
		{
			return new LocalizedString("CasHealthOwaHttpGetNonOkayForLogoff", "Ex9CE3D8", false, true, Strings.ResourceManager, new object[]
			{
				code,
				name
			});
		}

		public static LocalizedString CasHealthOwaFbaAuthTypeNotExpected
		{
			get
			{
				return new LocalizedString("CasHealthOwaFbaAuthTypeNotExpected", "Ex55B891", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImportCertificateDataInvalid
		{
			get
			{
				return new LocalizedString("ImportCertificateDataInvalid", "ExA7F8A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotSpecifyBothAllDomainsAndDomain
		{
			get
			{
				return new LocalizedString("CannotSpecifyBothAllDomainsAndDomain", "Ex3A5F77", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RegisterComInteropTlbTask
		{
			get
			{
				return new LocalizedString("RegisterComInteropTlbTask", "Ex70AEE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExchangeAdministrativeGroupNotFoundDueToAdReplicationLatent(string group)
		{
			return new LocalizedString("ErrorExchangeAdministrativeGroupNotFoundDueToAdReplicationLatent", "ExEABDD8", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString MoveMailboxUnexpectedReportingProgress(string error)
		{
			return new LocalizedString("MoveMailboxUnexpectedReportingProgress", "Ex1EF7D8", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ErrorThrottlingPolicyMustBeSpecified
		{
			get
			{
				return new LocalizedString("ErrorThrottlingPolicyMustBeSpecified", "Ex665B24", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NotifySenderActionRequiresMcdcPredicate
		{
			get
			{
				return new LocalizedString("NotifySenderActionRequiresMcdcPredicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageGetDatabaseAvailabilityGroupConfiguration(string Server)
		{
			return new LocalizedString("ConfirmationMessageGetDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString ErrorServicePlanIsDeprecated(string name, string plan, string programId)
		{
			return new LocalizedString("ErrorServicePlanIsDeprecated", "Ex3DCCB3", false, true, Strings.ResourceManager, new object[]
			{
				name,
				plan,
				programId
			});
		}

		public static LocalizedString InfoGroupAlreadyPresent(string group)
		{
			return new LocalizedString("InfoGroupAlreadyPresent", "Ex9B2278", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString ErrorCannotDisableFederation
		{
			get
			{
				return new LocalizedString("ErrorCannotDisableFederation", "Ex04D89A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCheckPFDatabaseLocalReplicas(string id)
		{
			return new LocalizedString("VerboseCheckPFDatabaseLocalReplicas", "Ex3A85A7", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageAuthNewInProgress
		{
			get
			{
				return new LocalizedString("ConfirmationMessageAuthNewInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RunConfigUpdaterRpcVerbose(string server, string database)
		{
			return new LocalizedString("RunConfigUpdaterRpcVerbose", "ExE27E57", false, true, Strings.ResourceManager, new object[]
			{
				server,
				database
			});
		}

		public static LocalizedString SyncNowFailedToRunException
		{
			get
			{
				return new LocalizedString("SyncNowFailedToRunException", "Ex381ACF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRemoveApprovalApplicationWithMailboxes
		{
			get
			{
				return new LocalizedString("CannotRemoveApprovalApplicationWithMailboxes", "Ex555F36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddIPBlockListEntryIPRange(string IPRange)
		{
			return new LocalizedString("ConfirmationMessageAddIPBlockListEntryIPRange", "Ex432605", false, true, Strings.ResourceManager, new object[]
			{
				IPRange
			});
		}

		public static LocalizedString RuleNameAlreadyExists
		{
			get
			{
				return new LocalizedString("RuleNameAlreadyExists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRetiredOrganizationFound(string name)
		{
			return new LocalizedString("ErrorRetiredOrganizationFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString VerboseUnmountDatabase(string id)
		{
			return new LocalizedString("VerboseUnmountDatabase", "Ex21681B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString DefaultAllModernGroups
		{
			get
			{
				return new LocalizedString("DefaultAllModernGroups", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RejectText
		{
			get
			{
				return new LocalizedString("RejectText", "ExD78C2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidWMAFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidWMAFormat", "ExDE2E0E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxReplicationServiceNotResponding(LocalizedString error)
		{
			return new LocalizedString("MailboxReplicationServiceNotResponding", "Ex8C5305", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString PartialVerisonMatch
		{
			get
			{
				return new LocalizedString("PartialVerisonMatch", "ExF481C4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaUriHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaUriHeader", "ExAEED5C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingMailboxAssistantService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingMailboxAssistantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCreatePSFanInProvider
		{
			get
			{
				return new LocalizedString("VerboseCreatePSFanInProvider", "Ex8A2869", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString JournalingParameterErrorFullReportWithoutGcc
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorFullReportWithoutGcc", "ExF53F6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseFilterMustBeValid(string m)
		{
			return new LocalizedString("DatabaseFilterMustBeValid", "Ex7DA160", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		public static LocalizedString MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour
		{
			get
			{
				return new LocalizedString("MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotGenerateSiteMailboxAlias
		{
			get
			{
				return new LocalizedString("ErrorCannotGenerateSiteMailboxAlias", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ResumeSgcTimeout
		{
			get
			{
				return new LocalizedString("ResumeSgcTimeout", "Ex6C4233", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UsingTargetMailbox(string targetMailbox)
		{
			return new LocalizedString("UsingTargetMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				targetMailbox
			});
		}

		public static LocalizedString ProgressActivityNewFederationTrust
		{
			get
			{
				return new LocalizedString("ProgressActivityNewFederationTrust", "Ex28630C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOnboardingDisabled
		{
			get
			{
				return new LocalizedString("ErrorOnboardingDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseUninstallWSManModule(string module)
		{
			return new LocalizedString("VerboseUninstallWSManModule", "ExBEA949", false, true, Strings.ResourceManager, new object[]
			{
				module
			});
		}

		public static LocalizedString ConfirmationMessageSetClientAccessArray(string idStringValue)
		{
			return new LocalizedString("ConfirmationMessageSetClientAccessArray", "Ex058132", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString DomainControllerServerNotFound(string serverName)
		{
			return new LocalizedString("DomainControllerServerNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString CompletedAceActivity
		{
			get
			{
				return new LocalizedString("CompletedAceActivity", "ExEBAAE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantNotificationDebugFormatMessageFailed(CultureInfo language)
		{
			return new LocalizedString("TenantNotificationDebugFormatMessageFailed", "ExDDAEFE", false, true, Strings.ResourceManager, new object[]
			{
				language
			});
		}

		public static LocalizedString ErrorSpecifyOrganizatonAndContainerBoth
		{
			get
			{
				return new LocalizedString("ErrorSpecifyOrganizatonAndContainerBoth", "Ex8DA906", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToRetrieveManagedFolder
		{
			get
			{
				return new LocalizedString("UnableToRetrieveManagedFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMobileSyncVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMobileSyncVirtualDirectory", "Ex4C366E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString AddressRewriteWildcardWarning
		{
			get
			{
				return new LocalizedString("AddressRewriteWildcardWarning", "ExBA842F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationMailboxLimitExceeded(int maxCount)
		{
			return new LocalizedString("MigrationMailboxLimitExceeded", "ExBEBEDD", false, true, Strings.ResourceManager, new object[]
			{
				maxCount
			});
		}

		public static LocalizedString ForeignConnectorNullOrEmptyDropDirectory
		{
			get
			{
				return new LocalizedString("ForeignConnectorNullOrEmptyDropDirectory", "ExD6AD20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringAddressBookService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringAddressBookService", "ExBF1D0A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTemplatesMayNotContainImmutableIds
		{
			get
			{
				return new LocalizedString("ErrorTemplatesMayNotContainImmutableIds", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDedicatedMailboxPlanNotFound(string mailboxPlanName)
		{
			return new LocalizedString("WarningDedicatedMailboxPlanNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxPlanName
			});
		}

		public static LocalizedString AuthenticationMethodWindowsIntegrated
		{
			get
			{
				return new LocalizedString("AuthenticationMethodWindowsIntegrated", "Ex96B353", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeSyncEhfConnectorWithSiteSpecified(string id)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSyncEhfConnectorWithSiteSpecified", "ExA9E753", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString StartOrganizationUpgradeDescription
		{
			get
			{
				return new LocalizedString("StartOrganizationUpgradeDescription", "Ex31CC64", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSyncAccountsMirroredAccountsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsMirroredAccountsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorManagedByCannotBeEmpty
		{
			get
			{
				return new LocalizedString("ErrorManagedByCannotBeEmpty", "ExB06609", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToRenameEndUserRoleNameAlreadyExist(string actualEndUserRole, string targetEndUserRoleName)
		{
			return new LocalizedString("ErrorUnableToRenameEndUserRoleNameAlreadyExist", "ExF3C4E1", false, true, Strings.ResourceManager, new object[]
			{
				actualEndUserRole,
				targetEndUserRoleName
			});
		}

		public static LocalizedString ErrorSharePointSiteHasNoValidWebCollectionUrl(string url)
		{
			return new LocalizedString("ErrorSharePointSiteHasNoValidWebCollectionUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString VerifyStoreServiceExists
		{
			get
			{
				return new LocalizedString("VerifyStoreServiceExists", "Ex333B4E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToValidateTemplate(Guid templateId, WellKnownErrorCode eCode)
		{
			return new LocalizedString("FailedToValidateTemplate", "", false, false, Strings.ResourceManager, new object[]
			{
				templateId,
				eCode
			});
		}

		public static LocalizedString DefaultUser
		{
			get
			{
				return new LocalizedString("DefaultUser", "Ex4A31FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDumpsterTagWrongRetentionAction
		{
			get
			{
				return new LocalizedString("ErrorDumpsterTagWrongRetentionAction", "Ex56E4E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerbosePathOnFixedOrNetworkDriveCondition(string server, string path)
		{
			return new LocalizedString("VerbosePathOnFixedOrNetworkDriveCondition", "ExB5C1D7", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		public static LocalizedString ErrorAuthCannotDeleteCurrent
		{
			get
			{
				return new LocalizedString("ErrorAuthCannotDeleteCurrent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGrantSendOnBehalfToRecipientTypeError(string recipient)
		{
			return new LocalizedString("ErrorGrantSendOnBehalfToRecipientTypeError", "ExE27825", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ErrorCannedRoleGroupCannotBeEmpty(string roleGroupName, string membersToRemove)
		{
			return new LocalizedString("ErrorCannedRoleGroupCannotBeEmpty", "ExE62E99", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupName,
				membersToRemove
			});
		}

		public static LocalizedString MonitoringItemAlreadyHasLocalOverride(string workitem, string overrideName, string workitemType)
		{
			return new LocalizedString("MonitoringItemAlreadyHasLocalOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				workitem,
				overrideName,
				workitemType
			});
		}

		public static LocalizedString MismatchedFederation(string localTokenIssuerUri, string remoteTokenIssuerUris, string localApplicationUri, string remoteApplicationUris)
		{
			return new LocalizedString("MismatchedFederation", "", false, false, Strings.ResourceManager, new object[]
			{
				localTokenIssuerUri,
				remoteTokenIssuerUris,
				localApplicationUri,
				remoteApplicationUris
			});
		}

		public static LocalizedString ProvideSnapinNameForCmdletEntryForRole(string roleType)
		{
			return new LocalizedString("ProvideSnapinNameForCmdletEntryForRole", "Ex1C0F03", false, true, Strings.ResourceManager, new object[]
			{
				roleType
			});
		}

		public static LocalizedString ErrorUserOrSecurityGroupNotFound(string id)
		{
			return new LocalizedString("ErrorUserOrSecurityGroupNotFound", "ExC607B5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterSourceServer(string sourceserver, string targetserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterSourceServer", "Ex257B3A", false, true, Strings.ResourceManager, new object[]
			{
				sourceserver,
				targetserver
			});
		}

		public static LocalizedString ProgressActivityRemovingManagementRoleTree(string id)
		{
			return new LocalizedString("ProgressActivityRemovingManagementRoleTree", "Ex532853", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ServiceDidNotReachStatus(string servicename, string status)
		{
			return new LocalizedString("ServiceDidNotReachStatus", "Ex3B7627", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status
			});
		}

		public static LocalizedString TestMailflowInvalidTargetEmailAddress(string targetEmailAddress)
		{
			return new LocalizedString("TestMailflowInvalidTargetEmailAddress", "ExB6A436", false, true, Strings.ResourceManager, new object[]
			{
				targetEmailAddress
			});
		}

		public static LocalizedString ServerLocatorServiceCheckDesc
		{
			get
			{
				return new LocalizedString("ServerLocatorServiceCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOrganizationNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOrganizationNotUnique", "Ex77A3D2", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString AuthenticationMethodUnknown
		{
			get
			{
				return new LocalizedString("AuthenticationMethodUnknown", "Ex3B4F20", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemovePhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemovePhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorCannotGenerateExternalDirectoryObjectIdOnInternalRecipientType(string id, string recipientType)
		{
			return new LocalizedString("ErrorCannotGenerateExternalDirectoryObjectIdOnInternalRecipientType", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				recipientType
			});
		}

		public static LocalizedString FileDistributionServiceComponentDescription
		{
			get
			{
				return new LocalizedString("FileDistributionServiceComponentDescription", "Ex968A86", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TotalFolderSize(string folderPath)
		{
			return new LocalizedString("TotalFolderSize", "", false, false, Strings.ResourceManager, new object[]
			{
				folderPath
			});
		}

		public static LocalizedString MtrtMessageDefer
		{
			get
			{
				return new LocalizedString("MtrtMessageDefer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorErrorInvalidConditionMatchTypePair(string value, string error)
		{
			return new LocalizedString("InterceptorErrorInvalidConditionMatchTypePair", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				error
			});
		}

		public static LocalizedString ErrorExistingAuthServerWithDefaultAuthorizationEndpoint(string authServer)
		{
			return new LocalizedString("ErrorExistingAuthServerWithDefaultAuthorizationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer
			});
		}

		public static LocalizedString ConfirmationResettingPartitionTrust(string partitionName, string trust)
		{
			return new LocalizedString("ConfirmationResettingPartitionTrust", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName,
				trust
			});
		}

		public static LocalizedString OrganizationNotSpecified
		{
			get
			{
				return new LocalizedString("OrganizationNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToGenerateRandomPassword(string password, string fullName, string accounName, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToGenerateRandomPassword", "Ex87B08C", false, true, Strings.ResourceManager, new object[]
			{
				password,
				fullName,
				accounName,
				errorMessage
			});
		}

		public static LocalizedString ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified
		{
			get
			{
				return new LocalizedString("ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagNodeNotFound(string nodeName)
		{
			return new LocalizedString("DagNodeNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName
			});
		}

		public static LocalizedString NoValidIssuerCertificate
		{
			get
			{
				return new LocalizedString("NoValidIssuerCertificate", "ExC92FFF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallMigrationWorkflowServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMigrationWorkflowServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateGlobalAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateGlobalAddressList", "Ex93C79A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MustSpecifyEitherAccessOrExtendedRightsException
		{
			get
			{
				return new LocalizedString("MustSpecifyEitherAccessOrExtendedRightsException", "ExBBAA3C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OrganizationHasNoFederatedDomains(string organization)
		{
			return new LocalizedString("OrganizationHasNoFederatedDomains", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString ErrorRequestCompletedDuringCancellation(string indexEntry)
		{
			return new LocalizedString("ErrorRequestCompletedDuringCancellation", "ExCEC05F", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		public static LocalizedString RpcClientAccessServiceDescription
		{
			get
			{
				return new LocalizedString("RpcClientAccessServiceDescription", "Ex286B2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidMailboxAssociationIdentity(string input)
		{
			return new LocalizedString("ErrorInvalidMailboxAssociationIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				input
			});
		}

		public static LocalizedString ConfirmationMessageNewMapiVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewMapiVirtualDirectory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthPowerShellConnectionAuthenticationType(string authType)
		{
			return new LocalizedString("CasHealthPowerShellConnectionAuthenticationType", "ExE00DA0", false, true, Strings.ResourceManager, new object[]
			{
				authType
			});
		}

		public static LocalizedString VerboseResolvingRecipientOrganizationalUnitScope
		{
			get
			{
				return new LocalizedString("VerboseResolvingRecipientOrganizationalUnitScope", "Ex82A98A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRetentionPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRetentionPolicyNotUnique", "ExAA47FB", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString CasHealthEcpServiceRequestResult(string statusCode)
		{
			return new LocalizedString("CasHealthEcpServiceRequestResult", "Ex443C5B", false, true, Strings.ResourceManager, new object[]
			{
				statusCode
			});
		}

		public static LocalizedString ErrorLargeItemLimitAlreadyExceeded(string name, int encountered, string newlimit)
		{
			return new LocalizedString("ErrorLargeItemLimitAlreadyExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				encountered,
				newlimit
			});
		}

		public static LocalizedString ErrorELCFolderNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorELCFolderNotUnique", "Ex77A43F", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString AutodiscoverySuccess
		{
			get
			{
				return new LocalizedString("AutodiscoverySuccess", "Ex2407E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppNoSession(string hostName, string message, string innerMessage)
		{
			return new LocalizedString("CasHealthWebAppNoSession", "Ex21303E", false, true, Strings.ResourceManager, new object[]
			{
				hostName,
				message,
				innerMessage
			});
		}

		public static LocalizedString ConfirmationMessageAutoTagTrain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageAutoTagTrain", "Ex8DCF83", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageRemoveInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageRemoveInboxRule", "Ex360915", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		public static LocalizedString CentralAdminServiceDescription
		{
			get
			{
				return new LocalizedString("CentralAdminServiceDescription", "ExD95CE1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaTestUrlSpecified(string url)
		{
			return new LocalizedString("CasHealthOwaTestUrlSpecified", "ExC95D31", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ParsingTokenIssuerCertificate(string thumbprint)
		{
			return new LocalizedString("ParsingTokenIssuerCertificate", "Ex7E1125", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorCannotSetDowngradedExchangeServerAuthOnEdge
		{
			get
			{
				return new LocalizedString("ErrorCannotSetDowngradedExchangeServerAuthOnEdge", "Ex1BEC33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationCsvStreamParameterInvalid
		{
			get
			{
				return new LocalizedString("MigrationCsvStreamParameterInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallMailSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentMalwareFiltering
		{
			get
			{
				return new LocalizedString("SetupComponentMalwareFiltering", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProtolcolWarnTrustAllCertificates
		{
			get
			{
				return new LocalizedString("ProtolcolWarnTrustAllCertificates", "Ex860457", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxServerNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxServerNotFound", "ExD2A29B", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorDirectoryManagementWebServiceNotFound(string path)
		{
			return new LocalizedString("ErrorDirectoryManagementWebServiceNotFound", "Ex340AF9", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString SafeSendersNotUpdated(int contacts, int safeSenders, int safeSenderDomains, string identity)
		{
			return new LocalizedString("SafeSendersNotUpdated", "ExB7A18E", false, true, Strings.ResourceManager, new object[]
			{
				contacts,
				safeSenders,
				safeSenderDomains,
				identity
			});
		}

		public static LocalizedString ErrorLocalNotForTenantAdmins
		{
			get
			{
				return new LocalizedString("ErrorLocalNotForTenantAdmins", "Ex67D621", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMailboxAuditLogAgeLimitZero(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxAuditLogAgeLimitZero", "Ex01C8D3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailboxWithRemoteArchive(string Name, string ArchiveDomain)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxWithRemoteArchive", "ExA166D3", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ArchiveDomain
			});
		}

		public static LocalizedString AttemptToMakeUserLogon
		{
			get
			{
				return new LocalizedString("AttemptToMakeUserLogon", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRoleNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRoleNotUnique", "Ex75BFC9", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMobileDeviceWhileRemoteWipeIsPending(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileDeviceWhileRemoteWipeIsPending", "Ex7440BD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageCompleteMigrationBatchWithPendingItems(string batchName, int pendingItemCount)
		{
			return new LocalizedString("ConfirmationMessageCompleteMigrationBatchWithPendingItems", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName,
				pendingItemCount
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailContact(string Identity, string ExternalEmailAddress)
		{
			return new LocalizedString("ConfirmationMessageEnableMailContact", "ExF3A0A7", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ExternalEmailAddress
			});
		}

		public static LocalizedString IisTasksWebSiteValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksWebSiteValidationProperty", "Ex8B9F5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSingleDatabaseCopy(string db)
		{
			return new LocalizedString("ErrorSingleDatabaseCopy", "ExBC980F", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		public static LocalizedString ErrorGlobalAddressListNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorGlobalAddressListNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString VerboseTestSourceServer(string serverFqdn)
		{
			return new LocalizedString("VerboseTestSourceServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverFqdn
			});
		}

		public static LocalizedString ErrorArchiveGuidsDontMatch(string sourceId, string destId, Guid sourceGuid, Guid destGuid)
		{
			return new LocalizedString("ErrorArchiveGuidsDontMatch", "Ex6BD2E0", false, true, Strings.ResourceManager, new object[]
			{
				sourceId,
				destId,
				sourceGuid,
				destGuid
			});
		}

		public static LocalizedString ErrorMailboxHasNoArchive(string identity)
		{
			return new LocalizedString("ErrorMailboxHasNoArchive", "ExA8C796", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests
		{
			get
			{
				return new LocalizedString("ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRestoreFromPrivateToPublicMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotRestoreFromPrivateToPublicMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UsersContainerNotFound(string domain, Guid guid)
		{
			return new LocalizedString("UsersContainerNotFound", "ExB6863D", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				guid
			});
		}

		public static LocalizedString ErrorTeamMailboxRemoveByNonOwner(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxRemoveByNonOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		public static LocalizedString ErrorArchiveRecoveryArchiveInUse(string user, Guid archiveGuid, string anotherUser)
		{
			return new LocalizedString("ErrorArchiveRecoveryArchiveInUse", "ExA78846", false, true, Strings.ResourceManager, new object[]
			{
				user,
				archiveGuid,
				anotherUser
			});
		}

		public static LocalizedString DelegateRoleTypeRecipientAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeRecipientAdmin", "Ex257CA8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SharedCacheServiceDisplayName
		{
			get
			{
				return new LocalizedString("SharedCacheServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtNoDetailInformation
		{
			get
			{
				return new LocalizedString("MtrtNoDetailInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DataClassificationAmbiguousIdentifier(string identifier)
		{
			return new LocalizedString("DataClassificationAmbiguousIdentifier", "", false, false, Strings.ResourceManager, new object[]
			{
				identifier
			});
		}

		public static LocalizedString ConfirmationMessageSetMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorSettingTeamMailboxUserPermissions(string message)
		{
			return new LocalizedString("ErrorSettingTeamMailboxUserPermissions", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageSetAdminAuditLogConfig(string org)
		{
			return new LocalizedString("ConfirmationMessageSetAdminAuditLogConfig", "ExD93DDD", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ErrorLoadCertificateOnEdge
		{
			get
			{
				return new LocalizedString("ErrorLoadCertificateOnEdge", "Ex763565", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PhoneNumberNotANumber(int digits)
		{
			return new LocalizedString("PhoneNumberNotANumber", "Ex1711DD", false, true, Strings.ResourceManager, new object[]
			{
				digits
			});
		}

		public static LocalizedString RmsSharedIdentityInconsistentState(LocalizedString details)
		{
			return new LocalizedString("RmsSharedIdentityInconsistentState", "Ex379D99", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString AllPolicyAssignees
		{
			get
			{
				return new LocalizedString("AllPolicyAssignees", "ExAC30D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetHostedConnectorFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedConnectorFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningNoDatabasesWereMovedBackToServer(string server)
		{
			return new LocalizedString("WarningNoDatabasesWereMovedBackToServer", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString DagTaskCheckingClusterMembershipOfServer(string mailboxServerName)
		{
			return new LocalizedString("DagTaskCheckingClusterMembershipOfServer", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServerName
			});
		}

		public static LocalizedString ErrorInvalidApplicationUri(string uri)
		{
			return new LocalizedString("ErrorInvalidApplicationUri", "Ex04285F", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString ConfirmationTurnOffJournalArchiving
		{
			get
			{
				return new LocalizedString("ConfirmationTurnOffJournalArchiving", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetSenderIdConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSenderIdConfig", "ExA20BF7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressPrecompilingBinaries
		{
			get
			{
				return new LocalizedString("SetupProgressPrecompilingBinaries", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressCompletingSearch
		{
			get
			{
				return new LocalizedString("ProgressCompletingSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWindowsLiveIdNotExist(string liveId)
		{
			return new LocalizedString("ErrorWindowsLiveIdNotExist", "ExE4D0D3", false, true, Strings.ResourceManager, new object[]
			{
				liveId
			});
		}

		public static LocalizedString SendConnectorRgcNotFound(string connectorDn)
		{
			return new LocalizedString("SendConnectorRgcNotFound", "Ex8FE049", false, true, Strings.ResourceManager, new object[]
			{
				connectorDn
			});
		}

		public static LocalizedString CallerIsInMyDefaultContactsFolder
		{
			get
			{
				return new LocalizedString("CallerIsInMyDefaultContactsFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWhileFolderSyncForDeletion(string folderId)
		{
			return new LocalizedString("ErrorWhileFolderSyncForDeletion", "", false, false, Strings.ResourceManager, new object[]
			{
				folderId
			});
		}

		public static LocalizedString OutboundConnectorIdNotFound(string connectorIdentity)
		{
			return new LocalizedString("OutboundConnectorIdNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorIdentity
			});
		}

		public static LocalizedString SetupProgressMessageTrackingPermissions
		{
			get
			{
				return new LocalizedString("SetupProgressMessageTrackingPermissions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppConfirmTestWithServer(LocalizedString applicationLongName, string clientAccessServerName)
		{
			return new LocalizedString("CasHealthWebAppConfirmTestWithServer", "Ex75741D", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName,
				clientAccessServerName
			});
		}

		public static LocalizedString RestoreMailboxNotE14OrLater(string databaseName)
		{
			return new LocalizedString("RestoreMailboxNotE14OrLater", "Ex305FFA", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		public static LocalizedString ErrorGroupAlreadyMailEnabled(string id)
		{
			return new LocalizedString("ErrorGroupAlreadyMailEnabled", "Ex472416", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupProgressStartingUMService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingUMService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateHasNoPrivateKey(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateHasNoPrivateKey", "Ex6FE967", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString InfoAddingAce(string dn, string ace)
		{
			return new LocalizedString("InfoAddingAce", "Ex1902B6", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				ace
			});
		}

		public static LocalizedString RequestIsMissing
		{
			get
			{
				return new LocalizedString("RequestIsMissing", "ExF13CAA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMigrationBatch(string fileName, string tenantName)
		{
			return new LocalizedString("ConfirmationMessageNewMigrationBatch", "Ex7A33F9", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				tenantName
			});
		}

		public static LocalizedString CrossValidationIncorrectFolds(string mailbox)
		{
			return new LocalizedString("CrossValidationIncorrectFolds", "Ex957A48", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString AddedDeviceFilterRule(string name)
		{
			return new LocalizedString("AddedDeviceFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CurrentQueryTime(string time)
		{
			return new LocalizedString("CurrentQueryTime", "ExFEDF54", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		public static LocalizedString ConfirmationMessageSetADServerSettings
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetADServerSettings", "ExE3BB66", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NodeNotElement(string node, string fileName)
		{
			return new LocalizedString("NodeNotElement", "Ex61B371", false, true, Strings.ResourceManager, new object[]
			{
				node,
				fileName
			});
		}

		public static LocalizedString ErrorMailboxIsNotAudit(string identity)
		{
			return new LocalizedString("ErrorMailboxIsNotAudit", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DCWithGivenNameCouldNotBeFound(string name)
		{
			return new LocalizedString("DCWithGivenNameCouldNotBeFound", "Ex7D97B5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString invalidFipsCryptoModeInImportedTrustedPublishingDomain(int cryptoMode)
		{
			return new LocalizedString("invalidFipsCryptoModeInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				cryptoMode
			});
		}

		public static LocalizedString DagTaskServerFswServerNotAccessibleWithWmi(string fswServer)
		{
			return new LocalizedString("DagTaskServerFswServerNotAccessibleWithWmi", "", false, false, Strings.ResourceManager, new object[]
			{
				fswServer
			});
		}

		public static LocalizedString DeviceOk
		{
			get
			{
				return new LocalizedString("DeviceOk", "ExEF7FDD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDuplicateProxyAddressIsFiltered(string dup)
		{
			return new LocalizedString("WarningDuplicateProxyAddressIsFiltered", "", false, false, Strings.ResourceManager, new object[]
			{
				dup
			});
		}

		public static LocalizedString ExWindowsPermissionsGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExWindowsPermissionsGroupNotFoundException", "ExA1CAC9", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString MountStatusMounted
		{
			get
			{
				return new LocalizedString("MountStatusMounted", "Ex6AD1FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidParameterForPublicFolderTasks(string parameter, string operation)
		{
			return new LocalizedString("ErrorInvalidParameterForPublicFolderTasks", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter,
				operation
			});
		}

		public static LocalizedString LeaseExpired
		{
			get
			{
				return new LocalizedString("LeaseExpired", "ExE0458D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseNamesMustBeUnique(string message)
		{
			return new LocalizedString("DatabaseNamesMustBeUnique", "Ex11972B", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ThirdPartyReplCheckDesc
		{
			get
			{
				return new LocalizedString("ThirdPartyReplCheckDesc", "Ex4A2D65", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotUpgradeDisabledContentSettings(string setting)
		{
			return new LocalizedString("CouldNotUpgradeDisabledContentSettings", "Ex1DD28B", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		public static LocalizedString CMCConnectorRequiresTenantScopedInboundConnector
		{
			get
			{
				return new LocalizedString("CMCConnectorRequiresTenantScopedInboundConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeServerNotFoundException(string p1)
		{
			return new LocalizedString("ExchangeServerNotFoundException", "Ex898E48", false, true, Strings.ResourceManager, new object[]
			{
				p1
			});
		}

		public static LocalizedString SetupProgressStartingWMIService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingWMIService", "ExD0A858", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCheckRequiredRegistryKeys
		{
			get
			{
				return new LocalizedString("VerboseCheckRequiredRegistryKeys", "Ex713219", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRmsOnlineAuthenticationCertificateExpiryApproaching(DateTime when)
		{
			return new LocalizedString("WarningRmsOnlineAuthenticationCertificateExpiryApproaching", "", false, false, Strings.ResourceManager, new object[]
			{
				when
			});
		}

		public static LocalizedString VerboseStartResolvingUsers
		{
			get
			{
				return new LocalizedString("VerboseStartResolvingUsers", "Ex06819E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCreatePL
		{
			get
			{
				return new LocalizedString("InfoCreatePL", "ExA64E1B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetServerMonitor(string monitorName, string targetResource, bool isRepairing)
		{
			return new LocalizedString("ConfirmationMessageSetServerMonitor", "", false, false, Strings.ResourceManager, new object[]
			{
				monitorName,
				targetResource,
				isRepairing
			});
		}

		public static LocalizedString ConfirmationMessageDisableSendConnector
		{
			get
			{
				return new LocalizedString("ConfirmationMessageDisableSendConnector", "Ex920CBA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSaveADSecurityDescriptor(string id)
		{
			return new LocalizedString("VerboseSaveADSecurityDescriptor", "Ex969480", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString UsageTypePartner
		{
			get
			{
				return new LocalizedString("UsageTypePartner", "Ex9F9416", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLeadingTrailingWhitespaces(string param, string value)
		{
			return new LocalizedString("ErrorLeadingTrailingWhitespaces", "ExD12EC9", false, true, Strings.ResourceManager, new object[]
			{
				param,
				value
			});
		}

		public static LocalizedString RemoveDlpPolicyCorruptRule(string dlpPolicyName, string Details)
		{
			return new LocalizedString("RemoveDlpPolicyCorruptRule", "", false, false, Strings.ResourceManager, new object[]
			{
				dlpPolicyName,
				Details
			});
		}

		public static LocalizedString ExportMailboxShouldExport(string srcDisplayname, string tgtDisplayname, string smtp, string targetFolder)
		{
			return new LocalizedString("ExportMailboxShouldExport", "Ex4B73CF", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname,
				tgtDisplayname,
				smtp,
				targetFolder
			});
		}

		public static LocalizedString ErrorInvalidMailboxAuditLogSearchCriteria
		{
			get
			{
				return new LocalizedString("ErrorInvalidMailboxAuditLogSearchCriteria", "Ex14D0CA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FoundProcessesForService(string executable, string serviceName, string processId, string startTime, string endTime)
		{
			return new LocalizedString("FoundProcessesForService", "Ex04F535", false, true, Strings.ResourceManager, new object[]
			{
				executable,
				serviceName,
				processId,
				startTime,
				endTime
			});
		}

		public static LocalizedString ErrorInvalidGroupTypeForPublicToGroups
		{
			get
			{
				return new LocalizedString("ErrorInvalidGroupTypeForPublicToGroups", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGroupNotFoundOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorGroupNotFoundOnGlobalCatalog", "Ex686575", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		public static LocalizedString CannotCreateRuleDueToVersion(string name)
		{
			return new LocalizedString("CannotCreateRuleDueToVersion", "Ex902D76", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageSetDlpPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableOrganizationRelationship(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableOrganizationRelationship", "ExA2553A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupProgressCreateArbitrationMailbox
		{
			get
			{
				return new LocalizedString("SetupProgressCreateArbitrationMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArchiveDisabledError
		{
			get
			{
				return new LocalizedString("ArchiveDisabledError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SSTFileSizeExceedLimit
		{
			get
			{
				return new LocalizedString("SSTFileSizeExceedLimit", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotFindLocalAdminGroupException(string dn)
		{
			return new LocalizedString("CannotFindLocalAdminGroupException", "Ex3F6F96", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString InvalidSmtpBanner(string banner)
		{
			return new LocalizedString("InvalidSmtpBanner", "Ex039D12", false, true, Strings.ResourceManager, new object[]
			{
				banner
			});
		}

		public static LocalizedString WarningOABWithoutDistribution
		{
			get
			{
				return new LocalizedString("WarningOABWithoutDistribution", "Ex57A7D5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtReportSeverityLevelMed
		{
			get
			{
				return new LocalizedString("MtrtReportSeverityLevelMed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveMailboxSearchConfirmation(string identity)
		{
			return new LocalizedString("RemoveMailboxSearchConfirmation", "Ex9AF30F", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSetGlobalAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetGlobalAddressList", "Ex309639", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InvalidDlpRoleAccess
		{
			get
			{
				return new LocalizedString("InvalidDlpRoleAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetSyncServiceInstance(string serviceInstanceId)
		{
			return new LocalizedString("ConfirmationMessageSetSyncServiceInstance", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		public static LocalizedString ErrorCannotMoveTeamMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveTeamMailboxesDownlevel", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString VerboseRestartWSManService
		{
			get
			{
				return new LocalizedString("VerboseRestartWSManService", "Ex55DF97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageConfigureWSManIISHosting
		{
			get
			{
				return new LocalizedString("ConfirmationMessageConfigureWSManIISHosting", "Ex2E5543", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMemberNameUnavailableUsedForDL(string memberName)
		{
			return new LocalizedString("ErrorMemberNameUnavailableUsedForDL", "Ex1428E0", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ErrorAggregatedMailboxGuidNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorAggregatedMailboxGuidNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePackFullPath(string path)
		{
			return new LocalizedString("UmLanguagePackFullPath", "ExBB6A07", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString UpdateRecipientNotSupportedInRemoteForestWarning(string alias, string domainController)
		{
			return new LocalizedString("UpdateRecipientNotSupportedInRemoteForestWarning", "Ex891D6D", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				domainController
			});
		}

		public static LocalizedString ErrorInboxRuleUserInvalid(string user)
		{
			return new LocalizedString("ErrorInboxRuleUserInvalid", "Ex79EE61", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString NullOrgIdException(string s)
		{
			return new LocalizedString("NullOrgIdException", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString ErrorResponseContainsError(string code, string message)
		{
			return new LocalizedString("ErrorResponseContainsError", "", false, false, Strings.ResourceManager, new object[]
			{
				code,
				message
			});
		}

		public static LocalizedString MobileDeviceLogSuccess
		{
			get
			{
				return new LocalizedString("MobileDeviceLogSuccess", "Ex5648DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestOutboundOauthLog
		{
			get
			{
				return new LocalizedString("TestOutboundOauthLog", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallMonitoringCorrelationServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMonitoringCorrelationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UseDagDefaultOnOffOn
		{
			get
			{
				return new LocalizedString("UseDagDefaultOnOffOn", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToSystemProbeCmdlet(string failure)
		{
			return new LocalizedString("FailedToSystemProbeCmdlet", "", false, false, Strings.ResourceManager, new object[]
			{
				failure
			});
		}

		public static LocalizedString ErrorCannotModifyPrecannedRole(string id)
		{
			return new LocalizedString("ErrorCannotModifyPrecannedRole", "ExDE074F", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorPropertiesInvalid(string properties)
		{
			return new LocalizedString("ErrorPropertiesInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				properties
			});
		}

		public static LocalizedString SetupProgressFastSearchSeedingPortRule
		{
			get
			{
				return new LocalizedString("SetupProgressFastSearchSeedingPortRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceBindingAmbiguous(string name)
		{
			return new LocalizedString("ComplianceBindingAmbiguous", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ClassificationRuleCollectionAnyBlocksExceedLimit(int anyBlocksLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionAnyBlocksExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				anyBlocksLimit,
				offendingRuleIds
			});
		}

		public static LocalizedString EventManifestActionFailed(string manifestName, string action, int exitCode, string errors)
		{
			return new LocalizedString("EventManifestActionFailed", "Ex35EAD9", false, true, Strings.ResourceManager, new object[]
			{
				manifestName,
				action,
				exitCode,
				errors
			});
		}

		public static LocalizedString RemoveRemoteAccountPolicyFailedWithExistingMailboxes
		{
			get
			{
				return new LocalizedString("RemoveRemoteAccountPolicyFailedWithExistingMailboxes", "ExF3D3B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BPAUpdateCheckCompleted
		{
			get
			{
				return new LocalizedString("BPAUpdateCheckCompleted", "ExFA729D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPublicFolderUserNotUnique(string identity)
		{
			return new LocalizedString("ErrorPublicFolderUserNotUnique", "Ex41F5BF", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageRemoveRequestDebug(string requestGuid)
		{
			return new LocalizedString("ConfirmationMessageRemoveRequestDebug", "Ex60E9FC", false, true, Strings.ResourceManager, new object[]
			{
				requestGuid
			});
		}

		public static LocalizedString ConfirmationMessageNewMailUser(string Name, string ExternalEmailAddress, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailUser", "Ex13F5B0", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ExternalEmailAddress,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString RawRequestJobDump(string jobDump)
		{
			return new LocalizedString("RawRequestJobDump", "", false, false, Strings.ResourceManager, new object[]
			{
				jobDump
			});
		}

		public static LocalizedString CouldNotConnectToCluster(string machineName)
		{
			return new LocalizedString("CouldNotConnectToCluster", "ExB48AAB", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		public static LocalizedString ErrorServerOutOfScope(string mbx, string reason)
		{
			return new LocalizedString("ErrorServerOutOfScope", "Ex8CE8E1", false, true, Strings.ResourceManager, new object[]
			{
				mbx,
				reason
			});
		}

		public static LocalizedString ConfirmationMessageMailboxAutoReplyConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxAutoReplyConfiguration", "Ex48FB06", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UpdatingDatabaseCopyObject(string hostServer, string replayLag, string truncLag)
		{
			return new LocalizedString("UpdatingDatabaseCopyObject", "Ex42F1B5", false, true, Strings.ResourceManager, new object[]
			{
				hostServer,
				replayLag,
				truncLag
			});
		}

		public static LocalizedString ErrorRemoveAddressBookPolicyWithAssociatedUsers(string name)
		{
			return new LocalizedString("ErrorRemoveAddressBookPolicyWithAssociatedUsers", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CustomizedDsnNotConfigured(string status)
		{
			return new LocalizedString("CustomizedDsnNotConfigured", "ExEDCDA1", false, true, Strings.ResourceManager, new object[]
			{
				status
			});
		}

		public static LocalizedString StringResourceNotFound(string strID)
		{
			return new LocalizedString("StringResourceNotFound", "Ex7327F7", false, true, Strings.ResourceManager, new object[]
			{
				strID
			});
		}

		public static LocalizedString CasHealthDirectPushAndSyncAggregateScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthDirectPushAndSyncAggregateScenarioDescription", "ExB76514", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MalboxFolderRightsFolderOwner
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsFolderOwner", "Ex8E6525", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveAvailabilityAddressSpace(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAvailabilityAddressSpace", "ExC9910C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorParentIISPathNull
		{
			get
			{
				return new LocalizedString("ErrorParentIISPathNull", "Ex8205FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorReceiveConnectorNotUnique(object idStringValue)
		{
			return new LocalizedString("ErrorReceiveConnectorNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString VerboseReadStoreMailboxSecurityDescriptor(string id, string server)
		{
			return new LocalizedString("VerboseReadStoreMailboxSecurityDescriptor", "Ex5D105D", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		public static LocalizedString ErrorFailedToGetRacAndClcEnterprise
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetRacAndClcEnterprise", "ExEABCCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MessageTracingClientServiceDisplayName
		{
			get
			{
				return new LocalizedString("MessageTracingClientServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TowsSslError(string url, string status, string message)
		{
			return new LocalizedString("TowsSslError", "", false, false, Strings.ResourceManager, new object[]
			{
				url,
				status,
				message
			});
		}

		public static LocalizedString ErrorTenantNeedsUpgradeFirst
		{
			get
			{
				return new LocalizedString("ErrorTenantNeedsUpgradeFirst", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveInterceptorRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveInterceptorRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DelegationTokenValidationSuccess
		{
			get
			{
				return new LocalizedString("DelegationTokenValidationSuccess", "ExB0E182", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchCatalogState(string state)
		{
			return new LocalizedString("TestSearchCatalogState", "Ex2B2459", false, true, Strings.ResourceManager, new object[]
			{
				state
			});
		}

		public static LocalizedString CorruptRule(string name, string reason)
		{
			return new LocalizedString("CorruptRule", "ExF00D51", false, true, Strings.ResourceManager, new object[]
			{
				name,
				reason
			});
		}

		public static LocalizedString VerboseDefaultOABServerIsNotE12(string DN)
		{
			return new LocalizedString("VerboseDefaultOABServerIsNotE12", "Ex2C27E3", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		public static LocalizedString WarningNoAuthServerWithDefaultAuthorizationEndpoint
		{
			get
			{
				return new LocalizedString("WarningNoAuthServerWithDefaultAuthorizationEndpoint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveOfflineAddressBook(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOfflineAddressBook", "Ex2BE557", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorMapiVirtualDirectoryMustBeLocalServerToReset
		{
			get
			{
				return new LocalizedString("ErrorMapiVirtualDirectoryMustBeLocalServerToReset", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewManagedFolderMailboxPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewManagedFolderMailboxPolicy", "Ex3553CA", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ExternalAddress
		{
			get
			{
				return new LocalizedString("ExternalAddress", "Ex846EA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallFBAServiceTask
		{
			get
			{
				return new LocalizedString("UninstallFBAServiceTask", "Ex6D5BC9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantOrganizationMissing
		{
			get
			{
				return new LocalizedString("TenantOrganizationMissing", "ExB4C6AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestTeamMailboxOutboundOauthLog
		{
			get
			{
				return new LocalizedString("TestTeamMailboxOutboundOauthLog", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingEdgeSyncService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingEdgeSyncService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxLogonScenario
		{
			get
			{
				return new LocalizedString("MailboxLogonScenario", "ExECD99D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ParameterNotApplicableToInstalledServerRoles(string parameter)
		{
			return new LocalizedString("ParameterNotApplicableToInstalledServerRoles", "Ex17EC92", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString ConfirmationMessageAddIPBlockListProvider(string Name, string LookupDomain)
		{
			return new LocalizedString("ConfirmationMessageAddIPBlockListProvider", "ExC37E78", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				LookupDomain
			});
		}

		public static LocalizedString VerboseLoadingAssignmentsByScope(string id)
		{
			return new LocalizedString("VerboseLoadingAssignmentsByScope", "ExB9556B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ParsingTokenIssuerUri(string tokenIssuerUri)
		{
			return new LocalizedString("ParsingTokenIssuerUri", "Ex4AADB0", false, true, Strings.ResourceManager, new object[]
			{
				tokenIssuerUri
			});
		}

		public static LocalizedString ConversationsFailedToCreateAllItemsFolder
		{
			get
			{
				return new LocalizedString("ConversationsFailedToCreateAllItemsFolder", "ExB265F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RpcHttpE2kServers(string servers)
		{
			return new LocalizedString("RpcHttpE2kServers", "ExC32DD9", false, true, Strings.ResourceManager, new object[]
			{
				servers
			});
		}

		public static LocalizedString ErrorUserNotUniqueOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorUserNotUniqueOnGlobalCatalog", "Ex4FAC55", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		public static LocalizedString VerboseInstallKerberosAuthenticationModule(string module)
		{
			return new LocalizedString("VerboseInstallKerberosAuthenticationModule", "Ex324A79", false, true, Strings.ResourceManager, new object[]
			{
				module
			});
		}

		public static LocalizedString ConfirmationMessageNewDeliveryAgentConnector(string Name, string AddressSpaces)
		{
			return new LocalizedString("ConfirmationMessageNewDeliveryAgentConnector", "ExE94CBD", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				AddressSpaces
			});
		}

		public static LocalizedString VerboseConnectingIISVDir(string path)
		{
			return new LocalizedString("VerboseConnectingIISVDir", "ExC8913A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString BootstrapAccountExpireTooSoon
		{
			get
			{
				return new LocalizedString("BootstrapAccountExpireTooSoon", "Ex1033AB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthPowerShellCmdletExecutionSummary(string casServer)
		{
			return new LocalizedString("CasHealthPowerShellCmdletExecutionSummary", "", false, false, Strings.ResourceManager, new object[]
			{
				casServer
			});
		}

		public static LocalizedString NewDagConfigurationCompletedSuccessfully
		{
			get
			{
				return new LocalizedString("NewDagConfigurationCompletedSuccessfully", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RetryLaterException
		{
			get
			{
				return new LocalizedString("RetryLaterException", "Ex7982BE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPolicyOutOfRoleScope(string id, string orgName)
		{
			return new LocalizedString("ErrorPolicyOutOfRoleScope", "ExA97A04", false, true, Strings.ResourceManager, new object[]
			{
				id,
				orgName
			});
		}

		public static LocalizedString CasHealthOwaHttpGetOkay(int code, string codeName)
		{
			return new LocalizedString("CasHealthOwaHttpGetOkay", "Ex32F71F", false, true, Strings.ResourceManager, new object[]
			{
				code,
				codeName
			});
		}

		public static LocalizedString ConfigureSchema
		{
			get
			{
				return new LocalizedString("ConfigureSchema", "Ex212DB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallMessageTracingClientServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMessageTracingClientServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGroupRecipientNeeded(string badId)
		{
			return new LocalizedString("ErrorGroupRecipientNeeded", "ExF30758", false, true, Strings.ResourceManager, new object[]
			{
				badId
			});
		}

		public static LocalizedString ConfirmationMessageImportRMSTPD(string name)
		{
			return new LocalizedString("ConfirmationMessageImportRMSTPD", "Ex9A3B52", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupProgressStoppingWMIProviderService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingWMIProviderService", "ExCDF8F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetMsoDiagnosticsExclusiveParameters(string parameter1, string parameter2)
		{
			return new LocalizedString("GetMsoDiagnosticsExclusiveParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter1,
				parameter2
			});
		}

		public static LocalizedString FinishedCopyingOwaLPFiles
		{
			get
			{
				return new LocalizedString("FinishedCopyingOwaLPFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDeleteActiveSourceNTAccount(string sourceuser)
		{
			return new LocalizedString("ErrorDeleteActiveSourceNTAccount", "Ex3A75A6", false, true, Strings.ResourceManager, new object[]
			{
				sourceuser
			});
		}

		public static LocalizedString ErrorCannotDeletePrecannedRoleGroup(string id)
		{
			return new LocalizedString("ErrorCannotDeletePrecannedRoleGroup", "Ex222E07", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString InsufficientEmailsForTraining(string mailbox)
		{
			return new LocalizedString("InsufficientEmailsForTraining", "Ex328F53", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ErrorTargetDatabaseIsNotE2K7OrLater(string targetDatabaseId)
		{
			return new LocalizedString("ErrorTargetDatabaseIsNotE2K7OrLater", "ExE23974", false, true, Strings.ResourceManager, new object[]
			{
				targetDatabaseId
			});
		}

		public static LocalizedString TenantNotificationTestFirstOrgNotSupported
		{
			get
			{
				return new LocalizedString("TenantNotificationTestFirstOrgNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMservEntry(string id)
		{
			return new LocalizedString("ConfirmationMessageRemoveMservEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ElcNoLocalMbxOrArchive(string mailboxAddress)
		{
			return new LocalizedString("ElcNoLocalMbxOrArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		public static LocalizedString ErrorTeamMailboxCannotIdentifyTheUser
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxCannotIdentifyTheUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateModeratedRecipientsRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateModeratedRecipientsRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToRemoveSystemMailbox(string databaseName, string exceptionString)
		{
			return new LocalizedString("ErrorFailedToRemoveSystemMailbox", "Ex29C281", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				exceptionString
			});
		}

		public static LocalizedString ExInvalidArgumentForServerRoleException(string property, string role)
		{
			return new LocalizedString("ExInvalidArgumentForServerRoleException", "", false, false, Strings.ResourceManager, new object[]
			{
				property,
				role
			});
		}

		public static LocalizedString ErrorParameterNotSupportedForMigration(string parameterName)
		{
			return new LocalizedString("ErrorParameterNotSupportedForMigration", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString ErrorCouldNotReadDatabaseCopy(string database)
		{
			return new LocalizedString("ErrorCouldNotReadDatabaseCopy", "Ex54F8C5", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString GetHealthReportProgressActivity
		{
			get
			{
				return new LocalizedString("GetHealthReportProgressActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationExportAutoDiscoverConfig
		{
			get
			{
				return new LocalizedString("ConfirmationExportAutoDiscoverConfig", "Ex6D38BF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToGetTemplateEnterprise
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetTemplateEnterprise", "Ex32034C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DebugStartCreateMemberRequest
		{
			get
			{
				return new LocalizedString("DebugStartCreateMemberRequest", "Ex71AE7B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotMoveArchiveMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveArchiveMailboxesDownlevel", "Ex671FC0", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString VerboseResetOab(string id)
		{
			return new LocalizedString("VerboseResetOab", "Ex55DAD9", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString DlpPolicyModeIsOverridenByModeParameter(string ruleMode, string policyMode)
		{
			return new LocalizedString("DlpPolicyModeIsOverridenByModeParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleMode,
				policyMode
			});
		}

		public static LocalizedString CannotModifyPhotoBecauseMailboxIsInTransit
		{
			get
			{
				return new LocalizedString("CannotModifyPhotoBecauseMailboxIsInTransit", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoOrganizationContextChecked
		{
			get
			{
				return new LocalizedString("InfoOrganizationContextChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxAuditLogSearchFailed(string error, Exception ex)
		{
			return new LocalizedString("ErrorMailboxAuditLogSearchFailed", "Ex274093", false, true, Strings.ResourceManager, new object[]
			{
				error,
				ex
			});
		}

		public static LocalizedString CasHealthOwaHttpGetNonOkayForLogon(int code, string name)
		{
			return new LocalizedString("CasHealthOwaHttpGetNonOkayForLogon", "ExE747EB", false, true, Strings.ResourceManager, new object[]
			{
				code,
				name
			});
		}

		public static LocalizedString CasHealthWarnCredenditialsPassedInTheClear
		{
			get
			{
				return new LocalizedString("CasHealthWarnCredenditialsPassedInTheClear", "ExDBE9D7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetAdSiteLink(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAdSiteLink", "Ex7D42E4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ForwardSyncServiceDescription
		{
			get
			{
				return new LocalizedString("ForwardSyncServiceDescription", "Ex9231D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IncorrectlyFormattedColumn(string line, string file)
		{
			return new LocalizedString("IncorrectlyFormattedColumn", "Ex31C6FD", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file
			});
		}

		public static LocalizedString WarningFailedToCreateSourceContact(string detailError)
		{
			return new LocalizedString("WarningFailedToCreateSourceContact", "Ex4219AE", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		public static LocalizedString VerboseGrantingEoaFullAccessOnMailbox(string mailbox)
		{
			return new LocalizedString("VerboseGrantingEoaFullAccessOnMailbox", "Ex894E97", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ErrorExistingAuthServerWithEmptyRealm(string authServer)
		{
			return new LocalizedString("ErrorExistingAuthServerWithEmptyRealm", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer
			});
		}

		public static LocalizedString AlsEmailBodyMailboxOperations(string operations)
		{
			return new LocalizedString("AlsEmailBodyMailboxOperations", "", false, false, Strings.ResourceManager, new object[]
			{
				operations
			});
		}

		public static LocalizedString CasHealthScenarioAutodiscoverCas
		{
			get
			{
				return new LocalizedString("CasHealthScenarioAutodiscoverCas", "ExAC4BAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidParameterForFilter(string invalidParameter, string filterType, string validParameter)
		{
			return new LocalizedString("InvalidParameterForFilter", "ExA5C7D3", false, true, Strings.ResourceManager, new object[]
			{
				invalidParameter,
				filterType,
				validParameter
			});
		}

		public static LocalizedString ErrorAtLeastOneSideMustBeCurrentProductVersion(string version)
		{
			return new LocalizedString("ErrorAtLeastOneSideMustBeCurrentProductVersion", "Ex861FB5", false, true, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		public static LocalizedString ErrorClassificationAlreadyDefined(string name, Guid guid)
		{
			return new LocalizedString("ErrorClassificationAlreadyDefined", "Ex4D9424", false, true, Strings.ResourceManager, new object[]
			{
				name,
				guid
			});
		}

		public static LocalizedString ConfigurationNotSynchronized(string objectType, string serverList)
		{
			return new LocalizedString("ConfigurationNotSynchronized", "ExA71CEE", false, true, Strings.ResourceManager, new object[]
			{
				objectType,
				serverList
			});
		}

		public static LocalizedString MigrationCompleteAfterAndAutoCompleteExclusive
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterAndAutoCompleteExclusive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCity
		{
			get
			{
				return new LocalizedString("ADAttributeCity", "ExBFE9B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotFindAutodiscoverStandardAuthBinding
		{
			get
			{
				return new LocalizedString("CouldNotFindAutodiscoverStandardAuthBinding", "Ex893375", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoOfflineSuspendWhenReadyToComplete(string identity)
		{
			return new LocalizedString("ErrorNoOfflineSuspendWhenReadyToComplete", "ExEC575A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAccountPartition(string partition)
		{
			return new LocalizedString("ConfirmationMessageRemoveAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				partition
			});
		}

		public static LocalizedString ErrorNeedOrgIdentity
		{
			get
			{
				return new LocalizedString("ErrorNeedOrgIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransportRpcUnavailable(string server)
		{
			return new LocalizedString("TransportRpcUnavailable", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString UninstallPop3ServiceTask
		{
			get
			{
				return new LocalizedString("UninstallPop3ServiceTask", "Ex8883D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRuleStateInconsistentWithComplianceProgram(string state, string identity, string requiredState)
		{
			return new LocalizedString("ErrorRuleStateInconsistentWithComplianceProgram", "", false, false, Strings.ResourceManager, new object[]
			{
				state,
				identity,
				requiredState
			});
		}

		public static LocalizedString DlpPolicyXmlMissingElements
		{
			get
			{
				return new LocalizedString("DlpPolicyXmlMissingElements", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeCmdletsNotAllowedInRole(string roleType)
		{
			return new LocalizedString("ExchangeCmdletsNotAllowedInRole", "Ex7712AD", false, true, Strings.ResourceManager, new object[]
			{
				roleType
			});
		}

		public static LocalizedString RcrExceedDbLimitException(string server, int limit)
		{
			return new LocalizedString("RcrExceedDbLimitException", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				limit
			});
		}

		public static LocalizedString CasHealthOwaGetAuthStart
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetAuthStart", "Ex1A41BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthTestNewUserHostingScriptName
		{
			get
			{
				return new LocalizedString("CasHealthTestNewUserHostingScriptName", "Ex2817EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestActiveDirectoryConnectivity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestActiveDirectoryConnectivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExceededMaximumCollectionCount(string propertyName, int maxLength, int actualLength)
		{
			return new LocalizedString("ErrorExceededMaximumCollectionCount", "Ex192D59", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				maxLength,
				actualLength
			});
		}

		public static LocalizedString ErrorMissingInternalUrlInRemoteScenario
		{
			get
			{
				return new LocalizedString("ErrorMissingInternalUrlInRemoteScenario", "ExCE9057", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RetrieveFederationMetadataFailed
		{
			get
			{
				return new LocalizedString("RetrieveFederationMetadataFailed", "Ex2D2345", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnexpectedNonAuthoritativeDomain(SmtpDomain domain)
		{
			return new LocalizedString("UnexpectedNonAuthoritativeDomain", "ExBA8752", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString DataClassificationConfigFirstOrgNotSupported
		{
			get
			{
				return new LocalizedString("DataClassificationConfigFirstOrgNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorScopeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorScopeNotUnique", "ExDAC99C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorPublicFolderStatisticsNotFoundInDatacenter(string folder, string organization)
		{
			return new LocalizedString("ErrorPublicFolderStatisticsNotFoundInDatacenter", "ExF91CDE", false, true, Strings.ResourceManager, new object[]
			{
				folder,
				organization
			});
		}

		public static LocalizedString SetSecondaryDomainDescription
		{
			get
			{
				return new LocalizedString("SetSecondaryDomainDescription", "ExBB10BD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOabVirtualDirectoryAlreadyExists(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryAlreadyExists", "ExDDC4ED", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		public static LocalizedString ErrorDatabaseWrongVersion(string dbName)
		{
			return new LocalizedString("ErrorDatabaseWrongVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName
			});
		}

		public static LocalizedString ConfirmationMessageNewUser(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewUser", "Ex236C0A", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString NoMonitoringErrorsInTestReplicationHealth(string machineName)
		{
			return new LocalizedString("NoMonitoringErrorsInTestReplicationHealth", "ExCC8360", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		public static LocalizedString SelfMemberAlreadyExistsException(string group)
		{
			return new LocalizedString("SelfMemberAlreadyExistsException", "ExBA234B", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString ConfirmationMessageSetFederatedOrganizationIdentifier2(string Identity, string administrator)
		{
			return new LocalizedString("ConfirmationMessageSetFederatedOrganizationIdentifier2", "Ex97235B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				administrator
			});
		}

		public static LocalizedString InterceptorErrorCustomTextNonAscii(string value)
		{
			return new LocalizedString("InterceptorErrorCustomTextNonAscii", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString ErrorFailedToRemoveWinRMSchemaFile(string fileName, string error)
		{
			return new LocalizedString("ErrorFailedToRemoveWinRMSchemaFile", "ExD4047C", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				error
			});
		}

		public static LocalizedString ConfirmationMessageMoveOfflineAddressBookE14ToLowerVersion(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageMoveOfflineAddressBookE14ToLowerVersion", "Ex1A05A4", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		public static LocalizedString ConfirmationMessageRemoveIPAllowListEntry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveIPAllowListEntry", "Ex0523BD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorInvalidLogonType
		{
			get
			{
				return new LocalizedString("ErrorInvalidLogonType", "Ex410EC9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMailboxMessageConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxMessageConfiguration", "Ex4E726A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MoveMailboxDuplicates(string displayName)
		{
			return new LocalizedString("MoveMailboxDuplicates", "ExD31DF0", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		public static LocalizedString MtrtSetSpamConfidenceLevel
		{
			get
			{
				return new LocalizedString("MtrtSetSpamConfidenceLevel", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseUpdateStoreMailboxState(string mdb, string mailbox)
		{
			return new LocalizedString("VerboseUpdateStoreMailboxState", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb,
				mailbox
			});
		}

		public static LocalizedString SomeWebServicesTransactionsFailed(string detailedInformation)
		{
			return new LocalizedString("SomeWebServicesTransactionsFailed", "ExC32CBB", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		public static LocalizedString ErrorRpcHttpNotEnabled(string server)
		{
			return new LocalizedString("ErrorRpcHttpNotEnabled", "Ex2EEFA2", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ConfirmationMessageAdminAuditLogAgeLimitZero(string org)
		{
			return new LocalizedString("ConfirmationMessageAdminAuditLogAgeLimitZero", "Ex96A507", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString CasHealthPowerShellSkipCertVDir(string vdirName)
		{
			return new LocalizedString("CasHealthPowerShellSkipCertVDir", "Ex4012F7", false, true, Strings.ResourceManager, new object[]
			{
				vdirName
			});
		}

		public static LocalizedString ErrorInvalidOSPServerRole
		{
			get
			{
				return new LocalizedString("ErrorInvalidOSPServerRole", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseEdbFileLocationUniqueUnderServerCondition(string server, string path)
		{
			return new LocalizedString("VerboseEdbFileLocationUniqueUnderServerCondition", "ExF8BD14", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		public static LocalizedString ErrorModifyTiServerNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyTiServerNotAllowed", "ExF1B0E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MediumPriorityChecksWarning
		{
			get
			{
				return new LocalizedString("MediumPriorityChecksWarning", "Ex971080", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallCentralAdminServiceTask
		{
			get
			{
				return new LocalizedString("InstallCentralAdminServiceTask", "Ex38EAB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP
		{
			get
			{
				return new LocalizedString("WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP", "Ex55AE58", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AccessMismatchLocalRemote(string localName, string localFlag, string remoteName, string remoteProperty)
		{
			return new LocalizedString("AccessMismatchLocalRemote", "Ex8AF89C", false, true, Strings.ResourceManager, new object[]
			{
				localName,
				localFlag,
				remoteName,
				remoteProperty
			});
		}

		public static LocalizedString WarningFailedToCreateAssignmentForNewRole(string roleId)
		{
			return new LocalizedString("WarningFailedToCreateAssignmentForNewRole", "Ex656981", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		public static LocalizedString ErrorContentFilterInvalid(LocalizedString errorMessage)
		{
			return new LocalizedString("ErrorContentFilterInvalid", "ExA68BD8", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		public static LocalizedString DDGFilterIsNonoptimized
		{
			get
			{
				return new LocalizedString("DDGFilterIsNonoptimized", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorModifyE12DatabaseNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyE12DatabaseNotAllowed", "Ex384996", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWebObjOrPropertiesNull
		{
			get
			{
				return new LocalizedString("ErrorWebObjOrPropertiesNull", "Ex70F91B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressStopUpdateOtherAD
		{
			get
			{
				return new LocalizedString("ProgressStopUpdateOtherAD", "ExE7FF37", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ContentIndexServiceDisplayName
		{
			get
			{
				return new LocalizedString("ContentIndexServiceDisplayName", "Ex0B80BE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxStoreMailboxIdentity(string Database, string StoreMailboxIdentity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxStoreMailboxIdentity", "Ex6C2034", false, true, Strings.ResourceManager, new object[]
			{
				Database,
				StoreMailboxIdentity
			});
		}

		public static LocalizedString ConfirmationMessageSetGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetGroup", "ExC09B18", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MessageClassIsNotValid(string messageClass)
		{
			return new LocalizedString("MessageClassIsNotValid", "", false, false, Strings.ResourceManager, new object[]
			{
				messageClass
			});
		}

		public static LocalizedString ErrorEmptyFsmoRoleOwnerAttribute
		{
			get
			{
				return new LocalizedString("ErrorEmptyFsmoRoleOwnerAttribute", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTrustedPublishingDomainNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorTrustedPublishingDomainNotUnique", "Ex257C3C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorSetGroupMailboxAddMembersOtherUser
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxAddMembersOtherUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeTenantNotFound(string syncobject)
		{
			return new LocalizedString("ExchangeTenantNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		public static LocalizedString ExchangeSettingsScopeNotFound(string groupName, string id)
		{
			return new LocalizedString("ExchangeSettingsScopeNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				id
			});
		}

		public static LocalizedString UninstallOSPRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallOSPRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidDlpPolicyIdentity
		{
			get
			{
				return new LocalizedString("ErrorInvalidDlpPolicyIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTargetRecipientIsNotAnMEU(string remoteId)
		{
			return new LocalizedString("ErrorTargetRecipientIsNotAnMEU", "Ex17DC3E", false, true, Strings.ResourceManager, new object[]
			{
				remoteId
			});
		}

		public static LocalizedString MtrtApplyClassification
		{
			get
			{
				return new LocalizedString("MtrtApplyClassification", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseWillSkipOrganizationUpgrade(string org)
		{
			return new LocalizedString("VerboseWillSkipOrganizationUpgrade", "Ex27A13B", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString NodeNotUnique(string node, string fileName)
		{
			return new LocalizedString("NodeNotUnique", "ExFDD1E7", false, true, Strings.ResourceManager, new object[]
			{
				node,
				fileName
			});
		}

		public static LocalizedString InfoAddedGroupToGroup(string group1, string group2, string rootdomserver, string localdomserver)
		{
			return new LocalizedString("InfoAddedGroupToGroup", "ExD5B124", false, true, Strings.ResourceManager, new object[]
			{
				group1,
				group2,
				rootdomserver,
				localdomserver
			});
		}

		public static LocalizedString ConfirmationMessageSetRecipientFilterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetRecipientFilterConfig", "Ex095620", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxEnqueueMembershipSyncEvent(string details)
		{
			return new LocalizedString("ErrorTeamMailboxEnqueueMembershipSyncEvent", "", false, false, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString DagNetworkSubnetIdConflictError(string subnetId1, string subnetId2)
		{
			return new LocalizedString("DagNetworkSubnetIdConflictError", "Ex2490CD", false, true, Strings.ResourceManager, new object[]
			{
				subnetId1,
				subnetId2
			});
		}

		public static LocalizedString ReplicationCheckResultToStringCaseNotHandled(ReplicationCheckResultEnum result)
		{
			return new LocalizedString("ReplicationCheckResultToStringCaseNotHandled", "", false, false, Strings.ResourceManager, new object[]
			{
				result
			});
		}

		public static LocalizedString ConfirmationMessageNewPublicFolderDatabaseRepairRequest(string database)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderDatabaseRepairRequest", "ExEB8C5D", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ServerLocatorServiceRequestFailed(string machineName, string error)
		{
			return new LocalizedString("ServerLocatorServiceRequestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString ErrorFailedToGenerateFileNameFromAlias(string mailbox, string alias)
		{
			return new LocalizedString("ErrorFailedToGenerateFileNameFromAlias", "ExD863D7", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				alias
			});
		}

		public static LocalizedString ErrorMaxCmdletsNotSupported(string psMaxOperations, string psMaxCmdlets, string exMaxCmdlets)
		{
			return new LocalizedString("ErrorMaxCmdletsNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				psMaxOperations,
				psMaxCmdlets,
				exMaxCmdlets
			});
		}

		public static LocalizedString ADAttributeCustomAttribute13
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute13", "Ex3D04B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSessionNotFound
		{
			get
			{
				return new LocalizedString("ErrorSessionNotFound", "Ex5684B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveThrottlingPolicy(string Name, string scope)
		{
			return new LocalizedString("ConfirmationMessageRemoveThrottlingPolicy", "Ex437627", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				scope
			});
		}

		public static LocalizedString UpdateMovedMailboxFailureAfterADSwitchover(LocalizedString reason)
		{
			return new LocalizedString("UpdateMovedMailboxFailureAfterADSwitchover", "ExBFD97C", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroupServer(string MailboxServer, string Dag)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroupServer", "Ex7A3DA4", false, true, Strings.ResourceManager, new object[]
			{
				MailboxServer,
				Dag
			});
		}

		public static LocalizedString NotValidEmailAddress(string emailAddress)
		{
			return new LocalizedString("NotValidEmailAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		public static LocalizedString CopyStatusDisconnected
		{
			get
			{
				return new LocalizedString("CopyStatusDisconnected", "Ex0C6E15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToGetUserSid(string userName)
		{
			return new LocalizedString("ErrorUnableToGetUserSid", "", false, false, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		public static LocalizedString RmsSharedIdentityBeingUnlinkedFromComputer(string userDn, string userOriginatingServer, string computerDn, string computerOriginatingServer)
		{
			return new LocalizedString("RmsSharedIdentityBeingUnlinkedFromComputer", "Ex47E4B1", false, true, Strings.ResourceManager, new object[]
			{
				userDn,
				userOriginatingServer,
				computerDn,
				computerOriginatingServer
			});
		}

		public static LocalizedString UMCallAnsweringRuleTimeOfDaySimple(string workinghours)
		{
			return new LocalizedString("UMCallAnsweringRuleTimeOfDaySimple", "", false, false, Strings.ResourceManager, new object[]
			{
				workinghours
			});
		}

		public static LocalizedString OrganizationHasNoFederation(string organization)
		{
			return new LocalizedString("OrganizationHasNoFederation", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString CannotSpecifyBothDoNotUpdateAndForceUpdate
		{
			get
			{
				return new LocalizedString("CannotSpecifyBothDoNotUpdateAndForceUpdate", "Ex2DCC63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveNonEmptyOabVirtualDirectory(string oabvdir, string oabs)
		{
			return new LocalizedString("RemoveNonEmptyOabVirtualDirectory", "ExFAA488", false, true, Strings.ResourceManager, new object[]
			{
				oabvdir,
				oabs
			});
		}

		public static LocalizedString ErrorsDomainNotReserved
		{
			get
			{
				return new LocalizedString("ErrorsDomainNotReserved", "ExCCD219", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PowerShellComponentDescription
		{
			get
			{
				return new LocalizedString("PowerShellComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_SentRepresentingRemoved
		{
			get
			{
				return new LocalizedString("Error_SentRepresentingRemoved", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString JournalNdrMailboxCannotBeNull
		{
			get
			{
				return new LocalizedString("JournalNdrMailboxCannotBeNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BPADownloadingFailed
		{
			get
			{
				return new LocalizedString("BPADownloadingFailed", "Ex50CA54", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReadNetworkAdapterInfo(string exception)
		{
			return new LocalizedString("ReadNetworkAdapterInfo", "ExCEDD17", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString SkippedUpdatingMFLFiles
		{
			get
			{
				return new LocalizedString("SkippedUpdatingMFLFiles", "ExA17099", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBPAOutFileNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAOutFileNotFound", "Ex392174", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFileTypeIsUnsupported
		{
			get
			{
				return new LocalizedString("ErrorFileTypeIsUnsupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveMailForestContactNotAllowed(string name)
		{
			return new LocalizedString("RemoveMailForestContactNotAllowed", "ExFD6723", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ClusterRpcCheckDesc
		{
			get
			{
				return new LocalizedString("ClusterRpcCheckDesc", "ExB8471F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressOrganizationalQueryBaseDNEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOrganizationalQueryBaseDNEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoActiveDCForProvisioningReconciliationCookie
		{
			get
			{
				return new LocalizedString("ErrorNoActiveDCForProvisioningReconciliationCookie", "ExA9D1A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetHostedContentFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedContentFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString UMCallAnsweringRuleCallbackLater
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleCallbackLater", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ActiveSyncMetabaseIsapiUninstallFailure
		{
			get
			{
				return new LocalizedString("ActiveSyncMetabaseIsapiUninstallFailure", "ExDC46B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TooFewMailboxServersToStart(string dag, int number)
		{
			return new LocalizedString("TooFewMailboxServersToStart", "", false, false, Strings.ResourceManager, new object[]
			{
				dag,
				number
			});
		}

		public static LocalizedString ADAttributeCompany
		{
			get
			{
				return new LocalizedString("ADAttributeCompany", "ExF398A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingHTTPFilterService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingHTTPFilterService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetThrottlingPolicyAssociation(string Identity, string policyName)
		{
			return new LocalizedString("ConfirmationMessageSetThrottlingPolicyAssociation", "Ex5E6F5E", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				policyName
			});
		}

		public static LocalizedString ErrorSynchronizationTypeTokenNotRecognized(string token, string parameterName)
		{
			return new LocalizedString("ErrorSynchronizationTypeTokenNotRecognized", "ExF9A318", false, true, Strings.ResourceManager, new object[]
			{
				token,
				parameterName
			});
		}

		public static LocalizedString ErrorInvalidServicePlanTransition(string oldServicePlan, string newServicePlan, string feature, string oldFeatureValue, string newFeatureValue)
		{
			return new LocalizedString("ErrorInvalidServicePlanTransition", "ExB5FB16", false, true, Strings.ResourceManager, new object[]
			{
				oldServicePlan,
				newServicePlan,
				feature,
				oldFeatureValue,
				newFeatureValue
			});
		}

		public static LocalizedString VerboseDeleteDirectory(string server, string dir)
		{
			return new LocalizedString("VerboseDeleteDirectory", "ExC684C8", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		public static LocalizedString AttachmentFilterEntryExists
		{
			get
			{
				return new LocalizedString("AttachmentFilterEntryExists", "Ex2E0B47", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveActiveCopyIsSeedingSourceException(string db, string server)
		{
			return new LocalizedString("ErrorMoveActiveCopyIsSeedingSourceException", "", false, false, Strings.ResourceManager, new object[]
			{
				db,
				server
			});
		}

		public static LocalizedString ErrorEsnIncompatibleRule(string rule)
		{
			return new LocalizedString("ErrorEsnIncompatibleRule", "", false, false, Strings.ResourceManager, new object[]
			{
				rule
			});
		}

		public static LocalizedString NullServerObject
		{
			get
			{
				return new LocalizedString("NullServerObject", "ExDB44B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TooManyFederationTrust
		{
			get
			{
				return new LocalizedString("TooManyFederationTrust", "Ex793CB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CalendarSave
		{
			get
			{
				return new LocalizedString("CalendarSave", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewRoutingGroupConnectorTwoWays(string name, string sourceRgName, string targetRgName, int cost)
		{
			return new LocalizedString("ConfirmationMessageNewRoutingGroupConnectorTwoWays", "ExE33B88", false, true, Strings.ResourceManager, new object[]
			{
				name,
				sourceRgName,
				targetRgName,
				cost
			});
		}

		public static LocalizedString ErrorRedirectionEntryForDomainNotFound(string domainName)
		{
			return new LocalizedString("ErrorRedirectionEntryForDomainNotFound", "ExE2F659", false, true, Strings.ResourceManager, new object[]
			{
				domainName
			});
		}

		public static LocalizedString AssemblyPathIsNotRegistered(string path)
		{
			return new LocalizedString("AssemblyPathIsNotRegistered", "Ex2340DE", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ErrorCredentialRequiredForIdentity(string identity)
		{
			return new LocalizedString("ErrorCredentialRequiredForIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString TestSearchGetNonIpmSubTreeFolderError(string ID, string database)
		{
			return new LocalizedString("TestSearchGetNonIpmSubTreeFolderError", "Ex99FD20", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		public static LocalizedString CmdletExecutionError(string cmdlet)
		{
			return new LocalizedString("CmdletExecutionError", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		public static LocalizedString ProtocolSettingsDetails(string server, string port)
		{
			return new LocalizedString("ProtocolSettingsDetails", "Ex4372B2", false, true, Strings.ResourceManager, new object[]
			{
				server,
				port
			});
		}

		public static LocalizedString CouldNotUpgradeJournaling(string setting)
		{
			return new LocalizedString("CouldNotUpgradeJournaling", "Ex5604EC", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		public static LocalizedString ConfirmationMessageDisableOrganizationRelationship(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableOrganizationRelationship", "Ex1920FE", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ManageIsapiExtensionFoundMoreThanOneExtensionException(string groupId, string extensionBinary, string matches)
		{
			return new LocalizedString("ManageIsapiExtensionFoundMoreThanOneExtensionException", "ExEBFB3D", false, true, Strings.ResourceManager, new object[]
			{
				groupId,
				extensionBinary,
				matches
			});
		}

		public static LocalizedString SetupComponentPreSetupOSP
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupOSP", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuxHasParent(string aux)
		{
			return new LocalizedString("ErrorAuxHasParent", "", false, false, Strings.ResourceManager, new object[]
			{
				aux
			});
		}

		public static LocalizedString ConfirmationMessageEnableDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableDistributionGroup", "ExF42304", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse
		{
			get
			{
				return new LocalizedString("ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransportCommonServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("TransportCommonServiceControlComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateRecipient(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateRecipient", "Ex712FE0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MsiPropertyTooLarge
		{
			get
			{
				return new LocalizedString("MsiPropertyTooLarge", "Ex3F289F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMetabasePathNotFound(string metabasePath)
		{
			return new LocalizedString("ErrorMetabasePathNotFound", "Ex46276B", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		public static LocalizedString ErrorFolderLocationUnknown(string folder)
		{
			return new LocalizedString("ErrorFolderLocationUnknown", "", false, false, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		public static LocalizedString ArchiveConnectivityResultSuccess
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToRegisterContentIndexingBinaries
		{
			get
			{
				return new LocalizedString("FailedToRegisterContentIndexingBinaries", "Ex0E1AD6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRemoveInvalidRoleAssignment(string roleId)
		{
			return new LocalizedString("WarningRemoveInvalidRoleAssignment", "ExF624E6", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		public static LocalizedString ConfirmationMessageSetResourcePolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetResourcePolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString BatchValidationWarningsAutoStart(string batchName)
		{
			return new LocalizedString("BatchValidationWarningsAutoStart", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		public static LocalizedString ErrorRmsOnlinePrerequisites
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlinePrerequisites", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAppHostOrWindowsAuthenticationNotFound(string windowsAuth, string metabasePath, string localpath)
		{
			return new LocalizedString("ErrorAppHostOrWindowsAuthenticationNotFound", "ExFB5442", false, true, Strings.ResourceManager, new object[]
			{
				windowsAuth,
				metabasePath,
				localpath
			});
		}

		public static LocalizedString ErrorServerNameModified
		{
			get
			{
				return new LocalizedString("ErrorServerNameModified", "ExD55FAB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetIISVersionException(string server)
		{
			return new LocalizedString("GetIISVersionException", "Ex633AA4", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString MailSubmissionServiceDescription
		{
			get
			{
				return new LocalizedString("MailSubmissionServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseListMustBeValid(string m)
		{
			return new LocalizedString("DatabaseListMustBeValid", "Ex0FB073", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		public static LocalizedString InvalidIdentity(string identity, string format)
		{
			return new LocalizedString("InvalidIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				format
			});
		}

		public static LocalizedString VerboseFixingAddressBookFilterMetadata
		{
			get
			{
				return new LocalizedString("VerboseFixingAddressBookFilterMetadata", "ExEF409E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMovingToOldExchangeDatabaseUnsupported
		{
			get
			{
				return new LocalizedString("ErrorMovingToOldExchangeDatabaseUnsupported", "ExB82862", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOnlyDefaultTagAllowCustomizedMessageClass
		{
			get
			{
				return new LocalizedString("ErrorOnlyDefaultTagAllowCustomizedMessageClass", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLinkOpOnDehydratedTenant(string parameter)
		{
			return new LocalizedString("ErrorLinkOpOnDehydratedTenant", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString ErrorConvertGroupContainsNonRoomMailbox(string idGroup, string idMember)
		{
			return new LocalizedString("ErrorConvertGroupContainsNonRoomMailbox", "Ex2905EA", false, true, Strings.ResourceManager, new object[]
			{
				idGroup,
				idMember
			});
		}

		public static LocalizedString ErrorInvalidArbitrationMbxType(string arbitrationMailbox)
		{
			return new LocalizedString("ErrorInvalidArbitrationMbxType", "Ex662D5C", false, true, Strings.ResourceManager, new object[]
			{
				arbitrationMailbox
			});
		}

		public static LocalizedString DagTaskServersInAdNotInCluster(string serverNames)
		{
			return new LocalizedString("DagTaskServersInAdNotInCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverNames
			});
		}

		public static LocalizedString DagFswInternalErrorFswObjectNotInitialized
		{
			get
			{
				return new LocalizedString("DagFswInternalErrorFswObjectNotInitialized", "Ex7031D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningMessageRemoveWebServicesVirtualDirectory(string Identity)
		{
			return new LocalizedString("WarningMessageRemoveWebServicesVirtualDirectory", "Ex5D99F8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ChunkingEnabledSettingConflict
		{
			get
			{
				return new LocalizedString("ChunkingEnabledSettingConflict", "Ex612C5F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CafeLocalPermissionsComponentDescription
		{
			get
			{
				return new LocalizedString("CafeLocalPermissionsComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CrossPremiseSessionFailure(string source, string target)
		{
			return new LocalizedString("CrossPremiseSessionFailure", "Ex552EE7", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString UninstallOldMSIFor(string lang, string msiType)
		{
			return new LocalizedString("UninstallOldMSIFor", "ExA908F2", false, true, Strings.ResourceManager, new object[]
			{
				lang,
				msiType
			});
		}

		public static LocalizedString ErrorCallingNetSh(string command, string error)
		{
			return new LocalizedString("ErrorCallingNetSh", "", false, false, Strings.ResourceManager, new object[]
			{
				command,
				error
			});
		}

		public static LocalizedString SuccessRemoveGlobalMonitoringOverride(string identity)
		{
			return new LocalizedString("SuccessRemoveGlobalMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString TSMDBperformanceCounterNotLoaded(string serverName, string counterName)
		{
			return new LocalizedString("TSMDBperformanceCounterNotLoaded", "Ex7E52BD", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				counterName
			});
		}

		public static LocalizedString VerboseCheckIfTopLevelRoleThatSelfDelegatorRemovalCheckCanBeWaivedFor(string id, string roleType)
		{
			return new LocalizedString("VerboseCheckIfTopLevelRoleThatSelfDelegatorRemovalCheckCanBeWaivedFor", "ExD3D50A", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleType
			});
		}

		public static LocalizedString CasHealthGetFolderScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthGetFolderScenarioDescription", "Ex078A8B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestTenantMonitoringPerfCounters
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestTenantMonitoringPerfCounters", "ExB8745A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentTransportGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentTransportGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidOperationOnEapObject(string id, string msg)
		{
			return new LocalizedString("ErrorInvalidOperationOnEapObject", "Ex061962", false, true, Strings.ResourceManager, new object[]
			{
				id,
				msg
			});
		}

		public static LocalizedString InvalidUMFaxServerURIValue(string faxServerUri)
		{
			return new LocalizedString("InvalidUMFaxServerURIValue", "Ex221C40", false, true, Strings.ResourceManager, new object[]
			{
				faxServerUri
			});
		}

		public static LocalizedString UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException
		{
			get
			{
				return new LocalizedString("UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMultipleDatabaseCopies(string id)
		{
			return new LocalizedString("ErrorMultipleDatabaseCopies", "Ex191F5D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString GetHealthReportProgressStarting
		{
			get
			{
				return new LocalizedString("GetHealthReportProgressStarting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddADPermissionAccessRights(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddADPermissionAccessRights", "ExCC54AB", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString InvalidDataSourceException(int number)
		{
			return new LocalizedString("InvalidDataSourceException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		public static LocalizedString VerboseGetSyncDeletedRecipientNeedsRetry(int retryCount)
		{
			return new LocalizedString("VerboseGetSyncDeletedRecipientNeedsRetry", "Ex5B0B06", false, true, Strings.ResourceManager, new object[]
			{
				retryCount
			});
		}

		public static LocalizedString TestRHCheckTPRListener(string serverVersion, string rpcSupportedVersion)
		{
			return new LocalizedString("TestRHCheckTPRListener", "Ex791BAC", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportedVersion
			});
		}

		public static LocalizedString ConfirmationMessageRemoveRetentionPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRetentionPolicy", "Ex11CE38", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString Pop3BeServiceDisplayName
		{
			get
			{
				return new LocalizedString("Pop3BeServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutodiscoverServiceCallSucceeded(string url)
		{
			return new LocalizedString("AutodiscoverServiceCallSucceeded", "ExB7ECEA", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SupervisionPolicyAmbiguous
		{
			get
			{
				return new LocalizedString("SupervisionPolicyAmbiguous", "Ex5E8F7F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressStartUpdateAD
		{
			get
			{
				return new LocalizedString("ProgressStartUpdateAD", "ExC615CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnexpectedRemoveStoreMailboxState(string identity, string state, string argument)
		{
			return new LocalizedString("ErrorUnexpectedRemoveStoreMailboxState", "Ex4BAC5A", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				state,
				argument
			});
		}

		public static LocalizedString DagMgmtServiceDisplayName
		{
			get
			{
				return new LocalizedString("DagMgmtServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IncludeKeywordStatisticsParameterConflict
		{
			get
			{
				return new LocalizedString("IncludeKeywordStatisticsParameterConflict", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtReportSeverityLevelLow
		{
			get
			{
				return new LocalizedString("MtrtReportSeverityLevelLow", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GroupsIsNotAllowedForHold(string group)
		{
			return new LocalizedString("GroupsIsNotAllowedForHold", "", false, false, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString ClassificationRuleCollectionIllegalScopedSetOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedSetOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission
		{
			get
			{
				return new LocalizedString("MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagConfigVersionConflictException(string dagConfigName, int dagconfigversion, int xmlversion)
		{
			return new LocalizedString("DagConfigVersionConflictException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagConfigName,
				dagconfigversion,
				xmlversion
			});
		}

		public static LocalizedString ConfirmationMessageNewTenantRelocationRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewTenantRelocationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarningMessageNewTPRDag
		{
			get
			{
				return new LocalizedString("WarningMessageNewTPRDag", "ExAA7A44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRemoveServiceInstanceError(string serviceInstanceId)
		{
			return new LocalizedString("CannotRemoveServiceInstanceError", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		public static LocalizedString FailureAndReason(string message, string reason)
		{
			return new LocalizedString("FailureAndReason", "Ex64623E", false, true, Strings.ResourceManager, new object[]
			{
				message,
				reason
			});
		}

		public static LocalizedString DatabaseReplayQueueNotKeepingUp(string dbName, string serverName, long queueLength)
		{
			return new LocalizedString("DatabaseReplayQueueNotKeepingUp", "ExAA6331", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName,
				queueLength
			});
		}

		public static LocalizedString ValidPatch(string name, int order)
		{
			return new LocalizedString("ValidPatch", "Ex4AEC1B", false, true, Strings.ResourceManager, new object[]
			{
				name,
				order
			});
		}

		public static LocalizedString BackupFileCreated(string originalFilename, string backupFileName)
		{
			return new LocalizedString("BackupFileCreated", "Ex914EA8", false, true, Strings.ResourceManager, new object[]
			{
				originalFilename,
				backupFileName
			});
		}

		public static LocalizedString JournalingParameterErrorGccWithOrganization
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccWithOrganization", "ExA00199", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressDisableMigrationRPCFirewallRule
		{
			get
			{
				return new LocalizedString("SetupProgressDisableMigrationRPCFirewallRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCertificationUri(Uri uri)
		{
			return new LocalizedString("InfoCertificationUri", "ExCAC3FF", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString AlsEmailBodyCriteria
		{
			get
			{
				return new LocalizedString("AlsEmailBodyCriteria", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetServiceInstanceMapReturnedNull
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapReturnedNull", "Ex48052F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusNotConfigured
		{
			get
			{
				return new LocalizedString("CopyStatusNotConfigured", "Ex8C1C56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionInvalidObject
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionInvalidObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString XmlDeserializationException(string filename, string error, string addlInfo)
		{
			return new LocalizedString("XmlDeserializationException", "", false, false, Strings.ResourceManager, new object[]
			{
				filename,
				error,
				addlInfo
			});
		}

		public static LocalizedString CannotResolveSiteRedirectionTemplateMessage
		{
			get
			{
				return new LocalizedString("CannotResolveSiteRedirectionTemplateMessage", "Ex9995DA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportMultipleMailboxToOnePST(string pstPath)
		{
			return new LocalizedString("ExportMultipleMailboxToOnePST", "Ex2FCEA6", false, true, Strings.ResourceManager, new object[]
			{
				pstPath
			});
		}

		public static LocalizedString CannotFindGlobalCatalogsInForest(string forestFqdn)
		{
			return new LocalizedString("CannotFindGlobalCatalogsInForest", "Ex4295B4", false, true, Strings.ResourceManager, new object[]
			{
				forestFqdn
			});
		}

		public static LocalizedString SetupComponentConfiguringPublicFolder
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringPublicFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchCreateSearchFolder(string MDB, string ID)
		{
			return new LocalizedString("TestSearchCreateSearchFolder", "ExEE23AE", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		public static LocalizedString CouldNotSaveContentSetting(string setting)
		{
			return new LocalizedString("CouldNotSaveContentSetting", "ExC50594", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		public static LocalizedString ErrorSubmitCommandFailed(int code, string message)
		{
			return new LocalizedString("ErrorSubmitCommandFailed", "ExE46568", false, true, Strings.ResourceManager, new object[]
			{
				code,
				message
			});
		}

		public static LocalizedString CasHealthNoTuplesToTest
		{
			get
			{
				return new LocalizedString("CasHealthNoTuplesToTest", "ExB9847D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingProtectedServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingProtectedServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetFederationInformationResults(string results)
		{
			return new LocalizedString("GetFederationInformationResults", "Ex3F7E37", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		public static LocalizedString RemovingMoveJobFromAd(string identity)
		{
			return new LocalizedString("RemovingMoveJobFromAd", "ExB5887C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupComponentDomainGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentDomainGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagFswUnableToDetermineFrontendTransportServerException
		{
			get
			{
				return new LocalizedString("DagFswUnableToDetermineFrontendTransportServerException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotCreateRuleWithoutCondition
		{
			get
			{
				return new LocalizedString("ErrorCannotCreateRuleWithoutCondition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EntryNoAllowedInRoleType(string entryType, string roleType)
		{
			return new LocalizedString("EntryNoAllowedInRoleType", "ExA96F98", false, true, Strings.ResourceManager, new object[]
			{
				entryType,
				roleType
			});
		}

		public static LocalizedString ErrorElcFolderNotFound(string folderid)
		{
			return new LocalizedString("ErrorElcFolderNotFound", "Ex45FEA6", false, true, Strings.ResourceManager, new object[]
			{
				folderid
			});
		}

		public static LocalizedString CopyStatusServiceDown
		{
			get
			{
				return new LocalizedString("CopyStatusServiceDown", "ExF53C9E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoNewSiteFolderDatabaseFound
		{
			get
			{
				return new LocalizedString("ErrorNoNewSiteFolderDatabaseFound", "Ex0FE9D5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthAllTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthAllTransactionsSucceeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdminToolsPrereqCheck
		{
			get
			{
				return new LocalizedString("AdminToolsPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupPrereqAnalysisInProgress
		{
			get
			{
				return new LocalizedString("SetupPrereqAnalysisInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallReplayServiceTask
		{
			get
			{
				return new LocalizedString("UninstallReplayServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveUMMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveUMMailboxPolicy", "Ex83626A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupComponentMidFileCopyAdminTools
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyAdminTools", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToAccessIrmConfiguration
		{
			get
			{
				return new LocalizedString("FailedToAccessIrmConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusUnknown
		{
			get
			{
				return new LocalizedString("CopyStatusUnknown", "ExC9884C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBPAOutDirectoryNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAOutDirectoryNotFound", "Ex735FFB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetDynamicDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDynamicDistributionGroup", "Ex43AE1C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString OmaVDirNotFound
		{
			get
			{
				return new LocalizedString("OmaVDirNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidPropertyOverrideValue(string propertyOverride)
		{
			return new LocalizedString("InvalidPropertyOverrideValue", "", false, false, Strings.ResourceManager, new object[]
			{
				propertyOverride
			});
		}

		public static LocalizedString ErrorClassificationNameCannotBeBlank(string applyClassificationParameterName)
		{
			return new LocalizedString("ErrorClassificationNameCannotBeBlank", "", false, false, Strings.ResourceManager, new object[]
			{
				applyClassificationParameterName
			});
		}

		public static LocalizedString SetupProgressInstallingHealthManager
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingHealthManager", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotStopNonRunningJob(string name)
		{
			return new LocalizedString("CannotStopNonRunningJob", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorMultipleProvisioningPolicyExist
		{
			get
			{
				return new LocalizedString("ErrorMultipleProvisioningPolicyExist", "Ex8B0CCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WebServicesTestOutcomeToString(string source, string serviceEndpoint, string scenario, string result, string latency, string error, string verbose)
		{
			return new LocalizedString("WebServicesTestOutcomeToString", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				serviceEndpoint,
				scenario,
				result,
				latency,
				error,
				verbose
			});
		}

		public static LocalizedString UninstallAdminToolsRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallAdminToolsRoleDescription", "Ex53ACB5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningActivationDateBeforeCurrentDate(string activationDateParameterName)
		{
			return new LocalizedString("WarningActivationDateBeforeCurrentDate", "", false, false, Strings.ResourceManager, new object[]
			{
				activationDateParameterName
			});
		}

		public static LocalizedString ConfirmationMessageSetManagementRoleAssignment(string Identity, string Role, string RoleAssignee, string DelegationType, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageSetManagementRoleAssignment", "ExE489BA", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Role,
				RoleAssignee,
				DelegationType,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		public static LocalizedString WaitForServiceStatusChange(uint time, string servicename, string status)
		{
			return new LocalizedString("WaitForServiceStatusChange", "ExF54813", false, true, Strings.ResourceManager, new object[]
			{
				time,
				servicename,
				status
			});
		}

		public static LocalizedString InvalidCertAuthValue
		{
			get
			{
				return new LocalizedString("InvalidCertAuthValue", "Ex4A346A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmImportExchangeCertificateDirect
		{
			get
			{
				return new LocalizedString("ConfirmImportExchangeCertificateDirect", "Ex1FF2DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCreatedRoleAssignment(string id)
		{
			return new LocalizedString("VerboseCreatedRoleAssignment", "Ex2B39AB", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse
		{
			get
			{
				return new LocalizedString("ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuthInvalidNewEffectiveDate
		{
			get
			{
				return new LocalizedString("ErrorAuthInvalidNewEffectiveDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotParseRuleDueToVersion(string name)
		{
			return new LocalizedString("CannotParseRuleDueToVersion", "Ex82018E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ExchVirtualDirectoryCannotFindWebSite(string siteName, string computerName)
		{
			return new LocalizedString("ExchVirtualDirectoryCannotFindWebSite", "Ex025E40", false, true, Strings.ResourceManager, new object[]
			{
				siteName,
				computerName
			});
		}

		public static LocalizedString ErrorInvalidParentExtendedFolderFlags(string id, string parent, string invalidExtendedFlags)
		{
			return new LocalizedString("ErrorInvalidParentExtendedFolderFlags", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				parent,
				invalidExtendedFlags
			});
		}

		public static LocalizedString NewPolicyTipConfigInvalidLocale(string locales)
		{
			return new LocalizedString("NewPolicyTipConfigInvalidLocale", "", false, false, Strings.ResourceManager, new object[]
			{
				locales
			});
		}

		public static LocalizedString ConfirmationMessageDisableAddressListPaging(string org)
		{
			return new LocalizedString("ConfirmationMessageDisableAddressListPaging", "ExE8834D", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString UsageTypeInternal
		{
			get
			{
				return new LocalizedString("UsageTypeInternal", "ExE35850", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserNotInRoleGroups(string id)
		{
			return new LocalizedString("ErrorUserNotInRoleGroups", "Ex6138EF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString UsingProxy(string proxyAddress)
		{
			return new LocalizedString("UsingProxy", "ExAA4A0B", false, true, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		public static LocalizedString ErrorAppCmdNotExist(string file)
		{
			return new LocalizedString("ErrorAppCmdNotExist", "Ex53E3B6", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString DagServerCantBeRemovedInDatacenterActivationMode(string mailbox, string dagName)
		{
			return new LocalizedString("DagServerCantBeRemovedInDatacenterActivationMode", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				dagName
			});
		}

		public static LocalizedString InvalidParamIdentityHasWildcardException
		{
			get
			{
				return new LocalizedString("InvalidParamIdentityHasWildcardException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningFixedMissingGALEntry
		{
			get
			{
				return new LocalizedString("WarningFixedMissingGALEntry", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCopyDirectory(string server, string fromDir, string toDir)
		{
			return new LocalizedString("VerboseCopyDirectory", "Ex1C2ED0", false, true, Strings.ResourceManager, new object[]
			{
				server,
				fromDir,
				toDir
			});
		}

		public static LocalizedString GlobalLocatorServiceSuccess
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerFilterMustBeValid(string m)
		{
			return new LocalizedString("ServerFilterMustBeValid", "Ex230D6F", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxLinked(string Name, string LinkedMasterAccount, string LinkedDomainController, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxLinked", "ExBC7BA4", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				LinkedMasterAccount,
				LinkedDomainController,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString ErrorMoveWebDistributionEnabledOabToTiServer
		{
			get
			{
				return new LocalizedString("ErrorMoveWebDistributionEnabledOabToTiServer", "ExF8E10F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasFolderSyncScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthEasFolderSyncScenarioDescription", "ExC1D238", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCopyDatabaseCatalogFiles(string server, string oldDir, string newDir)
		{
			return new LocalizedString("VerboseCopyDatabaseCatalogFiles", "ExE2FB6B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir,
				newDir
			});
		}

		public static LocalizedString RmsVersionMismatchException(Uri uri)
		{
			return new LocalizedString("RmsVersionMismatchException", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString RemoveADServerMetadataRemovingServerDN(string serverDN)
		{
			return new LocalizedString("RemoveADServerMetadataRemovingServerDN", "ExD5F6F9", false, true, Strings.ResourceManager, new object[]
			{
				serverDN
			});
		}

		public static LocalizedString ConfirmationMessageSetResourceConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetResourceConfig", "ExC3C8D4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMCallAnsweringRuleCheckAutomaticReplies
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleCheckAutomaticReplies", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCreatePublicFolderTree
		{
			get
			{
				return new LocalizedString("ErrorCreatePublicFolderTree", "ExC345AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidTypeOfExpression(string expectedType, string actualType)
		{
			return new LocalizedString("InvalidTypeOfExpression", "", false, false, Strings.ResourceManager, new object[]
			{
				expectedType,
				actualType
			});
		}

		public static LocalizedString ErrorMultipleMatchedUser(string mailboxId)
		{
			return new LocalizedString("ErrorMultipleMatchedUser", "Ex7F19D1", false, true, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		public static LocalizedString AgentAlreadyExists(string name)
		{
			return new LocalizedString("AgentAlreadyExists", "Ex5B23F9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString AmMoveRpcRequestedAnyServer(string db)
		{
			return new LocalizedString("AmMoveRpcRequestedAnyServer", "ExD38CA6", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		public static LocalizedString ErrorPrimaryOnlyCrossForestMovesWithoutArchive(string mailbox)
		{
			return new LocalizedString("ErrorPrimaryOnlyCrossForestMovesWithoutArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString VerboseConnectionAdminRpcInterface(string server)
		{
			return new LocalizedString("VerboseConnectionAdminRpcInterface", "Ex349730", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorOabNotFoundForUser(string user)
		{
			return new LocalizedString("ErrorOabNotFoundForUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString TopologyServiceResultUndefined
		{
			get
			{
				return new LocalizedString("TopologyServiceResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSyncMailboxWithMasterAccountSid(string masterAccountSid, string linkedMasterAccount)
		{
			return new LocalizedString("ErrorSyncMailboxWithMasterAccountSid", "Ex3BF0E4", false, true, Strings.ResourceManager, new object[]
			{
				masterAccountSid,
				linkedMasterAccount
			});
		}

		public static LocalizedString ExchangeSettingsGroupAlreadyExists(string name)
		{
			return new LocalizedString("ExchangeSettingsGroupAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString messageLiveIdConnectivityWCFExceptionThrown(string e)
		{
			return new LocalizedString("messageLiveIdConnectivityWCFExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString ErrorSharedConfigurationRequiresServicePlan
		{
			get
			{
				return new LocalizedString("ErrorSharedConfigurationRequiresServicePlan", "Ex53AB6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetNotification(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetNotification", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorStringContainsLeadingSpace(string idStringValue, string param)
		{
			return new LocalizedString("ErrorStringContainsLeadingSpace", "ExADFA95", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue,
				param
			});
		}

		public static LocalizedString SyncstateupgradeFailedWarning(string user)
		{
			return new LocalizedString("SyncstateupgradeFailedWarning", "Ex4E4C1B", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString SomeMdbsWereMovedWhileRunningPrefix
		{
			get
			{
				return new LocalizedString("SomeMdbsWereMovedWhileRunningPrefix", "Ex9BD5ED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotFindElementWithAttribute(string elementName, string attribute, string attributeValue)
		{
			return new LocalizedString("CouldNotFindElementWithAttribute", "ExE58B89", false, true, Strings.ResourceManager, new object[]
			{
				elementName,
				attribute,
				attributeValue
			});
		}

		public static LocalizedString InvalidDisclaimerMacroName(string invalidMacroName)
		{
			return new LocalizedString("InvalidDisclaimerMacroName", "Ex82AB9F", false, true, Strings.ResourceManager, new object[]
			{
				invalidMacroName
			});
		}

		public static LocalizedString ErrorRemoveOfflineAddressBookWithAssociatedAddressBookPolicies(string name)
		{
			return new LocalizedString("ErrorRemoveOfflineAddressBookWithAssociatedAddressBookPolicies", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString InstallingPOP3Service
		{
			get
			{
				return new LocalizedString("InstallingPOP3Service", "ExB5C999", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddressRewriteInternalAddressExists
		{
			get
			{
				return new LocalizedString("AddressRewriteInternalAddressExists", "ExBB6949", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplicationCheckWarningException(string checkTitle, string warningMessage)
		{
			return new LocalizedString("ReplicationCheckWarningException", "", false, false, Strings.ResourceManager, new object[]
			{
				checkTitle,
				warningMessage
			});
		}

		public static LocalizedString CannotSetDefaultTPD
		{
			get
			{
				return new LocalizedString("CannotSetDefaultTPD", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingHealthManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingHealthManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemovingAceFromDkmContainerAcl(string containerName, string account)
		{
			return new LocalizedString("RemovingAceFromDkmContainerAcl", "", false, false, Strings.ResourceManager, new object[]
			{
				containerName,
				account
			});
		}

		public static LocalizedString SetupProgressRemovingLegacySystemMailboxUsers
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingLegacySystemMailboxUsers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSkipObject(string id)
		{
			return new LocalizedString("VerboseSkipObject", "Ex35A55B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SubscriptionConnectionError(string error)
		{
			return new LocalizedString("SubscriptionConnectionError", "Ex7994E2", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString StoppingPOP3Service
		{
			get
			{
				return new LocalizedString("StoppingPOP3Service", "Ex67643A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEdbFilePathOccupiedByFile(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFilePathOccupiedByFile", "ExCAE40C", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		public static LocalizedString VerboseParsingOPathFilterSucceed(string filter)
		{
			return new LocalizedString("VerboseParsingOPathFilterSucceed", "ExE4993E", false, true, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		public static LocalizedString ErrorProvisioningFederatedExchange(string details)
		{
			return new LocalizedString("ErrorProvisioningFederatedExchange", "ExB5F48C", false, true, Strings.ResourceManager, new object[]
			{
				details
			});
		}

		public static LocalizedString DataClassificationNonUniqueQuery(string localizedName, string uniqueId, string collectionId)
		{
			return new LocalizedString("DataClassificationNonUniqueQuery", "", false, false, Strings.ResourceManager, new object[]
			{
				localizedName,
				uniqueId,
				collectionId
			});
		}

		public static LocalizedString InvalidPredicate
		{
			get
			{
				return new LocalizedString("InvalidPredicate", "Ex60BA1E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseEnableBasicAuthForWSMan
		{
			get
			{
				return new LocalizedString("VerboseEnableBasicAuthForWSMan", "ExD690BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComAdminUnableToInstallComponentsException(string applicationNameOrKey, string path)
		{
			return new LocalizedString("ComAdminUnableToInstallComponentsException", "Ex2525E1", false, true, Strings.ResourceManager, new object[]
			{
				applicationNameOrKey,
				path
			});
		}

		public static LocalizedString ErrorSharePointUrlNotWhitelisted
		{
			get
			{
				return new LocalizedString("ErrorSharePointUrlNotWhitelisted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoOverallFail
		{
			get
			{
				return new LocalizedString("InfoOverallFail", "ExCF471C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArchiveMainCouldNotBeProvisioned
		{
			get
			{
				return new LocalizedString("ErrorArchiveMainCouldNotBeProvisioned", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseGetStoreConfigDCName(string server)
		{
			return new LocalizedString("VerboseGetStoreConfigDCName", "ExFA92B1", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorUserNotFoundOnGlobalCatalog(string id, string gc)
		{
			return new LocalizedString("ErrorUserNotFoundOnGlobalCatalog", "Ex469FB7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				gc
			});
		}

		public static LocalizedString DagFswUnableToCreateWitnessDirectoryException(string fswMachine, string directory, Exception ex)
		{
			return new LocalizedString("DagFswUnableToCreateWitnessDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				directory,
				ex
			});
		}

		public static LocalizedString RestoreOrExportTargetFolderIsSpecial(string targetfolder, string targetmailbox)
		{
			return new LocalizedString("RestoreOrExportTargetFolderIsSpecial", "ExF84709", false, true, Strings.ResourceManager, new object[]
			{
				targetfolder,
				targetmailbox
			});
		}

		public static LocalizedString ConfirmationMessageSetServiceInstanceMap
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetServiceInstanceMap", "Ex74320D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UserWithoutFederatedDomain
		{
			get
			{
				return new LocalizedString("UserWithoutFederatedDomain", "Ex3A25DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TraceCannotCreateXmlReportFolder(string folderName, string exception)
		{
			return new LocalizedString("TraceCannotCreateXmlReportFolder", "ExEF0E03", false, true, Strings.ResourceManager, new object[]
			{
				folderName,
				exception
			});
		}

		public static LocalizedString ExAllHostedOrganizationsGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("ExAllHostedOrganizationsGroupNotFoundException", "ExB5319E", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString CasHealthConfirmTestActiveSyncLocalMachine
		{
			get
			{
				return new LocalizedString("CasHealthConfirmTestActiveSyncLocalMachine", "Ex9946D1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DataClassificationNonUniqueNameViolation(string name)
		{
			return new LocalizedString("DataClassificationNonUniqueNameViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorTooManyRemoteDomains(int max)
		{
			return new LocalizedString("ErrorTooManyRemoteDomains", "", false, false, Strings.ResourceManager, new object[]
			{
				max
			});
		}

		public static LocalizedString ErrorUserNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorUserNotFound", "ExFA9BC9", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString TasksRpcListenerCheckDesc
		{
			get
			{
				return new LocalizedString("TasksRpcListenerCheckDesc", "Ex451F89", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWarnUserCredentials(string strUserName)
		{
			return new LocalizedString("CasHealthWarnUserCredentials", "ExD098D5", false, true, Strings.ResourceManager, new object[]
			{
				strUserName
			});
		}

		public static LocalizedString ExcludeDuplicateMessagesParameterConflict
		{
			get
			{
				return new LocalizedString("ExcludeDuplicateMessagesParameterConflict", "ExF5DBEF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMailboxWithNewWindowsLiveID(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxWithNewWindowsLiveID", "ExB03144", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		public static LocalizedString ConfirmationMessageNewMalwareFilterConfig(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMalwareFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ElcServiceCallFailed(string serverName, string errorCode)
		{
			return new LocalizedString("ElcServiceCallFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		public static LocalizedString ProgressFixIPAddr(string node)
		{
			return new LocalizedString("ProgressFixIPAddr", "Ex8DC59D", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		public static LocalizedString CannotFindCmdletInSnapin(string cmdletName, string snapinName)
		{
			return new LocalizedString("CannotFindCmdletInSnapin", "ExC43D8C", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				snapinName
			});
		}

		public static LocalizedString ErrorDomainServicesNotYetImplemented
		{
			get
			{
				return new LocalizedString("ErrorDomainServicesNotYetImplemented", "ExA74B95", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IsNotMemberOfVOAdmin(string admin)
		{
			return new LocalizedString("IsNotMemberOfVOAdmin", "Ex27A7EC", false, true, Strings.ResourceManager, new object[]
			{
				admin
			});
		}

		public static LocalizedString CmdletRunnerSciptIsInvalid(string script)
		{
			return new LocalizedString("CmdletRunnerSciptIsInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				script
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAuthServer(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorDagNotFound(string identity)
		{
			return new LocalizedString("ErrorDagNotFound", "ExF97763", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageGetDatabaseAvailabilityGroup(string Server)
		{
			return new LocalizedString("ConfirmationMessageGetDatabaseAvailabilityGroup", "Ex3EAC28", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString RequestNameAvailabilityComplete
		{
			get
			{
				return new LocalizedString("RequestNameAvailabilityComplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification
		{
			get
			{
				return new LocalizedString("MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetSharingPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetSharingPolicy", "ExC098A3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorInvalidFfoServerRole
		{
			get
			{
				return new LocalizedString("ErrorInvalidFfoServerRole", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNotEnoughInformationToFindRequestOfCorrectType
		{
			get
			{
				return new LocalizedString("ErrorNotEnoughInformationToFindRequestOfCorrectType", "Ex9F4BEB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallCafeIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("UninstallCafeIisWebServiceExtensions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveLiveFedDomainReserveResponse(string domain)
		{
			return new LocalizedString("RemoveLiveFedDomainReserveResponse", "ExF73CDF", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorUpdateRecipient(string idRecipient, string errorMessage)
		{
			return new LocalizedString("ErrorUpdateRecipient", "Ex248239", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient,
				errorMessage
			});
		}

		public static LocalizedString ServerNameConflict
		{
			get
			{
				return new LocalizedString("ServerNameConflict", "Ex91C930", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRemoveFederatedAcceptedDomain(string domain)
		{
			return new LocalizedString("CannotRemoveFederatedAcceptedDomain", "Ex8F0DD6", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString AlsEmailBodyMailboxShowDetails(bool value)
		{
			return new LocalizedString("AlsEmailBodyMailboxShowDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString NewPolicyTipConfigInvalidUrl
		{
			get
			{
				return new LocalizedString("NewPolicyTipConfigInvalidUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxMaxShowInMyClientReached(string tm, int num)
		{
			return new LocalizedString("ErrorTeamMailboxMaxShowInMyClientReached", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				num
			});
		}

		public static LocalizedString HubServerVersionNotFound(string server)
		{
			return new LocalizedString("HubServerVersionNotFound", "ExF856B0", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString Free
		{
			get
			{
				return new LocalizedString("Free", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MobileDeviceLogNoPermissionsException(string path)
		{
			return new LocalizedString("MobileDeviceLogNoPermissionsException", "Ex19D528", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString TpdIsHSMEncrypted
		{
			get
			{
				return new LocalizedString("TpdIsHSMEncrypted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetPerimeterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetPerimeterConfig", "Ex70CC42", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRoleEntryNotFound(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryNotFound", "Ex1BA9AF", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		public static LocalizedString OwaGzipEnabledOnLegacyVirtualDirectoryWhenMailboxRoleInstalledWarning(string id)
		{
			return new LocalizedString("OwaGzipEnabledOnLegacyVirtualDirectoryWhenMailboxRoleInstalledWarning", "Ex49A2DF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString StandaloneMailboxNoReplication(string serverName)
		{
			return new LocalizedString("StandaloneMailboxNoReplication", "ExDBB39B", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorRetentionActionNowAllowed
		{
			get
			{
				return new LocalizedString("ErrorRetentionActionNowAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ChangePasswordInvalidCredentials
		{
			get
			{
				return new LocalizedString("ChangePasswordInvalidCredentials", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningChangingUserPrincipalName(string userPrincipalName, string windowsLiveID)
		{
			return new LocalizedString("WarningChangingUserPrincipalName", "", false, false, Strings.ResourceManager, new object[]
			{
				userPrincipalName,
				windowsLiveID
			});
		}

		public static LocalizedString OperationExceedsPerServiceInstanceFullSyncObjectRequestLimit(int limit, string serviceInstanceId)
		{
			return new LocalizedString("OperationExceedsPerServiceInstanceFullSyncObjectRequestLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				limit,
				serviceInstanceId
			});
		}

		public static LocalizedString ConfirmationMessageEnableServiceEmailChannel(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableServiceEmailChannel", "ExE48774", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetAttachmentfilterlistconfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAttachmentfilterlistconfig", "ExF98585", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewAutodiscoverVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewAutodiscoverVirtualDirectory", "Ex90AF90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnifiedMessagingDatacenterComponentDescription
		{
			get
			{
				return new LocalizedString("UnifiedMessagingDatacenterComponentDescription", "Ex98E2E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationGetLitigationHoldInformation
		{
			get
			{
				return new LocalizedString("ConfirmationGetLitigationHoldInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveActiveSyncDeviceAccessRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveActiveSyncDeviceAccessRule", "Ex0603CB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString FfoPrimingServiceDisplayName
		{
			get
			{
				return new LocalizedString("FfoPrimingServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Error_StartDateCheck
		{
			get
			{
				return new LocalizedString("Error_StartDateCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetJournalrule", "ExA18710", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorDeprovisionedTargetNotPassed(string identity)
		{
			return new LocalizedString("ErrorDeprovisionedTargetNotPassed", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CannotRemoveTenantWideDivergence(string objectId)
		{
			return new LocalizedString("CannotRemoveTenantWideDivergence", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString MigrationJobAlreadyExists(string jobName)
		{
			return new LocalizedString("MigrationJobAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				jobName
			});
		}

		public static LocalizedString WrongSubscriptionIdentity
		{
			get
			{
				return new LocalizedString("WrongSubscriptionIdentity", "Ex94B62D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestExchangeSearch
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestExchangeSearch", "Ex3C3719", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UpdatesDirectoryNotFound(string directory)
		{
			return new LocalizedString("UpdatesDirectoryNotFound", "Ex1D4A38", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		public static LocalizedString ErrorDlpTemplateRequiresParameter(string parameterName, string requiredParameters)
		{
			return new LocalizedString("ErrorDlpTemplateRequiresParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				requiredParameters
			});
		}

		public static LocalizedString RoleEditor
		{
			get
			{
				return new LocalizedString("RoleEditor", "ExFA7367", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnknownPartition
		{
			get
			{
				return new LocalizedString("ErrorUnknownPartition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageImportTransportRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportTransportRuleCollection", "Ex96280B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOWAEnabledStatusNotConsistent(string id)
		{
			return new LocalizedString("ErrorOWAEnabledStatusNotConsistent", "Ex9DF7D4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxDiscovery(string Name, string Database, string Discovery, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxDiscovery", "Ex11FB12", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				Discovery,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString ErrorSamePublicFolderMRSJobInstancesNotAllowed(string requestType)
		{
			return new LocalizedString("ErrorSamePublicFolderMRSJobInstancesNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				requestType
			});
		}

		public static LocalizedString ResettingIsDefaultIsNotSupported(string paramName, string policyName)
		{
			return new LocalizedString("ResettingIsDefaultIsNotSupported", "Ex56AD31", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				policyName
			});
		}

		public static LocalizedString ErrorProxyAddressAlreadyExists(string address, string user)
		{
			return new LocalizedString("ErrorProxyAddressAlreadyExists", "Ex801472", false, true, Strings.ResourceManager, new object[]
			{
				address,
				user
			});
		}

		public static LocalizedString ErrorMailboxRelocationSplitSourceNotInContainer(string mailbox)
		{
			return new LocalizedString("ErrorMailboxRelocationSplitSourceNotInContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString RegasmNotFound
		{
			get
			{
				return new LocalizedString("RegasmNotFound", "Ex296BFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetServiceInstanceMapResultCodeObjectNotFound
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodeObjectNotFound", "Ex809E75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FederationTrustValid
		{
			get
			{
				return new LocalizedString("FederationTrustValid", "Ex77435D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageDisableJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableJournalrule", "Ex07E7B2", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MoveAlreadyCanceled
		{
			get
			{
				return new LocalizedString("MoveAlreadyCanceled", "Ex8EB7A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthTestUserOnWrongSite(string userName, string foundOn, string shouldBeOn)
		{
			return new LocalizedString("CasHealthTestUserOnWrongSite", "ExE00790", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				foundOn,
				shouldBeOn
			});
		}

		public static LocalizedString ADAttributeCustomAttribute7
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute7", "Ex2116DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOnlyForestWideBlockIsAllowed
		{
			get
			{
				return new LocalizedString("ErrorOnlyForestWideBlockIsAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToMatchTemplateDistributionPointToLicensingUri(Guid templateGuid, Uri templateDp, Uri tpdDp)
		{
			return new LocalizedString("FailedToMatchTemplateDistributionPointToLicensingUri", "", false, false, Strings.ResourceManager, new object[]
			{
				templateGuid,
				templateDp,
				tpdDp
			});
		}

		public static LocalizedString ConditionIncompatibleWithTheSubtype(string conditionName, string subtypeName)
		{
			return new LocalizedString("ConditionIncompatibleWithTheSubtype", "", false, false, Strings.ResourceManager, new object[]
			{
				conditionName,
				subtypeName
			});
		}

		public static LocalizedString EtrHasE4eAction(string ruleName)
		{
			return new LocalizedString("EtrHasE4eAction", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		public static LocalizedString InstallHealthManagerServiceTask
		{
			get
			{
				return new LocalizedString("InstallHealthManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoComponentInfoFilesException
		{
			get
			{
				return new LocalizedString("NoComponentInfoFilesException", "Ex78807D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentMTAConfiguration
		{
			get
			{
				return new LocalizedString("SetupComponentMTAConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressCreateAltFsw(string serverName, string filePath)
		{
			return new LocalizedString("ProgressCreateAltFsw", "Ex966BDB", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				filePath
			});
		}

		public static LocalizedString ErrorAddressBookPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString MountStatusUnknown
		{
			get
			{
				return new LocalizedString("MountStatusUnknown", "Ex14474E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorVerificationCodeTooManyFailed
		{
			get
			{
				return new LocalizedString("ErrorVerificationCodeTooManyFailed", "ExAF0F4A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CustomerFeedbackEnabledError
		{
			get
			{
				return new LocalizedString("CustomerFeedbackEnabledError", "ExE43A8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDeviceIdInBothLists(string deviceId)
		{
			return new LocalizedString("ErrorDeviceIdInBothLists", "ExFF29A6", false, true, Strings.ResourceManager, new object[]
			{
				deviceId
			});
		}

		public static LocalizedString MigrationReportNotFound
		{
			get
			{
				return new LocalizedString("MigrationReportNotFound", "Ex3B7A80", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InitializedWithInvalidObjectId
		{
			get
			{
				return new LocalizedString("InitializedWithInvalidObjectId", "Ex47D4C3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SuccessEnableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("SuccessEnableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString DatabaseSeedStatusLabelRead
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelRead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorKerbauthModuleFileNotFound(string file)
		{
			return new LocalizedString("ErrorKerbauthModuleFileNotFound", "Ex6A239D", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString CasHealthOwaConfirmTestUrl(string url)
		{
			return new LocalizedString("CasHealthOwaConfirmTestUrl", "ExE30BC4", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString DatabaseCopyRpcResultNotFound(string configType, string sgName)
		{
			return new LocalizedString("DatabaseCopyRpcResultNotFound", "Ex825659", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName
			});
		}

		public static LocalizedString UnableToDiscoverMailboxPermission
		{
			get
			{
				return new LocalizedString("UnableToDiscoverMailboxPermission", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagSubnetDown(string subnetId, string netName, string subnetState)
		{
			return new LocalizedString("DagSubnetDown", "ExCB0BD7", false, true, Strings.ResourceManager, new object[]
			{
				subnetId,
				netName,
				subnetState
			});
		}

		public static LocalizedString ErrorFilePathMustBeUNC(string pathName)
		{
			return new LocalizedString("ErrorFilePathMustBeUNC", "Ex513D73", false, true, Strings.ResourceManager, new object[]
			{
				pathName
			});
		}

		public static LocalizedString ConfirmationMessageSetRecipientTemplateProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRecipientTemplateProvisioningPolicy", "ExFAD646", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth
		{
			get
			{
				return new LocalizedString("SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth", "Ex7510B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UpdatingAdminToolsConfiguredVersion(string newValue)
		{
			return new LocalizedString("UpdatingAdminToolsConfiguredVersion", "ExC94F5A", false, true, Strings.ResourceManager, new object[]
			{
				newValue
			});
		}

		public static LocalizedString MtrtRouteMessageHighRisk
		{
			get
			{
				return new LocalizedString("MtrtRouteMessageHighRisk", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveDagFailedToDestroyClusterException(string clusterName, string dagName, uint status)
		{
			return new LocalizedString("RemoveDagFailedToDestroyClusterException", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				dagName,
				status
			});
		}

		public static LocalizedString SetupProgressFederationEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressFederationEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasTestTypeAndAutodiscoverArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthEasTestTypeAndAutodiscoverArgumentError", "Ex0AB15B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCreatedAfterLaterThanToday
		{
			get
			{
				return new LocalizedString("ErrorCreatedAfterLaterThanToday", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FileUploadServiceDescription
		{
			get
			{
				return new LocalizedString("FileUploadServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetClientAccessServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetClientAccessServer", "Ex258A73", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorMailboxRelocationJoinTargetNotContainer(string mailbox)
		{
			return new LocalizedString("ErrorMailboxRelocationJoinTargetNotContainer", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString CasHealthPerformanceCounterName
		{
			get
			{
				return new LocalizedString("CasHealthPerformanceCounterName", "Ex1ABE76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallIisWebServiceExtensionNoChanges
		{
			get
			{
				return new LocalizedString("InstallIisWebServiceExtensionNoChanges", "Ex50C5C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExceededMaxiumNumberOfDatabasesPerServer
		{
			get
			{
				return new LocalizedString("ErrorExceededMaxiumNumberOfDatabasesPerServer", "Ex451B7D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MaxDevicesReachedSingular(uint maxDevicesLimit)
		{
			return new LocalizedString("MaxDevicesReachedSingular", "", false, false, Strings.ResourceManager, new object[]
			{
				maxDevicesLimit
			});
		}

		public static LocalizedString ExceptionMandatoryParameter(string parameter)
		{
			return new LocalizedString("ExceptionMandatoryParameter", "Ex338334", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString GetQueueDigestAmbiguosSite(AdSiteIdParameter adObjectId)
		{
			return new LocalizedString("GetQueueDigestAmbiguosSite", "", false, false, Strings.ResourceManager, new object[]
			{
				adObjectId
			});
		}

		public static LocalizedString WarningNTSecurityDescriptorNotUpdated(string objectId, string reason)
		{
			return new LocalizedString("WarningNTSecurityDescriptorNotUpdated", "Ex82F34D", false, true, Strings.ResourceManager, new object[]
			{
				objectId,
				reason
			});
		}

		public static LocalizedString UMMailboxPolicySetFaxServerURIError
		{
			get
			{
				return new LocalizedString("UMMailboxPolicySetFaxServerURIError", "Ex680145", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportSkippedE15Rules(int skippedRuleCount)
		{
			return new LocalizedString("ExportSkippedE15Rules", "", false, false, Strings.ResourceManager, new object[]
			{
				skippedRuleCount
			});
		}

		public static LocalizedString ErrorDisclaimerTextBig(int size)
		{
			return new LocalizedString("ErrorDisclaimerTextBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		public static LocalizedString WarningBackgroundDatabaseMaintenanceChangeRequiresRemount(string pfdb)
		{
			return new LocalizedString("WarningBackgroundDatabaseMaintenanceChangeRequiresRemount", "Ex3909FA", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString UninstallCafeRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallCafeRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxAuditLogSearchFailed(string criteria, string userid)
		{
			return new LocalizedString("MailboxAuditLogSearchFailed", "Ex037A97", false, true, Strings.ResourceManager, new object[]
			{
				criteria,
				userid
			});
		}

		public static LocalizedString RemoveHuntGroupsLinkedToTenantDialPlans
		{
			get
			{
				return new LocalizedString("RemoveHuntGroupsLinkedToTenantDialPlans", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveAddressListAcrossOrganization(string id, string idTarget)
		{
			return new LocalizedString("ErrorMoveAddressListAcrossOrganization", "Ex2C59E7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				idTarget
			});
		}

		public static LocalizedString ErrorCannotCreateFingerprint
		{
			get
			{
				return new LocalizedString("ErrorCannotCreateFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveMailuserWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailuserWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString InvalidEndDate
		{
			get
			{
				return new LocalizedString("InvalidEndDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFreeBusyFolderCannotGetOrganizationContainer
		{
			get
			{
				return new LocalizedString("InstallFreeBusyFolderCannotGetOrganizationContainer", "Ex3F7A2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionInternalFailure(int error)
		{
			return new LocalizedString("ClassificationRuleCollectionInternalFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString WarningSetMailboxLitigationOwnerIdentity(string owner)
		{
			return new LocalizedString("WarningSetMailboxLitigationOwnerIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				owner
			});
		}

		public static LocalizedString ErrorNoDeletionNoTarget(string paramDelContent, string paramDelAssociatedMsg)
		{
			return new LocalizedString("ErrorNoDeletionNoTarget", "ExC3638F", false, true, Strings.ResourceManager, new object[]
			{
				paramDelContent,
				paramDelAssociatedMsg
			});
		}

		public static LocalizedString InvalidComplianceBindingWarning(string list)
		{
			return new LocalizedString("InvalidComplianceBindingWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				list
			});
		}

		public static LocalizedString ErrorSetPublicFolderMailMailEnabledFalse
		{
			get
			{
				return new LocalizedString("ErrorSetPublicFolderMailMailEnabledFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressConfigurePerimeterConfig
		{
			get
			{
				return new LocalizedString("SetupProgressConfigurePerimeterConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUninstallProvisioningAgent(string Assembly)
		{
			return new LocalizedString("ConfirmationMessageUninstallProvisioningAgent", "Ex4165ED", false, true, Strings.ResourceManager, new object[]
			{
				Assembly
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailboxLinked(string Identity, string LinkedMasterAccount, string LinkedDomainController)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxLinked", "Ex9245B3", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				LinkedMasterAccount,
				LinkedDomainController
			});
		}

		public static LocalizedString NoEntityLinkedToTenantInReportingDB(string tenantName)
		{
			return new LocalizedString("NoEntityLinkedToTenantInReportingDB", "Ex64EAA7", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString ErrorCompleteFlagNotAllowed(string identity, string actual, string expected)
		{
			return new LocalizedString("ErrorCompleteFlagNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				actual,
				expected
			});
		}

		public static LocalizedString SetupProgressStartingProtectedServiceHostService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingProtectedServiceHostService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressIssueWarningMaiboxQuota
		{
			get
			{
				return new LocalizedString("SetupProgressIssueWarningMaiboxQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSourceServerNotInDag(string server)
		{
			return new LocalizedString("ErrorSourceServerNotInDag", "ExCFFE67", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString CasHealthSpecifiedCASServerVersionNotMatched(string cmdletName, int casServerMajorVersion)
		{
			return new LocalizedString("CasHealthSpecifiedCASServerVersionNotMatched", "ExCD9086", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				casServerMajorVersion
			});
		}

		public static LocalizedString RegistryInsufficientPermissionException(string keyPath, string valueName)
		{
			return new LocalizedString("RegistryInsufficientPermissionException", "", false, false, Strings.ResourceManager, new object[]
			{
				keyPath,
				valueName
			});
		}

		public static LocalizedString ErrorAssigneeComputerNotUnique(string id)
		{
			return new LocalizedString("ErrorAssigneeComputerNotUnique", "Ex084F5D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorRecipientIdParamElementsNotUnique(string paramName, string recipient)
		{
			return new LocalizedString("ErrorRecipientIdParamElementsNotUnique", "Ex9A26FB", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				recipient
			});
		}

		public static LocalizedString InvalidPredicateSequence
		{
			get
			{
				return new LocalizedString("InvalidPredicateSequence", "ExD503A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagCantBeSetIntoDatacenterActivationMode(string dagName)
		{
			return new LocalizedString("DagCantBeSetIntoDatacenterActivationMode", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		public static LocalizedString InstallAdminToolsRoleDescription
		{
			get
			{
				return new LocalizedString("InstallAdminToolsRoleDescription", "Ex8ADE44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SharedConfigurationNotEnabled(string org, string sharedConfigurationInfo)
		{
			return new LocalizedString("SharedConfigurationNotEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				org,
				sharedConfigurationInfo
			});
		}

		public static LocalizedString DagTaskNodeNotUpExceptionTryConfigOnlyException(string machineName, string clusterName, string machineState)
		{
			return new LocalizedString("DagTaskNodeNotUpExceptionTryConfigOnlyException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				clusterName,
				machineState
			});
		}

		public static LocalizedString OptInNotSupportedForPre14Mailbox(string versionRequired, string mailbox, string currentVersion)
		{
			return new LocalizedString("OptInNotSupportedForPre14Mailbox", "ExD56AA0", false, true, Strings.ResourceManager, new object[]
			{
				versionRequired,
				mailbox,
				currentVersion
			});
		}

		public static LocalizedString ProgressCopyingCopySystemFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingCopySystemFiles", "ExAE8BCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskMultipleDefaultGatewaysFound(string serverName)
		{
			return new LocalizedString("DagTaskMultipleDefaultGatewaysFound", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString WarningRulesWillNotBeCopied(string identity)
		{
			return new LocalizedString("WarningRulesWillNotBeCopied", "Ex59E4EC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorUnknownMailboxFolderAccessRights(string input)
		{
			return new LocalizedString("ErrorUnknownMailboxFolderAccessRights", "Ex3B7F21", false, true, Strings.ResourceManager, new object[]
			{
				input
			});
		}

		public static LocalizedString DagTaskRemoveNodeCleanupFailed(string NodeName)
		{
			return new LocalizedString("DagTaskRemoveNodeCleanupFailed", "Ex425DCA", false, true, Strings.ResourceManager, new object[]
			{
				NodeName
			});
		}

		public static LocalizedString ErrorBPAOutFileSave
		{
			get
			{
				return new LocalizedString("ErrorBPAOutFileSave", "ExD44202", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCreatedUserNotExist(string Id)
		{
			return new LocalizedString("ErrorCreatedUserNotExist", "Ex553D19", false, true, Strings.ResourceManager, new object[]
			{
				Id
			});
		}

		public static LocalizedString CasHealthPowerShellLogonFailed(string vDir, string errorMessage)
		{
			return new LocalizedString("CasHealthPowerShellLogonFailed", "ExFA38BC", false, true, Strings.ResourceManager, new object[]
			{
				vDir,
				errorMessage
			});
		}

		public static LocalizedString DatabaseNamesMustBeValid(string list)
		{
			return new LocalizedString("DatabaseNamesMustBeValid", "ExD429F6", false, true, Strings.ResourceManager, new object[]
			{
				list
			});
		}

		public static LocalizedString ErrorRBACPolicyNotFound(string id)
		{
			return new LocalizedString("ErrorRBACPolicyNotFound", "ExCEF5A4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorInvalidParametersForLocalPublicFolderMailboxMigration
		{
			get
			{
				return new LocalizedString("ErrorInvalidParametersForLocalPublicFolderMailboxMigration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFailedDoubleWriteOperation(string error)
		{
			return new LocalizedString("VerboseFailedDoubleWriteOperation", "ExB873F0", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString HybridIsEnabledOnPremisesButTenantIsNotUpgraded
		{
			get
			{
				return new LocalizedString("HybridIsEnabledOnPremisesButTenantIsNotUpgraded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressRemovingDefaultTransportAgents
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingDefaultTransportAgents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedToConfigOABForWeb(string oab)
		{
			return new LocalizedString("NeedToConfigOABForWeb", "Ex8B3CC6", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		public static LocalizedString MtrtMessageSend(string originalServerIP)
		{
			return new LocalizedString("MtrtMessageSend", "", false, false, Strings.ResourceManager, new object[]
			{
				originalServerIP
			});
		}

		public static LocalizedString ConfirmationMessageGetSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageGetSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnlineIsIntegException(string database, string failure)
		{
			return new LocalizedString("OnlineIsIntegException", "ExF36F54", false, true, Strings.ResourceManager, new object[]
			{
				database,
				failure
			});
		}

		public static LocalizedString SendConnectorUpdatingnteropUsgMembership
		{
			get
			{
				return new LocalizedString("SendConnectorUpdatingnteropUsgMembership", "Ex67FD26", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressMailboxCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMailboxCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaMissingAuthType(string schemeName)
		{
			return new LocalizedString("CasHealthOwaMissingAuthType", "Ex32151D", false, true, Strings.ResourceManager, new object[]
			{
				schemeName
			});
		}

		public static LocalizedString ProtocolTransactionShortErrorMsgFromException(string exceptionType, string exceptionMessage)
		{
			return new LocalizedString("ProtocolTransactionShortErrorMsgFromException", "ExA8031A", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage
			});
		}

		public static LocalizedString CreateExchangePrincipalObject
		{
			get
			{
				return new LocalizedString("CreateExchangePrincipalObject", "Ex28ABC2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAddressBookMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookMailboxPolicyNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString SuspendSuccessInformationalMessage(string identity)
		{
			return new LocalizedString("SuspendSuccessInformationalMessage", "ExA24EDA", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ServiceFailedToStart(string service)
		{
			return new LocalizedString("ServiceFailedToStart", "Ex97AE1D", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		public static LocalizedString ExceptionInvalidUILevel
		{
			get
			{
				return new LocalizedString("ExceptionInvalidUILevel", "Ex3ADC08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallComplianceAuditServiceTask
		{
			get
			{
				return new LocalizedString("UninstallComplianceAuditServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTenantNotBeingRelocated(string identity)
		{
			return new LocalizedString("ErrorTenantNotBeingRelocated", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ParameterVersionMismatch
		{
			get
			{
				return new LocalizedString("ParameterVersionMismatch", "Ex46C67E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotCreateRoleAssignmentToADeprecatedRole(string id)
		{
			return new LocalizedString("ErrorCannotCreateRoleAssignmentToADeprecatedRole", "Ex79EEEE", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorAddGroupToItself
		{
			get
			{
				return new LocalizedString("ErrorAddGroupToItself", "Ex5D0C4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSetPermissionsOnAdminGroup
		{
			get
			{
				return new LocalizedString("SetupProgressSetPermissionsOnAdminGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MFLFileNotFound(string filePath)
		{
			return new LocalizedString("MFLFileNotFound", "Ex0B9E48", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		public static LocalizedString UninstallDagMgmtServiceTask
		{
			get
			{
				return new LocalizedString("UninstallDagMgmtServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorMixedSourceServerRoles
		{
			get
			{
				return new LocalizedString("SendConnectorMixedSourceServerRoles", "ExB28C9C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetComponentState(string name, string state)
		{
			return new LocalizedString("ConfirmationMessageSetComponentState", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				state
			});
		}

		public static LocalizedString VerboseAdministrativeGroupLinkedToPfdb(string administrativeGroup, string pfdb)
		{
			return new LocalizedString("VerboseAdministrativeGroupLinkedToPfdb", "ExEB8DC4", false, true, Strings.ResourceManager, new object[]
			{
				administrativeGroup,
				pfdb
			});
		}

		public static LocalizedString CasHealthNoteSecureAccess
		{
			get
			{
				return new LocalizedString("CasHealthNoteSecureAccess", "ExC42620", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningCleanExistingPipelineTracingContent
		{
			get
			{
				return new LocalizedString("WarningCleanExistingPipelineTracingContent", "ExA1A126", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageConnectMailboxValidateOnly(string Identity, string ValidateOnly, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxValidateOnly", "ExA6EDD2", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ValidateOnly,
				Database
			});
		}

		public static LocalizedString ServerAdminLinkEmptyException(string dn)
		{
			return new LocalizedString("ServerAdminLinkEmptyException", "ExCF5C4C", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ConfirmationMessageDisableFederatedOrgId(string org)
		{
			return new LocalizedString("ConfirmationMessageDisableFederatedOrgId", "Ex957C83", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString CasHealthOwaGetLogoffSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetLogoffSucceeded", "Ex5DE9E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoRacAndClc
		{
			get
			{
				return new LocalizedString("InfoRacAndClc", "Ex1747D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorServerNotE14OrLater(string server)
		{
			return new LocalizedString("ErrorServerNotE14OrLater", "ExC1ECB8", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorInvalidAuthServerRealm(string realm)
		{
			return new LocalizedString("ErrorInvalidAuthServerRealm", "", false, false, Strings.ResourceManager, new object[]
			{
				realm
			});
		}

		public static LocalizedString DisableMailForestContactNotAllowed(string name)
		{
			return new LocalizedString("DisableMailForestContactNotAllowed", "Ex27B63E", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString NoSystemProbesFound(DateTime start, DateTime end)
		{
			return new LocalizedString("NoSystemProbesFound", "", false, false, Strings.ResourceManager, new object[]
			{
				start,
				end
			});
		}

		public static LocalizedString ErrorRoleAssignmentPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorRoleAssignmentPolicyNotUnique", "Ex03DE94", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageSetAuthConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAuthConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogSourceMailboxRemoved(string id)
		{
			return new LocalizedString("LogSourceMailboxRemoved", "ExD7615D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString FailToAddServerAdminToLocalAdminGroup(string user, string exceptionMessage)
		{
			return new LocalizedString("FailToAddServerAdminToLocalAdminGroup", "Ex9D6189", false, true, Strings.ResourceManager, new object[]
			{
				user,
				exceptionMessage
			});
		}

		public static LocalizedString CatalogDoesntExist
		{
			get
			{
				return new LocalizedString("CatalogDoesntExist", "ExFCE04C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuthServiceNameNotBlank
		{
			get
			{
				return new LocalizedString("ErrorAuthServiceNameNotBlank", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetSenderReputationConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSenderReputationConfig", "ExC349DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMCallAnsweringRuleTransferToWithContext(string context, int key, string number)
		{
			return new LocalizedString("UMCallAnsweringRuleTransferToWithContext", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				number
			});
		}

		public static LocalizedString ErrorMailboxFolderNotUnique(string id)
		{
			return new LocalizedString("ErrorMailboxFolderNotUnique", "Ex32BB2B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupComponentPreSetupBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplicationCheckGeneralFail(string checkTitle, string errorMessage)
		{
			return new LocalizedString("ReplicationCheckGeneralFail", "Ex5BA2A8", false, true, Strings.ResourceManager, new object[]
			{
				checkTitle,
				errorMessage
			});
		}

		public static LocalizedString ConfirmationMessageExportRecipientDataProperty(string recipient)
		{
			return new LocalizedString("ConfirmationMessageExportRecipientDataProperty", "Ex4A22E8", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ErrorFileIsTooLargeForFingerprint(int fileSize, int max)
		{
			return new LocalizedString("ErrorFileIsTooLargeForFingerprint", "", false, false, Strings.ResourceManager, new object[]
			{
				fileSize,
				max
			});
		}

		public static LocalizedString ProcessUtilizationManagerServiceDisplayName
		{
			get
			{
				return new LocalizedString("ProcessUtilizationManagerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressEmailAddressPolicyAdjustingPriority(string id)
		{
			return new LocalizedString("ProgressEmailAddressPolicyAdjustingPriority", "Ex69DABC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString PromptToOverwriteDlpPoliciesOnImport
		{
			get
			{
				return new LocalizedString("PromptToOverwriteDlpPoliciesOnImport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTransportRule", "Ex9097E5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString NewReceiveConnectorAddingPermissionsDoneMsg
		{
			get
			{
				return new LocalizedString("NewReceiveConnectorAddingPermissionsDoneMsg", "ExC81382", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMultiSiteDCContact(string[] dcNames)
		{
			return new LocalizedString("VerboseMultiSiteDCContact", "Ex4ADB3D", false, true, Strings.ResourceManager, dcNames);
		}

		public static LocalizedString ErrorUsersNotInSameOrganization(string src, string tgt)
		{
			return new LocalizedString("ErrorUsersNotInSameOrganization", "ExFDED7A", false, true, Strings.ResourceManager, new object[]
			{
				src,
				tgt
			});
		}

		public static LocalizedString MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus
		{
			get
			{
				return new LocalizedString("MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchActiveManager(string MDB, string error)
		{
			return new LocalizedString("TestSearchActiveManager", "Ex9B7B53", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				error
			});
		}

		public static LocalizedString ErrorSimilarResourcePolicyExist(string wlmPolicy, string type)
		{
			return new LocalizedString("ErrorSimilarResourcePolicyExist", "", false, false, Strings.ResourceManager, new object[]
			{
				wlmPolicy,
				type
			});
		}

		public static LocalizedString VerboseDeletePFProxy(string id)
		{
			return new LocalizedString("VerboseDeletePFProxy", "Ex340337", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString FailedToJoinNode(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToJoinNode", "Ex43C278", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		public static LocalizedString UninstallClientAccessRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallClientAccessRoleDescription", "ExCF221F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringDatacenterMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringDatacenterMailbox", "Ex8821B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UserNotInAd
		{
			get
			{
				return new LocalizedString("UserNotInAd", "Ex8BA2A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorInvalidSourceIPAddress
		{
			get
			{
				return new LocalizedString("SendConnectorInvalidSourceIPAddress", "Ex595BB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseOfflineDatabaseResource(string id, string server)
		{
			return new LocalizedString("VerboseOfflineDatabaseResource", "Ex885C6B", false, true, Strings.ResourceManager, new object[]
			{
				id,
				server
			});
		}

		public static LocalizedString MonitoringServiceRequestTimedout(string machineName, TimeSpan timeout)
		{
			return new LocalizedString("MonitoringServiceRequestTimedout", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				timeout
			});
		}

		public static LocalizedString ConfirmationMessageSetCalendarNotification(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetCalendarNotification", "ExDE0887", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorNoAvailableDefaultName(string mbx)
		{
			return new LocalizedString("ErrorNoAvailableDefaultName", "Ex057E0B", false, true, Strings.ResourceManager, new object[]
			{
				mbx
			});
		}

		public static LocalizedString WarningDelegatesExceededOutlookLimit
		{
			get
			{
				return new LocalizedString("WarningDelegatesExceededOutlookLimit", "ExF23CF8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PatternContainsLeadingTrailingWhiteSpace
		{
			get
			{
				return new LocalizedString("PatternContainsLeadingTrailingWhiteSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationEndpointNotFound(string identity)
		{
			return new LocalizedString("MigrationEndpointNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString GetDbcsRpcQueryAllDone(int count)
		{
			return new LocalizedString("GetDbcsRpcQueryAllDone", "Ex31E483", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString ConfirmationMessageNewGroupMailbox(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString DuplicateInitialDomain
		{
			get
			{
				return new LocalizedString("DuplicateInitialDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmInvalidRoleStandaloneServer(string machineName)
		{
			return new LocalizedString("AmInvalidRoleStandaloneServer", "ExB67BCF", false, true, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		public static LocalizedString AddressRewriteUnrecognizedAddress
		{
			get
			{
				return new LocalizedString("AddressRewriteUnrecognizedAddress", "Ex86A4AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmbiguousDatabaseAndExchangeServerParameters
		{
			get
			{
				return new LocalizedString("AmbiguousDatabaseAndExchangeServerParameters", "Ex1B35FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRollbackPublicFolderReferralChange(string idServer)
		{
			return new LocalizedString("VerboseRollbackPublicFolderReferralChange", "Ex644161", false, true, Strings.ResourceManager, new object[]
			{
				idServer
			});
		}

		public static LocalizedString ErrorFailToParseLocalLongFullPath(string objectIdentity, string propertyName, string path, string error)
		{
			return new LocalizedString("ErrorFailToParseLocalLongFullPath", "Ex084B35", false, true, Strings.ResourceManager, new object[]
			{
				objectIdentity,
				propertyName,
				path,
				error
			});
		}

		public static LocalizedString ErrorArchiveDatabaseDoesNotMatchUser(string archiveDb, string userDb)
		{
			return new LocalizedString("ErrorArchiveDatabaseDoesNotMatchUser", "Ex836446", false, true, Strings.ResourceManager, new object[]
			{
				archiveDb,
				userDb
			});
		}

		public static LocalizedString ErrorNotMsoOrganization(string orgId)
		{
			return new LocalizedString("ErrorNotMsoOrganization", "Ex6E1098", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString ADAttributeOffice
		{
			get
			{
				return new LocalizedString("ADAttributeOffice", "Ex352624", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportCertificateAs12KeyNotExportable
		{
			get
			{
				return new LocalizedString("ExportCertificateAs12KeyNotExportable", "ExD98E0B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningSourceServersSkipped(string serverNames)
		{
			return new LocalizedString("WarningSourceServersSkipped", "", false, false, Strings.ResourceManager, new object[]
			{
				serverNames
			});
		}

		public static LocalizedString SupervisionPoliciesNotFound(string policies)
		{
			return new LocalizedString("SupervisionPoliciesNotFound", "Ex5BDBEC", false, true, Strings.ResourceManager, new object[]
			{
				policies
			});
		}

		public static LocalizedString InvalidParamSpecifyIdentityOrDagException
		{
			get
			{
				return new LocalizedString("InvalidParamSpecifyIdentityOrDagException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StartingW3SVC
		{
			get
			{
				return new LocalizedString("StartingW3SVC", "Ex3441AE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArchiveCanNotBeDownVersion(string archiveDatabase, string primaryDatabase)
		{
			return new LocalizedString("ErrorArchiveCanNotBeDownVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				archiveDatabase,
				primaryDatabase
			});
		}

		public static LocalizedString MigrationWorkflowServiceDisplayName
		{
			get
			{
				return new LocalizedString("MigrationWorkflowServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRecipientEnforcementProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRecipientEnforcementProvisioningPolicy", "ExCC9C61", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString Imap4ServiceDisplayName
		{
			get
			{
				return new LocalizedString("Imap4ServiceDisplayName", "Ex111E5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CrossPremiseProbeResponseMatch(string source, string target)
		{
			return new LocalizedString("CrossPremiseProbeResponseMatch", "ExA3A122", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString ProvisioningRequestCorrupted
		{
			get
			{
				return new LocalizedString("ProvisioningRequestCorrupted", "Ex7CE2E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionErrorMsgNoMailbox
		{
			get
			{
				return new LocalizedString("MapiTransactionErrorMsgNoMailbox", "Ex9BE761", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InPlaceHoldNotAllowedForPublicFolders
		{
			get
			{
				return new LocalizedString("InPlaceHoldNotAllowedForPublicFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceReachedStatusDuringWait(string servicename, string status)
		{
			return new LocalizedString("ServiceReachedStatusDuringWait", "ExE105D6", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				status
			});
		}

		public static LocalizedString ErrorNoValidPhones(string contact)
		{
			return new LocalizedString("ErrorNoValidPhones", "", false, false, Strings.ResourceManager, new object[]
			{
				contact
			});
		}

		public static LocalizedString SetupProgressGALEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressGALEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthTestMultipleMailboxServersFound
		{
			get
			{
				return new LocalizedString("CasHealthTestMultipleMailboxServersFound", "ExB2B2A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTooManyGALsCreated
		{
			get
			{
				return new LocalizedString("ErrorTooManyGALsCreated", "Ex35CBD6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidThumbprintFormat(string thumbprint)
		{
			return new LocalizedString("InvalidThumbprintFormat", "Ex20D263", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString AddOutlookTenantAcceptedDomains
		{
			get
			{
				return new LocalizedString("AddOutlookTenantAcceptedDomains", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRemoveSendConnectorCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveSendConnectorCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogSourceRecipient(string type, string id, string alias, string externalEmailAddress, string legacyDN, string primarySmtpAddress, string emailAddresses)
		{
			return new LocalizedString("LogSourceRecipient", "Ex54830F", false, true, Strings.ResourceManager, new object[]
			{
				type,
				id,
				alias,
				externalEmailAddress,
				legacyDN,
				primarySmtpAddress,
				emailAddresses
			});
		}

		public static LocalizedString DataClassificationFingerprintsDuplicated(string name)
		{
			return new LocalizedString("DataClassificationFingerprintsDuplicated", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CopyStatusSeedingSource
		{
			get
			{
				return new LocalizedString("CopyStatusSeedingSource", "Ex76DB7C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetOpenDomainRoutingOnHotmailMigrateDomain
		{
			get
			{
				return new LocalizedString("SetOpenDomainRoutingOnHotmailMigrateDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EMailAddressNotFound(string s)
		{
			return new LocalizedString("EMailAddressNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString ErrorSystemFolderPathNotUniqueUnderTheSameNode
		{
			get
			{
				return new LocalizedString("ErrorSystemFolderPathNotUniqueUnderTheSameNode", "ExED7F68", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagNetTaskIsManualOnly(string taskName, string dagName)
		{
			return new LocalizedString("DagNetTaskIsManualOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				taskName,
				dagName
			});
		}

		public static LocalizedString CannotLocateWebRequestorEndpoint
		{
			get
			{
				return new LocalizedString("CannotLocateWebRequestorEndpoint", "Ex225B59", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DiscoveringAdditionalDomain(string domain)
		{
			return new LocalizedString("DiscoveringAdditionalDomain", "Ex8C05AA", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ISIntegCorruptionFormat(string corruptionType, bool corruptionFixed)
		{
			return new LocalizedString("ISIntegCorruptionFormat", "", false, false, Strings.ResourceManager, new object[]
			{
				corruptionType,
				corruptionFixed
			});
		}

		public static LocalizedString ErrorWhileFolderSyncForUpdation(string folderId)
		{
			return new LocalizedString("ErrorWhileFolderSyncForUpdation", "", false, false, Strings.ResourceManager, new object[]
			{
				folderId
			});
		}

		public static LocalizedString ErrorSiteNotSpecifiedAndLocalSiteNotFound
		{
			get
			{
				return new LocalizedString("ErrorSiteNotSpecifiedAndLocalSiteNotFound", "ExB4AD2E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IisTasksReadRegistryKeySecurityException(string key)
		{
			return new LocalizedString("IisTasksReadRegistryKeySecurityException", "Ex83CC6D", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString WarningInvalidDedicatedMailboxPlanData(string mailboxPlanData)
		{
			return new LocalizedString("WarningInvalidDedicatedMailboxPlanData", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxPlanData
			});
		}

		public static LocalizedString ErrorOrganizationNotUpgradable(string indentity, string status)
		{
			return new LocalizedString("ErrorOrganizationNotUpgradable", "Ex411143", false, true, Strings.ResourceManager, new object[]
			{
				indentity,
				status
			});
		}

		public static LocalizedString ExistingProductConfiguration(string productCodeString, string propertyValues)
		{
			return new LocalizedString("ExistingProductConfiguration", "Ex5ADF60", false, true, Strings.ResourceManager, new object[]
			{
				productCodeString,
				propertyValues
			});
		}

		public static LocalizedString TransportSyncManagerServiceNotUninstalled
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceNotUninstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallExchangeStreamingOpticsTask
		{
			get
			{
				return new LocalizedString("InstallExchangeStreamingOpticsTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MountStatusDismounted
		{
			get
			{
				return new LocalizedString("MountStatusDismounted", "Ex8BD00A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPublicFolderReferralServerIsNotMailboxServer(string server)
		{
			return new LocalizedString("ErrorPublicFolderReferralServerIsNotMailboxServer", "ExE77BFF", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString AutoDiscoverIsNotSetInOrgRelationship
		{
			get
			{
				return new LocalizedString("AutoDiscoverIsNotSetInOrgRelationship", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRecoveryItemNotFoundByIdentity(string identity)
		{
			return new LocalizedString("ErrorRecoveryItemNotFoundByIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DagNetworkDistinctSubnetListError(string subnetId1, string subnetId2)
		{
			return new LocalizedString("DagNetworkDistinctSubnetListError", "Ex5ABFD2", false, true, Strings.ResourceManager, new object[]
			{
				subnetId1,
				subnetId2
			});
		}

		public static LocalizedString ErrorNewRemoveRoleAssignmentNeedHierarchicalRoleAssignment(string id, string roleId)
		{
			return new LocalizedString("ErrorNewRemoveRoleAssignmentNeedHierarchicalRoleAssignment", "ExD01C5A", false, true, Strings.ResourceManager, new object[]
			{
				id,
				roleId
			});
		}

		public static LocalizedString ErrorResultSizeOutOfRange(string min, string max)
		{
			return new LocalizedString("ErrorResultSizeOutOfRange", "ExEA0D2D", false, true, Strings.ResourceManager, new object[]
			{
				min,
				max
			});
		}

		public static LocalizedString ErrorVerifyLinkedForest(string message)
		{
			return new LocalizedString("ErrorVerifyLinkedForest", "Ex908DA0", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ExchangeSettingsGuidUsage
		{
			get
			{
				return new LocalizedString("ExchangeSettingsGuidUsage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSelectedTextStream(int length, string content)
		{
			return new LocalizedString("VerboseSelectedTextStream", "", false, false, Strings.ResourceManager, new object[]
			{
				length,
				content
			});
		}

		public static LocalizedString SeederPrepareDbSeedRpcBegin(string taskName, string targetMachine)
		{
			return new LocalizedString("SeederPrepareDbSeedRpcBegin", "Ex2BCF3A", false, true, Strings.ResourceManager, new object[]
			{
				taskName,
				targetMachine
			});
		}

		public static LocalizedString ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo
		{
			get
			{
				return new LocalizedString("ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFolderNotExist(string folder)
		{
			return new LocalizedString("ErrorFolderNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		public static LocalizedString TestSearchServerNoMdbs(string serverName)
		{
			return new LocalizedString("TestSearchServerNoMdbs", "ExD8D7EB", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorPropertyTypeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorPropertyTypeNotUnique", "ExAE1CD6", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ComplianceSearchInitializingMessage
		{
			get
			{
				return new LocalizedString("ComplianceSearchInitializingMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToGetProcessIdOfService(string serviceName, string exception)
		{
			return new LocalizedString("UnableToGetProcessIdOfService", "Ex974076", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				exception
			});
		}

		public static LocalizedString FailedToSaveCorruptServerException(string fqdn, string error)
		{
			return new LocalizedString("FailedToSaveCorruptServerException", "ExBC9651", false, true, Strings.ResourceManager, new object[]
			{
				fqdn,
				error
			});
		}

		public static LocalizedString CatchAllRecipientNotUnique(RecipientIdParameter name)
		{
			return new LocalizedString("CatchAllRecipientNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorDuplicateActiveOrganizationExists(string name)
		{
			return new LocalizedString("ErrorDuplicateActiveOrganizationExists", "ExB8565B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString InvalidRegex(string regex)
		{
			return new LocalizedString("InvalidRegex", "", false, false, Strings.ResourceManager, new object[]
			{
				regex
			});
		}

		public static LocalizedString SiteMailboxCreatorSet(string creator)
		{
			return new LocalizedString("SiteMailboxCreatorSet", "", false, false, Strings.ResourceManager, new object[]
			{
				creator
			});
		}

		public static LocalizedString ServerNotHubOrEdge
		{
			get
			{
				return new LocalizedString("ServerNotHubOrEdge", "Ex5724F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotProvideNetIDAndSmtpAddress
		{
			get
			{
				return new LocalizedString("ErrorCannotProvideNetIDAndSmtpAddress", "ExA21886", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressRemovingAdamInstance
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingAdamInstance", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorReadDatabaseSecurityDescriptor(string identity)
		{
			return new LocalizedString("ErrorReadDatabaseSecurityDescriptor", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorTeamMailboxCanNotUnLinkSharePointByNonSiteOwner(string site)
		{
			return new LocalizedString("ErrorTeamMailboxCanNotUnLinkSharePointByNonSiteOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString ErrorNotificationPhoneNumberAbsent(string identity)
		{
			return new LocalizedString("ErrorNotificationPhoneNumberAbsent", "Ex77C835", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorFailToCreateExchangeAdministratorsGroup(string groupType, string container, string memberOperated, string exception)
		{
			return new LocalizedString("ErrorFailToCreateExchangeAdministratorsGroup", "Ex674148", false, true, Strings.ResourceManager, new object[]
			{
				groupType,
				container,
				memberOperated,
				exception
			});
		}

		public static LocalizedString SeedingErrorDirectoryIsFile(string field, string file)
		{
			return new LocalizedString("SeedingErrorDirectoryIsFile", "Ex79B54D", false, true, Strings.ResourceManager, new object[]
			{
				field,
				file
			});
		}

		public static LocalizedString ErrorRpcHttpBasicAuthOverHttpDisallowed
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpBasicAuthOverHttpDisallowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPreSetupAllRoles
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupAllRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToCleanupDatabase(string databaseId, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToCleanupDatabase", "ExF6D973", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				errorMessage
			});
		}

		public static LocalizedString InfoCreateE12DSGroup(string e12ds)
		{
			return new LocalizedString("InfoCreateE12DSGroup", "ExC57AC0", false, true, Strings.ResourceManager, new object[]
			{
				e12ds
			});
		}

		public static LocalizedString ErrorSetVersion4OabToTiServerWithoutSP3(string server)
		{
			return new LocalizedString("ErrorSetVersion4OabToTiServerWithoutSP3", "Ex99F664", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ConfirmationMessageSetThrottlingPolicy(string Name, string scope)
		{
			return new LocalizedString("ConfirmationMessageSetThrottlingPolicy", "ExA27FF1", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				scope
			});
		}

		public static LocalizedString VerboseADReferral(string id, string dc, string details)
		{
			return new LocalizedString("VerboseADReferral", "Ex2CDA94", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc,
				details
			});
		}

		public static LocalizedString ErrorCannotChangeLocaleProperty(string field, string msgcl)
		{
			return new LocalizedString("ErrorCannotChangeLocaleProperty", "ExEC0E5B", false, true, Strings.ResourceManager, new object[]
			{
				field,
				msgcl
			});
		}

		public static LocalizedString SendConnectorDuplicateSourceServerException(string server)
		{
			return new LocalizedString("SendConnectorDuplicateSourceServerException", "Ex27104D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ProgressCopying
		{
			get
			{
				return new LocalizedString("ProgressCopying", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSubscriptionFileMustBeXml
		{
			get
			{
				return new LocalizedString("ErrorSubscriptionFileMustBeXml", "Ex88CC60", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEcpScenarioTestWebService
		{
			get
			{
				return new LocalizedString("CasHealthEcpScenarioTestWebService", "ExC0704F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidIPAddress(string address)
		{
			return new LocalizedString("InvalidIPAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		public static LocalizedString ErrorNewTeamMailboxParameter
		{
			get
			{
				return new LocalizedString("ErrorNewTeamMailboxParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToReadDlpPolicy(string reason)
		{
			return new LocalizedString("UnableToReadDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString RmsSharedIdentityLocalComputerNotFound
		{
			get
			{
				return new LocalizedString("RmsSharedIdentityLocalComputerNotFound", "Ex4FC86F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionCannotDelegateEdgeServerAdmin(string server)
		{
			return new LocalizedString("ExceptionCannotDelegateEdgeServerAdmin", "Ex32BE4E", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ConfirmationMessageSetTeamMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CalendarVDirDisabledWarning
		{
			get
			{
				return new LocalizedString("CalendarVDirDisabledWarning", "Ex451B1F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InitializeServerResponse(string response)
		{
			return new LocalizedString("InitializeServerResponse", "Ex609754", false, true, Strings.ResourceManager, new object[]
			{
				response
			});
		}

		public static LocalizedString DagMemberNoDatabases(string serverName)
		{
			return new LocalizedString("DagMemberNoDatabases", "ExF55AEC", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString UninstallForwardSyncServiceTask
		{
			get
			{
				return new LocalizedString("UninstallForwardSyncServiceTask", "Ex167E96", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFailedSetAccessControl(string server, string dir, string error)
		{
			return new LocalizedString("VerboseFailedSetAccessControl", "Ex54C7CE", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir,
				error
			});
		}

		public static LocalizedString ErrorWhileUpdatingBadWordsRules(string ruleName, string details)
		{
			return new LocalizedString("ErrorWhileUpdatingBadWordsRules", "ExAC1C2C", false, true, Strings.ResourceManager, new object[]
			{
				ruleName,
				details
			});
		}

		public static LocalizedString ConfirmationMessageNewMSOFullSyncRequest(string objectId, string serviceInstanceId, string options)
		{
			return new LocalizedString("ConfirmationMessageNewMSOFullSyncRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				serviceInstanceId,
				options
			});
		}

		public static LocalizedString ErrorTeamMailboxCanNotLinkSharePointByNonSiteOwner(string site)
		{
			return new LocalizedString("ErrorTeamMailboxCanNotLinkSharePointByNonSiteOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString ParsingWebRequestorRedirectEndPoint(string redirectEpr)
		{
			return new LocalizedString("ParsingWebRequestorRedirectEndPoint", "Ex3B40EA", false, true, Strings.ResourceManager, new object[]
			{
				redirectEpr
			});
		}

		public static LocalizedString ReportMovedMailboxMorphedToMailUser(string domainController)
		{
			return new LocalizedString("ReportMovedMailboxMorphedToMailUser", "Ex67DCCD", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		public static LocalizedString InstallImap4ServiceTask
		{
			get
			{
				return new LocalizedString("InstallImap4ServiceTask", "Ex092B51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotAssignRoleToPartnerApp(string role, string app)
		{
			return new LocalizedString("ErrorCannotAssignRoleToPartnerApp", "", false, false, Strings.ResourceManager, new object[]
			{
				role,
				app
			});
		}

		public static LocalizedString DuplicateTriplet(string line, string file, string programID, string offerID)
		{
			return new LocalizedString("DuplicateTriplet", "ExD8DFF1", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				programID,
				offerID
			});
		}

		public static LocalizedString ConfirmRemovalOfCorruptMoveRequest(string identity, string validationMessage)
		{
			return new LocalizedString("ConfirmRemovalOfCorruptMoveRequest", "ExA46BAE", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				validationMessage
			});
		}

		public static LocalizedString ErrorScopeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorScopeNotFound", "Ex7FBB87", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorLiveDomainUriNotUnique(string message)
		{
			return new LocalizedString("ErrorLiveDomainUriNotUnique", "ExB04A64", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageExportJournalRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageExportJournalRuleCollection", "ExB45BE2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtRightsProtectMessage
		{
			get
			{
				return new LocalizedString("MtrtRightsProtectMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDistributionListJoinApprovalRequired(string requesterId, string groupId, string messageId)
		{
			return new LocalizedString("WarningDistributionListJoinApprovalRequired", "Ex60CF2A", false, true, Strings.ResourceManager, new object[]
			{
				requesterId,
				groupId,
				messageId
			});
		}

		public static LocalizedString CannotSetBothEhfAndFfoRoutingId
		{
			get
			{
				return new LocalizedString("CannotSetBothEhfAndFfoRoutingId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallCentralAdminFrontEndRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCentralAdminFrontEndRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasCommandFailedWithError(string commandName, string errorString, string additionalInfo)
		{
			return new LocalizedString("CasHealthEasCommandFailedWithError", "ExB5270A", false, true, Strings.ResourceManager, new object[]
			{
				commandName,
				errorString,
				additionalInfo
			});
		}

		public static LocalizedString VerboseTestUserOrganization(string orgId)
		{
			return new LocalizedString("VerboseTestUserOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString ConfirmationMessageResumeDatabaseCopyIdentity(string Identity, string Server)
		{
			return new LocalizedString("ConfirmationMessageResumeDatabaseCopyIdentity", "Ex4F4BF3", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server
			});
		}

		public static LocalizedString CouldNotRemoveMoveRequest(string identity)
		{
			return new LocalizedString("CouldNotRemoveMoveRequest", "Ex7213F0", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorGivingUpWaitingOnMRS(string identity)
		{
			return new LocalizedString("ErrorGivingUpWaitingOnMRS", "Ex8783FE", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DagTaskFixedUpIpResources(string status)
		{
			return new LocalizedString("DagTaskFixedUpIpResources", "", false, false, Strings.ResourceManager, new object[]
			{
				status
			});
		}

		public static LocalizedString DebugStartSaveDataObject
		{
			get
			{
				return new LocalizedString("DebugStartSaveDataObject", "ExF761AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveMailboxWithDiscoveryHold(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailboxWithDiscoveryHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString RpcClientAccessServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("RpcClientAccessServiceControlComponentDescription", "Ex73E6F0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederAlreadyFailedPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyFailedPrompt", "ExC20081", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		public static LocalizedString FfoReportingMessage
		{
			get
			{
				return new LocalizedString("FfoReportingMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningPromotingSecondaryToPrimary
		{
			get
			{
				return new LocalizedString("WarningPromotingSecondaryToPrimary", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotFindSchemaAttributeException(string attr, string schemaDN, string server)
		{
			return new LocalizedString("CannotFindSchemaAttributeException", "Ex3A869C", false, true, Strings.ResourceManager, new object[]
			{
				attr,
				schemaDN,
				server
			});
		}

		public static LocalizedString TestMailflowNoSystemMailbox
		{
			get
			{
				return new LocalizedString("TestMailflowNoSystemMailbox", "ExCB5719", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRequest(string indexEntry)
		{
			return new LocalizedString("ConfirmationMessageRemoveRequest", "ExAEE6FE", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		public static LocalizedString DuplicateContentFilterPhrase(string phrase)
		{
			return new LocalizedString("DuplicateContentFilterPhrase", "", false, false, Strings.ResourceManager, new object[]
			{
				phrase
			});
		}

		public static LocalizedString CasHealthOwaBadHttpResponseStream(string url)
		{
			return new LocalizedString("CasHealthOwaBadHttpResponseStream", "Ex1DF4AC", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SearchDuplicateSource(string sourceDisplayName)
		{
			return new LocalizedString("SearchDuplicateSource", "", false, false, Strings.ResourceManager, new object[]
			{
				sourceDisplayName
			});
		}

		public static LocalizedString FailedToCreateEwsConnection
		{
			get
			{
				return new LocalizedString("FailedToCreateEwsConnection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseWaitingForReplicationInTargetForest
		{
			get
			{
				return new LocalizedString("VerboseWaitingForReplicationInTargetForest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionWebObjectAlreadyExists(string name)
		{
			return new LocalizedString("ExceptionWebObjectAlreadyExists", "ExC9BA8A", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString UserCreatedFolder
		{
			get
			{
				return new LocalizedString("UserCreatedFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UserFederatedDomainNotInRemoteOrgRelationship(string userFedDomain)
		{
			return new LocalizedString("UserFederatedDomainNotInRemoteOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				userFedDomain
			});
		}

		public static LocalizedString GetMsoDiagnosticsNewCookieIsBeingUsed
		{
			get
			{
				return new LocalizedString("GetMsoDiagnosticsNewCookieIsBeingUsed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageStartComplianceSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStartComplianceSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString TopologyServiceFailed(string operation, string error)
		{
			return new LocalizedString("TopologyServiceFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				error
			});
		}

		public static LocalizedString WarningCannotUpgradeInvalidRoleAssignment(string roleAssignmentId)
		{
			return new LocalizedString("WarningCannotUpgradeInvalidRoleAssignment", "Ex50C090", false, true, Strings.ResourceManager, new object[]
			{
				roleAssignmentId
			});
		}

		public static LocalizedString SetupProgressUninstallingContentIndexingMSI
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallingContentIndexingMSI", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationCSVRequired
		{
			get
			{
				return new LocalizedString("MigrationCSVRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCheckingAgainstPartnerApplicationMetadataUrl(string url)
		{
			return new LocalizedString("VerboseCheckingAgainstPartnerApplicationMetadataUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ErrorNewRoleInvalidValueUnscopedParameter
		{
			get
			{
				return new LocalizedString("ErrorNewRoleInvalidValueUnscopedParameter", "ExF39DB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CallingGetFederationInformation
		{
			get
			{
				return new LocalizedString("CallingGetFederationInformation", "Ex356AA3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskFixingUpIpResources
		{
			get
			{
				return new LocalizedString("DagTaskFixingUpIpResources", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateNotCAPI(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotCAPI", "Ex6B2874", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString ApplicationUrisSkipped
		{
			get
			{
				return new LocalizedString("ApplicationUrisSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopImapErrorUnexpectedValue(object theValue)
		{
			return new LocalizedString("PopImapErrorUnexpectedValue", "Ex35609E", false, true, Strings.ResourceManager, new object[]
			{
				theValue
			});
		}

		public static LocalizedString ErrorSetPublicFolderMailMailRecipientGuidNull
		{
			get
			{
				return new LocalizedString("ErrorSetPublicFolderMailMailRecipientGuidNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MultipleSubscriptionSites
		{
			get
			{
				return new LocalizedString("MultipleSubscriptionSites", "ExC29568", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOWAVdirAppPoolNotExist
		{
			get
			{
				return new LocalizedString("ErrorOWAVdirAppPoolNotExist", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RcrConfigString(string serverName)
		{
			return new LocalizedString("RcrConfigString", "Ex2EA7D5", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString CasHealthPowerShellShortName
		{
			get
			{
				return new LocalizedString("CasHealthPowerShellShortName", "ExE40BD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusHealthy
		{
			get
			{
				return new LocalizedString("CopyStatusHealthy", "Ex5A5CBB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaAuthTypesSupported2(string method1, string method2)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported2", "Ex3B40FB", false, true, Strings.ResourceManager, new object[]
			{
				method1,
				method2
			});
		}

		public static LocalizedString ConfirmExportExchangeCertificate(string thumbprint)
		{
			return new LocalizedString("ConfirmExportExchangeCertificate", "Ex65B493", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString InfoCheckRmsVersion(Uri uri)
		{
			return new LocalizedString("InfoCheckRmsVersion", "ExF84D5F", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString SubscriptionPasswordEmptyException
		{
			get
			{
				return new LocalizedString("SubscriptionPasswordEmptyException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTryingToReadPfx(string file, string message)
		{
			return new LocalizedString("ErrorTryingToReadPfx", "Ex23E8F5", false, true, Strings.ResourceManager, new object[]
			{
				file,
				message
			});
		}

		public static LocalizedString ConfirmationMessageNewMailFlowPartnerConfigWithName(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailFlowPartnerConfigWithName", "Ex901FB7", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString TestMailflowServerWithoutMdbs(string mailboxServer)
		{
			return new LocalizedString("TestMailflowServerWithoutMdbs", "ExBF464A", false, true, Strings.ResourceManager, new object[]
			{
				mailboxServer
			});
		}

		public static LocalizedString ReportsMPNotInstalled
		{
			get
			{
				return new LocalizedString("ReportsMPNotInstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMoveMailboxDatabaseMasterAnyServerSourceServer(string sourceserver)
		{
			return new LocalizedString("ConfirmationMessageMoveMailboxDatabaseMasterAnyServerSourceServer", "Ex848B6B", false, true, Strings.ResourceManager, new object[]
			{
				sourceserver
			});
		}

		public static LocalizedString VerboseDeleteMonitoringMailbox(string id)
		{
			return new LocalizedString("VerboseDeleteMonitoringMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorMoveVersion4OabToTiServerWithoutSP3(string oab)
		{
			return new LocalizedString("ErrorMoveVersion4OabToTiServerWithoutSP3", "Ex6717FF", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		public static LocalizedString RequestOnInaccessibleDatabase
		{
			get
			{
				return new LocalizedString("RequestOnInaccessibleDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmtpConnectivityFailureEvent(string server, string failures, string untested, string successes)
		{
			return new LocalizedString("SmtpConnectivityFailureEvent", "Ex791B06", false, true, Strings.ResourceManager, new object[]
			{
				server,
				failures,
				untested,
				successes
			});
		}

		public static LocalizedString HeaderValues(string s)
		{
			return new LocalizedString("HeaderValues", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString MailboxSearchIdentityMustBeFullyQualified(string identity)
		{
			return new LocalizedString("MailboxSearchIdentityMustBeFullyQualified", "ExE17E92", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WritingInformationScript(string file)
		{
			return new LocalizedString("WritingInformationScript", "ExB94339", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString SetupProgressStartingServices
		{
			get
			{
				return new LocalizedString("SetupProgressStartingServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAddressBookPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookPolicyNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString Busy
		{
			get
			{
				return new LocalizedString("Busy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseAvailabilityCheckDesc
		{
			get
			{
				return new LocalizedString("DatabaseAvailabilityCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CafeRoleNotInstalled(string thumbprint, string serverName)
		{
			return new LocalizedString("CafeRoleNotInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint,
				serverName
			});
		}

		public static LocalizedString CapabilityDoesNotMatchOthers(string capability)
		{
			return new LocalizedString("CapabilityDoesNotMatchOthers", "Ex5B32C3", false, true, Strings.ResourceManager, new object[]
			{
				capability
			});
		}

		public static LocalizedString ClassificationRuleCollectionStorageFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionStorageFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotModifyFolderName
		{
			get
			{
				return new LocalizedString("ErrorCannotModifyFolderName", "Ex831426", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString JournalingReportNdrToSameAsRecipient
		{
			get
			{
				return new LocalizedString("JournalingReportNdrToSameAsRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewFederationTrustAddAppUri(string appId, string appUri)
		{
			return new LocalizedString("NewFederationTrustAddAppUri", "Ex28CC51", false, true, Strings.ResourceManager, new object[]
			{
				appId,
				appUri
			});
		}

		public static LocalizedString XRopConnectLogon
		{
			get
			{
				return new LocalizedString("XRopConnectLogon", "Ex300794", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMCallAnsweringRuleCallerIdCondition(string caller)
		{
			return new LocalizedString("UMCallAnsweringRuleCallerIdCondition", "", false, false, Strings.ResourceManager, new object[]
			{
				caller
			});
		}

		public static LocalizedString ComfirmConnectToMatchingUser(string userId, string alias)
		{
			return new LocalizedString("ComfirmConnectToMatchingUser", "Ex32F88A", false, true, Strings.ResourceManager, new object[]
			{
				userId,
				alias
			});
		}

		public static LocalizedString ConfirmationMessageAddAttachmentfilterentry(string Name, string Type)
		{
			return new LocalizedString("ConfirmationMessageAddAttachmentfilterentry", "Ex95B5CB", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Type
			});
		}

		public static LocalizedString ErrorTeamMailboxSendNotifications(string error)
		{
			return new LocalizedString("ErrorTeamMailboxSendNotifications", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString CertFileNotFound(string file)
		{
			return new LocalizedString("CertFileNotFound", "ExAEB642", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveClientAccessArray(string idStringValue)
		{
			return new LocalizedString("ConfirmationMessageRemoveClientAccessArray", "ExA3E11C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString SetupProgressProhibitSendReceiveQuota
		{
			get
			{
				return new LocalizedString("SetupProgressProhibitSendReceiveQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ScenarioEwsGetFolder
		{
			get
			{
				return new LocalizedString("ScenarioEwsGetFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CalendarLogIdentityNotSpecified
		{
			get
			{
				return new LocalizedString("CalendarLogIdentityNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionUserObjectNotFound(string id)
		{
			return new LocalizedString("ExceptionUserObjectNotFound", "ExEA327D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorThumbprintNotFound(string thumbprint)
		{
			return new LocalizedString("ErrorThumbprintNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorBypassWLIDAndRemovedMailboxTogether
		{
			get
			{
				return new LocalizedString("ErrorBypassWLIDAndRemovedMailboxTogether", "Ex899361", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidAggregateByType(string aggregateType)
		{
			return new LocalizedString("InvalidAggregateByType", "", false, false, Strings.ResourceManager, new object[]
			{
				aggregateType
			});
		}

		public static LocalizedString StartingHealthService
		{
			get
			{
				return new LocalizedString("StartingHealthService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClientRequestId(string s)
		{
			return new LocalizedString("ClientRequestId", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString CreateWkGuidPermissionDeniedException(string entry)
		{
			return new LocalizedString("CreateWkGuidPermissionDeniedException", "Ex0FE83A", false, true, Strings.ResourceManager, new object[]
			{
				entry
			});
		}

		public static LocalizedString InstallMomConnectorServiceTask
		{
			get
			{
				return new LocalizedString("InstallMomConnectorServiceTask", "ExD77059", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxQuotaValues(string mailbox, string mbxQuota, string archiveQuota, string dumpsterQuota)
		{
			return new LocalizedString("MailboxQuotaValues", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				mbxQuota,
				archiveQuota,
				dumpsterQuota
			});
		}

		public static LocalizedString SetArchivePermissionException(string user, Exception exception)
		{
			return new LocalizedString("SetArchivePermissionException", "Ex318141", false, true, Strings.ResourceManager, new object[]
			{
				user,
				exception
			});
		}

		public static LocalizedString VerboseNoAssociatedMRSRequestOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedMRSRequestOnDatabaseCondition", "Ex65B940", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ExchangeUpgradeBucketInvalidCapacityValue
		{
			get
			{
				return new LocalizedString("ExchangeUpgradeBucketInvalidCapacityValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionResultSuccess
		{
			get
			{
				return new LocalizedString("MapiTransactionResultSuccess", "ExB5A583", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningOABSourceServerDoesNotExist(string serverName)
		{
			return new LocalizedString("WarningOABSourceServerDoesNotExist", "Ex25B0C6", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorBPAOutFileLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAOutFileLoad", "Ex8F4E08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AccessStoreSuccess
		{
			get
			{
				return new LocalizedString("AccessStoreSuccess", "Ex6C1537", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorChildObjectTypeNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorChildObjectTypeNotFound", "Ex421E92", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString CannotSpecifyParameterWithE15OrLaterOab(string parameterName)
		{
			return new LocalizedString("CannotSpecifyParameterWithE15OrLaterOab", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString VerboseTestOabFromParameter(string url)
		{
			return new LocalizedString("VerboseTestOabFromParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ErrorIisVersionIsInvalid(string serverName)
		{
			return new LocalizedString("ErrorIisVersionIsInvalid", "Ex42C286", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ConfirmationMessageSuspendRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageSuspendRequest", "ExF609D3", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString FailedDeleteOldDatabaseLogFiles(string server, string oldDir)
		{
			return new LocalizedString("FailedDeleteOldDatabaseLogFiles", "ExEC18B1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				oldDir
			});
		}

		public static LocalizedString ErrorSuspendAndResumeDontSupportFalse
		{
			get
			{
				return new LocalizedString("ErrorSuspendAndResumeDontSupportFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BackSyncObjectExcludedExtended(DirectoryObjectClass directoryObjectClass, string objectId, ADObjectId adObjectId, DirectoryObjectErrorCode errorCode, ProcessingStage processingStage)
		{
			return new LocalizedString("BackSyncObjectExcludedExtended", "ExAB7286", false, true, Strings.ResourceManager, new object[]
			{
				directoryObjectClass,
				objectId,
				adObjectId,
				errorCode,
				processingStage
			});
		}

		public static LocalizedString InstallCafeIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("InstallCafeIisWebServiceExtensions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestSenderId(string IPAddress, string PurportedResponsibleDomain)
		{
			return new LocalizedString("ConfirmationMessageTestSenderId", "ExF97952", false, true, Strings.ResourceManager, new object[]
			{
				IPAddress,
				PurportedResponsibleDomain
			});
		}

		public static LocalizedString ConfirmationMessageRemoveGlobalAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveGlobalAddressList", "Ex2CAFFD", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ImportFromPSTShouldImport(string srcDisplayname, string PSTFolderPath)
		{
			return new LocalizedString("ImportFromPSTShouldImport", "Ex9AF8B6", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname,
				PSTFolderPath
			});
		}

		public static LocalizedString PAMRPCError(string ex)
		{
			return new LocalizedString("PAMRPCError", "ExC18A6E", false, true, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString FileShareWitnessPathDown(string path, string node, string cluster, int ec)
		{
			return new LocalizedString("FileShareWitnessPathDown", "Ex47B4A8", false, true, Strings.ResourceManager, new object[]
			{
				path,
				node,
				cluster,
				ec
			});
		}

		public static LocalizedString ErrorIncorrectInputDag(string name)
		{
			return new LocalizedString("ErrorIncorrectInputDag", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRedirectionDuplicateDomainName(string domainName)
		{
			return new LocalizedString("ErrorRedirectionDuplicateDomainName", "ExCA1DA1", false, true, Strings.ResourceManager, new object[]
			{
				domainName
			});
		}

		public static LocalizedString MissingHydratedOffer(string file, string hydrateOffer)
		{
			return new LocalizedString("MissingHydratedOffer", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				hydrateOffer
			});
		}

		public static LocalizedString ReceiveConnectorMappingConflict(string receiveConnectorId)
		{
			return new LocalizedString("ReceiveConnectorMappingConflict", "Ex142B4F", false, true, Strings.ResourceManager, new object[]
			{
				receiveConnectorId
			});
		}

		public static LocalizedString VerboseUpdatedServiceEndpoint(string endpoint, string serverName)
		{
			return new LocalizedString("VerboseUpdatedServiceEndpoint", "Ex1F0E18", false, true, Strings.ResourceManager, new object[]
			{
				endpoint,
				serverName
			});
		}

		public static LocalizedString ErrorCouldNotRemoveRoleAssignments(string roleGroupId)
		{
			return new LocalizedString("ErrorCouldNotRemoveRoleAssignments", "Ex528454", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupId
			});
		}

		public static LocalizedString TenantNotificationDebugHelpProviderReturnedEmptyUrl(string eventSource, int eventId, string language)
		{
			return new LocalizedString("TenantNotificationDebugHelpProviderReturnedEmptyUrl", "Ex9DAF2B", false, true, Strings.ResourceManager, new object[]
			{
				eventSource,
				eventId,
				language
			});
		}

		public static LocalizedString ConfirmationMessageTestMAPIConnectivityServer(string Server)
		{
			return new LocalizedString("ConfirmationMessageTestMAPIConnectivityServer", "Ex3F4931", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString UMRoleNotInstalled(string thumbprint, string serverName)
		{
			return new LocalizedString("UMRoleNotInstalled", "ExBD419E", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				serverName
			});
		}

		public static LocalizedString ChangesTakeEffectAfterRestartingPopImapService(string protocol, string service, string server)
		{
			return new LocalizedString("ChangesTakeEffectAfterRestartingPopImapService", "", false, false, Strings.ResourceManager, new object[]
			{
				protocol,
				service,
				server
			});
		}

		public static LocalizedString ResponseMessage(string s)
		{
			return new LocalizedString("ResponseMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString VerboseStartWinrm
		{
			get
			{
				return new LocalizedString("VerboseStartWinrm", "ExB55061", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthCalendarScenarioTestViewDesc
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestViewDesc", "Ex315855", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoWarning(LocalizedString message)
		{
			return new LocalizedString("InfoWarning", "Ex4C0ED3", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageStartDatabaseAvailabilityGroupADSite(string Identity, string ad)
		{
			return new LocalizedString("ConfirmationMessageStartDatabaseAvailabilityGroupADSite", "Ex93CF9F", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ad
			});
		}

		public static LocalizedString ErrorVerifyLinkedGroupForest(string message)
		{
			return new LocalizedString("ErrorVerifyLinkedGroupForest", "Ex477DA9", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageRemoveManagementRole(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRole", "Ex50BD92", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UpdateAspnetConfigFailed
		{
			get
			{
				return new LocalizedString("UpdateAspnetConfigFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRestartWSManAppPool(string appPool)
		{
			return new LocalizedString("VerboseRestartWSManAppPool", "Ex2CA648", false, true, Strings.ResourceManager, new object[]
			{
				appPool
			});
		}

		public static LocalizedString SendConnectorWrongTargetServerRg(string serverName)
		{
			return new LocalizedString("SendConnectorWrongTargetServerRg", "Ex47CADC", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SingleCopyDatabase
		{
			get
			{
				return new LocalizedString("SingleCopyDatabase", "Ex533AB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetIPBlockListConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPBlockListConfig", "Ex330D36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEcpServiceRequestException(string message, string casServer, string fullResponse)
		{
			return new LocalizedString("CasHealthEcpServiceRequestException", "Ex090901", false, true, Strings.ResourceManager, new object[]
			{
				message,
				casServer,
				fullResponse
			});
		}

		public static LocalizedString InvalidRecipientAddress
		{
			get
			{
				return new LocalizedString("InvalidRecipientAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AttachmentFilterEntryNotFound
		{
			get
			{
				return new LocalizedString("AttachmentFilterEntryNotFound", "ExB92B73", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSucceededReplicatingObject(string objectId, string server)
		{
			return new LocalizedString("VerboseSucceededReplicatingObject", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId,
				server
			});
		}

		public static LocalizedString AmUnknownRole(string machineName, string error)
		{
			return new LocalizedString("AmUnknownRole", "ExAFEA33", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString CasHealthEcpScenarioTestWebServiceDescription
		{
			get
			{
				return new LocalizedString("CasHealthEcpScenarioTestWebServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProvisioningAgentTasksOnlyRunOnCas(string server)
		{
			return new LocalizedString("ProvisioningAgentTasksOnlyRunOnCas", "ExBCE3EC", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString WarningUnsupportedEdgeTransportConfigProperty
		{
			get
			{
				return new LocalizedString("WarningUnsupportedEdgeTransportConfigProperty", "ExA9B428", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetLiveFedDomainReserveResponse(string domain)
		{
			return new LocalizedString("SetLiveFedDomainReserveResponse", "Ex6AB5B0", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorBPAConfigFileNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigFileNotFound", "Ex81B36D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TargetDatabasesNotAllowed
		{
			get
			{
				return new LocalizedString("TargetDatabasesNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AlsSubjectAdminFailure(string name)
		{
			return new LocalizedString("AlsSubjectAdminFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString LocalSiteNotFound
		{
			get
			{
				return new LocalizedString("LocalSiteNotFound", "Ex3A36FC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToDeleteE14SearchObjectWhenUpgrade(string searchName, string error)
		{
			return new LocalizedString("FailedToDeleteE14SearchObjectWhenUpgrade", "", false, false, Strings.ResourceManager, new object[]
			{
				searchName,
				error
			});
		}

		public static LocalizedString ErrorCertificateNotRSA(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotRSA", "Ex367F68", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString AppConfigIOException(string fileName, int maxRetries, int retryInterval)
		{
			return new LocalizedString("AppConfigIOException", "ExBB7D1F", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				maxRetries,
				retryInterval
			});
		}

		public static LocalizedString CasHealthErrorPopulatingMailbox(string exceptionMessage)
		{
			return new LocalizedString("CasHealthErrorPopulatingMailbox", "ExD0EE3B", false, true, Strings.ResourceManager, new object[]
			{
				exceptionMessage
			});
		}

		public static LocalizedString WarningOperationOnDBWithJetCircularLogging(string pfdb)
		{
			return new LocalizedString("WarningOperationOnDBWithJetCircularLogging", "Ex34E5B4", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString SetupComponentAdam
		{
			get
			{
				return new LocalizedString("SetupComponentAdam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RcrDatabaseFailoverOfflineLoss(string database, string sourceMachine, string lastMountedMachine)
		{
			return new LocalizedString("RcrDatabaseFailoverOfflineLoss", "ExB2F8DE", false, true, Strings.ResourceManager, new object[]
			{
				database,
				sourceMachine,
				lastMountedMachine
			});
		}

		public static LocalizedString ErrorCanNotUpgradePolicyWithMailboxSetting(string id)
		{
			return new LocalizedString("ErrorCanNotUpgradePolicyWithMailboxSetting", "Ex49253A", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString FailedToSortPatches(uint error)
		{
			return new LocalizedString("FailedToSortPatches", "Ex6CC757", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ConfirmationMessageSetClassificationRuleCollection(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetClassificationRuleCollection", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorInvalidArchiveRecipientType(string user, string recipientType)
		{
			return new LocalizedString("ErrorInvalidArchiveRecipientType", "Ex4E9F3C", false, true, Strings.ResourceManager, new object[]
			{
				user,
				recipientType
			});
		}

		public static LocalizedString WarningChangeOfFederatedIdentitySourceADAttribute(string defaultValue)
		{
			return new LocalizedString("WarningChangeOfFederatedIdentitySourceADAttribute", "Ex550296", false, true, Strings.ResourceManager, new object[]
			{
				defaultValue
			});
		}

		public static LocalizedString ErrorCannotRetrieveServer(string dn)
		{
			return new LocalizedString("ErrorCannotRetrieveServer", "", false, false, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ErrorServicePlanMailboxPlanInvalidSkuCapability(string skuCapability, string validSkuCapabilities)
		{
			return new LocalizedString("ErrorServicePlanMailboxPlanInvalidSkuCapability", "Ex05DAA8", false, true, Strings.ResourceManager, new object[]
			{
				skuCapability,
				validSkuCapabilities
			});
		}

		public static LocalizedString ErrorApplyRusFailed
		{
			get
			{
				return new LocalizedString("ErrorApplyRusFailed", "ExBB121D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNonEndUserRoleCannoBeAssignedToPolicy(string name)
		{
			return new LocalizedString("ErrorNonEndUserRoleCannoBeAssignedToPolicy", "Ex8C36F7", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MtrtEventReceive
		{
			get
			{
				return new LocalizedString("MtrtEventReceive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GlobalRoutingEntryVerificationSkipped
		{
			get
			{
				return new LocalizedString("GlobalRoutingEntryVerificationSkipped", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MalboxFolderRightsNone
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsNone", "ExDA0886", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LoadedParameters(string configFilePath, int count)
		{
			return new LocalizedString("LoadedParameters", "Ex821A43", false, true, Strings.ResourceManager, new object[]
			{
				configFilePath,
				count
			});
		}

		public static LocalizedString ElcMdbNotFound(string mailboxAddress)
		{
			return new LocalizedString("ElcMdbNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxAddress
			});
		}

		public static LocalizedString ErrorMaxNumberOfCallerIds(int maxPhoneNumber, int maxContacts, int maxDefaultContactFolder)
		{
			return new LocalizedString("ErrorMaxNumberOfCallerIds", "", false, false, Strings.ResourceManager, new object[]
			{
				maxPhoneNumber,
				maxContacts,
				maxDefaultContactFolder
			});
		}

		public static LocalizedString ConfirmationMessageRemoveManagedFolderMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagedFolderMailboxPolicy", "Ex219725", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString IllegalResumptionException(string oldVerb, string newVerb)
		{
			return new LocalizedString("IllegalResumptionException", "", false, false, Strings.ResourceManager, new object[]
			{
				oldVerb,
				newVerb
			});
		}

		public static LocalizedString AdminAuditLogSearchOutOfRangeStartIndex(int maxResultSize)
		{
			return new LocalizedString("AdminAuditLogSearchOutOfRangeStartIndex", "Ex6F60DD", false, true, Strings.ResourceManager, new object[]
			{
				maxResultSize
			});
		}

		public static LocalizedString SeederAlreadyCancelledPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyCancelledPrompt", "ExDFA091", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		public static LocalizedString ClassificationRuleCollectionIllegalScopedNewOobOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedNewOobOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SchemaVersionDataValidationException(string validationError)
		{
			return new LocalizedString("SchemaVersionDataValidationException", "ExBB7C1A", false, true, Strings.ResourceManager, new object[]
			{
				validationError
			});
		}

		public static LocalizedString ExceptionRunProcessFailed(int errorCode)
		{
			return new LocalizedString("ExceptionRunProcessFailed", "Ex376603", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		public static LocalizedString ErrorBPAIisInstalledParameterRequired
		{
			get
			{
				return new LocalizedString("ErrorBPAIisInstalledParameterRequired", "Ex2B98A5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidSelectionTarget
		{
			get
			{
				return new LocalizedString("InvalidSelectionTarget", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MRSProxyIsRespondingtoPing(string mrsProxyServer)
		{
			return new LocalizedString("MRSProxyIsRespondingtoPing", "", false, false, Strings.ResourceManager, new object[]
			{
				mrsProxyServer
			});
		}

		public static LocalizedString VerboseSearchingAssigneeInDomainNC
		{
			get
			{
				return new LocalizedString("VerboseSearchingAssigneeInDomainNC", "ExAEF458", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringMailboxPermissions
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailboxPermissions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotFindPKConfigFile(string file)
		{
			return new LocalizedString("CannotFindPKConfigFile", "Ex9297EF", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString UMCallAnsweringRuleFindMeWithContextAndWithSecondNumber(string context, int key, string firstNumber, string secondNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithContextAndWithSecondNumber", "", false, false, Strings.ResourceManager, new object[]
			{
				context,
				key,
				firstNumber,
				secondNumber
			});
		}

		public static LocalizedString ErrorAlsSearchResultLargeAttachmentSize
		{
			get
			{
				return new LocalizedString("ErrorAlsSearchResultLargeAttachmentSize", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateRBACScopesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACScopesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressHostedContentFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressHostedContentFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveELCContentSettings(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveELCContentSettings", "Ex4213B4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MRSExpectedDiagnosticsElementMissing(string xPath, string xml)
		{
			return new LocalizedString("MRSExpectedDiagnosticsElementMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				xPath,
				xml
			});
		}

		public static LocalizedString DuplicateDataClassificationSpecified
		{
			get
			{
				return new LocalizedString("DuplicateDataClassificationSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageGetTeamMailboxDiagnostics(string Identity)
		{
			return new LocalizedString("ConfirmationMessageGetTeamMailboxDiagnostics", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorFailedToGetDatabaseProcessInfo(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseProcessInfo", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		public static LocalizedString ErrorMoveRequestIsProtected(string mailbox)
		{
			return new LocalizedString("ErrorMoveRequestIsProtected", "Ex975829", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString RemoveDagNeedsZeroServersException(int serverCount)
		{
			return new LocalizedString("RemoveDagNeedsZeroServersException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverCount
			});
		}

		public static LocalizedString ErrorInvalidAuthScheme(string scheme)
		{
			return new LocalizedString("ErrorInvalidAuthScheme", "", false, false, Strings.ResourceManager, new object[]
			{
				scheme
			});
		}

		public static LocalizedString MailboxTransportDeliveryServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailboxTransportDeliveryServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseIgnoringAssignment(string id)
		{
			return new LocalizedString("VerboseIgnoringAssignment", "Ex8BF9C3", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorSetSendAsOnMailboxPermissionNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorSetSendAsOnMailboxPermissionNotAllowed", "ExB91969", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress
		{
			get
			{
				return new LocalizedString("ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoDCInLocalSite
		{
			get
			{
				return new LocalizedString("ErrorNoDCInLocalSite", "Ex7B4211", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningLPDirectoryNotFound(string path)
		{
			return new LocalizedString("WarningLPDirectoryNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ErrorCannotMoveLitigationHoldToPreE14(string identity)
		{
			return new LocalizedString("ErrorCannotMoveLitigationHoldToPreE14", "ExC72C3B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmEnableCertForUM(string thumbprint)
		{
			return new LocalizedString("ConfirmEnableCertForUM", "ExE41067", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString BridgeheadPrereqCheck
		{
			get
			{
				return new LocalizedString("BridgeheadPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PhoneNumberAlreadyRegistered
		{
			get
			{
				return new LocalizedString("PhoneNumberAlreadyRegistered", "ExCF4B78", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxCanNotLoadPolicy
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxCanNotLoadPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseResolvingExclusiveRecipientWriteScope
		{
			get
			{
				return new LocalizedString("VerboseResolvingExclusiveRecipientWriteScope", "Ex743C51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateDistributionGroupMember(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateDistributionGroupMember", "ExFE7171", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorAmbiguousRetentionPolicyTagId(string folderid)
		{
			return new LocalizedString("ErrorAmbiguousRetentionPolicyTagId", "ExD64865", false, true, Strings.ResourceManager, new object[]
			{
				folderid
			});
		}

		public static LocalizedString ConfirmationMessageTestOutlookWebServices
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestOutlookWebServices", "Ex74913E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddSecondaryDomainDescription
		{
			get
			{
				return new LocalizedString("AddSecondaryDomainDescription", "Ex978641", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidRecipientTypeDetails(string recipientName)
		{
			return new LocalizedString("ErrorInvalidRecipientTypeDetails", "", false, false, Strings.ResourceManager, new object[]
			{
				recipientName
			});
		}

		public static LocalizedString ErrorImportingTpdFromRmsOnline
		{
			get
			{
				return new LocalizedString("ErrorImportingTpdFromRmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisasterRecoveryCafeRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryCafeRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRelocationStateRequestedIsNotAllowed(string tenant)
		{
			return new LocalizedString("ErrorRelocationStateRequestedIsNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		public static LocalizedString WarningSystemAddressListNotFound(string addressList)
		{
			return new LocalizedString("WarningSystemAddressListNotFound", "Ex05C6D1", false, true, Strings.ResourceManager, new object[]
			{
				addressList
			});
		}

		public static LocalizedString ErrorServicePlanDoesntAllowHydration(string programid, string offerid)
		{
			return new LocalizedString("ErrorServicePlanDoesntAllowHydration", "", false, false, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		public static LocalizedString VerboseCreatePublicFolderTree(string id)
		{
			return new LocalizedString("VerboseCreatePublicFolderTree", "Ex7EACC6", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CasHealthConnectionType
		{
			get
			{
				return new LocalizedString("CasHealthConnectionType", "ExF5CE72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoDomainInTheRemoteOrganizationRelationshipIsFederatedLocally(string remoteName)
		{
			return new LocalizedString("NoDomainInTheRemoteOrganizationRelationshipIsFederatedLocally", "Ex40E36D", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		public static LocalizedString TestSearchErrorEvent(string error)
		{
			return new LocalizedString("TestSearchErrorEvent", "Ex823C76", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString SetupProgressOfflineAddressBookEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOfflineAddressBookEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaVdirNameHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaVdirNameHeader", "Ex7B0D7E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRemovingRoleGroup(string id)
		{
			return new LocalizedString("VerboseRemovingRoleGroup", "Ex9917FF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ServerNotFound(string source)
		{
			return new LocalizedString("ServerNotFound", "Ex669F24", false, true, Strings.ResourceManager, new object[]
			{
				source
			});
		}

		public static LocalizedString AllActiveSyncTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("AllActiveSyncTransactionsSucceeded", "Ex4D6E91", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveUserFailed(string id)
		{
			return new LocalizedString("ErrorRemoveUserFailed", "Ex59CEDA", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorCouldNotAddGroupMember(string member, string group, string message)
		{
			return new LocalizedString("ErrorCouldNotAddGroupMember", "Ex6E255B", false, true, Strings.ResourceManager, new object[]
			{
				member,
				group,
				message
			});
		}

		public static LocalizedString WarningFailedCreateDirectory(string server, string dir)
		{
			return new LocalizedString("WarningFailedCreateDirectory", "Ex361BF1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxDatabase", "Ex8ED02B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MaxDevicesReached(int deviceCount, uint maxDevicesLimit)
		{
			return new LocalizedString("MaxDevicesReached", "Ex8EFF8A", false, true, Strings.ResourceManager, new object[]
			{
				deviceCount,
				maxDevicesLimit
			});
		}

		public static LocalizedString RootDomainNotFoundException
		{
			get
			{
				return new LocalizedString("RootDomainNotFoundException", "ExDB13BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveEdgeSyncSendConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEdgeSyncSendConnector", "Ex2A819C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString RequestAlreadyCanceled
		{
			get
			{
				return new LocalizedString("RequestAlreadyCanceled", "ExCC7252", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallWatchDogServiceTask
		{
			get
			{
				return new LocalizedString("InstallWatchDogServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveInboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveInboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ScopeIsInUse
		{
			get
			{
				return new LocalizedString("ScopeIsInUse", "ExE2775C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewRetentionPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRetentionPolicy", "Ex896F73", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString CasHealthOwaInvalidCertificate
		{
			get
			{
				return new LocalizedString("CasHealthOwaInvalidCertificate", "Ex09968F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagFswServerNotAccessibleException(string fswMachine, Exception ex)
		{
			return new LocalizedString("DagFswServerNotAccessibleException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				ex
			});
		}

		public static LocalizedString ErrorParameterInvalidForFederatedTenant(string organization)
		{
			return new LocalizedString("ErrorParameterInvalidForFederatedTenant", "ExEA381B", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString TestSearchCheckService
		{
			get
			{
				return new LocalizedString("TestSearchCheckService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceHostDisplayName
		{
			get
			{
				return new LocalizedString("ServiceHostDisplayName", "ExCA1864", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveDagServerDatabaseIsReplicatedException(string mailboxServer, string databaseName)
		{
			return new LocalizedString("RemoveDagServerDatabaseIsReplicatedException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				databaseName
			});
		}

		public static LocalizedString WarningSetAdminAuditLogOnPreE15(string org)
		{
			return new LocalizedString("WarningSetAdminAuditLogOnPreE15", "", false, false, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString EnableConversationsPreProcessing(string user)
		{
			return new LocalizedString("EnableConversationsPreProcessing", "ExC90F46", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString SetupProgressInstallGlobalSettingsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressInstallGlobalSettingsContainer", "ExAFFC6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetDatabaseRequestedSchemaVersion(string database, int version)
		{
			return new LocalizedString("SetDatabaseRequestedSchemaVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				version
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxLinkedWithSyncMailbox(string Name, string MasterAccountSid, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxLinkedWithSyncMailbox", "Ex2B061C", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				MasterAccountSid,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString ErrorMailboxExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorMailboxExceedsTargetQuota", "ExE49EB7", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		public static LocalizedString TopologyServiceResultSuccess
		{
			get
			{
				return new LocalizedString("TopologyServiceResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoOverallPass
		{
			get
			{
				return new LocalizedString("InfoOverallPass", "ExE9F688", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotUpdateGlsDomainFromOrgId
		{
			get
			{
				return new LocalizedString("ErrorCannotUpdateGlsDomainFromOrgId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnknownFederationDomainAuthenticationType(string domain)
		{
			return new LocalizedString("UnknownFederationDomainAuthenticationType", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString InformationSqlStatement(string statement)
		{
			return new LocalizedString("InformationSqlStatement", "", false, false, Strings.ResourceManager, new object[]
			{
				statement
			});
		}

		public static LocalizedString InvalidLicenseName(string name)
		{
			return new LocalizedString("InvalidLicenseName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MailForestContactFound(int num)
		{
			return new LocalizedString("MailForestContactFound", "ExAB4FAE", false, true, Strings.ResourceManager, new object[]
			{
				num
			});
		}

		public static LocalizedString RunCmdletOnSite(string site)
		{
			return new LocalizedString("RunCmdletOnSite", "", false, false, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString SendConnectorTargetServersNotSet
		{
			get
			{
				return new LocalizedString("SendConnectorTargetServersNotSet", "Ex20205C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DeleteVirtualDirectoryFail(string serverName, string metabasePath)
		{
			return new LocalizedString("DeleteVirtualDirectoryFail", "Ex6EE1C3", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath
			});
		}

		public static LocalizedString SetupComponentMonitoring
		{
			get
			{
				return new LocalizedString("SetupComponentMonitoring", "Ex4142AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImportFileDataIsNull
		{
			get
			{
				return new LocalizedString("ImportFileDataIsNull", "Ex428987", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MobileDeviceLogException(string msg)
		{
			return new LocalizedString("MobileDeviceLogException", "Ex4BFB07", false, true, Strings.ResourceManager, new object[]
			{
				msg
			});
		}

		public static LocalizedString ConfirmationMessageSetWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAddressBookPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorDatabaseUnavailableForProvisioning
		{
			get
			{
				return new LocalizedString("ErrorDatabaseUnavailableForProvisioning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthConfirmTestActiveSyncWithServer(string clientAccessServerName)
		{
			return new LocalizedString("CasHealthConfirmTestActiveSyncWithServer", "Ex981AB0", false, true, Strings.ResourceManager, new object[]
			{
				clientAccessServerName
			});
		}

		public static LocalizedString StartingToCopyOwaLPFiles
		{
			get
			{
				return new LocalizedString("StartingToCopyOwaLPFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutodiscoverServiceCallFailed
		{
			get
			{
				return new LocalizedString("AutodiscoverServiceCallFailed", "Ex0508B7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IncompatibleDatabaseSchemaVersionsInDAG
		{
			get
			{
				return new LocalizedString("IncompatibleDatabaseSchemaVersionsInDAG", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TraceCannotCreateXmlReportFile(string filename, string exception)
		{
			return new LocalizedString("TraceCannotCreateXmlReportFile", "Ex3C776F", false, true, Strings.ResourceManager, new object[]
			{
				filename,
				exception
			});
		}

		public static LocalizedString ErrorBPAConfigFileLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigFileLoad", "Ex0B89B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Imap4ServiceDescription
		{
			get
			{
				return new LocalizedString("Imap4ServiceDescription", "Ex7CD064", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressMaxConcurrentMigrations
		{
			get
			{
				return new LocalizedString("SetupProgressMaxConcurrentMigrations", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveSyncServiceInstance(string serviceInstanceId)
		{
			return new LocalizedString("ConfirmationMessageRemoveSyncServiceInstance", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		public static LocalizedString OutlookProtectionRuleNameIsNotUnique(string name)
		{
			return new LocalizedString("OutlookProtectionRuleNameIsNotUnique", "ExC1C013", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime
		{
			get
			{
				return new LocalizedString("WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCanRetargetOnlyQueuedMoves(string identity)
		{
			return new LocalizedString("ErrorCanRetargetOnlyQueuedMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupComponentMidFileCopyAllRoles
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyAllRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationResettingLocalForestAccountPartition(string partitionName)
		{
			return new LocalizedString("ConfirmationResettingLocalForestAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		public static LocalizedString UninstallMonitoringServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMonitoringServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningClusterNodeNotFoundInDag(string nodeName, string dagName)
		{
			return new LocalizedString("WarningClusterNodeNotFoundInDag", "Ex654AE7", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		public static LocalizedString SetServiceInstanceMapResultFormat(string code, string description)
		{
			return new LocalizedString("SetServiceInstanceMapResultFormat", "Ex4FAF9C", false, true, Strings.ResourceManager, new object[]
			{
				code,
				description
			});
		}

		public static LocalizedString SmartHostsValidationFailedWarningMessage
		{
			get
			{
				return new LocalizedString("SmartHostsValidationFailedWarningMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionEngineValidationFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionEngineValidationFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthDeleteItemScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthDeleteItemScenarioDescription", "Ex35AB6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotGetDomainStatusFromPartnerSTS(string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorCannotGetDomainStatusFromPartnerSTS", "Ex2BC462", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				appId,
				errdetails
			});
		}

		public static LocalizedString CommentsHaveInvalidChars(int ch)
		{
			return new LocalizedString("CommentsHaveInvalidChars", "ExC95DE4", false, true, Strings.ResourceManager, new object[]
			{
				ch
			});
		}

		public static LocalizedString ConfirmationMessageNewManagementRole(string Name, string Parent)
		{
			return new LocalizedString("ConfirmationMessageNewManagementRole", "Ex863DF4", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Parent
			});
		}

		public static LocalizedString ConfirmationMessageNewEdgeSyncServiceConfigWithSiteSpecified(string id)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSyncServiceConfigWithSiteSpecified", "ExAED717", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ADAttributeMobileNumber
		{
			get
			{
				return new LocalizedString("ADAttributeMobileNumber", "ExBE844A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogMigrationBeforeApplyRUS(string alias, string proxyAddresses)
		{
			return new LocalizedString("LogMigrationBeforeApplyRUS", "Ex84CC11", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				proxyAddresses
			});
		}

		public static LocalizedString SetupProgressCleanRegistry
		{
			get
			{
				return new LocalizedString("SetupProgressCleanRegistry", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMalwareFilteringServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMalwareFilteringServer", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString VerboseCheckRequiredFiles
		{
			get
			{
				return new LocalizedString("VerboseCheckRequiredFiles", "Ex5AB0E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BackSyncUrlNeedsToBeAbsolute
		{
			get
			{
				return new LocalizedString("BackSyncUrlNeedsToBeAbsolute", "ExCA6673", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoExchangeRoleInstalled(string serverName)
		{
			return new LocalizedString("NoExchangeRoleInstalled", "Ex7D7A51", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString FfoWebServicePostConfigComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServicePostConfigComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingWatchDogService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingWatchDogService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CalendarLogFileDoesNotExist(string uri)
		{
			return new LocalizedString("CalendarLogFileDoesNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString CasHealthNoMailboxServersToTest
		{
			get
			{
				return new LocalizedString("CasHealthNoMailboxServersToTest", "ExC2BEEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProvisionServerDescription
		{
			get
			{
				return new LocalizedString("ProvisionServerDescription", "ExEBAAE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEmptyForestUrl(string domain)
		{
			return new LocalizedString("ErrorEmptyForestUrl", "Ex60246C", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString WarningPossibleDataLossWithGlsRollback(string identity, string targetForest, string sourceForest)
		{
			return new LocalizedString("WarningPossibleDataLossWithGlsRollback", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				targetForest,
				sourceForest
			});
		}

		public static LocalizedString ErrorChangePasswordForAppPasswordAccount
		{
			get
			{
				return new LocalizedString("ErrorChangePasswordForAppPasswordAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFailedToMemberNameToNetId(string memberName, string message)
		{
			return new LocalizedString("VerboseFailedToMemberNameToNetId", "Ex40A8DD", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		public static LocalizedString TPDWithoutPrivateKey(string name)
		{
			return new LocalizedString("TPDWithoutPrivateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ResubmitRequestGenericRpcError(string message)
		{
			return new LocalizedString("ResubmitRequestGenericRpcError", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString NoRecipients
		{
			get
			{
				return new LocalizedString("NoRecipients", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotCreateMSOOnboardingService(string reason)
		{
			return new LocalizedString("CouldNotCreateMSOOnboardingService", "ExB2A3DA", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString ErrorSetGroupMailboxNoOwners
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxNoOwners", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewPowerShellVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageNewPowerShellVirtualDirectory", "Ex7D2A04", false, true, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		public static LocalizedString ErrorMovingUnsupportedArchiveUser
		{
			get
			{
				return new LocalizedString("ErrorMovingUnsupportedArchiveUser", "Ex23BA44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MicrosoftExchangeRecipientExists
		{
			get
			{
				return new LocalizedString("MicrosoftExchangeRecipientExists", "ExF69FCD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RegistryKeyDoesNotExist(string registryKey, string rootkey)
		{
			return new LocalizedString("RegistryKeyDoesNotExist", "ExD56FD0", false, true, Strings.ResourceManager, new object[]
			{
				registryKey,
				rootkey
			});
		}

		public static LocalizedString ConfirmationMessageNewSyncGroup(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewSyncGroup", "Ex373BB3", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ErrorIncompatibleParameters(string paramName1, string paramName2)
		{
			return new LocalizedString("ErrorIncompatibleParameters", "Ex75FA15", false, true, Strings.ResourceManager, new object[]
			{
				paramName1,
				paramName2
			});
		}

		public static LocalizedString ConfirmationMessageCompleteMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageCompleteMigrationBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		public static LocalizedString BadPublicFoldersParameterException(string value)
		{
			return new LocalizedString("BadPublicFoldersParameterException", "Ex8C87C6", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString DeletionAndLogOnlyNotPermitted
		{
			get
			{
				return new LocalizedString("DeletionAndLogOnlyNotPermitted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtMessageDeliverDetailMessage
		{
			get
			{
				return new LocalizedString("MtrtMessageDeliverDetailMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMustSpecifyEitherAbsoluteOrRelativePath
		{
			get
			{
				return new LocalizedString("ErrorMustSpecifyEitherAbsoluteOrRelativePath", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTenantInLockdown(string identity)
		{
			return new LocalizedString("ErrorTenantInLockdown", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupComponentPostPrepForestGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentPostPrepForestGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CheckPointNotProgressed(uint previous, uint current)
		{
			return new LocalizedString("CheckPointNotProgressed", "Ex31939F", false, true, Strings.ResourceManager, new object[]
			{
				previous,
				current
			});
		}

		public static LocalizedString ConfirmationMessageRemoveFederationTrust(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveFederationTrust", "ExFA9938", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InfoAceNotPresent(string dn, string account)
		{
			return new LocalizedString("InfoAceNotPresent", "Ex6C2C81", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				account
			});
		}

		public static LocalizedString ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter
		{
			get
			{
				return new LocalizedString("ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAuthNewInProgressReplace(string thumbprint1, string thumbprint2)
		{
			return new LocalizedString("ConfirmationMessageAuthNewInProgressReplace", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint1,
				thumbprint2
			});
		}

		public static LocalizedString ErrorArbitrationMbxCrossOrg(string arbitrationMailbox)
		{
			return new LocalizedString("ErrorArbitrationMbxCrossOrg", "Ex71FD54", false, true, Strings.ResourceManager, new object[]
			{
				arbitrationMailbox
			});
		}

		public static LocalizedString InformationSkippedEws
		{
			get
			{
				return new LocalizedString("InformationSkippedEws", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedLoadRegistryKey(string key, string error)
		{
			return new LocalizedString("FailedLoadRegistryKey", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				error
			});
		}

		public static LocalizedString SupervisionPolicyCollectionAmbiguous
		{
			get
			{
				return new LocalizedString("SupervisionPolicyCollectionAmbiguous", "Ex598996", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusNonExchangeReplication
		{
			get
			{
				return new LocalizedString("CopyStatusNonExchangeReplication", "ExFE508B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDismountDatabaseToContinue(string databaseName)
		{
			return new LocalizedString("WarningDismountDatabaseToContinue", "ExD02549", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		public static LocalizedString ErrorAccountEnabledForNonUserMailbox
		{
			get
			{
				return new LocalizedString("ErrorAccountEnabledForNonUserMailbox", "Ex161545", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidOperationOnProvisionedMailboxServer
		{
			get
			{
				return new LocalizedString("ErrorInvalidOperationOnProvisionedMailboxServer", "ExB46AC9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageReleaseQuarantineMessage(string identity)
		{
			return new LocalizedString("ConfirmationMessageReleaseQuarantineMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString NegativePriority
		{
			get
			{
				return new LocalizedString("NegativePriority", "Ex87173B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoAceAlreadyPresent(string dn, string account)
		{
			return new LocalizedString("InfoAceAlreadyPresent", "ExFBC842", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				account
			});
		}

		public static LocalizedString InstallFfoWebServiceRoleDescription
		{
			get
			{
				return new LocalizedString("InstallFfoWebServiceRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveOrganizationFailWithoutSharedConfigurationParameter
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailWithoutSharedConfigurationParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InformationSkippedAsForEWS
		{
			get
			{
				return new LocalizedString("InformationSkippedAsForEWS", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUseDataPropertyNameParameter
		{
			get
			{
				return new LocalizedString("ErrorUseDataPropertyNameParameter", "Ex821FAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MissingMailboxId(string credentialsUserName)
		{
			return new LocalizedString("MissingMailboxId", "", false, false, Strings.ResourceManager, new object[]
			{
				credentialsUserName
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxServer", "Ex632AB8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DatabaseStatus
		{
			get
			{
				return new LocalizedString("DatabaseStatus", "Ex4B4714", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseUpdateDatabaseResource(string server)
		{
			return new LocalizedString("VerboseUpdateDatabaseResource", "ExCA508A", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ParameterValueIsAlreadySet(string parameterName)
		{
			return new LocalizedString("ParameterValueIsAlreadySet", "Ex7D3326", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString InfoGetPublishingUri
		{
			get
			{
				return new LocalizedString("InfoGetPublishingUri", "Ex37BDFC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailureToCallAutodiscoverService(string uri, string exceptionMessage)
		{
			return new LocalizedString("FailureToCallAutodiscoverService", "Ex720327", false, true, Strings.ResourceManager, new object[]
			{
				uri,
				exceptionMessage
			});
		}

		public static LocalizedString ClassificationRuleCollectionPatternTooLong(int maxLength)
		{
			return new LocalizedString("ClassificationRuleCollectionPatternTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				maxLength
			});
		}

		public static LocalizedString MomConnectorServiceDisplayName
		{
			get
			{
				return new LocalizedString("MomConnectorServiceDisplayName", "Ex8CD757", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseServiceValidatorRequestTrace(string name, string message)
		{
			return new LocalizedString("VerboseServiceValidatorRequestTrace", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				message
			});
		}

		public static LocalizedString InstallMailboxTransportDeliveryServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailboxTransportDeliveryServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningFailedToDeleteSourceNTAccount(string detailError)
		{
			return new LocalizedString("WarningFailedToDeleteSourceNTAccount", "Ex276CEE", false, true, Strings.ResourceManager, new object[]
			{
				detailError
			});
		}

		public static LocalizedString ConfirmationMessageEnableInboxRule(string Identity, string mailbox)
		{
			return new LocalizedString("ConfirmationMessageEnableInboxRule", "ExB4487F", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				mailbox
			});
		}

		public static LocalizedString PreserveAppSettingsTask
		{
			get
			{
				return new LocalizedString("PreserveAppSettingsTask", "Ex63B9C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressRecreateCannedRBACRoles
		{
			get
			{
				return new LocalizedString("SetupProgressRecreateCannedRBACRoles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageDisableReplayLag(string dbName, string serverName)
		{
			return new LocalizedString("ConfirmationMessageDisableReplayLag", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				serverName
			});
		}

		public static LocalizedString SetupComponentPostSetupOSP
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupOSP", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SearchStoppedCannotBeResumed(string name)
		{
			return new LocalizedString("SearchStoppedCannotBeResumed", "Ex4FAC65", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupProgressUMEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressUMEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSecondaryDomainNotFound(string identity)
		{
			return new LocalizedString("ErrorSecondaryDomainNotFound", "ExD10453", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMonitoringItemNotFound(string identity, string monitoringItemType)
		{
			return new LocalizedString("ConfirmationMonitoringItemNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				monitoringItemType
			});
		}

		public static LocalizedString NewReceiveConnectorAddingPermissionsMsg
		{
			get
			{
				return new LocalizedString("NewReceiveConnectorAddingPermissionsMsg", "ExF11640", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertFileIsNotPfx(string file)
		{
			return new LocalizedString("CertFileIsNotPfx", "Ex660B38", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString ErrorCannotRemoveAllCookies(string timeSpan)
		{
			return new LocalizedString("ErrorCannotRemoveAllCookies", "", false, false, Strings.ResourceManager, new object[]
			{
				timeSpan
			});
		}

		public static LocalizedString SendConnectorWrongTargetServerRole(string serverName)
		{
			return new LocalizedString("SendConnectorWrongTargetServerRole", "Ex86DA2D", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ProgressForceQuorum
		{
			get
			{
				return new LocalizedString("ProgressForceQuorum", "Ex146335", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRulesSizeOverLimit(string identity)
		{
			return new LocalizedString("ErrorRulesSizeOverLimit", "ExF219AA", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorTooManyItems(int tenantLimit)
		{
			return new LocalizedString("ErrorTooManyItems", "", false, false, Strings.ResourceManager, new object[]
			{
				tenantLimit
			});
		}

		public static LocalizedString ErrorMailboxNotFound(string identity)
		{
			return new LocalizedString("ErrorMailboxNotFound", "Ex41BAF5", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotRemoveAccountNamespace(string domain)
		{
			return new LocalizedString("ErrorCannotRemoveAccountNamespace", "Ex5B946A", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString TestTeamMailboxSharePointResponseDetails
		{
			get
			{
				return new LocalizedString("TestTeamMailboxSharePointResponseDetails", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToLogonGroupMailbox(Guid groupMailbox, string server, string domainController, string exception)
		{
			return new LocalizedString("ErrorUnableToLogonGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				server,
				domainController,
				exception
			});
		}

		public static LocalizedString SetupProgressInstallTransportLogSearchSerice
		{
			get
			{
				return new LocalizedString("SetupProgressInstallTransportLogSearchSerice", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AOGroupNotFoundException(string dn)
		{
			return new LocalizedString("AOGroupNotFoundException", "Ex81D86A", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString MtrtEventSend
		{
			get
			{
				return new LocalizedString("MtrtEventSend", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EnableAntiSpamUpdatesDeprecated
		{
			get
			{
				return new LocalizedString("EnableAntiSpamUpdatesDeprecated", "Ex0F956B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRpcHttp(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRpcHttp", "ExCEA218", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString IntegratedVDirNotFound
		{
			get
			{
				return new LocalizedString("IntegratedVDirNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorVerificationCodeSentTooManyTimes(string phonenumber)
		{
			return new LocalizedString("ErrorVerificationCodeSentTooManyTimes", "Ex6FBAC4", false, true, Strings.ResourceManager, new object[]
			{
				phonenumber
			});
		}

		public static LocalizedString CopyStatusResynchronizing
		{
			get
			{
				return new LocalizedString("CopyStatusResynchronizing", "ExA14908", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressConfigureMessageClassificationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureMessageClassificationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceProgramStateError
		{
			get
			{
				return new LocalizedString("ComplianceProgramStateError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DebugEndGeneratingUniqueSamAccountName
		{
			get
			{
				return new LocalizedString("DebugEndGeneratingUniqueSamAccountName", "Ex56703B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPatternIsTooLong(string regex, int maxLength)
		{
			return new LocalizedString("ErrorPatternIsTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				regex,
				maxLength
			});
		}

		public static LocalizedString ExchangeSettingsWarningMaximumSize(int currentSize, int maxSize)
		{
			return new LocalizedString("ExchangeSettingsWarningMaximumSize", "", false, false, Strings.ResourceManager, new object[]
			{
				currentSize,
				maxSize
			});
		}

		public static LocalizedString SkippingInvalidTypeInGroupExpansion
		{
			get
			{
				return new LocalizedString("SkippingInvalidTypeInGroupExpansion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRemovePolicyWithAssociatedUsers(string name)
		{
			return new LocalizedString("WarningRemovePolicyWithAssociatedUsers", "Ex724BB5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString GetMsoDiagnosticsFindingTheCookie
		{
			get
			{
				return new LocalizedString("GetMsoDiagnosticsFindingTheCookie", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FoundConflictingWKObjectException(string wkobj, string path)
		{
			return new LocalizedString("FoundConflictingWKObjectException", "ExC333AE", false, true, Strings.ResourceManager, new object[]
			{
				wkobj,
				path
			});
		}

		public static LocalizedString ProgressCopyingSystemFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingSystemFiles", "ExCCE887", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExForeignForestSGroupNotFoundException(string name, string domain)
		{
			return new LocalizedString("ExForeignForestSGroupNotFoundException", "ExE505DB", false, true, Strings.ResourceManager, new object[]
			{
				name,
				domain
			});
		}

		public static LocalizedString SendMessage
		{
			get
			{
				return new LocalizedString("SendMessage", "Ex7E5E77", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorResourceSearchPropertyInvalid(string property)
		{
			return new LocalizedString("ErrorResourceSearchPropertyInvalid", "ExE95B19", false, true, Strings.ResourceManager, new object[]
			{
				property
			});
		}

		public static LocalizedString MigrationTypeDoesntSupportConnectionSettings(MigrationType migrationType)
		{
			return new LocalizedString("MigrationTypeDoesntSupportConnectionSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				migrationType
			});
		}

		public static LocalizedString CasHealthOwaTestFailed(string url)
		{
			return new LocalizedString("CasHealthOwaTestFailed", "ExA2098F", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString RoleAvailabilityOnly
		{
			get
			{
				return new LocalizedString("RoleAvailabilityOnly", "Ex44CAAE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewWorkloadPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewWorkloadPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString CasHealthSecureAccess
		{
			get
			{
				return new LocalizedString("CasHealthSecureAccess", "Ex57B6B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArchiveExceedsTargetQuota(string mailboxSize, string targetQuota)
		{
			return new LocalizedString("ErrorArchiveExceedsTargetQuota", "ExA96198", false, true, Strings.ResourceManager, new object[]
			{
				mailboxSize,
				targetQuota
			});
		}

		public static LocalizedString MigrationNewBatchUsersShareBatch
		{
			get
			{
				return new LocalizedString("MigrationNewBatchUsersShareBatch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetBothForwardingAddressConfirmationMessage
		{
			get
			{
				return new LocalizedString("SetBothForwardingAddressConfirmationMessage", "Ex1FBC06", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSetAccessControl(string server, string dir)
		{
			return new LocalizedString("VerboseSetAccessControl", "ExF82C0F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		public static LocalizedString InstallMonitoringRoleDescription
		{
			get
			{
				return new LocalizedString("InstallMonitoringRoleDescription", "Ex2B7CA9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NotEnoughInformationSupplied
		{
			get
			{
				return new LocalizedString("NotEnoughInformationSupplied", "Ex03CF05", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnPremisesConnectorHasRouteUsingMXId
		{
			get
			{
				return new LocalizedString("OnPremisesConnectorHasRouteUsingMXId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWKObjectExists(string wkentry, string container)
		{
			return new LocalizedString("ErrorWKObjectExists", "Ex3460ED", false, true, Strings.ResourceManager, new object[]
			{
				wkentry,
				container
			});
		}

		public static LocalizedString WarningCancelSourceCleanupDueToApplyingPolicyFailed(string option, string sourceMailbox)
		{
			return new LocalizedString("WarningCancelSourceCleanupDueToApplyingPolicyFailed", "Ex7E7216", false, true, Strings.ResourceManager, new object[]
			{
				option,
				sourceMailbox
			});
		}

		public static LocalizedString InvalidQueryException(int number)
		{
			return new LocalizedString("InvalidQueryException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		public static LocalizedString ErrorLocalServerIsNotMailboxServer
		{
			get
			{
				return new LocalizedString("ErrorLocalServerIsNotMailboxServer", "ExF88C0E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPatternCannotContainMultiMatchOnGroupOrAssertion
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainMultiMatchOnGroupOrAssertion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateStatusValid
		{
			get
			{
				return new LocalizedString("CertificateStatusValid", "ExA17747", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DuplicateOrganizationRelationshipDomain(string domain)
		{
			return new LocalizedString("DuplicateOrganizationRelationshipDomain", "Ex09E361", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorAssigneeSecurityGroupNotFound(string id)
		{
			return new LocalizedString("ErrorAssigneeSecurityGroupNotFound", "Ex5E5E76", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString PartnerFilterMustBeValid(string m)
		{
			return new LocalizedString("PartnerFilterMustBeValid", "Ex949BD7", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		public static LocalizedString GetDbcsOverridingServer(string implicitServer, string explicitServer, string effectiveIdentity)
		{
			return new LocalizedString("GetDbcsOverridingServer", "Ex04608E", false, true, Strings.ResourceManager, new object[]
			{
				implicitServer,
				explicitServer,
				effectiveIdentity
			});
		}

		public static LocalizedString MailboxAssistantsServiceNotRunning(string serverName, string currentState)
		{
			return new LocalizedString("MailboxAssistantsServiceNotRunning", "Ex3CC909", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				currentState
			});
		}

		public static LocalizedString MigrationMaxConcurrentMigrationsVerificationFailed(int value, int minValue, int maxValue)
		{
			return new LocalizedString("MigrationMaxConcurrentMigrationsVerificationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				minValue,
				maxValue
			});
		}

		public static LocalizedString ConfirmationMessageDisableCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableCmdletExtensionAgent", "Ex201162", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DlpPolicyVersionUnsupported
		{
			get
			{
				return new LocalizedString("DlpPolicyVersionUnsupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods
		{
			get
			{
				return new LocalizedString("ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorZeroOrLessValueForShadowRetry(string name, string shadowPreference)
		{
			return new LocalizedString("ErrorZeroOrLessValueForShadowRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				shadowPreference
			});
		}

		public static LocalizedString ErrorCannotMovePublicFolderMailboxesDownlevel(string mailbox)
		{
			return new LocalizedString("ErrorCannotMovePublicFolderMailboxesDownlevel", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString RecoveryActionArbiterServiceDescription
		{
			get
			{
				return new LocalizedString("RecoveryActionArbiterServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressUninstallTransportLogSearchSerice
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallTransportLogSearchSerice", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ContainerNotFoundException(string domain)
		{
			return new LocalizedString("ContainerNotFoundException", "ExA5D720", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ConfirmationMessageRemoveSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AceTypeHasUnsupportedValueException(string aceType)
		{
			return new LocalizedString("AceTypeHasUnsupportedValueException", "Ex56588D", false, true, Strings.ResourceManager, new object[]
			{
				aceType
			});
		}

		public static LocalizedString MobileDeviceNotExistException(string deviceId)
		{
			return new LocalizedString("MobileDeviceNotExistException", "Ex09E98A", false, true, Strings.ResourceManager, new object[]
			{
				deviceId
			});
		}

		public static LocalizedString ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotSelectArchiveDatabase(string user)
		{
			return new LocalizedString("CouldNotSelectArchiveDatabase", "Ex2B5E35", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString DuplicateAcceptedDomain(string domain)
		{
			return new LocalizedString("DuplicateAcceptedDomain", "Ex70A660", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString InvalidStoreMailboxIdentity
		{
			get
			{
				return new LocalizedString("InvalidStoreMailboxIdentity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPublicFolderUserNotFound(string identity)
		{
			return new LocalizedString("ErrorPublicFolderUserNotFound", "Ex68A265", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageNewGls(string entryType, string id)
		{
			return new LocalizedString("ConfirmationMessageNewGls", "", false, false, Strings.ResourceManager, new object[]
			{
				entryType,
				id
			});
		}

		public static LocalizedString MapiTransactionShortErrorMsgFromExceptionWithInnerException(string exceptionType, string exceptionMessage, string innerExceptionType, string innerExceptionMessage)
		{
			return new LocalizedString("MapiTransactionShortErrorMsgFromExceptionWithInnerException", "Ex69878A", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage,
				innerExceptionType,
				innerExceptionMessage
			});
		}

		public static LocalizedString NewFilterNeitherOptimizedNorImproved
		{
			get
			{
				return new LocalizedString("NewFilterNeitherOptimizedNorImproved", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveActiveSyncMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveActiveSyncMailboxPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DagFswSharePointsToWrongDirectoryException(string share, string server, string currentdirectory, string witnessdirectory)
		{
			return new LocalizedString("DagFswSharePointsToWrongDirectoryException", "", false, false, Strings.ResourceManager, new object[]
			{
				share,
				server,
				currentdirectory,
				witnessdirectory
			});
		}

		public static LocalizedString DataClassificationRequiresHigherServerVersion(string name)
		{
			return new LocalizedString("DataClassificationRequiresHigherServerVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarningRetentionPolicyTagNotFoundForApproval(string appName, string org)
		{
			return new LocalizedString("WarningRetentionPolicyTagNotFoundForApproval", "ExEB43AA", false, true, Strings.ResourceManager, new object[]
			{
				appName,
				org
			});
		}

		public static LocalizedString ErrorRollbackGlsExpectsPostGlsState(string identity)
		{
			return new LocalizedString("ErrorRollbackGlsExpectsPostGlsState", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSetPartnerApplication(string name)
		{
			return new LocalizedString("ConfirmationMessageSetPartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString InterceptorErrorTimeIntervalInvalid(TimeSpan interval)
		{
			return new LocalizedString("InterceptorErrorTimeIntervalInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				interval
			});
		}

		public static LocalizedString SetServerComponentStateServerUnreachable(string fqdn, string error)
		{
			return new LocalizedString("SetServerComponentStateServerUnreachable", "", false, false, Strings.ResourceManager, new object[]
			{
				fqdn,
				error
			});
		}

		public static LocalizedString CalendarDiagnosticLogsNotFound(string subject, string identity)
		{
			return new LocalizedString("CalendarDiagnosticLogsNotFound", "ExC2AAD8", false, true, Strings.ResourceManager, new object[]
			{
				subject,
				identity
			});
		}

		public static LocalizedString GetMsoDiagnosticsMoreDataIsAvailable
		{
			get
			{
				return new LocalizedString("GetMsoDiagnosticsMoreDataIsAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupComponentTransportLogSearchService", "Ex76B33D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTagTypeModified
		{
			get
			{
				return new LocalizedString("ErrorTagTypeModified", "ExB1B6A8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CatchAllRecipientNotAllowedForArbitrationMailbox
		{
			get
			{
				return new LocalizedString("CatchAllRecipientNotAllowedForArbitrationMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLegacyOABDoesNotSupportLinkedMailbox
		{
			get
			{
				return new LocalizedString("ErrorLegacyOABDoesNotSupportLinkedMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthPowerShellConnectionUserCredential(string userName, string type)
		{
			return new LocalizedString("CasHealthPowerShellConnectionUserCredential", "Ex5055C4", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				type
			});
		}

		public static LocalizedString OwaAttachmentInvalidStringLengthException(string fieldName, int index, string value, int min, int max)
		{
			return new LocalizedString("OwaAttachmentInvalidStringLengthException", "ExC53538", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				index,
				value,
				min,
				max
			});
		}

		public static LocalizedString ErrorSelectUserCmdletOnlyWorksForTwoUsers
		{
			get
			{
				return new LocalizedString("ErrorSelectUserCmdletOnlyWorksForTwoUsers", "Ex5D7C44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionResourceNotFoundViolation(string ruleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionResourceNotFoundViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleIds
			});
		}

		public static LocalizedString ErrorServicePlanIsNotSet
		{
			get
			{
				return new LocalizedString("ErrorServicePlanIsNotSet", "ExE58959", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtRemoveHeader
		{
			get
			{
				return new LocalizedString("MtrtRemoveHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogSourceAccountRemoved(string id)
		{
			return new LocalizedString("LogSourceAccountRemoved", "ExE8D82B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorRemoveArbitrationMailboxWithOABsAssigned(string mbxId)
		{
			return new LocalizedString("ErrorRemoveArbitrationMailboxWithOABsAssigned", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString InstalledRoles(string roles)
		{
			return new LocalizedString("InstalledRoles", "ExAA23FB", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		public static LocalizedString WarningCustomRoleCreatedDuringUpgrade(string id, string customUserRoleId, string deprecatedCannedRole)
		{
			return new LocalizedString("WarningCustomRoleCreatedDuringUpgrade", "ExEAAF38", false, true, Strings.ResourceManager, new object[]
			{
				id,
				customUserRoleId,
				deprecatedCannedRole
			});
		}

		public static LocalizedString VerboseFoundValidAlternateServiceAccountCredential(string qualifiedUserName, DateTime whenAdded)
		{
			return new LocalizedString("VerboseFoundValidAlternateServiceAccountCredential", "Ex102129", false, true, Strings.ResourceManager, new object[]
			{
				qualifiedUserName,
				whenAdded
			});
		}

		public static LocalizedString MigrationRemoteServerTooLongException(string propertyName)
		{
			return new LocalizedString("MigrationRemoteServerTooLongException", "ExA93CD1", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString JournalingParameterErrorExpiryDateWithoutGcc
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorExpiryDateWithoutGcc", "ExD5D09C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEvictLiveIdMemberNotExists(string memberName)
		{
			return new LocalizedString("ErrorEvictLiveIdMemberNotExists", "Ex8C4707", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString SeedingPathErrorException(string error)
		{
			return new LocalizedString("SeedingPathErrorException", "Ex8A9684", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ConfirmationMessageSetImap4Config
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetImap4Config", "ExA67A87", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestMailflowFailed(string source, string target, int executionTimeout)
		{
			return new LocalizedString("TestMailflowFailed", "Ex6442F0", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target,
				executionTimeout
			});
		}

		public static LocalizedString InCorrectRequiredPOPSetting
		{
			get
			{
				return new LocalizedString("InCorrectRequiredPOPSetting", "Ex1C7BD6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarnAboutSetDatabaseDefaults
		{
			get
			{
				return new LocalizedString("WarnAboutSetDatabaseDefaults", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidMonitorIdentity(string monitorIdentity)
		{
			return new LocalizedString("InvalidMonitorIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				monitorIdentity
			});
		}

		public static LocalizedString ErrorRestrictionWithWrongGroupType
		{
			get
			{
				return new LocalizedString("ErrorRestrictionWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BadDefaultsParameterException(string value)
		{
			return new LocalizedString("BadDefaultsParameterException", "Ex0DF586", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString ErrorMaxKeyMappings(int maxKeyMappings)
		{
			return new LocalizedString("ErrorMaxKeyMappings", "", false, false, Strings.ResourceManager, new object[]
			{
				maxKeyMappings
			});
		}

		public static LocalizedString ErrorCertificateAlreadyinPublish(string thumbprint)
		{
			return new LocalizedString("ErrorCertificateAlreadyinPublish", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString DagMembersUpCheckDesc
		{
			get
			{
				return new LocalizedString("DagMembersUpCheckDesc", "Ex5C8AE0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageCleanMailboxDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCleanMailboxDatabase", "Ex962299", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UnpackedDatacenterRoles(string roles)
		{
			return new LocalizedString("UnpackedDatacenterRoles", "Ex62436A", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		public static LocalizedString CasHealthCalendarCheckError(string scenario, string info)
		{
			return new LocalizedString("CasHealthCalendarCheckError", "Ex7D797C", false, true, Strings.ResourceManager, new object[]
			{
				scenario,
				info
			});
		}

		public static LocalizedString ErrorCannotDisablePublicFolderMailboxWithFolders
		{
			get
			{
				return new LocalizedString("ErrorCannotDisablePublicFolderMailboxWithFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageCompleteMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageCompleteMoveRequest", "Ex77EEE8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetCmdletExtensionAgent(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetCmdletExtensionAgent", "ExCE74E7", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotContactServerForCert(string server, string thumbprint)
		{
			return new LocalizedString("ErrorCannotContactServerForCert", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				thumbprint
			});
		}

		public static LocalizedString CasHealthScenarioLogon
		{
			get
			{
				return new LocalizedString("CasHealthScenarioLogon", "Ex5AAA6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeInitials
		{
			get
			{
				return new LocalizedString("ADAttributeInitials", "Ex2817D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedIisRestartWarning
		{
			get
			{
				return new LocalizedString("NeedIisRestartWarning", "ExD9CDD7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToCreatePL
		{
			get
			{
				return new LocalizedString("ErrorFailedToCreatePL", "ExCD0E2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerifyRoleInstalled
		{
			get
			{
				return new LocalizedString("VerifyRoleInstalled", "Ex288999", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageGetFailedContentIndexDocuments
		{
			get
			{
				return new LocalizedString("ConfirmationMessageGetFailedContentIndexDocuments", "Ex1744E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedCheckMarkAccessDeniedException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedCheckMarkAccessDeniedException", "Ex8C9590", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		public static LocalizedString FailedToLoadEdgeSyncConfigFile
		{
			get
			{
				return new LocalizedString("FailedToLoadEdgeSyncConfigFile", "Ex5CBA87", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionIneffectiveSharingViolationCheck
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIneffectiveSharingViolationCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFailedToTestWriteAccessToExchangeServers
		{
			get
			{
				return new LocalizedString("VerboseFailedToTestWriteAccessToExchangeServers", "ExA39611", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorChildObjectTypeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorChildObjectTypeNotUnique", "ExDC2533", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorInvalidGuidFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidGuidFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRoleEntryParameterExistOnChildren(string parameter, string entryName, string roleId, string childRole)
		{
			return new LocalizedString("ErrorRoleEntryParameterExistOnChildren", "Ex5F3859", false, true, Strings.ResourceManager, new object[]
			{
				parameter,
				entryName,
				roleId,
				childRole
			});
		}

		public static LocalizedString ConfirmationMessageNewHostedContentFilterConfig(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedContentFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MtrtDecrypt
		{
			get
			{
				return new LocalizedString("MtrtDecrypt", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNotMailboxServer(string server)
		{
			return new LocalizedString("ErrorNotMailboxServer", "ExCD3837", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString CasHealthShortErrorMsgFromExceptionWithInnerException(string exceptionType, string exceptionMessage, string innerExceptionType, string innerExceptionMessage)
		{
			return new LocalizedString("CasHealthShortErrorMsgFromExceptionWithInnerException", "Ex26CE59", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage,
				innerExceptionType,
				innerExceptionMessage
			});
		}

		public static LocalizedString ErrorNotRunningAsTenantAdmin
		{
			get
			{
				return new LocalizedString("ErrorNotRunningAsTenantAdmin", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecipientFromFirstOrganization(string syncobject)
		{
			return new LocalizedString("RecipientFromFirstOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		public static LocalizedString InstallMonitoringServiceTask
		{
			get
			{
				return new LocalizedString("InstallMonitoringServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseInstallWSManModule(string module)
		{
			return new LocalizedString("VerboseInstallWSManModule", "ExCA23D9", false, true, Strings.ResourceManager, new object[]
			{
				module
			});
		}

		public static LocalizedString ErrorLiveIdDoesNotExist(string windowsLiveId)
		{
			return new LocalizedString("ErrorLiveIdDoesNotExist", "Ex1E20CA", false, true, Strings.ResourceManager, new object[]
			{
				windowsLiveId
			});
		}

		public static LocalizedString FailedToCheckDiscoveryHoldStatusException(LocalizedString error)
		{
			return new LocalizedString("FailedToCheckDiscoveryHoldStatusException", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString CreateDumpster20Tag
		{
			get
			{
				return new LocalizedString("CreateDumpster20Tag", "Ex22D394", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallClientAccessRoleDescription
		{
			get
			{
				return new LocalizedString("InstallClientAccessRoleDescription", "Ex6C021E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestWebServicesConnectivity
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestWebServicesConnectivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailboxDiscovery(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxDiscovery", "Ex0CF0A5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString VerboseFailedReadObjectFromDC(string id, string type, string dc)
		{
			return new LocalizedString("VerboseFailedReadObjectFromDC", "Ex15DB70", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type,
				dc
			});
		}

		public static LocalizedString ConfigureMailTips
		{
			get
			{
				return new LocalizedString("ConfigureMailTips", "Ex334B6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveOlderVirtualDirectory(string identity, string version)
		{
			return new LocalizedString("ErrorRemoveOlderVirtualDirectory", "ExCD7360", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				version
			});
		}

		public static LocalizedString WarningCloseGroupMemberDepartForNoArbitrationMbx(string id)
		{
			return new LocalizedString("WarningCloseGroupMemberDepartForNoArbitrationMbx", "ExA2CAE2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SaveChangesFailedForTraining(string mailbox)
		{
			return new LocalizedString("SaveChangesFailedForTraining", "Ex631E6C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString TestMigrationServerConnectionTimeout
		{
			get
			{
				return new LocalizedString("TestMigrationServerConnectionTimeout", "ExAEB74E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetDatabaseAvailabilityGroupNetwork(string network)
		{
			return new LocalizedString("ConfirmationMessageSetDatabaseAvailabilityGroupNetwork", "Ex394043", false, true, Strings.ResourceManager, new object[]
			{
				network
			});
		}

		public static LocalizedString SetupProgressStartingTransportLogSearchService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingTransportLogSearchService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPublicFolderHierarchyAlreadyProvisioned
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderHierarchyAlreadyProvisioned", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmationMessageSetFederatedOrganizationIdentifier1(string Identity, string accountNamespace, string trust)
		{
			return new LocalizedString("ConfirmationMessageSetFederatedOrganizationIdentifier1", "Ex88B572", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				accountNamespace,
				trust
			});
		}

		public static LocalizedString MoveMailboxShouldMove(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxShouldMove", "Ex598E74", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		public static LocalizedString ClassificationRuleCollectionSharingViolationSetOperationVerbose(string identity, string ruleIdsInUse, string referencingTransportRuleNames)
		{
			return new LocalizedString("ClassificationRuleCollectionSharingViolationSetOperationVerbose", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				ruleIdsInUse,
				referencingTransportRuleNames
			});
		}

		public static LocalizedString VerboseCreateDirectory(string server, string dir)
		{
			return new LocalizedString("VerboseCreateDirectory", "Ex583137", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dir
			});
		}

		public static LocalizedString ErrorInvalidOperationOnProvisionedServer
		{
			get
			{
				return new LocalizedString("ErrorInvalidOperationOnProvisionedServer", "Ex286E97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasScenarioGetItemEstimate
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioGetItemEstimate", "Ex85CFF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCorruptedPartition(string partitionName)
		{
			return new LocalizedString("ErrorCorruptedPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		public static LocalizedString IISGeneralCOMException(string errorMsg, int code)
		{
			return new LocalizedString("IISGeneralCOMException", "Ex4E40A1", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg,
				code
			});
		}

		public static LocalizedString ConfirmationMessageDisableArchive(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableArchive", "Ex9F97C1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString FormsAuthenticationIsEnabledPathNotFoundException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationIsEnabledPathNotFoundException", "Ex704194", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		public static LocalizedString ConfirmationMessageNewOfflineAddressBook(string WebSiteName, string AddressLists)
		{
			return new LocalizedString("ConfirmationMessageNewOfflineAddressBook", "Ex369AA9", false, true, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				AddressLists
			});
		}

		public static LocalizedString SetupProgressCreateOutOfTheBoxAdditionalMrmTags
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutOfTheBoxAdditionalMrmTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddressRewriteExceptionListDisallowed
		{
			get
			{
				return new LocalizedString("AddressRewriteExceptionListDisallowed", "Ex7ACEB9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMapiHttpAlreadyEnabled(string server)
		{
			return new LocalizedString("ErrorMapiHttpAlreadyEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString InvalidParameterForE12TargetDatabase(string param, string db)
		{
			return new LocalizedString("InvalidParameterForE12TargetDatabase", "ExD31709", false, true, Strings.ResourceManager, new object[]
			{
				param,
				db
			});
		}

		public static LocalizedString InstallIisWebServiceExtensionCommitting
		{
			get
			{
				return new LocalizedString("InstallIisWebServiceExtensionCommitting", "Ex0D266A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateGlobalContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateGlobalContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidMandatoryParameterForPublicFolderTasks(string parameter, string operation)
		{
			return new LocalizedString("ErrorInvalidMandatoryParameterForPublicFolderTasks", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter,
				operation
			});
		}

		public static LocalizedString ErrorSyncProtocolNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorSyncProtocolNotSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArchiveNamePrefix
		{
			get
			{
				return new LocalizedString("ArchiveNamePrefix", "ExC19E53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvokePreMoveActionDescription
		{
			get
			{
				return new LocalizedString("InvokePreMoveActionDescription", "Ex3B99D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressProhibitSendQuota
		{
			get
			{
				return new LocalizedString("SetupProgressProhibitSendQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogMigrationRegistryKeyDefaultValue(string value)
		{
			return new LocalizedString("LogMigrationRegistryKeyDefaultValue", "Ex7579C5", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString FailedToDeleteMailboxDatabase(string id, string error)
		{
			return new LocalizedString("FailedToDeleteMailboxDatabase", "ExEC8D88", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString SetupComponentPerfCountersTransport
		{
			get
			{
				return new LocalizedString("SetupComponentPerfCountersTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailuserAndNotLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailuserAndNotLiveId", "Ex10FB30", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		public static LocalizedString WatchDogServiceDisplayName
		{
			get
			{
				return new LocalizedString("WatchDogServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCreatedGroup(string group)
		{
			return new LocalizedString("InfoCreatedGroup", "Ex77687D", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString ErrorInvalidInternalUserId(string userId)
		{
			return new LocalizedString("ErrorInvalidInternalUserId", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		public static LocalizedString ErrorWebSiteNotExists(string webSiteName, string serverName)
		{
			return new LocalizedString("ErrorWebSiteNotExists", "Ex79DCCE", false, true, Strings.ResourceManager, new object[]
			{
				webSiteName,
				serverName
			});
		}

		public static LocalizedString CopyingFile(string filename)
		{
			return new LocalizedString("CopyingFile", "Ex9D5E99", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		public static LocalizedString StoppingOnePointService
		{
			get
			{
				return new LocalizedString("StoppingOnePointService", "ExF0F0AD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutoGroupDepartMessageSubject(string recipient, string group)
		{
			return new LocalizedString("AutoGroupDepartMessageSubject", "ExAF4222", false, true, Strings.ResourceManager, new object[]
			{
				recipient,
				group
			});
		}

		public static LocalizedString ProgressCheckingReplayState
		{
			get
			{
				return new LocalizedString("ProgressCheckingReplayState", "Ex35CB72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusDismounted
		{
			get
			{
				return new LocalizedString("CopyStatusDismounted", "Ex1F49A4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidOperationOnAddDBCopyForPublicFolder(string pfdb)
		{
			return new LocalizedString("ErrorInvalidOperationOnAddDBCopyForPublicFolder", "ExE8DEA1", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString DebugStartIsDomainReservedCheck
		{
			get
			{
				return new LocalizedString("DebugStartIsDomainReservedCheck", "ExAEA575", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewDagServerIsNotMailboxServerException(string serverName)
		{
			return new LocalizedString("NewDagServerIsNotMailboxServerException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString InfoSetObjectVersion(int version)
		{
			return new LocalizedString("InfoSetObjectVersion", "Ex48FB4C", false, true, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		public static LocalizedString VerboseCannotReadObject(string id, string source, string error)
		{
			return new LocalizedString("VerboseCannotReadObject", "Ex780930", false, true, Strings.ResourceManager, new object[]
			{
				id,
				source,
				error
			});
		}

		public static LocalizedString InvalidActionParameter
		{
			get
			{
				return new LocalizedString("InvalidActionParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthClientAccessServerName
		{
			get
			{
				return new LocalizedString("CasHealthClientAccessServerName", "ExBF9943", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArchiveDatabaseNotExplicitlyStampedError
		{
			get
			{
				return new LocalizedString("ArchiveDatabaseNotExplicitlyStampedError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeWindowsPermissionsDescription
		{
			get
			{
				return new LocalizedString("ExchangeWindowsPermissionsDescription", "Ex05F94E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaPingScenarioName
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingScenarioName", "ExE5C651", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorParameterValueNotAllowed(string paramName)
		{
			return new LocalizedString("ErrorParameterValueNotAllowed", "ExAAA743", false, true, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		public static LocalizedString TargetMailboxRequired
		{
			get
			{
				return new LocalizedString("TargetMailboxRequired", "Ex552EE5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseUnableToCreateAdminAuditFolder(string error)
		{
			return new LocalizedString("VerboseUnableToCreateAdminAuditFolder", "ExF571D4", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ConfirmationMessageSetTransportConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetTransportConfig", "Ex4A1EDF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDoubleWriteADChangeOnDC(string id, string dc)
		{
			return new LocalizedString("VerboseDoubleWriteADChangeOnDC", "ExEA5D40", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		public static LocalizedString MigrationPartitionMailboxNotFound
		{
			get
			{
				return new LocalizedString("MigrationPartitionMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningSharedConfigurationAlreadyExists(string programid, string offerid)
		{
			return new LocalizedString("WarningSharedConfigurationAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		public static LocalizedString ClassificationRuleCollectionExportEncyrptedProhibited
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionExportEncyrptedProhibited", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallGatewayRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallGatewayRoleDescription", "Ex3078C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString HighPriorityChecksFailed
		{
			get
			{
				return new LocalizedString("HighPriorityChecksFailed", "ExBA8014", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerComponentStateInvalidRequester(string requsterName, string allowedRequesters)
		{
			return new LocalizedString("ServerComponentStateInvalidRequester", "", false, false, Strings.ResourceManager, new object[]
			{
				requsterName,
				allowedRequesters
			});
		}

		public static LocalizedString CouldNotRestartExSearch
		{
			get
			{
				return new LocalizedString("CouldNotRestartExSearch", "Ex813C65", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorParameterRequiredButNotProvisioned(string parameterName)
		{
			return new LocalizedString("ErrorParameterRequiredButNotProvisioned", "Ex482953", false, true, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString AdminAuditLogSearchMissingCmdletsWhileParameterProvided
		{
			get
			{
				return new LocalizedString("AdminAuditLogSearchMissingCmdletsWhileParameterProvided", "Ex4C59A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportDestinationInvalid(string path)
		{
			return new LocalizedString("ExportDestinationInvalid", "ExB449AA", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString RegistryAccessServicesKeyDoesNotExistException(string servicesRootKey)
		{
			return new LocalizedString("RegistryAccessServicesKeyDoesNotExistException", "Ex802DBA", false, true, Strings.ResourceManager, new object[]
			{
				servicesRootKey
			});
		}

		public static LocalizedString ConfirmationMessageEnableConfigCustomizations(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageEnableConfigCustomizations", "", false, false, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		public static LocalizedString ConfirmationMessageEnableCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageEnableCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString RmsOnlineFailedToValidateKeys
		{
			get
			{
				return new LocalizedString("RmsOnlineFailedToValidateKeys", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCheckingScopePassed
		{
			get
			{
				return new LocalizedString("VerboseCheckingScopePassed", "ExF49838", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxIdentityAndLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxIdentityAndLiveId", "Ex830028", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		public static LocalizedString NotAValidDistributionGroup
		{
			get
			{
				return new LocalizedString("NotAValidDistributionGroup", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmEnforceRequireSslOnRoot
		{
			get
			{
				return new LocalizedString("ConfirmEnforceRequireSslOnRoot", "ExF3A941", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorModifyRoleNeedHierarchicalParentRoleWithoutScopeRestriction(string roleId)
		{
			return new LocalizedString("ErrorModifyRoleNeedHierarchicalParentRoleWithoutScopeRestriction", "Ex53554D", false, true, Strings.ResourceManager, new object[]
			{
				roleId
			});
		}

		public static LocalizedString ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox
		{
			get
			{
				return new LocalizedString("ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PAMCouldNotBeDeterminedException(string dagName, string errorMsg)
		{
			return new LocalizedString("PAMCouldNotBeDeterminedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				errorMsg
			});
		}

		public static LocalizedString NoBindingsSet
		{
			get
			{
				return new LocalizedString("NoBindingsSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAccountPartitionRequired
		{
			get
			{
				return new LocalizedString("ErrorAccountPartitionRequired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchGetMapiStore(string ID)
		{
			return new LocalizedString("TestSearchGetMapiStore", "ExD0F720", false, true, Strings.ResourceManager, new object[]
			{
				ID
			});
		}

		public static LocalizedString DebugEndInAcceptedDomainCheck
		{
			get
			{
				return new LocalizedString("DebugEndInAcceptedDomainCheck", "ExC5EE8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToStartClusSvc(string serverName, string state)
		{
			return new LocalizedString("FailedToStartClusSvc", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				state
			});
		}

		public static LocalizedString UninstallingTranscodingService
		{
			get
			{
				return new LocalizedString("UninstallingTranscodingService", "ExE91517", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressEnableWMIAsync
		{
			get
			{
				return new LocalizedString("SetupProgressEnableWMIAsync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtDeleteMessage
		{
			get
			{
				return new LocalizedString("MtrtDeleteMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionTimeoutFailure
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionTimeoutFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagFswUnableToUpdateWitnessShareException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswUnableToUpdateWitnessShareException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAuthRedirect(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveAuthRedirect", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorDefaultWebSiteNotExist(string configFile)
		{
			return new LocalizedString("ErrorDefaultWebSiteNotExist", "Ex4827B7", false, true, Strings.ResourceManager, new object[]
			{
				configFile
			});
		}

		public static LocalizedString ConfirmationMessageNewOrganizationNoPath(string Name, SmtpDomain DomainName)
		{
			return new LocalizedString("ConfirmationMessageNewOrganizationNoPath", "Ex67FED5", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainName
			});
		}

		public static LocalizedString ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox
		{
			get
			{
				return new LocalizedString("ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedUnknownCheckErrorException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedUnknownCheckErrorException", "Ex3AF600", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		public static LocalizedString ErrorPasswordIncludesMemberName(string memberName)
		{
			return new LocalizedString("ErrorPasswordIncludesMemberName", "ExFDEEF0", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ErrorVirtualDirectoryADObjectAlreadyExists(string virtualDirectoryName, string ADPosition)
		{
			return new LocalizedString("ErrorVirtualDirectoryADObjectAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				virtualDirectoryName,
				ADPosition
			});
		}

		public static LocalizedString ErrorLinkedRoleGroupCannotHaveMembers
		{
			get
			{
				return new LocalizedString("ErrorLinkedRoleGroupCannotHaveMembers", "Ex91B9F4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToDetermineCreatingUser
		{
			get
			{
				return new LocalizedString("UnableToDetermineCreatingUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressDeletingCatalog
		{
			get
			{
				return new LocalizedString("ProgressDeletingCatalog", "ExF45E56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarnCertificateWillNotBeUsed(string bestMatchThumbprint, string fqdn, string connectors)
		{
			return new LocalizedString("WarnCertificateWillNotBeUsed", "ExC5EBF9", false, true, Strings.ResourceManager, new object[]
			{
				bestMatchThumbprint,
				fqdn,
				connectors
			});
		}

		public static LocalizedString ConfirmRemovalOfCorruptRequest(string indexEntry, string validationMessage)
		{
			return new LocalizedString("ConfirmRemovalOfCorruptRequest", "Ex4F69DF", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry,
				validationMessage
			});
		}

		public static LocalizedString ErrorGlobalThrottlingPolicyNotFound
		{
			get
			{
				return new LocalizedString("ErrorGlobalThrottlingPolicyNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IncompatibleTenantOrganizationForBulkProvisioning
		{
			get
			{
				return new LocalizedString("IncompatibleTenantOrganizationForBulkProvisioning", "Ex8F76D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLiveIdDomainTemporarilyUnavailable(string message)
		{
			return new LocalizedString("ErrorLiveIdDomainTemporarilyUnavailable", "Ex85EED4", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString MsiIsNotInstalled(string packageName)
		{
			return new LocalizedString("MsiIsNotInstalled", "Ex0C86DA", false, true, Strings.ResourceManager, new object[]
			{
				packageName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDefaultELCFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveDefaultELCFolder", "ExDC6068", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString RuleStateEnabled
		{
			get
			{
				return new LocalizedString("RuleStateEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageDisableDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableDistributionGroup", "Ex3D6BFF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorTooManyMailboxesInSingleHold(int maxNumber)
		{
			return new LocalizedString("ErrorTooManyMailboxesInSingleHold", "", false, false, Strings.ResourceManager, new object[]
			{
				maxNumber
			});
		}

		public static LocalizedString FailedToFindTPDForRefresh(string name)
		{
			return new LocalizedString("FailedToFindTPDForRefresh", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorUserIsNotMailBoxEnabled(string user)
		{
			return new LocalizedString("ErrorUserIsNotMailBoxEnabled", "Ex49326D", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString DisasterRecoveryMailboxRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryMailboxRoleDescription", "Ex792C33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxInNonMailboxServer(string mailbox)
		{
			return new LocalizedString("ErrorMailboxInNonMailboxServer", "Ex268963", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ExceptionWhileReadingInputFile(string filename, string exMessage)
		{
			return new LocalizedString("ExceptionWhileReadingInputFile", "Ex647B44", false, true, Strings.ResourceManager, new object[]
			{
				filename,
				exMessage
			});
		}

		public static LocalizedString ConfirmSharedConfiguration(string id)
		{
			return new LocalizedString("ConfirmSharedConfiguration", "ExE59BA5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseFindClosestPublicFolderDatabaseFromServer(string id)
		{
			return new LocalizedString("VerboseFindClosestPublicFolderDatabaseFromServer", "Ex874D79", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageNewFederationTrust(string Name, string partnerSTS, string Thumbprint)
		{
			return new LocalizedString("ConfirmationMessageNewFederationTrust", "ExE01154", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				partnerSTS,
				Thumbprint
			});
		}

		public static LocalizedString ConfirmationMessageNewReceiveConnector(string Name, string Bindings, string RemoteIPRanges)
		{
			return new LocalizedString("ConfirmationMessageNewReceiveConnector", "ExC7D70D", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Bindings,
				RemoteIPRanges
			});
		}

		public static LocalizedString TestSearchMapiStoreError(string ID, string database)
		{
			return new LocalizedString("TestSearchMapiStoreError", "Ex72B43D", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		public static LocalizedString GetQueueDigestInvalidFilter(string filter)
		{
			return new LocalizedString("GetQueueDigestInvalidFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		public static LocalizedString ExchangeSettingsInvalidSchema(string name)
		{
			return new LocalizedString("ExchangeSettingsInvalidSchema", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ClassificationRuleCollectionReservedFingerprintRulePackIdViolation(string rulePackId)
		{
			return new LocalizedString("ClassificationRuleCollectionReservedFingerprintRulePackIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				rulePackId
			});
		}

		public static LocalizedString ProgressStartClussvc(string node)
		{
			return new LocalizedString("ProgressStartClussvc", "Ex250A85", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		public static LocalizedString ManagedAvailabilityServersUSGDescription
		{
			get
			{
				return new LocalizedString("ManagedAvailabilityServersUSGDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestEdgeSynchronization
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestEdgeSynchronization", "Ex4F89D2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImportMultiplePSTToOneMailbox(string displayName)
		{
			return new LocalizedString("ImportMultiplePSTToOneMailbox", "Ex1DC10E", false, true, Strings.ResourceManager, new object[]
			{
				displayName
			});
		}

		public static LocalizedString ErrorBasicAndLiveIdBasicNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorBasicAndLiveIdBasicNotAllowed", "Ex5701E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnPremisesOrganizationOutboundConnectorNotExists(OutboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOutboundConnectorNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString AccessMismatchRemoteLocal(string remoteName, string remoteProperty, string localName, string localFlag)
		{
			return new LocalizedString("AccessMismatchRemoteLocal", "Ex6E452D", false, true, Strings.ResourceManager, new object[]
			{
				remoteName,
				remoteProperty,
				localName,
				localFlag
			});
		}

		public static LocalizedString WarningFixTheInvalidRecipientFilterMetadata(string id)
		{
			return new LocalizedString("WarningFixTheInvalidRecipientFilterMetadata", "ExAC5CDD", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorInvalidCharException
		{
			get
			{
				return new LocalizedString("ErrorInvalidCharException", "ExA046CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MsiCouldNotRemoveProduct(Guid productCode, string message, int errorCode)
		{
			return new LocalizedString("MsiCouldNotRemoveProduct", "Ex52A0EE", false, true, Strings.ResourceManager, new object[]
			{
				productCode,
				message,
				errorCode
			});
		}

		public static LocalizedString CalendarVDirNotFound
		{
			get
			{
				return new LocalizedString("CalendarVDirNotFound", "Ex4124F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplicationCheckFailuresLabel
		{
			get
			{
				return new LocalizedString("ReplicationCheckFailuresLabel", "Ex075474", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorServerNotCAS(string server)
		{
			return new LocalizedString("ErrorServerNotCAS", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString DataClassificationAmbiguousIdentity(string query, string collectionId1, string localizedName2, string uniqueId2, string collectionId2)
		{
			return new LocalizedString("DataClassificationAmbiguousIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				query,
				collectionId1,
				localizedName2,
				uniqueId2,
				collectionId2
			});
		}

		public static LocalizedString CreateAltFswWillAutomaticallyCalculateLater
		{
			get
			{
				return new LocalizedString("CreateAltFswWillAutomaticallyCalculateLater", "ExC2029B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningFswNotPrimaryOrAlternate(string identity)
		{
			return new LocalizedString("WarningFswNotPrimaryOrAlternate", "Ex038D1E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ProgressDeletingCopySystemFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingCopySystemFiles", "Ex7539DE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningGeneratingMissingAlias(string idRecipient, string alias)
		{
			return new LocalizedString("WarningGeneratingMissingAlias", "Ex9231E5", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient,
				alias
			});
		}

		public static LocalizedString InvalidIdentityTypeForRemoveCmdletException(string identity)
		{
			return new LocalizedString("InvalidIdentityTypeForRemoveCmdletException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CasHealthAutoDiscoveryBadUri(string uriStr)
		{
			return new LocalizedString("CasHealthAutoDiscoveryBadUri", "Ex28C89E", false, true, Strings.ResourceManager, new object[]
			{
				uriStr
			});
		}

		public static LocalizedString UninstallCentralAdminServiceTask
		{
			get
			{
				return new LocalizedString("UninstallCentralAdminServiceTask", "Ex4ADD5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RuleNotFound(string rule)
		{
			return new LocalizedString("RuleNotFound", "Ex635A7E", false, true, Strings.ResourceManager, new object[]
			{
				rule
			});
		}

		public static LocalizedString ServerComponentStateNoLocalOnly(string component)
		{
			return new LocalizedString("ServerComponentStateNoLocalOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString IPv6AddressesAreNotAllowedInGatewayIPAddressesId(string ip)
		{
			return new LocalizedString("IPv6AddressesAreNotAllowedInGatewayIPAddressesId", "ExD30213", false, true, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		public static LocalizedString SetupComponentConfiguringDAV
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringDAV", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerVersionNotSupportedException(string cmdletName, int cmdletVersion, int serverVersion)
		{
			return new LocalizedString("ServerVersionNotSupportedException", "ExECD7E6", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				cmdletVersion,
				serverVersion
			});
		}

		public static LocalizedString CouldNotFindFirstOrgPerimeterConfigObjectId
		{
			get
			{
				return new LocalizedString("CouldNotFindFirstOrgPerimeterConfigObjectId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiSubmitSystemProbeInternetMessageId
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeInternetMessageId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxResidesInRDB(string mailboxId)
		{
			return new LocalizedString("ErrorMailboxResidesInRDB", "Ex7B65E6", false, true, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		public static LocalizedString ErrorInvalidRecipientPreviewFilter(string filter)
		{
			return new LocalizedString("ErrorInvalidRecipientPreviewFilter", "Ex46B7D3", false, true, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		public static LocalizedString ErrorIsUniversalGroupAlready(string group)
		{
			return new LocalizedString("ErrorIsUniversalGroupAlready", "ExFC5660", false, true, Strings.ResourceManager, new object[]
			{
				group
			});
		}

		public static LocalizedString ConfirmationMessageSetEcpVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetEcpVirtualDirectory", "Ex6DCF10", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorRootFolderInvalid(LocalizedString errorMessage)
		{
			return new LocalizedString("ErrorRootFolderInvalid", "ExD2CFAD", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		public static LocalizedString ErrorFailedToGetPublishingUri
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetPublishingUri", "Ex503006", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RequiredStartDateParameter
		{
			get
			{
				return new LocalizedString("RequiredStartDateParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressRemotePowerShellAccessEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressRemotePowerShellAccessEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressOwaLightEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaLightEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningServerIsNotInCasRole(string name)
		{
			return new LocalizedString("WarningServerIsNotInCasRole", "ExEEED82", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarnInvalidCertificateForProtocol(string thumbprint, string fqdn, string protocol)
		{
			return new LocalizedString("WarnInvalidCertificateForProtocol", "ExCBB11A", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				fqdn,
				protocol
			});
		}

		public static LocalizedString ConfirmationMessageSetAddressBookPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAddressBookPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorCannotBeExOWithoutDatacenter(string component)
		{
			return new LocalizedString("ErrorCannotBeExOWithoutDatacenter", "", false, false, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString ErrorInvalidPartnerId(int value)
		{
			return new LocalizedString("ErrorInvalidPartnerId", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString InterceptorErrorInvalidConditionTypeValue(string conditionType, string value, string error)
		{
			return new LocalizedString("InterceptorErrorInvalidConditionTypeValue", "", false, false, Strings.ResourceManager, new object[]
			{
				conditionType,
				value,
				error
			});
		}

		public static LocalizedString InvalidUnicodeCharacterUsage
		{
			get
			{
				return new LocalizedString("InvalidUnicodeCharacterUsage", "Ex37D036", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteTargetDatabaseNotAllowedForRemotePull
		{
			get
			{
				return new LocalizedString("ErrorRemoteTargetDatabaseNotAllowedForRemotePull", "Ex4B2AB5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionLogFileInvalid(string vfile)
		{
			return new LocalizedString("ExceptionLogFileInvalid", "Ex758DB7", false, true, Strings.ResourceManager, new object[]
			{
				vfile
			});
		}

		public static LocalizedString CasHealthEasScenarioSyncZero
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncZero", "ExA06048", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetUMMailboxPolicyDuplicateSourceForestPolicyNames
		{
			get
			{
				return new LocalizedString("SetUMMailboxPolicyDuplicateSourceForestPolicyNames", "Ex3799E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CatchAllRecipientTypeNotAllowed
		{
			get
			{
				return new LocalizedString("CatchAllRecipientTypeNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmtpConnectivitySuccesses(string results)
		{
			return new LocalizedString("SmtpConnectivitySuccesses", "ExD336CA", false, true, Strings.ResourceManager, new object[]
			{
				results
			});
		}

		public static LocalizedString ErrorFailedToCheckMode
		{
			get
			{
				return new LocalizedString("ErrorFailedToCheckMode", "Ex8A9624", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserNotInSecurityGroups(string id)
		{
			return new LocalizedString("ErrorUserNotInSecurityGroups", "ExFC77A9", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly
		{
			get
			{
				return new LocalizedString("ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningCmdletIsDeprecated(string oldCmdlet, string newCmdlet)
		{
			return new LocalizedString("WarningCmdletIsDeprecated", "", false, false, Strings.ResourceManager, new object[]
			{
				oldCmdlet,
				newCmdlet
			});
		}

		public static LocalizedString ErrorTaskRunningLocationMailboxOnly
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocationMailboxOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GenericRpcError(string server, string message)
		{
			return new LocalizedString("GenericRpcError", "Ex0A0751", false, true, Strings.ResourceManager, new object[]
			{
				server,
				message
			});
		}

		public static LocalizedString OwaIdentityMustHaveValueException
		{
			get
			{
				return new LocalizedString("OwaIdentityMustHaveValueException", "ExCBCA61", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnexpectedRoleTypeException(string roleDN, RoleType invalid, RoleType expected)
		{
			return new LocalizedString("UnexpectedRoleTypeException", "ExE09138", false, true, Strings.ResourceManager, new object[]
			{
				roleDN,
				invalid,
				expected
			});
		}

		public static LocalizedString DebugGettingNetIdFromMemeberName
		{
			get
			{
				return new LocalizedString("DebugGettingNetIdFromMemeberName", "ExCA2072", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeMigrationSidHistoryAuditingDSGDescription
		{
			get
			{
				return new LocalizedString("ExchangeMigrationSidHistoryAuditingDSGDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmtpExternalServerSettings
		{
			get
			{
				return new LocalizedString("SmtpExternalServerSettings", "Ex22986E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotDisableAdfsEcpWithoutOwaFirst
		{
			get
			{
				return new LocalizedString("CannotDisableAdfsEcpWithoutOwaFirst", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingIISAdminService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingIISAdminService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DoNotMoveImmediately(string oab)
		{
			return new LocalizedString("DoNotMoveImmediately", "Ex6EB43E", false, true, Strings.ResourceManager, new object[]
			{
				oab
			});
		}

		public static LocalizedString ErrorDistributionListDepartClosed(string id)
		{
			return new LocalizedString("ErrorDistributionListDepartClosed", "ExBB24B5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString UnableToCommunicate
		{
			get
			{
				return new LocalizedString("UnableToCommunicate", "ExD5D911", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantConfigurationInfoIsNull
		{
			get
			{
				return new LocalizedString("TenantConfigurationInfoIsNull", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailPublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailPublicFolder", "ExFCA70C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString OutlookProviderAlreadyExists(string Name)
		{
			return new LocalizedString("OutlookProviderAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString InvalidMessageDataClassification(string dataClassification)
		{
			return new LocalizedString("InvalidMessageDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				dataClassification
			});
		}

		public static LocalizedString ComplianceAuditServiceDisplayName
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UmLanguagePathLogFilePathNotSpecified
		{
			get
			{
				return new LocalizedString("UmLanguagePathLogFilePathNotSpecified", "Ex4CD8CD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StartAfterOrCompleteAfterCannotBeSetForOfflineMoves
		{
			get
			{
				return new LocalizedString("StartAfterOrCompleteAfterCannotBeSetForOfflineMoves", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogRunningCommand(string processName, string args)
		{
			return new LocalizedString("LogRunningCommand", "ExEFD9C7", false, true, Strings.ResourceManager, new object[]
			{
				processName,
				args
			});
		}

		public static LocalizedString DagTaskRevertingFsw(string fswName)
		{
			return new LocalizedString("DagTaskRevertingFsw", "", false, false, Strings.ResourceManager, new object[]
			{
				fswName
			});
		}

		public static LocalizedString CustomizedDsnLanguageNotAvailable(string status, string host)
		{
			return new LocalizedString("CustomizedDsnLanguageNotAvailable", "Ex5C0B97", false, true, Strings.ResourceManager, new object[]
			{
				status,
				host
			});
		}

		public static LocalizedString ConfirmationMessageSetOutlookProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOutlookProvider", "ExA5ACE9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ReplicationCheckBlankMessage
		{
			get
			{
				return new LocalizedString("ReplicationCheckBlankMessage", "ExC6EFB9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NodeEvictedAlready(string nodeName, string dagName)
		{
			return new LocalizedString("NodeEvictedAlready", "Ex4C94FE", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName
			});
		}

		public static LocalizedString AdminAuditLogSearchFailed
		{
			get
			{
				return new LocalizedString("AdminAuditLogSearchFailed", "Ex14B396", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotCreateMsoSyncService(string reason)
		{
			return new LocalizedString("CouldNotCreateMsoSyncService", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString MigrationCompleteAfterChangedToEarlierTime
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterChangedToEarlierTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests
		{
			get
			{
				return new LocalizedString("ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests", "ExA3FD83", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionFailedSummary(string transactionTarget, string errorMsg)
		{
			return new LocalizedString("MapiTransactionFailedSummary", "Ex02AF0E", false, true, Strings.ResourceManager, new object[]
			{
				transactionTarget,
				errorMsg
			});
		}

		public static LocalizedString StartingToUpdateMFLFiles
		{
			get
			{
				return new LocalizedString("StartingToUpdateMFLFiles", "Ex778289", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogMigrationOutlookVersion(string value)
		{
			return new LocalizedString("LogMigrationOutlookVersion", "Ex8B7FCB", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString CannotSetEdgeTransportServerOnAd
		{
			get
			{
				return new LocalizedString("CannotSetEdgeTransportServerOnAd", "ExB296E1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ApplicationUrisMissingOnReturnedInformation
		{
			get
			{
				return new LocalizedString("ApplicationUrisMissingOnReturnedInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DNSRoutingEnabledMustNotBeSpecified
		{
			get
			{
				return new LocalizedString("DNSRoutingEnabledMustNotBeSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SuspendSgcUseState(string server, string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("SuspendSgcUseState", "Ex852720", false, true, Strings.ResourceManager, new object[]
			{
				server,
				serverVersion,
				rpcSupportVersion
			});
		}

		public static LocalizedString ErrorDataClassificationIsInUse(string identity, string rules)
		{
			return new LocalizedString("ErrorDataClassificationIsInUse", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				rules
			});
		}

		public static LocalizedString ErrorRecipientViewRootDuplicatedUnderScope(string ou, string scope)
		{
			return new LocalizedString("ErrorRecipientViewRootDuplicatedUnderScope", "ExC1A708", false, true, Strings.ResourceManager, new object[]
			{
				ou,
				scope
			});
		}

		public static LocalizedString CannotLocateFedOrgId
		{
			get
			{
				return new LocalizedString("CannotLocateFedOrgId", "Ex7EC091", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorIncompleteSettings
		{
			get
			{
				return new LocalizedString("ErrorIncompleteSettings", "ExD88879", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RpcUnavailable(string server)
		{
			return new LocalizedString("RpcUnavailable", "ExADECA4", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ConfirmationMessageSetMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageSetMigrationBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		public static LocalizedString FormsAuthenticationIsEnabledUnknownErrorException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationIsEnabledUnknownErrorException", "Ex8290B3", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		public static LocalizedString ContinueOnRemoveSearchResults
		{
			get
			{
				return new LocalizedString("ContinueOnRemoveSearchResults", "Ex43099B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopImapLoggingOn
		{
			get
			{
				return new LocalizedString("PopImapLoggingOn", "ExCF8AFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLinkedSidParameterNotAllowed(string parameter)
		{
			return new LocalizedString("ErrorLinkedSidParameterNotAllowed", "Ex738D14", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString ErrorRemoveNotDisconnectedStoreMailbox(string identity)
		{
			return new LocalizedString("ErrorRemoveNotDisconnectedStoreMailbox", "Ex7359EC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString PopInternalServerSettings
		{
			get
			{
				return new LocalizedString("PopInternalServerSettings", "Ex16396A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TSNotAMailboxServer(string serverName)
		{
			return new LocalizedString("TSNotAMailboxServer", "Ex44CE20", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorMultipleSCTsLinked(string oldTenant)
		{
			return new LocalizedString("ErrorMultipleSCTsLinked", "", false, false, Strings.ResourceManager, new object[]
			{
				oldTenant
			});
		}

		public static LocalizedString InvalidVersion(string version, string format)
		{
			return new LocalizedString("InvalidVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				version,
				format
			});
		}

		public static LocalizedString ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts", "ExC2829C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthAutodiscoverIncorrectResult(string xPath, string xmlResponse)
		{
			return new LocalizedString("CasHealthAutodiscoverIncorrectResult", "ExF3507E", false, true, Strings.ResourceManager, new object[]
			{
				xPath,
				xmlResponse
			});
		}

		public static LocalizedString ErrorCannotRemoveMailboxSearchWithMailboxOnHold(string name)
		{
			return new LocalizedString("ErrorCannotRemoveMailboxSearchWithMailboxOnHold", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString TransportServerCmdletDeprecated(string oldCmdlet, string newCmdlet)
		{
			return new LocalizedString("TransportServerCmdletDeprecated", "", false, false, Strings.ResourceManager, new object[]
			{
				oldCmdlet,
				newCmdlet
			});
		}

		public static LocalizedString ReplayLagPlayDownReasonLagDisabled
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonLagDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppNoVirtualDirectories(LocalizedString applicationShortName, string hostName)
		{
			return new LocalizedString("CasHealthWebAppNoVirtualDirectories", "ExB6123C", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				hostName
			});
		}

		public static LocalizedString InstallCentralAdminDatabaseRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCentralAdminDatabaseRoleDescription", "Ex4BEFCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidOperationOnDefaultGAL(string idGal)
		{
			return new LocalizedString("ErrorInvalidOperationOnDefaultGAL", "ExF0F85D", false, true, Strings.ResourceManager, new object[]
			{
				idGal
			});
		}

		public static LocalizedString FederationCertificateExpired(string propertyName)
		{
			return new LocalizedString("FederationCertificateExpired", "Ex72B335", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString InvalidIPv4AddressesAreNotAllowedInGatewayIPAddressesId(string ip)
		{
			return new LocalizedString("InvalidIPv4AddressesAreNotAllowedInGatewayIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		public static LocalizedString ConfirmationMessageSetMailuserWithWindowsLiveID(string Identity, string liveID)
		{
			return new LocalizedString("ConfirmationMessageSetMailuserWithWindowsLiveID", "Ex22DBE0", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveID
			});
		}

		public static LocalizedString ConfirmationMessageDisableMailContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailContact", "ExD94567", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString OwaUrlNotMatchEcpWarning
		{
			get
			{
				return new LocalizedString("OwaUrlNotMatchEcpWarning", "Ex3CA8E5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExRBACSaveAddRoleEntry(string entryName, string roleId, string error)
		{
			return new LocalizedString("ExRBACSaveAddRoleEntry", "Ex5DE8F8", false, true, Strings.ResourceManager, new object[]
			{
				entryName,
				roleId,
				error
			});
		}

		public static LocalizedString ErrorPFDistributionNotSpecified
		{
			get
			{
				return new LocalizedString("ErrorPFDistributionNotSpecified", "Ex7D66C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantNotificationTestConfirmationPrompt(string organizationId)
		{
			return new LocalizedString("TenantNotificationTestConfirmationPrompt", "", false, false, Strings.ResourceManager, new object[]
			{
				organizationId
			});
		}

		public static LocalizedString VerboseResetPasswordOnNextLogon
		{
			get
			{
				return new LocalizedString("VerboseResetPasswordOnNextLogon", "Ex6F82EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAppPoolIdCannotBeEmpty
		{
			get
			{
				return new LocalizedString("ErrorAppPoolIdCannotBeEmpty", "ExAEFE25", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InformationSkippedOab
		{
			get
			{
				return new LocalizedString("InformationSkippedOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmMoveRpcRequestedSourceServer(string sourceServer, string targetServer)
		{
			return new LocalizedString("AmMoveRpcRequestedSourceServer", "Ex4149D6", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer,
				targetServer
			});
		}

		public static LocalizedString ErrorFailedToSetMemberPassword(string memberName, string message)
		{
			return new LocalizedString("ErrorFailedToSetMemberPassword", "ExC0F9C1", false, true, Strings.ResourceManager, new object[]
			{
				memberName,
				message
			});
		}

		public static LocalizedString NoRMSServersFoundException
		{
			get
			{
				return new LocalizedString("NoRMSServersFoundException", "Ex88EC75", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveCompletedRequest(string indexEntry)
		{
			return new LocalizedString("ConfirmationMessageRemoveCompletedRequest", "Ex882806", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		public static LocalizedString CasHealthOwaNoExternalUrl
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoExternalUrl", "Ex1E6E3C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RunCmdletOnUser(string proxyAddress)
		{
			return new LocalizedString("RunCmdletOnUser", "", false, false, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		public static LocalizedString ReplayLagStatusLabelPercentage
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelPercentage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotUpdateCertificateWhenFederationNotProvisioned
		{
			get
			{
				return new LocalizedString("ErrorCannotUpdateCertificateWhenFederationNotProvisioned", "Ex0552C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningMultiSiteSourceServers
		{
			get
			{
				return new LocalizedString("WarningMultiSiteSourceServers", "Ex7F3C89", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxSharePointUrl
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxSharePointUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoSmtpAddressForRecipientId(string recipId)
		{
			return new LocalizedString("NoSmtpAddressForRecipientId", "ExB76DC7", false, true, Strings.ResourceManager, new object[]
			{
				recipId
			});
		}

		public static LocalizedString ErrorLastPublicFolderDatabaseWithPreE12(string dbName)
		{
			return new LocalizedString("ErrorLastPublicFolderDatabaseWithPreE12", "ExB594DF", false, true, Strings.ResourceManager, new object[]
			{
				dbName
			});
		}

		public static LocalizedString AuthenticationMethodWindows
		{
			get
			{
				return new LocalizedString("AuthenticationMethodWindows", "Ex8E6C18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MountStatusMounting
		{
			get
			{
				return new LocalizedString("MountStatusMounting", "Ex2DEE5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotRemoveCompletedMoveRequest(string identity)
		{
			return new LocalizedString("CouldNotRemoveCompletedMoveRequest", "Ex733642", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupProgressInstallDefaultAcceptedDomain
		{
			get
			{
				return new LocalizedString("SetupProgressInstallDefaultAcceptedDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceServiceDescription
		{
			get
			{
				return new LocalizedString("ComplianceServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMailboxDelegateNotExits(string delegateUser, string principalUser)
		{
			return new LocalizedString("VerboseMailboxDelegateNotExits", "Ex072897", false, true, Strings.ResourceManager, new object[]
			{
				delegateUser,
				principalUser
			});
		}

		public static LocalizedString ConfirmationMessageRemoveTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTransportRule", "Ex486813", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorCouldNotAddCrossDomainGroupMember(string member, string group, string rootdomserver, string localdomserver, string error)
		{
			return new LocalizedString("ErrorCouldNotAddCrossDomainGroupMember", "Ex459EA3", false, true, Strings.ResourceManager, new object[]
			{
				member,
				group,
				rootdomserver,
				localdomserver,
				error
			});
		}

		public static LocalizedString ErrorFailedToValidateCertificate(string thumbprint)
		{
			return new LocalizedString("ErrorFailedToValidateCertificate", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorWAAGNotExists(string dom)
		{
			return new LocalizedString("ErrorWAAGNotExists", "Ex2F917F", false, true, Strings.ResourceManager, new object[]
			{
				dom
			});
		}

		public static LocalizedString UserFederatedDomainDoesNotMatchAccountNamespace(string fedDomain, string accountNamespace)
		{
			return new LocalizedString("UserFederatedDomainDoesNotMatchAccountNamespace", "", false, false, Strings.ResourceManager, new object[]
			{
				fedDomain,
				accountNamespace
			});
		}

		public static LocalizedString ErrorInvalidOperationOnContainer(string idContainer)
		{
			return new LocalizedString("ErrorInvalidOperationOnContainer", "Ex3DCF08", false, true, Strings.ResourceManager, new object[]
			{
				idContainer
			});
		}

		public static LocalizedString ContentIndexingExSearchNotFound
		{
			get
			{
				return new LocalizedString("ContentIndexingExSearchNotFound", "ExEB6CF6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaAuthFailDetails(string expectedAuthMode, string receivedAuthModes)
		{
			return new LocalizedString("CasHealthOwaAuthFailDetails", "ExED9D0D", false, true, Strings.ResourceManager, new object[]
			{
				expectedAuthMode,
				receivedAuthModes
			});
		}

		public static LocalizedString CasHealthSyncFolderItemsScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthSyncFolderItemsScenarioDescription", "ExFC047B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskServerWrongOsVersionException(string serverName)
		{
			return new LocalizedString("DagTaskServerWrongOsVersionException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ChangeServiceConfigFailure
		{
			get
			{
				return new LocalizedString("ChangeServiceConfigFailure", "Ex3A7D2F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorHydrationDisabled(string organization)
		{
			return new LocalizedString("ErrorHydrationDisabled", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString ErrorDisableMailuserWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorDisableMailuserWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseVerifyingRootObject(string root)
		{
			return new LocalizedString("VerboseVerifyingRootObject", "ExF1C7E2", false, true, Strings.ResourceManager, new object[]
			{
				root
			});
		}

		public static LocalizedString ErrorTooManyCertificates
		{
			get
			{
				return new LocalizedString("ErrorTooManyCertificates", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetFederationInformationTokenIssuerDoesntMatchAny(string externalDomain, string externalUris, string localUris)
		{
			return new LocalizedString("GetFederationInformationTokenIssuerDoesntMatchAny", "Ex1D2677", false, true, Strings.ResourceManager, new object[]
			{
				externalDomain,
				externalUris,
				localUris
			});
		}

		public static LocalizedString SetupProgressStoppingTransportSyncManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingTransportSyncManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetSenderFilterConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSenderFilterConfig", "ExB8B78D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProcessCreateDefaultSharingPolicy
		{
			get
			{
				return new LocalizedString("SetupProcessCreateDefaultSharingPolicy", "Ex45A72E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthDataValidationError(string additionalInformation)
		{
			return new LocalizedString("CasHealthDataValidationError", "Ex461646", false, true, Strings.ResourceManager, new object[]
			{
				additionalInformation
			});
		}

		public static LocalizedString ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario
		{
			get
			{
				return new LocalizedString("ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToDeletePublicFolderProxy(string id, string error)
		{
			return new LocalizedString("FailedToDeletePublicFolderProxy", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString CasHealthResult
		{
			get
			{
				return new LocalizedString("CasHealthResult", "ExC3BD0A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReportArchiveUpdated(string domainController)
		{
			return new LocalizedString("ReportArchiveUpdated", "Ex7EBBBB", false, true, Strings.ResourceManager, new object[]
			{
				domainController
			});
		}

		public static LocalizedString DlpPolicyNotSupportedCmdlet(string cmdlet)
		{
			return new LocalizedString("DlpPolicyNotSupportedCmdlet", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		public static LocalizedString ErrorSetPublicFolderMailRecipientGuidLongTermIdNotMatch(string identity)
		{
			return new LocalizedString("ErrorSetPublicFolderMailRecipientGuidLongTermIdNotMatch", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MtrtMessageSpamNonProvisionedDomain(string scl)
		{
			return new LocalizedString("MtrtMessageSpamNonProvisionedDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				scl
			});
		}

		public static LocalizedString DagTaskCnoNotOnline(string cnoName)
		{
			return new LocalizedString("DagTaskCnoNotOnline", "", false, false, Strings.ResourceManager, new object[]
			{
				cnoName
			});
		}

		public static LocalizedString ErrorSetScopeAddPermission(string id, string assignmentId)
		{
			return new LocalizedString("ErrorSetScopeAddPermission", "ExDFACF4", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		public static LocalizedString DRMNotAllowedForConsumerDialPlan
		{
			get
			{
				return new LocalizedString("DRMNotAllowedForConsumerDialPlan", "ExC7F2A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PrintPatchOrderInfo(string patchpath, int order, uint status)
		{
			return new LocalizedString("PrintPatchOrderInfo", "Ex706FAF", false, true, Strings.ResourceManager, new object[]
			{
				patchpath,
				order,
				status
			});
		}

		public static LocalizedString ConfirmationMessageSetSystemMessage(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetSystemMessage", "ExC6171A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorThrottlingPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorThrottlingPolicyNotUnique", "Ex40749E", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString DisableWindowsLiveIdSpecifiedWithoutLiveID(string mailbox)
		{
			return new LocalizedString("DisableWindowsLiveIdSpecifiedWithoutLiveID", "ExE3E05C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString FailedDocumentsNoResultsServer(string server)
		{
			return new LocalizedString("FailedDocumentsNoResultsServer", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorMoreThanOneMailboxPlanWithSKUCapability(string skuCapability)
		{
			return new LocalizedString("ErrorMoreThanOneMailboxPlanWithSKUCapability", "Ex2633C2", false, true, Strings.ResourceManager, new object[]
			{
				skuCapability
			});
		}

		public static LocalizedString SupportedToolsDataMultipleToolEntries(string toolName)
		{
			return new LocalizedString("SupportedToolsDataMultipleToolEntries", "Ex2D68FD", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		public static LocalizedString CafePrereqCheck
		{
			get
			{
				return new LocalizedString("CafePrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseSeedStatusLabelPercentage
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelPercentage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorIncrementalSyncIntervalRange(int minDays, int maxDays)
		{
			return new LocalizedString("ErrorIncrementalSyncIntervalRange", "", false, false, Strings.ResourceManager, new object[]
			{
				minDays,
				maxDays
			});
		}

		public static LocalizedString TopologyServiceNoServersReturned(string partitionFqdn)
		{
			return new LocalizedString("TopologyServiceNoServersReturned", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionFqdn
			});
		}

		public static LocalizedString AutoTaggingDisabled(string mailbox)
		{
			return new LocalizedString("AutoTaggingDisabled", "ExECA0B3", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString CasHealthCreateItemScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthCreateItemScenarioDescription", "Ex31B6EF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorElcPolicyNotFound(string name, string globalCatlog)
		{
			return new LocalizedString("ErrorElcPolicyNotFound", "Ex68D9DB", false, true, Strings.ResourceManager, new object[]
			{
				name,
				globalCatlog
			});
		}

		public static LocalizedString ConfirmationMessageSetMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailbox", "ExE2B11E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MobileDeviceLogPathInvalid(string path)
		{
			return new LocalizedString("MobileDeviceLogPathInvalid", "ExA6420F", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString CasHealthWebAppTestStepStarted(string stepName)
		{
			return new LocalizedString("CasHealthWebAppTestStepStarted", "", false, false, Strings.ResourceManager, new object[]
			{
				stepName
			});
		}

		public static LocalizedString SetupProgressInstallingDefaultTransportAgents
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingDefaultTransportAgents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagFswNotInitializedException(string ex)
		{
			return new LocalizedString("DagFswNotInitializedException", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString ErrorExpansionServerMustBeTiOrBhServer
		{
			get
			{
				return new LocalizedString("ErrorExpansionServerMustBeTiOrBhServer", "ExF7C066", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmMoveRpcRequestedAnyServerSourceServer(string sourceServer)
		{
			return new LocalizedString("AmMoveRpcRequestedAnyServerSourceServer", "ExCACB6E", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer
			});
		}

		public static LocalizedString UsingProbeIdentity(string probeIdentity)
		{
			return new LocalizedString("UsingProbeIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity
			});
		}

		public static LocalizedString ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount
		{
			get
			{
				return new LocalizedString("ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewThrottlingPolicy(string Name, string scope)
		{
			return new LocalizedString("ConfirmationMessageNewThrottlingPolicy", "Ex1EAC5A", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				scope
			});
		}

		public static LocalizedString MailboxParameterMissingException
		{
			get
			{
				return new LocalizedString("MailboxParameterMissingException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PromptToOverwriteExistingRuleCollection
		{
			get
			{
				return new LocalizedString("PromptToOverwriteExistingRuleCollection", "Ex6D0A34", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetFederationTrust5(string Identity, string appUri)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust5", "Ex798255", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				appUri
			});
		}

		public static LocalizedString ClassificationRuleCollectionInvalidCompressedData(string name)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidCompressedData", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString AuthenticationMethodLiveIdFba
		{
			get
			{
				return new LocalizedString("AuthenticationMethodLiveIdFba", "Ex0FD6C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OutlookProbeIdentityNotFound(string probeIdentity)
		{
			return new LocalizedString("OutlookProbeIdentityNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity
			});
		}

		public static LocalizedString ErrorDefaultLocaleClassificationDoesNotExist(string msgcl)
		{
			return new LocalizedString("ErrorDefaultLocaleClassificationDoesNotExist", "Ex7E3C50", false, true, Strings.ResourceManager, new object[]
			{
				msgcl
			});
		}

		public static LocalizedString ConfirmationMessageDisableOutlookProtectionRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableOutlookProtectionRule", "ExF40E4A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorRemoveMailboxPlanWithAssociatedRecipents(string id)
		{
			return new LocalizedString("ErrorRemoveMailboxPlanWithAssociatedRecipents", "ExE61E1D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorIncorrectDefaultTag
		{
			get
			{
				return new LocalizedString("ErrorIncorrectDefaultTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetFrontendTransportServer(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetFrontendTransportServer", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString GetQueueDigestQuotaExceeded(string server)
		{
			return new LocalizedString("GetQueueDigestQuotaExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString NeedManuallyRemoveEOA(string message)
		{
			return new LocalizedString("NeedManuallyRemoveEOA", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox
		{
			get
			{
				return new LocalizedString("ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorParametersThatMustBeDefinedIfNeitherTemplateNorTemplateDataAreDefined(string parameterList)
		{
			return new LocalizedString("ErrorParametersThatMustBeDefinedIfNeitherTemplateNorTemplateDataAreDefined", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterList
			});
		}

		public static LocalizedString MigrationStartAfterIncorrectState(string state)
		{
			return new LocalizedString("MigrationStartAfterIncorrectState", "", false, false, Strings.ResourceManager, new object[]
			{
				state
			});
		}

		public static LocalizedString RemoveComplianceSearchConfirmation(string identity)
		{
			return new LocalizedString("RemoveComplianceSearchConfirmation", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MSARPSServiceDisplayName
		{
			get
			{
				return new LocalizedString("MSARPSServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederEndDbSeedRpcBegin(string taskName, string targetMachine, string dbName)
		{
			return new LocalizedString("SeederEndDbSeedRpcBegin", "ExB3BD82", false, true, Strings.ResourceManager, new object[]
			{
				taskName,
				targetMachine,
				dbName
			});
		}

		public static LocalizedString LocalFederationConfigurationError(string errorCode, string errorSubcode)
		{
			return new LocalizedString("LocalFederationConfigurationError", "", false, false, Strings.ResourceManager, new object[]
			{
				errorCode,
				errorSubcode
			});
		}

		public static LocalizedString ExternalScopeInvalidInDc(string scope, string stringInOrganization, string notInOrganization)
		{
			return new LocalizedString("ExternalScopeInvalidInDc", "", false, false, Strings.ResourceManager, new object[]
			{
				scope,
				stringInOrganization,
				notInOrganization
			});
		}

		public static LocalizedString ErrorApproversNotSet(string recipient)
		{
			return new LocalizedString("ErrorApproversNotSet", "Ex89C991", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString TestProtocolConnectivity(string protocol)
		{
			return new LocalizedString("TestProtocolConnectivity", "Ex781BB0", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		public static LocalizedString FailedToStopClusSvc(string serverName, string state)
		{
			return new LocalizedString("FailedToStopClusSvc", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				state
			});
		}

		public static LocalizedString SendConnectorWrongSourceServerRg(string serverName)
		{
			return new LocalizedString("SendConnectorWrongSourceServerRg", "Ex99DE11", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString NotifySenderActionIsBeingOverridded
		{
			get
			{
				return new LocalizedString("NotifySenderActionIsBeingOverridded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MesoContainerNotFoundException(string domain)
		{
			return new LocalizedString("MesoContainerNotFoundException", "ExB09228", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString VerbosePropertyProblem(string propProblem)
		{
			return new LocalizedString("VerbosePropertyProblem", "", false, false, Strings.ResourceManager, new object[]
			{
				propProblem
			});
		}

		public static LocalizedString VerboseValidateScopeAgainstExistingAssignments(string id)
		{
			return new LocalizedString("VerboseValidateScopeAgainstExistingAssignments", "Ex9BD28B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorServicePlanInconsistent2(string servicePlan, string details)
		{
			return new LocalizedString("ErrorServicePlanInconsistent2", "ExD102F9", false, true, Strings.ResourceManager, new object[]
			{
				servicePlan,
				details
			});
		}

		public static LocalizedString RemovedDeviceFilter(string name)
		{
			return new LocalizedString("RemovedDeviceFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorOrganizationalUnitNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorOrganizationalUnitNotFound", "Ex5305F7", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString GetMsoDiagnosticsLastCommittedCookieBeingUsed(DateTime? timestamp)
		{
			return new LocalizedString("GetMsoDiagnosticsLastCommittedCookieBeingUsed", "", false, false, Strings.ResourceManager, new object[]
			{
				timestamp
			});
		}

		public static LocalizedString EitherSenderOrRmsOnlineParametersMustBeSpecified
		{
			get
			{
				return new LocalizedString("EitherSenderOrRmsOnlineParametersMustBeSpecified", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionServiceDoesNotExist(string serviceName)
		{
			return new LocalizedString("ExceptionServiceDoesNotExist", "ExCD4DCA", false, true, Strings.ResourceManager, new object[]
			{
				serviceName
			});
		}

		public static LocalizedString ErrorInvalidSortProperty(string propertyName)
		{
			return new LocalizedString("ErrorInvalidSortProperty", "Ex7BDD19", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString ErrorDagNotUnique(string identity)
		{
			return new LocalizedString("ErrorDagNotUnique", "ExD709BC", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString StoppingMomService
		{
			get
			{
				return new LocalizedString("StoppingMomService", "Ex2809F2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString HighPriorityChecksWarning
		{
			get
			{
				return new LocalizedString("HighPriorityChecksWarning", "Ex96BE44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecoveryMailboxDatabaseNotMonitored(string databaseId)
		{
			return new LocalizedString("RecoveryMailboxDatabaseNotMonitored", "Ex6AF901", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		public static LocalizedString SetupProgressStartingInformationStoreService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingInformationStoreService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OldRmsOnlineImportAfterRmsOnlineForwardSync
		{
			get
			{
				return new LocalizedString("OldRmsOnlineImportAfterRmsOnlineForwardSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorConnectorNotTransportRuleScoped(string connectorName)
		{
			return new LocalizedString("ErrorConnectorNotTransportRuleScoped", "", false, false, Strings.ResourceManager, new object[]
			{
				connectorName
			});
		}

		public static LocalizedString ComplianceSearchIsInProgress(string name)
		{
			return new LocalizedString("ComplianceSearchIsInProgress", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRemoveNewerObject(string identity, string version)
		{
			return new LocalizedString("ErrorRemoveNewerObject", "Ex2EE88A", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				version
			});
		}

		public static LocalizedString InvalidReportEndDate
		{
			get
			{
				return new LocalizedString("InvalidReportEndDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorErrorModifyingNewerVersion(string version)
		{
			return new LocalizedString("InterceptorErrorModifyingNewerVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		public static LocalizedString DisasterRecoveryMonitoringRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryMonitoringRoleDescription", "Ex292379", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToRetrieveMailboxDatabase(string mailboxDatabase)
		{
			return new LocalizedString("ErrorFailedToRetrieveMailboxDatabase", "Ex84928A", false, true, Strings.ResourceManager, new object[]
			{
				mailboxDatabase
			});
		}

		public static LocalizedString WarningForStillSuspended(string db, string serverName)
		{
			return new LocalizedString("WarningForStillSuspended", "Ex6F36D6", false, true, Strings.ResourceManager, new object[]
			{
				db,
				serverName
			});
		}

		public static LocalizedString AllWebServicesTransactionsSucceeded
		{
			get
			{
				return new LocalizedString("AllWebServicesTransactionsSucceeded", "Ex1905A5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArchiveConnectivityResultUndefined
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultUndefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ValueTooLargeException(string key, int value)
		{
			return new LocalizedString("ValueTooLargeException", "Ex4C3949", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		public static LocalizedString Error_MissingSenderEmail
		{
			get
			{
				return new LocalizedString("Error_MissingSenderEmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EdgeServerNotSubscribed
		{
			get
			{
				return new LocalizedString("EdgeServerNotSubscribed", "Ex356F34", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DelegateRoleTypeOrgAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeOrgAdmin", "Ex70BCD7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCheckingOrganizationContext
		{
			get
			{
				return new LocalizedString("InfoCheckingOrganizationContext", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseValidatingAlternateServiceAccountCredential(string qualifiedUserName, DateTime whenAdded)
		{
			return new LocalizedString("VerboseValidatingAlternateServiceAccountCredential", "ExD2675D", false, true, Strings.ResourceManager, new object[]
			{
				qualifiedUserName,
				whenAdded
			});
		}

		public static LocalizedString CasHealthPowerShellServiceNotRunning(string vDir, string service)
		{
			return new LocalizedString("CasHealthPowerShellServiceNotRunning", "Ex2045C3", false, true, Strings.ResourceManager, new object[]
			{
				vDir,
				service
			});
		}

		public static LocalizedString VerboseFixingRecipient(string id)
		{
			return new LocalizedString("VerboseFixingRecipient", "Ex1E81D0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString DagMgmtServiceDescription
		{
			get
			{
				return new LocalizedString("DagMgmtServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningRedirectToRecipientsNotSet
		{
			get
			{
				return new LocalizedString("WarningRedirectToRecipientsNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IndexEntryIsMissingData
		{
			get
			{
				return new LocalizedString("IndexEntryIsMissingData", "Ex927946", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateApprovalApplicationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateApprovalApplicationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SearchSourceTargetTheSame(string sourceDisplayName)
		{
			return new LocalizedString("SearchSourceTargetTheSame", "", false, false, Strings.ResourceManager, new object[]
			{
				sourceDisplayName
			});
		}

		public static LocalizedString ErrorInvalidModerator(string moderator)
		{
			return new LocalizedString("ErrorInvalidModerator", "Ex6633BB", false, true, Strings.ResourceManager, new object[]
			{
				moderator
			});
		}

		public static LocalizedString DiscoveryMailboxQuotaLimitExceeded(string quotaName, string limit)
		{
			return new LocalizedString("DiscoveryMailboxQuotaLimitExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				quotaName,
				limit
			});
		}

		public static LocalizedString PublicFolderMailboxNotFound
		{
			get
			{
				return new LocalizedString("PublicFolderMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopImapNoMessagesToDelete
		{
			get
			{
				return new LocalizedString("PopImapNoMessagesToDelete", "Ex46BCC2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetManagementScope(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetManagementScope", "ExE93148", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSetUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUser", "Ex8646BB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString NoJournalingToPublicFolder
		{
			get
			{
				return new LocalizedString("NoJournalingToPublicFolder", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetComplianceSearchConfirmation(string identity)
		{
			return new LocalizedString("SetComplianceSearchConfirmation", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ProgressStatusRemovingAddressListTree
		{
			get
			{
				return new LocalizedString("ProgressStatusRemovingAddressListTree", "Ex313DA6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCustomAttribute4
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute4", "ExA1FF1D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRestartDefaultWebSite
		{
			get
			{
				return new LocalizedString("VerboseRestartDefaultWebSite", "ExF076EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerListMustBeValid(string m)
		{
			return new LocalizedString("ServerListMustBeValid", "Ex74F1B5", false, true, Strings.ResourceManager, new object[]
			{
				m
			});
		}

		public static LocalizedString ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration
		{
			get
			{
				return new LocalizedString("ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToGetLicensingUri
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetLicensingUri", "Ex9BBBEF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MicrosoftExchangeRecipientNotFoundOnGatewayServerRole
		{
			get
			{
				return new LocalizedString("MicrosoftExchangeRecipientNotFoundOnGatewayServerRole", "Ex654BCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressContactCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressContactCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetMailPublicFolderEntryIdNotExist(string entryId)
		{
			return new LocalizedString("ErrorSetMailPublicFolderEntryIdNotExist", "", false, false, Strings.ResourceManager, new object[]
			{
				entryId
			});
		}

		public static LocalizedString InvalidIdentityException(string smtpAddress)
		{
			return new LocalizedString("InvalidIdentityException", "ExB7CDD6", false, true, Strings.ResourceManager, new object[]
			{
				smtpAddress
			});
		}

		public static LocalizedString ConfirmationMessageSetPublicFolderIdentity(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetPublicFolderIdentity", "Ex811855", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString RecipientTypeNotValid(string user)
		{
			return new LocalizedString("RecipientTypeNotValid", "Ex92B0D4", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString WarningChangingUserSuppliedName(string givenIn, string newValue)
		{
			return new LocalizedString("WarningChangingUserSuppliedName", "Ex1A6023", false, true, Strings.ResourceManager, new object[]
			{
				givenIn,
				newValue
			});
		}

		public static LocalizedString ErrorMovingOabAlreadyThere(string oab, string server)
		{
			return new LocalizedString("ErrorMovingOabAlreadyThere", "ExD82A47", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				server
			});
		}

		public static LocalizedString ComplianceBindingInvalidRecipientType(string name)
		{
			return new LocalizedString("ComplianceBindingInvalidRecipientType", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorInstallationModeNotSupported
		{
			get
			{
				return new LocalizedString("ErrorInstallationModeNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoSuchRequestInSpecifiedIndex
		{
			get
			{
				return new LocalizedString("NoSuchRequestInSpecifiedIndex", "Ex096706", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDeprecatingRoleBecauseNoEntriesLeft(string id)
		{
			return new LocalizedString("VerboseDeprecatingRoleBecauseNoEntriesLeft", "Ex63D401", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString MigrationAutoStopAlreadySet
		{
			get
			{
				return new LocalizedString("MigrationAutoStopAlreadySet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UseDagDefaultOnOffOff
		{
			get
			{
				return new LocalizedString("UseDagDefaultOnOffOff", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerUnavailableException
		{
			get
			{
				return new LocalizedString("ServerUnavailableException", "Ex758F1C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageStartProvisioningRequest(string fileName)
		{
			return new LocalizedString("ConfirmationMessageStartProvisioningRequest", "Ex0F54D3", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		public static LocalizedString ClientAccessOwaComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessOwaComponentDescription", "ExB1124F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateUceContentFilterObject
		{
			get
			{
				return new LocalizedString("SetupProgressCreateUceContentFilterObject", "Ex40F772", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRPCConnectionCreated(string server)
		{
			return new LocalizedString("VerboseRPCConnectionCreated", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString VerboseAllPropertiesAreRead(string property)
		{
			return new LocalizedString("VerboseAllPropertiesAreRead", "", false, false, Strings.ResourceManager, new object[]
			{
				property
			});
		}

		public static LocalizedString ConversationsMailboxDisabled
		{
			get
			{
				return new LocalizedString("ConversationsMailboxDisabled", "ExCB26A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LiveIdAuthenticationFailed(string userType, string error)
		{
			return new LocalizedString("LiveIdAuthenticationFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				userType,
				error
			});
		}

		public static LocalizedString NoDomainsDefinedOnOrgRelationship(string orgRelationship)
		{
			return new LocalizedString("NoDomainsDefinedOnOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				orgRelationship
			});
		}

		public static LocalizedString SetupComponentUpdateResourcePropertySchema
		{
			get
			{
				return new LocalizedString("SetupComponentUpdateResourcePropertySchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransitionStateUnknown
		{
			get
			{
				return new LocalizedString("TransitionStateUnknown", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasActiveSyncServiceProblemMessage(int impactedUserCount)
		{
			return new LocalizedString("CasActiveSyncServiceProblemMessage", "Ex6BA9BC", false, true, Strings.ResourceManager, new object[]
			{
				impactedUserCount
			});
		}

		public static LocalizedString ErrorTooManyJournalRules(int max)
		{
			return new LocalizedString("ErrorTooManyJournalRules", "", false, false, Strings.ResourceManager, new object[]
			{
				max
			});
		}

		public static LocalizedString ErrorInvalidFilterForAddressBook(string id, string input, string expected)
		{
			return new LocalizedString("ErrorInvalidFilterForAddressBook", "Ex0EB6C0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				input,
				expected
			});
		}

		public static LocalizedString FileDataShouldNotBeSet
		{
			get
			{
				return new LocalizedString("FileDataShouldNotBeSet", "Ex46020F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ParameterErrorForDefaultUsage
		{
			get
			{
				return new LocalizedString("ParameterErrorForDefaultUsage", "Ex9461E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingDagMgmtService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingDagMgmtService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FinishingFileCopy
		{
			get
			{
				return new LocalizedString("FinishingFileCopy", "ExF15C3C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtReportSeverityLevelHigh
		{
			get
			{
				return new LocalizedString("MtrtReportSeverityLevelHigh", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLiveIdAlreadyExists(string windowsLiveId)
		{
			return new LocalizedString("ErrorLiveIdAlreadyExists", "Ex100A6B", false, true, Strings.ResourceManager, new object[]
			{
				windowsLiveId
			});
		}

		public static LocalizedString WillSaveResourcePropertySchemaValue(string fileName)
		{
			return new LocalizedString("WillSaveResourcePropertySchemaValue", "ExC218C0", false, true, Strings.ResourceManager, new object[]
			{
				fileName
			});
		}

		public static LocalizedString EnableConversationsTask
		{
			get
			{
				return new LocalizedString("EnableConversationsTask", "Ex88EDD1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoDeviceFilters
		{
			get
			{
				return new LocalizedString("NoDeviceFilters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SiteRedirectionTemplateVerbose(string redirectionTemplate)
		{
			return new LocalizedString("SiteRedirectionTemplateVerbose", "Ex48F68C", false, true, Strings.ResourceManager, new object[]
			{
				redirectionTemplate
			});
		}

		public static LocalizedString ConfirmationMessageSearchMessageTracking
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSearchMessageTracking", "ExAB9360", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteArchiveNoStats(string user)
		{
			return new LocalizedString("ErrorRemoteArchiveNoStats", "Ex791990", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ConfirmationMessageTestSystemHealth
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestSystemHealth", "Ex9B7370", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtMessageMalware(string name, string file)
		{
			return new LocalizedString("MtrtMessageMalware", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				file
			});
		}

		public static LocalizedString CopyStatusFailed
		{
			get
			{
				return new LocalizedString("CopyStatusFailed", "ExDE9EB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSettingPreferredServer(string prop, string server)
		{
			return new LocalizedString("VerboseSettingPreferredServer", "ExCBDFD1", false, true, Strings.ResourceManager, new object[]
			{
				prop,
				server
			});
		}

		public static LocalizedString ConfirmationMessageTestMAPIConnectivityDatabase(string Database)
		{
			return new LocalizedString("ConfirmationMessageTestMAPIConnectivityDatabase", "Ex9462CA", false, true, Strings.ResourceManager, new object[]
			{
				Database
			});
		}

		public static LocalizedString ConfigurationSynchronized(string objectType, string serverList)
		{
			return new LocalizedString("ConfigurationSynchronized", "Ex1248F5", false, true, Strings.ResourceManager, new object[]
			{
				objectType,
				serverList
			});
		}

		public static LocalizedString BadwordsLengthTooLongId(string prefix, int maxLength)
		{
			return new LocalizedString("BadwordsLengthTooLongId", "Ex594C9B", false, true, Strings.ResourceManager, new object[]
			{
				prefix,
				maxLength
			});
		}

		public static LocalizedString DlpPolicyStateDisplayName
		{
			get
			{
				return new LocalizedString("DlpPolicyStateDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthTestUserNotAccessible(string userName)
		{
			return new LocalizedString("CasHealthTestUserNotAccessible", "Ex55EFE3", false, true, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		public static LocalizedString MailboxSearchDisabled
		{
			get
			{
				return new LocalizedString("MailboxSearchDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IPv6AddressesAreNotAllowedInInternalServerIPAddressesId(string ip)
		{
			return new LocalizedString("IPv6AddressesAreNotAllowedInInternalServerIPAddressesId", "ExD6211F", false, true, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		public static LocalizedString DagTaskSleepAfterNodeRemoval(int secSleepAfterClusterFormation, string dagName, string serverName)
		{
			return new LocalizedString("DagTaskSleepAfterNodeRemoval", "", false, false, Strings.ResourceManager, new object[]
			{
				secSleepAfterClusterFormation,
				dagName,
				serverName
			});
		}

		public static LocalizedString TestTeamMailboxSharepointCallUnderOauthSuccess(string url)
		{
			return new LocalizedString("TestTeamMailboxSharepointCallUnderOauthSuccess", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ErrorRemoveNonLinkededUser(string idRecipient)
		{
			return new LocalizedString("ErrorRemoveNonLinkededUser", "Ex7F7A1B", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		public static LocalizedString ConfirmationMessageDisableConversations(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableConversations", "Ex6A666D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageSetOrganizationRelationship(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOrganizationRelationship", "ExDC3EFA", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ComponentSection(string componentName)
		{
			return new LocalizedString("ComponentSection", "Ex63E6D2", false, true, Strings.ResourceManager, new object[]
			{
				componentName
			});
		}

		public static LocalizedString ExceptionRunProcessExitIgnored(int errorCode)
		{
			return new LocalizedString("ExceptionRunProcessExitIgnored", "Ex40F0EB", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		public static LocalizedString ErrorManagedByMustBeSpecifiedWIthOrganization
		{
			get
			{
				return new LocalizedString("ErrorManagedByMustBeSpecifiedWIthOrganization", "ExC6EA09", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthIncorrectHttpResponseCode(string domain, string userName, string errorString)
		{
			return new LocalizedString("CasHealthIncorrectHttpResponseCode", "ExAF79C5", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName,
				errorString
			});
		}

		public static LocalizedString LiveIdAuthenticationResultSuccess
		{
			get
			{
				return new LocalizedString("LiveIdAuthenticationResultSuccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FinishedComponentTasks
		{
			get
			{
				return new LocalizedString("FinishedComponentTasks", "Ex2E47A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MountStatusDismounting
		{
			get
			{
				return new LocalizedString("MountStatusDismounting", "Ex2349EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AuditLogSearchInvalidSearchType(string type)
		{
			return new LocalizedString("AuditLogSearchInvalidSearchType", "", false, false, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		public static LocalizedString UninstallPop3BeServiceTask
		{
			get
			{
				return new LocalizedString("UninstallPop3BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisasterRecoveryFrontendTransportRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryFrontendTransportRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString messagePassiveCopyUnexpectedSuccessException(string database)
		{
			return new LocalizedString("messagePassiveCopyUnexpectedSuccessException", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString RegistryAccessSecurityExceptionDelete(string key)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionDelete", "ExA350A1", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString TeamMailboxSharePointUrlMissing
		{
			get
			{
				return new LocalizedString("TeamMailboxSharePointUrlMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestEdgeSyncEhf
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestEdgeSyncEhf", "Ex38A866", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAddressBookMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorAddressBookMailboxPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString MissingMandatoryFieldException(string fieldName)
		{
			return new LocalizedString("MissingMandatoryFieldException", "Ex7E3680", false, true, Strings.ResourceManager, new object[]
			{
				fieldName
			});
		}

		public static LocalizedString WarningEnableEnabledRoleAssignment(string id)
		{
			return new LocalizedString("WarningEnableEnabledRoleAssignment", "Ex33572C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseCheckDatabaseStatus(string id)
		{
			return new LocalizedString("VerboseCheckDatabaseStatus", "Ex85C00A", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString NoLogsFound(string user, string protocol)
		{
			return new LocalizedString("NoLogsFound", "ExBAB676", false, true, Strings.ResourceManager, new object[]
			{
				user,
				protocol
			});
		}

		public static LocalizedString CutoverMigrationNotAllowed(string tenantName)
		{
			return new LocalizedString("CutoverMigrationNotAllowed", "Ex366BF6", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString PhotoMustNotBeBlank
		{
			get
			{
				return new LocalizedString("PhotoMustNotBeBlank", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SupervisionListEntryAdded(string entry, string recipientType, string tag)
		{
			return new LocalizedString("SupervisionListEntryAdded", "Ex5B784D", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				recipientType,
				tag
			});
		}

		public static LocalizedString PopExternalServerSettings
		{
			get
			{
				return new LocalizedString("PopExternalServerSettings", "ExDA5AE3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMaxMembershipLimit(string memberName)
		{
			return new LocalizedString("ErrorMaxMembershipLimit", "ExA8CC8A", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ToplogyserviceTopologyVersion(string partitionFqdn, int version)
		{
			return new LocalizedString("ToplogyserviceTopologyVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionFqdn,
				version
			});
		}

		public static LocalizedString TSResolutionFailed(string server)
		{
			return new LocalizedString("TSResolutionFailed", "Ex662E29", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxWithRemoteArchive(string Name, string ArchiveDomain)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxWithRemoteArchive", "ExFC1758", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ArchiveDomain
			});
		}

		public static LocalizedString DkmProvisioningException(string containerName, Exception e)
		{
			return new LocalizedString("DkmProvisioningException", "", false, false, Strings.ResourceManager, new object[]
			{
				containerName,
				e
			});
		}

		public static LocalizedString MigrationSkipStepNotSupported(string step)
		{
			return new LocalizedString("MigrationSkipStepNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				step
			});
		}

		public static LocalizedString ConfirmationMessageNewRemoteDomain(string Name, string DomainName)
		{
			return new LocalizedString("ConfirmationMessageNewRemoteDomain", "Ex82837E", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainName
			});
		}

		public static LocalizedString ConfirmationMessageNewIntraOrganizationConnector(string Name, string Domain)
		{
			return new LocalizedString("ConfirmationMessageNewIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				Domain
			});
		}

		public static LocalizedString ConfirmationRemoveAllSupervisionListEntries
		{
			get
			{
				return new LocalizedString("ConfirmationRemoveAllSupervisionListEntries", "Ex0924FD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchGetCatalogStatusError(string mdb)
		{
			return new LocalizedString("TestSearchGetCatalogStatusError", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString InvalidReportingPeriod
		{
			get
			{
				return new LocalizedString("InvalidReportingPeriod", "ExAEF1C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDatabaseHasLocalReplicas(string database)
		{
			return new LocalizedString("ErrorDatabaseHasLocalReplicas", "ExF128F0", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ConfirmationMessageNewCountryList(string name)
		{
			return new LocalizedString("ConfirmationMessageNewCountryList", "Ex397880", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString FfoWebServicePermissionsComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServicePermissionsComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RepairUrgencyNormal
		{
			get
			{
				return new LocalizedString("RepairUrgencyNormal", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseWillStartOrganizationUpgrade(string org, int oldVersion, int newVersion)
		{
			return new LocalizedString("VerboseWillStartOrganizationUpgrade", "ExA5F883", false, true, Strings.ResourceManager, new object[]
			{
				org,
				oldVersion,
				newVersion
			});
		}

		public static LocalizedString ErrorDefaultMalwareConfigCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultMalwareConfigCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxRemoveWhenActive(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxRemoveWhenActive", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		public static LocalizedString ErrorGetServerNameFromMailbox(string mailbox)
		{
			return new LocalizedString("ErrorGetServerNameFromMailbox", "Ex93433E", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString InvalidAggregateBy
		{
			get
			{
				return new LocalizedString("InvalidAggregateBy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageDismountDatabase(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDismountDatabase", "Ex0FCCFC", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressCreateRBACRoleAssignmentsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRoleAssignmentsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutoProvisionFailedException
		{
			get
			{
				return new LocalizedString("AutoProvisionFailedException", "Ex36BD44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedToSpecifyServerObject
		{
			get
			{
				return new LocalizedString("NeedToSpecifyServerObject", "Ex65B966", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InformationSqlConnection(string connectionString)
		{
			return new LocalizedString("InformationSqlConnection", "", false, false, Strings.ResourceManager, new object[]
			{
				connectionString
			});
		}

		public static LocalizedString HybridMailflowNotYetSet
		{
			get
			{
				return new LocalizedString("HybridMailflowNotYetSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxFolderNotFound(string id)
		{
			return new LocalizedString("ErrorMailboxFolderNotFound", "Ex41304D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString DegubEndConnectingToDomainServices
		{
			get
			{
				return new LocalizedString("DegubEndConnectingToDomainServices", "Ex052BE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmationMessageNewActiveSyncMailboxDefaultPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewActiveSyncMailboxDefaultPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString CallingGetOrganizationRelationshipSettings
		{
			get
			{
				return new LocalizedString("CallingGetOrganizationRelationshipSettings", "Ex34FF42", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ParsingFederationMetadata(string metadataXml)
		{
			return new LocalizedString("ParsingFederationMetadata", "Ex872A4B", false, true, Strings.ResourceManager, new object[]
			{
				metadataXml
			});
		}

		public static LocalizedString DagTaskValidatingParameters
		{
			get
			{
				return new LocalizedString("DagTaskValidatingParameters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewRuleSyncAcrossDifferentVersionsNeeded
		{
			get
			{
				return new LocalizedString("NewRuleSyncAcrossDifferentVersionsNeeded", "Ex97F98D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopImapDeleteOldMsgs
		{
			get
			{
				return new LocalizedString("PopImapDeleteOldMsgs", "Ex9876AB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedPathNotFoundException(string metabasePath)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedPathNotFoundException", "Ex9373A5", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath
			});
		}

		public static LocalizedString ComAdminComponentInstallFailedException(string component)
		{
			return new LocalizedString("ComAdminComponentInstallFailedException", "ExB2F4B4", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString ReloadingRequest
		{
			get
			{
				return new LocalizedString("ReloadingRequest", "ExBF44B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionCannotGetServiceHandle(string servicename, Exception e)
		{
			return new LocalizedString("ExceptionCannotGetServiceHandle", "Ex56D287", false, true, Strings.ResourceManager, new object[]
			{
				servicename,
				e
			});
		}

		public static LocalizedString ErrorRuleXmlTooBig(int currentSize, long maxSize)
		{
			return new LocalizedString("ErrorRuleXmlTooBig", "Ex6421F5", false, true, Strings.ResourceManager, new object[]
			{
				currentSize,
				maxSize
			});
		}

		public static LocalizedString RepairUrgencyCritical
		{
			get
			{
				return new LocalizedString("RepairUrgencyCritical", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMobileSyncVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileSyncVirtualDirectory", "Ex9CB8D8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UnpackingFiles
		{
			get
			{
				return new LocalizedString("UnpackingFiles", "Ex6C222C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyDirectoriesException(string fromFolder, string toFolder, string error)
		{
			return new LocalizedString("CopyDirectoriesException", "Ex368F33", false, true, Strings.ResourceManager, new object[]
			{
				fromFolder,
				toFolder,
				error
			});
		}

		public static LocalizedString CentralAdminServiceDisplayName
		{
			get
			{
				return new LocalizedString("CentralAdminServiceDisplayName", "Ex299D6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOrganizationNotFound(object organizationId)
		{
			return new LocalizedString("ErrorOrganizationNotFound", "ExC15948", false, true, Strings.ResourceManager, new object[]
			{
				organizationId
			});
		}

		public static LocalizedString ErrorSpecifiedPropertyOfRecoveryMailboxDatabaseCannotChange(string propertyName)
		{
			return new LocalizedString("ErrorSpecifiedPropertyOfRecoveryMailboxDatabaseCannotChange", "Ex0A4692", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString CasHealthCouldNotLogUserDataCenter(string testDomain, string scriptName, string errorString)
		{
			return new LocalizedString("CasHealthCouldNotLogUserDataCenter", "ExFB8F7C", false, true, Strings.ResourceManager, new object[]
			{
				testDomain,
				scriptName,
				errorString
			});
		}

		public static LocalizedString WarnRpcHttpNegotiateCoexistence
		{
			get
			{
				return new LocalizedString("WarnRpcHttpNegotiateCoexistence", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetOabVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOabVirtualDirectory", "Ex82932E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorObjectNotUnique(string name)
		{
			return new LocalizedString("ErrorObjectNotUnique", "Ex0D1AA8", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageAddIPAllowListEntryIPRange(string IPRange)
		{
			return new LocalizedString("ConfirmationMessageAddIPAllowListEntryIPRange", "ExDD2F87", false, true, Strings.ResourceManager, new object[]
			{
				IPRange
			});
		}

		public static LocalizedString ConfirmationMessageNewJournalrule(string Name, string JournalEmailAddress)
		{
			return new LocalizedString("ConfirmationMessageNewJournalrule", "ExD4C80B", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				JournalEmailAddress
			});
		}

		public static LocalizedString DomainIgnoredBecauseUnableToDiscover(string domain, string reason)
		{
			return new LocalizedString("DomainIgnoredBecauseUnableToDiscover", "ExAEF2FD", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				reason
			});
		}

		public static LocalizedString SetupProgressCreatingAdamInstance
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingAdamInstance", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateRequestMissingGenerateRequest(string server)
		{
			return new LocalizedString("CertificateRequestMissingGenerateRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ActiveSyncMetabaseProxyInstallFailure
		{
			get
			{
				return new LocalizedString("ActiveSyncMetabaseProxyInstallFailure", "Ex943B9C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidMessageDataClassificationEmptyName
		{
			get
			{
				return new LocalizedString("InvalidMessageDataClassificationEmptyName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFileHasNoTextContent
		{
			get
			{
				return new LocalizedString("ErrorFileHasNoTextContent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewOutlookProvider(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewOutlookProvider", "Ex54EF7B", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ErrorTaskRunningLocationHubOnly
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocationHubOnly", "ExFD2FCA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ScomMayNotBeInstalled(string exception)
		{
			return new LocalizedString("ScomMayNotBeInstalled", "Ex114DAE", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString VerboseRemovingManagementWebServiceVDir(string identity)
		{
			return new LocalizedString("VerboseRemovingManagementWebServiceVDir", "ExE08FD7", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorInboxRuleDoesNotExist
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleDoesNotExist", "Ex25F810", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasScenarioGetFolder
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioGetFolder", "Ex845464", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallUnifiedMessagingRoleDescription
		{
			get
			{
				return new LocalizedString("InstallUnifiedMessagingRoleDescription", "Ex10F705", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExchangeConfigurationContainerNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeConfigurationContainerNotFound", "Ex300CD0", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString DagTaskFormedCluster
		{
			get
			{
				return new LocalizedString("DagTaskFormedCluster", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddingUniqueComponent(string component)
		{
			return new LocalizedString("AddingUniqueComponent", "Ex05BBD4", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString IisTasksApplicationRootValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksApplicationRootValidationProperty", "Ex899AA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WillIgnoreNoncriticalErrors
		{
			get
			{
				return new LocalizedString("WillIgnoreNoncriticalErrors", "Ex6B47E2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush
		{
			get
			{
				return new LocalizedString("ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush", "ExBBBD4C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidMailboxStatisticsFilter(string filter)
		{
			return new LocalizedString("ErrorInvalidMailboxStatisticsFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		public static LocalizedString ReplayLagPlayDownReasonLogsInRequiredRange
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonLogsInRequiredRange", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallMessageTracingClientServiceTask
		{
			get
			{
				return new LocalizedString("InstallMessageTracingClientServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FriendlyNameTooLong
		{
			get
			{
				return new LocalizedString("FriendlyNameTooLong", "Ex36B0B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBPARoleNotFound(string role)
		{
			return new LocalizedString("ErrorBPARoleNotFound", "Ex766AE5", false, true, Strings.ResourceManager, new object[]
			{
				role
			});
		}

		public static LocalizedString ConfirmationMessageRemoveSharingPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSharingPolicy", "Ex0B7A54", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DagTaskServerDifferentExchangeVersion(string dagName, string existingServer, object existingVersion, string serverName, object serverVersion)
		{
			return new LocalizedString("DagTaskServerDifferentExchangeVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				existingServer,
				existingVersion,
				serverName,
				serverVersion
			});
		}

		public static LocalizedString TSMinServerVersion(string serverVersion)
		{
			return new LocalizedString("TSMinServerVersion", "ExCF022D", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion
			});
		}

		public static LocalizedString ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns
		{
			get
			{
				return new LocalizedString("ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDeleteMDB(string id)
		{
			return new LocalizedString("VerboseDeleteMDB", "Ex5B84DB", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorConflictCountryOrRegion
		{
			get
			{
				return new LocalizedString("ErrorConflictCountryOrRegion", "Ex5F036A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TaskCanOnlyRunOnDac(string dag)
		{
			return new LocalizedString("TaskCanOnlyRunOnDac", "", false, false, Strings.ResourceManager, new object[]
			{
				dag
			});
		}

		public static LocalizedString InvalidSenderAddress
		{
			get
			{
				return new LocalizedString("InvalidSenderAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PhoneNumberAllowedOnlyOnE164ConsumerDialplan
		{
			get
			{
				return new LocalizedString("PhoneNumberAllowedOnlyOnE164ConsumerDialplan", "Ex06DD90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressDeletingSystemFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingSystemFiles", "Ex6B0753", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IgnoringExpiredCertificate(string certificateThumbprint, string source)
		{
			return new LocalizedString("IgnoringExpiredCertificate", "Ex9056CF", false, true, Strings.ResourceManager, new object[]
			{
				certificateThumbprint,
				source
			});
		}

		public static LocalizedString ExchangeRecipientNotFound(string syncobject)
		{
			return new LocalizedString("ExchangeRecipientNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		public static LocalizedString TlsSenderCertificateNameMatchesServiceProviderCertificateId(string certificate)
		{
			return new LocalizedString("TlsSenderCertificateNameMatchesServiceProviderCertificateId", "", false, false, Strings.ResourceManager, new object[]
			{
				certificate
			});
		}

		public static LocalizedString ErrorMissingManagedFolder
		{
			get
			{
				return new LocalizedString("ErrorMissingManagedFolder", "Ex9A977F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageExportDlpPolicyCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageExportDlpPolicyCollection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRetentionPolicyTag(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRetentionPolicyTag", "Ex06F295", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InvalidQueryParameters
		{
			get
			{
				return new LocalizedString("InvalidQueryParameters", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPreferredServerUnavailable(string param, string fqdn, string message)
		{
			return new LocalizedString("ErrorPreferredServerUnavailable", "ExDEC863", false, true, Strings.ResourceManager, new object[]
			{
				param,
				fqdn,
				message
			});
		}

		public static LocalizedString MtrtMessageExpandDetailMessage
		{
			get
			{
				return new LocalizedString("MtrtMessageExpandDetailMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoRmsOnlinePrerequisitesChecked
		{
			get
			{
				return new LocalizedString("InfoRmsOnlinePrerequisitesChecked", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateDefaultMessageClassificationsContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDefaultMessageClassificationsContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTrustedPublishingDomainNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorTrustedPublishingDomainNotFound", "ExC7908D", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString InfoGetTemplate
		{
			get
			{
				return new LocalizedString("InfoGetTemplate", "Ex7D42C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyModeDisplayName
		{
			get
			{
				return new LocalizedString("DlpPolicyModeDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ResettingPolicyIsNotSupported(string paramName)
		{
			return new LocalizedString("ResettingPolicyIsNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		public static LocalizedString ErrorFailedToQueryActiveServerForDatabase(string database, string gsfdError)
		{
			return new LocalizedString("ErrorFailedToQueryActiveServerForDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				gsfdError
			});
		}

		public static LocalizedString WarningXHeaderValueNotSet
		{
			get
			{
				return new LocalizedString("WarningXHeaderValueNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDistributionListDepartApprovalRequired(string requesterId, string groupId, string messageId)
		{
			return new LocalizedString("WarningDistributionListDepartApprovalRequired", "ExC7DC43", false, true, Strings.ResourceManager, new object[]
			{
				requesterId,
				groupId,
				messageId
			});
		}

		public static LocalizedString ErrorFailedToConnectToServer(string serverName, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToConnectToServer", "Ex151D22", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		public static LocalizedString ConfirmationMessageSetExchangeSettings(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString OwaInvalidIntegerFieldException(string fieldName, int value, int min, int max)
		{
			return new LocalizedString("OwaInvalidIntegerFieldException", "Ex549A60", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				value,
				min,
				max
			});
		}

		public static LocalizedString AgentNameTooLong(string name)
		{
			return new LocalizedString("AgentNameTooLong", "Ex4203F9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString GetFederationInformationFailed
		{
			get
			{
				return new LocalizedString("GetFederationInformationFailed", "Ex15B18C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMustWriteToRidMaster(string dc)
		{
			return new LocalizedString("ErrorMustWriteToRidMaster", "", false, false, Strings.ResourceManager, new object[]
			{
				dc
			});
		}

		public static LocalizedString UninstallAssistantsServiceTask
		{
			get
			{
				return new LocalizedString("UninstallAssistantsServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemovedDeviceFilterRule(string name)
		{
			return new LocalizedString("RemovedDeviceFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorStringContainsTrailingSpace(string idStringValue, string param)
		{
			return new LocalizedString("ErrorStringContainsTrailingSpace", "Ex437759", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue,
				param
			});
		}

		public static LocalizedString ProgressCopyingPST
		{
			get
			{
				return new LocalizedString("ProgressCopyingPST", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallComplianceServiceTask
		{
			get
			{
				return new LocalizedString("UninstallComplianceServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReceiveConnectorRoleConflict(string receiveConnectorId)
		{
			return new LocalizedString("ReceiveConnectorRoleConflict", "", false, false, Strings.ResourceManager, new object[]
			{
				receiveConnectorId
			});
		}

		public static LocalizedString VerboseServiceValidatorCredential(string userName, string password)
		{
			return new LocalizedString("VerboseServiceValidatorCredential", "", false, false, Strings.ResourceManager, new object[]
			{
				userName,
				password
			});
		}

		public static LocalizedString ConfirmationMessageSetDataClassificationConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetDataClassificationConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarnBasicAuthInClear
		{
			get
			{
				return new LocalizedString("WarnBasicAuthInClear", "ExDAE69F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisableContentIndexTask
		{
			get
			{
				return new LocalizedString("DisableContentIndexTask", "Ex6C0B32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RuleCollectionNotFoundDuringExport(string name)
		{
			return new LocalizedString("RuleCollectionNotFoundDuringExport", "Ex445AB7", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString GetQueueDigestFailedToConnectTo(string serverList)
		{
			return new LocalizedString("GetQueueDigestFailedToConnectTo", "", false, false, Strings.ResourceManager, new object[]
			{
				serverList
			});
		}

		public static LocalizedString MailFlowPartnerNotExists(MailFlowPartnerIdParameter name)
		{
			return new LocalizedString("MailFlowPartnerNotExists", "ExF042F5", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString MoveMailboxDatabaseOffline(string database)
		{
			return new LocalizedString("MoveMailboxDatabaseOffline", "ExE456BA", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString AlsEmailBodyEndDate(string date)
		{
			return new LocalizedString("AlsEmailBodyEndDate", "", false, false, Strings.ResourceManager, new object[]
			{
				date
			});
		}

		public static LocalizedString GatewayRoleDisplayName
		{
			get
			{
				return new LocalizedString("GatewayRoleDisplayName", "ExE0FB02", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestArchiveConnectivityIdentity(string identity)
		{
			return new LocalizedString("ConfirmationMessageTestArchiveConnectivityIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ExtensionNotPST(string filename)
		{
			return new LocalizedString("ExtensionNotPST", "", false, false, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		public static LocalizedString CasHealthWebAppSendingRequest(Uri requestUri)
		{
			return new LocalizedString("CasHealthWebAppSendingRequest", "Ex9934FC", false, true, Strings.ResourceManager, new object[]
			{
				requestUri
			});
		}

		public static LocalizedString RemoveOrganizationFailRelocationInProgress
		{
			get
			{
				return new LocalizedString("RemoveOrganizationFailRelocationInProgress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CafeIisWebServiceExtensionsDescription
		{
			get
			{
				return new LocalizedString("CafeIisWebServiceExtensionsDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveOabToNoMailboxServer(string server)
		{
			return new LocalizedString("ErrorMoveOabToNoMailboxServer", "Ex4091C1", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString MoveMailboxUnexpectedReportingError(string error)
		{
			return new LocalizedString("MoveMailboxUnexpectedReportingError", "ExF6DE72", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString NoDefaultTestAccount
		{
			get
			{
				return new LocalizedString("NoDefaultTestAccount", "ExD059F0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UsageTypeClient
		{
			get
			{
				return new LocalizedString("UsageTypeClient", "ExB393BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransportServiceProblemMessage(int impactedUserCount)
		{
			return new LocalizedString("TransportServiceProblemMessage", "Ex8B89FC", false, true, Strings.ResourceManager, new object[]
			{
				impactedUserCount
			});
		}

		public static LocalizedString ErrorMobileMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMobileMailboxPolicyNotFound", "ExFE2646", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorSipUriInNonSipDialPlan(string phoneNumber)
		{
			return new LocalizedString("ErrorSipUriInNonSipDialPlan", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		public static LocalizedString SetupProgressRecreateCannedRBACRoleAssignments
		{
			get
			{
				return new LocalizedString("SetupProgressRecreateCannedRBACRoleAssignments", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RecipientTypeInvalidException(string mailboxId)
		{
			return new LocalizedString("RecipientTypeInvalidException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxId
			});
		}

		public static LocalizedString ErrorInvalidExtension(string extension)
		{
			return new LocalizedString("ErrorInvalidExtension", "", false, false, Strings.ResourceManager, new object[]
			{
				extension
			});
		}

		public static LocalizedString AuthenticationMethodNone
		{
			get
			{
				return new LocalizedString("AuthenticationMethodNone", "ExC1970E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingRpcClientAccessService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingRpcClientAccessService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetCurrentOrganizationConfirmation(string orgName)
		{
			return new LocalizedString("SetCurrentOrganizationConfirmation", "Ex019820", false, true, Strings.ResourceManager, new object[]
			{
				orgName
			});
		}

		public static LocalizedString ErrorUserOrphaned(string identity)
		{
			return new LocalizedString("ErrorUserOrphaned", "Ex388D0C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorAcceptedDomainsWithSubdomains(string domain)
		{
			return new LocalizedString("ErrorAcceptedDomainsWithSubdomains", "ExF907D2", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorAdminAuditLogConfig(string organization)
		{
			return new LocalizedString("ErrorAdminAuditLogConfig", "Ex460153", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString CasHealthScenario
		{
			get
			{
				return new LocalizedString("CasHealthScenario", "Ex026275", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOabVirtualDirectoryADObjectAlreadyExists(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryADObjectAlreadyExists", "Ex0BCF93", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		public static LocalizedString InstallCafeRoleDescription
		{
			get
			{
				return new LocalizedString("InstallCafeRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallMailboxRoleDescription
		{
			get
			{
				return new LocalizedString("InstallMailboxRoleDescription", "Ex9565AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidValueForPreventCompletion
		{
			get
			{
				return new LocalizedString("ErrorInvalidValueForPreventCompletion", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionWebObjectNotFound(string name)
		{
			return new LocalizedString("ExceptionWebObjectNotFound", "Ex16603D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRemoveArbitrationMailbox(string id)
		{
			return new LocalizedString("ErrorRemoveArbitrationMailbox", "Ex9D532C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ProtocolTransactionsFailed(string protocol, string transactionsDetails)
		{
			return new LocalizedString("ProtocolTransactionsFailed", "ExFBB45C", false, true, Strings.ResourceManager, new object[]
			{
				protocol,
				transactionsDetails
			});
		}

		public static LocalizedString ConfirmationMessageDisableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("ConfirmationMessageDisableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString RegistryAccessCouldNotCreateKeyException(string key)
		{
			return new LocalizedString("RegistryAccessCouldNotCreateKeyException", "ExC1263E", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString InstallFreeBusyFolderAlreadyExistsInDatabase(string database)
		{
			return new LocalizedString("InstallFreeBusyFolderAlreadyExistsInDatabase", "ExF4AF22", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString AboutToAddLocalEtsUSGToLocalAdminGroup
		{
			get
			{
				return new LocalizedString("AboutToAddLocalEtsUSGToLocalAdminGroup", "Ex3EE450", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NotificationsBrokerServiceDisplayName
		{
			get
			{
				return new LocalizedString("NotificationsBrokerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExServerSGroupLinkNotSetException(string guid)
		{
			return new LocalizedString("ExServerSGroupLinkNotSetException", "Ex076974", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString ErrorNoE12AttributeFound(string objectType)
		{
			return new LocalizedString("ErrorNoE12AttributeFound", "Ex45FA75", false, true, Strings.ResourceManager, new object[]
			{
				objectType
			});
		}

		public static LocalizedString MailboxSearchScopeException(string identity)
		{
			return new LocalizedString("MailboxSearchScopeException", "Ex996E1E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MigrationReportIntervalParameterInvalid
		{
			get
			{
				return new LocalizedString("MigrationReportIntervalParameterInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateDatabaseCopyCancel(string dbCopy)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopyCancel", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		public static LocalizedString SetupComponentPostSetupFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFilterParametersForCloneMode
		{
			get
			{
				return new LocalizedString("ErrorFilterParametersForCloneMode", "ExD61363", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedMailboxQuarantine(string mailbox, string failure)
		{
			return new LocalizedString("FailedMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				failure
			});
		}

		public static LocalizedString SetupProgressCreatingDefaultOAB
		{
			get
			{
				return new LocalizedString("SetupProgressCreatingDefaultOAB", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemovePowerShellVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageRemovePowerShellVirtualDirectory", "Ex9B3830", false, true, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		public static LocalizedString NoneValidationDivergenceMustBeRetriable(string objectId)
		{
			return new LocalizedString("NoneValidationDivergenceMustBeRetriable", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString ErrorCleanupRequestedNoRollback(string identity, string requested, string currentRequested)
		{
			return new LocalizedString("ErrorCleanupRequestedNoRollback", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				requested,
				currentRequested
			});
		}

		public static LocalizedString DebugEndSetDatabase
		{
			get
			{
				return new LocalizedString("DebugEndSetDatabase", "Ex620078", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Tentative
		{
			get
			{
				return new LocalizedString("Tentative", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RolePublishingEditor
		{
			get
			{
				return new LocalizedString("RolePublishingEditor", "Ex74EBAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewDagConfigurationPassedChecks
		{
			get
			{
				return new LocalizedString("NewDagConfigurationPassedChecks", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceBindingNotFound(string name)
		{
			return new LocalizedString("ComplianceBindingNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorSupervisionTagNotValid(string tag)
		{
			return new LocalizedString("ErrorSupervisionTagNotValid", "ExD4A2AA", false, true, Strings.ResourceManager, new object[]
			{
				tag
			});
		}

		public static LocalizedString AutodiscoverSvcGetRemoteEndpoint
		{
			get
			{
				return new LocalizedString("AutodiscoverSvcGetRemoteEndpoint", "Ex7AC14C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CreateMailboxSessionDetail(string user)
		{
			return new LocalizedString("CreateMailboxSessionDetail", "ExCD1EE3", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString InvalidDlpPolicy(string dlpPolicy)
		{
			return new LocalizedString("InvalidDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				dlpPolicy
			});
		}

		public static LocalizedString SharedConfigurationInfoNotPresent(string org)
		{
			return new LocalizedString("SharedConfigurationInfoNotPresent", "Ex83D2B0", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString SetupProgressCalendarSharingEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressCalendarSharingEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchVirtualDirectoryCannotFindIdentity(string identity)
		{
			return new LocalizedString("ExchVirtualDirectoryCannotFindIdentity", "Ex465D07", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningDisableDisabledRoleAssignment(string id)
		{
			return new LocalizedString("WarningDisableDisabledRoleAssignment", "ExF2DCA8", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ResumeSgcRpcRequest(string db)
		{
			return new LocalizedString("ResumeSgcRpcRequest", "ExD1EF13", false, true, Strings.ResourceManager, new object[]
			{
				db
			});
		}

		public static LocalizedString USGContainerNotFoundException(string ou, string domain)
		{
			return new LocalizedString("USGContainerNotFoundException", "Ex45A336", false, true, Strings.ResourceManager, new object[]
			{
				ou,
				domain
			});
		}

		public static LocalizedString WarningClientAccessArrayFqdnChanged(string newFqdn, string command)
		{
			return new LocalizedString("WarningClientAccessArrayFqdnChanged", "ExB70C20", false, true, Strings.ResourceManager, new object[]
			{
				newFqdn,
				command
			});
		}

		public static LocalizedString ErrorUnknownRole(string name)
		{
			return new LocalizedString("ErrorUnknownRole", "Ex09AE56", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString NoMonitoringErrorsInTestServiceHealthTask
		{
			get
			{
				return new LocalizedString("NoMonitoringErrorsInTestServiceHealthTask", "Ex214D0D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringMsFte
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMsFte", "Ex952BF8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskUpdatingAdDagMembership(string serverName, string dagName)
		{
			return new LocalizedString("DagTaskUpdatingAdDagMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString ReservedString3
		{
			get
			{
				return new LocalizedString("ReservedString3", "Ex688F40", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBPARunFailed
		{
			get
			{
				return new LocalizedString("ErrorBPARunFailed", "Ex2BE0A0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInboundConnectorAlreadyExists(string name)
		{
			return new LocalizedString("ErrorInboundConnectorAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorReadingServiceState(string machineName, string error)
		{
			return new LocalizedString("ErrorReadingServiceState", "Ex2C7AF0", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString AIMDBWatermarksAreTooLow(string serverName, string mailboxDatabaseName, string thresholdInMinutes, string lastEventCounterWithCreateTime, string watermarksWithCreateTime)
		{
			return new LocalizedString("AIMDBWatermarksAreTooLow", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				mailboxDatabaseName,
				thresholdInMinutes,
				lastEventCounterWithCreateTime,
				watermarksWithCreateTime
			});
		}

		public static LocalizedString CreateVirtualDirectoryADObjectFailure(string serverName, string metabasePath)
		{
			return new LocalizedString("CreateVirtualDirectoryADObjectFailure", "ExD5372B", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath
			});
		}

		public static LocalizedString ErrorTenantRelocationInProgress(string tenant)
		{
			return new LocalizedString("ErrorTenantRelocationInProgress", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		public static LocalizedString ErrorPasswordBlank(string memberName)
		{
			return new LocalizedString("ErrorPasswordBlank", "ExCA090A", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString UMCallAnsweringRuleDescriptionTakeActions
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleDescriptionTakeActions", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedRemoveCopyLogFileManuallyAfterCopyDisabledRcr(string dbName, string logCopyLocation, string machine)
		{
			return new LocalizedString("NeedRemoveCopyLogFileManuallyAfterCopyDisabledRcr", "ExB2CA45", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				logCopyLocation,
				machine
			});
		}

		public static LocalizedString SetupProgressCommonConfiguration
		{
			get
			{
				return new LocalizedString("SetupProgressCommonConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatacenterLiveIdPerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("DatacenterLiveIdPerfCountersComponentDescription", "Ex9B47C5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewDagPassedChecks
		{
			get
			{
				return new LocalizedString("NewDagPassedChecks", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallForwardSyncServiceTask
		{
			get
			{
				return new LocalizedString("InstallForwardSyncServiceTask", "ExF05C46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStartingMailSubmissionService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingMailSubmissionService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AtatchmentExtensionMatchesWordsParameterContainsWordsThatStartWithDot(string predicateName, string Words)
		{
			return new LocalizedString("AtatchmentExtensionMatchesWordsParameterContainsWordsThatStartWithDot", "", false, false, Strings.ResourceManager, new object[]
			{
				predicateName,
				Words
			});
		}

		public static LocalizedString ConfirmationMessageDisableRemoteArchive(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableRemoteArchive", "Ex99CBEE", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmSearchMailboxTask(string task)
		{
			return new LocalizedString("ConfirmSearchMailboxTask", "ExCCB7AA", false, true, Strings.ResourceManager, new object[]
			{
				task
			});
		}

		public static LocalizedString SendConnectorProxyEnabledOnEdge
		{
			get
			{
				return new LocalizedString("SendConnectorProxyEnabledOnEdge", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppLiveIdResponseReceived(Uri responseUri, HttpStatusCode statusCode, string casServer)
		{
			return new LocalizedString("CasHealthWebAppLiveIdResponseReceived", "Ex8B4ADA", false, true, Strings.ResourceManager, new object[]
			{
				responseUri,
				statusCode,
				casServer
			});
		}

		public static LocalizedString VerboseNoOabVDirOnLocalServer
		{
			get
			{
				return new LocalizedString("VerboseNoOabVDirOnLocalServer", "Ex85A8F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogExsetdataReinstallingAtom(string atomID)
		{
			return new LocalizedString("LogExsetdataReinstallingAtom", "Ex2BCF20", false, true, Strings.ResourceManager, new object[]
			{
				atomID
			});
		}

		public static LocalizedString NotificationsBrokerServiceDescription
		{
			get
			{
				return new LocalizedString("NotificationsBrokerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MemberAlreadyExistsException(string id, string group)
		{
			return new LocalizedString("MemberAlreadyExistsException", "Ex93E602", false, true, Strings.ResourceManager, new object[]
			{
				id,
				group
			});
		}

		public static LocalizedString SetupProgressStoppingMailboxAssistantService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingMailboxAssistantService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoPreL
		{
			get
			{
				return new LocalizedString("InfoPreL", "Ex4FBF0C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAlsTooManyLogResults(int count)
		{
			return new LocalizedString("ErrorAlsTooManyLogResults", "", false, false, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString ErrorMessageClassModified
		{
			get
			{
				return new LocalizedString("ErrorMessageClassModified", "Ex6D8150", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmtpConnectivityIncompleteEvent(string server, string untested, string successes)
		{
			return new LocalizedString("SmtpConnectivityIncompleteEvent", "Ex5127F5", false, true, Strings.ResourceManager, new object[]
			{
				server,
				untested,
				successes
			});
		}

		public static LocalizedString IgnoringSameNextCertificate
		{
			get
			{
				return new LocalizedString("IgnoringSameNextCertificate", "ExEA0B5F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProtocolLogSubject(string userName, string protocol)
		{
			return new LocalizedString("ProtocolLogSubject", "Ex7CD7F5", false, true, Strings.ResourceManager, new object[]
			{
				userName,
				protocol
			});
		}

		public static LocalizedString MtrtMessageRecieve(string serverHostName)
		{
			return new LocalizedString("MtrtMessageRecieve", "", false, false, Strings.ResourceManager, new object[]
			{
				serverHostName
			});
		}

		public static LocalizedString ErrorGroupTypeInvalid
		{
			get
			{
				return new LocalizedString("ErrorGroupTypeInvalid", "ExA69203", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotBeBothValidationDivergenceAndTenantWideDivergence(string objectId)
		{
			return new LocalizedString("CannotBeBothValidationDivergenceAndTenantWideDivergence", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString HealthManagerServiceDisplayName
		{
			get
			{
				return new LocalizedString("HealthManagerServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeUpgradeBucketVersionsAreEqual(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketVersionsAreEqual", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString ErrorArchiveUserVersionTooOld(string version)
		{
			return new LocalizedString("ErrorArchiveUserVersionTooOld", "Ex4691BF", false, true, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		public static LocalizedString RestoreNeedsWitnessServer(string dagName)
		{
			return new LocalizedString("RestoreNeedsWitnessServer", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		public static LocalizedString ErrorSiteNotUnique(object site)
		{
			return new LocalizedString("ErrorSiteNotUnique", "Ex15302B", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString DiagnosticsServiceDisplayName
		{
			get
			{
				return new LocalizedString("DiagnosticsServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FileDataMissing
		{
			get
			{
				return new LocalizedString("FileDataMissing", "ExBB232C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallPop3BeServiceTask
		{
			get
			{
				return new LocalizedString("InstallPop3BeServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceHostDescription
		{
			get
			{
				return new LocalizedString("ServiceHostDescription", "Ex530DCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressConfigureControlPointConfig
		{
			get
			{
				return new LocalizedString("SetupProgressConfigureControlPointConfig", "ExD527F5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveOrganization(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveOrganization", "Ex4943FD", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString CasHealthCalendarResponseError(string statusCode)
		{
			return new LocalizedString("CasHealthCalendarResponseError", "Ex709883", false, true, Strings.ResourceManager, new object[]
			{
				statusCode
			});
		}

		public static LocalizedString ErrorModerationWithWrongGroupType
		{
			get
			{
				return new LocalizedString("ErrorModerationWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveFailedMSOSyncObject(string objectId)
		{
			return new LocalizedString("ConfirmationMessageRemoveFailedMSOSyncObject", "", false, false, Strings.ResourceManager, new object[]
			{
				objectId
			});
		}

		public static LocalizedString CasHealthOwaTestPassed(string url)
		{
			return new LocalizedString("CasHealthOwaTestPassed", "ExD29E43", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SiteMailboxMembershipSyncEventEnqueued
		{
			get
			{
				return new LocalizedString("SiteMailboxMembershipSyncEventEnqueued", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxSharePointServerVersionInCompatible
		{
			get
			{
				return new LocalizedString("ErrorTeamMailboxSharePointServerVersionInCompatible", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionIncorrectNumberOfDefaultInRuleResources(string resourceIdRefs)
		{
			return new LocalizedString("ClassificationRuleCollectionIncorrectNumberOfDefaultInRuleResources", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRefs
			});
		}

		public static LocalizedString VerboseBuildAutoDiscoverUrl(string url)
		{
			return new LocalizedString("VerboseBuildAutoDiscoverUrl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString AllowVoiceMailAnalysisWarning
		{
			get
			{
				return new LocalizedString("AllowVoiceMailAnalysisWarning", "Ex9B8D33", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCloudArchiveNeedsTargetIsArchiveSwitchForRestore(string identity)
		{
			return new LocalizedString("ErrorCloudArchiveNeedsTargetIsArchiveSwitchForRestore", "ExFC886B", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupComponentPreSetupClientAccess
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupClientAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidArbitrationMailbox(string arbMbxIdentity)
		{
			return new LocalizedString("ErrorInvalidArbitrationMailbox", "ExF505C5", false, true, Strings.ResourceManager, new object[]
			{
				arbMbxIdentity
			});
		}

		public static LocalizedString ErrorCannotMoveToTargetDatabaseAsConstraintsAreNotMet(string user, string databaseName, string constraint)
		{
			return new LocalizedString("ErrorCannotMoveToTargetDatabaseAsConstraintsAreNotMet", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				databaseName,
				constraint
			});
		}

		public static LocalizedString SetupProgressUninstallingMsFteMSI
		{
			get
			{
				return new LocalizedString("SetupProgressUninstallingMsFteMSI", "Ex787C6E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMovingOldExchangeUsersUnsupported
		{
			get
			{
				return new LocalizedString("ErrorMovingOldExchangeUsersUnsupported", "ExD95620", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRecipientViewRootNotFound(string ou)
		{
			return new LocalizedString("ErrorRecipientViewRootNotFound", "ExA0D6F2", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		public static LocalizedString AppcmdNotFoundInPath(string path)
		{
			return new LocalizedString("AppcmdNotFoundInPath", "", false, false, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString RemoveADServerMetadataSucceeded
		{
			get
			{
				return new LocalizedString("RemoveADServerMetadataSucceeded", "ExCF87E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString QuarantineMessageTypeTransportRule
		{
			get
			{
				return new LocalizedString("QuarantineMessageTypeTransportRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CrossPremiseProbeNdred(string source, string target, string info)
		{
			return new LocalizedString("CrossPremiseProbeNdred", "Ex5295CE", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target,
				info
			});
		}

		public static LocalizedString ErrorAssociatedUserMailboxExist
		{
			get
			{
				return new LocalizedString("ErrorAssociatedUserMailboxExist", "ExFB4E5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressInstallInternetMessageFormat
		{
			get
			{
				return new LocalizedString("SetupProgressInstallInternetMessageFormat", "ExA8A4D1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EditWillUpgradeSearchObject
		{
			get
			{
				return new LocalizedString("EditWillUpgradeSearchObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentUnifiedMessagingGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentUnifiedMessagingGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OutputDirectoryNotExist(string directory)
		{
			return new LocalizedString("OutputDirectoryNotExist", "Ex6672A3", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		public static LocalizedString NoHubInSubscribedSite
		{
			get
			{
				return new LocalizedString("NoHubInSubscribedSite", "Ex8E8767", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantServiceInstanceNotSet(string syncobject)
		{
			return new LocalizedString("TenantServiceInstanceNotSet", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		public static LocalizedString ConfirmationMessageNewMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewMoveRequest", "Ex11A451", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorFailedToLoadIRMConfig
		{
			get
			{
				return new LocalizedString("ErrorFailedToLoadIRMConfig", "Ex26C93D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningNonZeroItemLimitMove(string badItemLimitParamName)
		{
			return new LocalizedString("WarningNonZeroItemLimitMove", "", false, false, Strings.ResourceManager, new object[]
			{
				badItemLimitParamName
			});
		}

		public static LocalizedString VerboseSettingViewEntireForest(string value)
		{
			return new LocalizedString("VerboseSettingViewEntireForest", "ExD323AB", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString AddDatabaseCopyNewCopyMustBeInDagException(string serverName, string databaseName)
		{
			return new LocalizedString("AddDatabaseCopyNewCopyMustBeInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				databaseName
			});
		}

		public static LocalizedString ProgressCopyingCatalog
		{
			get
			{
				return new LocalizedString("ProgressCopyingCatalog", "Ex779548", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBasicAndLiveIdBasicNotAllowedVDir(string metabasePath, string vDirBasicAuth, string vDirLiveIdAuth)
		{
			return new LocalizedString("ErrorBasicAndLiveIdBasicNotAllowedVDir", "ExC0131D", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				vDirBasicAuth,
				vDirLiveIdAuth
			});
		}

		public static LocalizedString Error_InvalidLegacyRegionCode(string regionCode)
		{
			return new LocalizedString("Error_InvalidLegacyRegionCode", "", false, false, Strings.ResourceManager, new object[]
			{
				regionCode
			});
		}

		public static LocalizedString MailboxTransportSubmissionServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailboxTransportSubmissionServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ImapInternalServerSettings
		{
			get
			{
				return new LocalizedString("ImapInternalServerSettings", "Ex35B0B6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseSeedStatusLabelWrittenPerSec
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelWrittenPerSec", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaErrorPageExceptionMessage(string message)
		{
			return new LocalizedString("CasHealthOwaErrorPageExceptionMessage", "Ex097FF0", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageRemoveCallAnsweringRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString NullUserError
		{
			get
			{
				return new LocalizedString("NullUserError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetAutodiscoverVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAutodiscoverVirtualDirectory", "ExD99F32", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuthSameAsCurrent
		{
			get
			{
				return new LocalizedString("ErrorAuthSameAsCurrent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseHasWriteAccessToExchangeServers
		{
			get
			{
				return new LocalizedString("VerboseHasWriteAccessToExchangeServers", "ExAA41D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AIMDBLastEventPollingThreadHung(string serverName, string mailboxDatabaseName, double currentValue)
		{
			return new LocalizedString("AIMDBLastEventPollingThreadHung", "Ex5D456E", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				mailboxDatabaseName,
				currentValue
			});
		}

		public static LocalizedString ServiceHealthWmiFailure(string errorMsg)
		{
			return new LocalizedString("ServiceHealthWmiFailure", "Ex7D340D", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString ActiveSyncMetabaseIsapiInstallFailure
		{
			get
			{
				return new LocalizedString("ActiveSyncMetabaseIsapiInstallFailure", "ExA164A3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsNotFoundForGroup(string groupName, string key)
		{
			return new LocalizedString("ExchangeSettingsNotFoundForGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName,
				key
			});
		}

		public static LocalizedString VerboseFoundAssigneeInConfigNC(string policy)
		{
			return new LocalizedString("VerboseFoundAssigneeInConfigNC", "ExD1B158", false, true, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		public static LocalizedString NewSendConnectorIncorrectUsageParameters
		{
			get
			{
				return new LocalizedString("NewSendConnectorIncorrectUsageParameters", "Ex39CCED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageImportDlpPolicyTemplate
		{
			get
			{
				return new LocalizedString("ConfirmationMessageImportDlpPolicyTemplate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix
		{
			get
			{
				return new LocalizedString("ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDuplicatePartnerApplication(string existingApp)
		{
			return new LocalizedString("ErrorDuplicatePartnerApplication", "", false, false, Strings.ResourceManager, new object[]
			{
				existingApp
			});
		}

		public static LocalizedString ADDUMInvalidLanguagePack(string path)
		{
			return new LocalizedString("ADDUMInvalidLanguagePack", "Ex4C65F7", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString SetupProgressImportingAdamSchema
		{
			get
			{
				return new LocalizedString("SetupProgressImportingAdamSchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SupportedToolsCannotReadFile
		{
			get
			{
				return new LocalizedString("SupportedToolsCannotReadFile", "Ex311555", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AuthModuleFilterMetabaseIsapiInstallFailure
		{
			get
			{
				return new LocalizedString("AuthModuleFilterMetabaseIsapiInstallFailure", "Ex81F1E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRemoveUnorphanedMoveRequest(string identity)
		{
			return new LocalizedString("ErrorCannotRemoveUnorphanedMoveRequest", "Ex58344D", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString HeaderValue
		{
			get
			{
				return new LocalizedString("HeaderValue", "Ex8EC88A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NonE14ServerError
		{
			get
			{
				return new LocalizedString("NonE14ServerError", "ExB0F5BB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetArbitrationMailboxConfirmationMessage(string arbMbxIdentity)
		{
			return new LocalizedString("SetArbitrationMailboxConfirmationMessage", "ExDDEABA", false, true, Strings.ResourceManager, new object[]
			{
				arbMbxIdentity
			});
		}

		public static LocalizedString ClientAccessServiceControlComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessServiceControlComponentDescription", "Ex26A06A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageStopDatabaseAvailabilityGroupServer(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageStopDatabaseAvailabilityGroupServer", "Ex590362", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		public static LocalizedString AssemblyFileNotExist(string assemblyPath)
		{
			return new LocalizedString("AssemblyFileNotExist", "Ex33E78D", false, true, Strings.ResourceManager, new object[]
			{
				assemblyPath
			});
		}

		public static LocalizedString GatewayPrereqCheck
		{
			get
			{
				return new LocalizedString("GatewayPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LanguagePackPerfCounterDeleteError(string file, string exceptionMessage)
		{
			return new LocalizedString("LanguagePackPerfCounterDeleteError", "", false, false, Strings.ResourceManager, new object[]
			{
				file,
				exceptionMessage
			});
		}

		public static LocalizedString FailedBecauseofDefaultAdministrativeGroupNotFoundException(string error)
		{
			return new LocalizedString("FailedBecauseofDefaultAdministrativeGroupNotFoundException", "Ex9AA989", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString VerboseDeleteDBCopy(string id)
		{
			return new LocalizedString("VerboseDeleteDBCopy", "Ex7C3412", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString WebProxy(string address)
		{
			return new LocalizedString("WebProxy", "Ex997D17", false, true, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		public static LocalizedString ServerNamesMustBeValid(string list)
		{
			return new LocalizedString("ServerNamesMustBeValid", "Ex8E828A", false, true, Strings.ResourceManager, new object[]
			{
				list
			});
		}

		public static LocalizedString CannotSetHubTransportServerOnAdam
		{
			get
			{
				return new LocalizedString("CannotSetHubTransportServerOnAdam", "ExAABB6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotMoveDiscoveryMailboxesCrossForest(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveDiscoveryMailboxesCrossForest", "Ex9C5282", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString MigrationCompleteAfterIncorrectMigrationType
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterIncorrectMigrationType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaReturnedErrorPageForAuth
		{
			get
			{
				return new LocalizedString("CasHealthOwaReturnedErrorPageForAuth", "Ex86F6EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LocalDomainNotFoundException
		{
			get
			{
				return new LocalizedString("LocalDomainNotFoundException", "Ex615E01", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString Info_MessageItemHasBeenUpdated
		{
			get
			{
				return new LocalizedString("Info_MessageItemHasBeenUpdated", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressOwaEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNotE14Server(string server)
		{
			return new LocalizedString("ErrorNotE14Server", "ExDD2B26", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString MobileDevicePolicyApplicationListTooLong(int listLimit, int memberLimit)
		{
			return new LocalizedString("MobileDevicePolicyApplicationListTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				listLimit,
				memberLimit
			});
		}

		public static LocalizedString ErrorManageDelegation1ProofDomainOwnership
		{
			get
			{
				return new LocalizedString("ErrorManageDelegation1ProofDomainOwnership", "Ex989EB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ValidateSecretFailure
		{
			get
			{
				return new LocalizedString("ValidateSecretFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorManagedByAlreadyExisted(string group, string id)
		{
			return new LocalizedString("ErrorManagedByAlreadyExisted", "Ex8A5030", false, true, Strings.ResourceManager, new object[]
			{
				group,
				id
			});
		}

		public static LocalizedString VerboseResetADServerSettingsSucceed
		{
			get
			{
				return new LocalizedString("VerboseResetADServerSettingsSucceed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSkipToUAndParentalControlCheckEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSkipToUAndParentalControlCheckEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CountingFilesToCopy
		{
			get
			{
				return new LocalizedString("CountingFilesToCopy", "Ex323B63", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederAlreadyCompletedPrompt(string dbName, string targetServer, string sourceServer)
		{
			return new LocalizedString("SeederAlreadyCompletedPrompt", "ExC8784E", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				targetServer,
				sourceServer
			});
		}

		public static LocalizedString AnonymousSharingEnabledWarning
		{
			get
			{
				return new LocalizedString("AnonymousSharingEnabledWarning", "Ex40DDF4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidCharacterInScriptFileName(string fileName, string character)
		{
			return new LocalizedString("InvalidCharacterInScriptFileName", "Ex85A707", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				character
			});
		}

		public static LocalizedString ServerSchemaVersionRange(string server, int min, int max)
		{
			return new LocalizedString("ServerSchemaVersionRange", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				min,
				max
			});
		}

		public static LocalizedString ErrorRemovedMailboxNotUnique(string removedMailbox)
		{
			return new LocalizedString("ErrorRemovedMailboxNotUnique", "Ex7268B5", false, true, Strings.ResourceManager, new object[]
			{
				removedMailbox
			});
		}

		public static LocalizedString ErrorWillNotPerformOnInheritedAccessRight(string id)
		{
			return new LocalizedString("ErrorWillNotPerformOnInheritedAccessRight", "ExC14516", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CalendarLogsNotFound
		{
			get
			{
				return new LocalizedString("CalendarLogsNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MSARPSServiceDescription
		{
			get
			{
				return new LocalizedString("MSARPSServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxSearchIsInProgress(string name)
		{
			return new LocalizedString("MailboxSearchIsInProgress", "Ex9905A9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RemoveLiveFedUriReserveRequest(string domain)
		{
			return new LocalizedString("RemoveLiveFedUriReserveRequest", "Ex481665", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString MsiCouldNotGetProdcutProperty(string property, string message, int errorCode)
		{
			return new LocalizedString("MsiCouldNotGetProdcutProperty", "ExE798C4", false, true, Strings.ResourceManager, new object[]
			{
				property,
				message,
				errorCode
			});
		}

		public static LocalizedString VerboseCreatingRoleAssignment(string id)
		{
			return new LocalizedString("VerboseCreatingRoleAssignment", "Ex88B76D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString OwaMetabaseIsapiInstallFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseIsapiInstallFailure", "Ex1F4F2A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewDatabaseAvailabilityGroupNetwork(string network)
		{
			return new LocalizedString("ConfirmationMessageNewDatabaseAvailabilityGroupNetwork", "ExAD5A91", false, true, Strings.ResourceManager, new object[]
			{
				network
			});
		}

		public static LocalizedString WarningInvalidParameterOrModifiedPropertyInAdminAuditLog(string log)
		{
			return new LocalizedString("WarningInvalidParameterOrModifiedPropertyInAdminAuditLog", "Ex05D589", false, true, Strings.ResourceManager, new object[]
			{
				log
			});
		}

		public static LocalizedString MtrtMessageBadmail
		{
			get
			{
				return new LocalizedString("MtrtMessageBadmail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressDeletingCopyLogFiles
		{
			get
			{
				return new LocalizedString("ProgressDeletingCopyLogFiles", "ExD25025", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MessageTypePermissionControlled
		{
			get
			{
				return new LocalizedString("MessageTypePermissionControlled", "ExBC55AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUploadUserPhoto(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUploadUserPhoto", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InstallTransportSyncManagerServiceTask
		{
			get
			{
				return new LocalizedString("InstallTransportSyncManagerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToIdentifyTheUser
		{
			get
			{
				return new LocalizedString("ErrorUnableToIdentifyTheUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemovePublicFolderClientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageRemovePublicFolderClientPermission", "Ex7111B1", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString SendConnectorUndefinedServerRg(string serverName)
		{
			return new LocalizedString("SendConnectorUndefinedServerRg", "Ex8B8D3A", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ExportMigrationBatchStartingRowIndexOutOfBoundException(int num)
		{
			return new LocalizedString("ExportMigrationBatchStartingRowIndexOutOfBoundException", "Ex1BD789", false, true, Strings.ResourceManager, new object[]
			{
				num
			});
		}

		public static LocalizedString FailedDocumentsResultsDatabase(string mdb, int total)
		{
			return new LocalizedString("FailedDocumentsResultsDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb,
				total
			});
		}

		public static LocalizedString ConfirmationMessageNewSyncRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewSyncRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CasHealthEasGetItemEstimate
		{
			get
			{
				return new LocalizedString("CasHealthEasGetItemEstimate", "Ex710B76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString messageDataCorruptionException(string dataSource, string violation)
		{
			return new LocalizedString("messageDataCorruptionException", "", false, false, Strings.ResourceManager, new object[]
			{
				dataSource,
				violation
			});
		}

		public static LocalizedString ErrorFailedExtractTextForFingerprint
		{
			get
			{
				return new LocalizedString("ErrorFailedExtractTextForFingerprint", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnPremisesOrganizationInboundConnectorNotUnique(InboundConnectorIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationInboundConnectorNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString IisTasksCouldNotFindSetupRegistryValue(string key, string value)
		{
			return new LocalizedString("IisTasksCouldNotFindSetupRegistryValue", "Ex819845", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		public static LocalizedString ComInteropDllNotFound
		{
			get
			{
				return new LocalizedString("ComInteropDllNotFound", "Ex35E614", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRMSTPD(string name)
		{
			return new LocalizedString("ConfirmationMessageSetRMSTPD", "Ex853D7C", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupProgressCreateActiveSyncMailboxPolicyContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateActiveSyncMailboxPolicyContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AlsEmailBodySubmitted(string date)
		{
			return new LocalizedString("AlsEmailBodySubmitted", "", false, false, Strings.ResourceManager, new object[]
			{
				date
			});
		}

		public static LocalizedString DagMemberNoDatabasesString(string serverName)
		{
			return new LocalizedString("DagMemberNoDatabasesString", "ExD77E87", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString Pattern
		{
			get
			{
				return new LocalizedString("Pattern", "Ex4DE185", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArchiveRecoveryArchiveNotFoundInStore(string user, Guid archiveGuid)
		{
			return new LocalizedString("ErrorArchiveRecoveryArchiveNotFoundInStore", "Ex7234EF", false, true, Strings.ResourceManager, new object[]
			{
				user,
				archiveGuid
			});
		}

		public static LocalizedString InterceptorErrorExpireTimePassed(string expireTime)
		{
			return new LocalizedString("InterceptorErrorExpireTimePassed", "", false, false, Strings.ResourceManager, new object[]
			{
				expireTime
			});
		}

		public static LocalizedString ErrorExchangeUpgradeBucketNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeUpgradeBucketNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorTargetMailboxNotFound(string targetMailboxDN)
		{
			return new LocalizedString("ErrorTargetMailboxNotFound", "Ex80B4CB", false, true, Strings.ResourceManager, new object[]
			{
				targetMailboxDN
			});
		}

		public static LocalizedString ConfirmationMessageRecoveringSoftDeletedObject(string name)
		{
			return new LocalizedString("ConfirmationMessageRecoveringSoftDeletedObject", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToReEnrollTPD(Exception e)
		{
			return new LocalizedString("FailedToReEnrollTPD", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString SetupProgressCreateNewMailboxPlanObject
		{
			get
			{
				return new LocalizedString("SetupProgressCreateNewMailboxPlanObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplicationCheckResultWarning
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultWarning", "ExD4A67F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxPlanNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxPlanNotFound", "Ex18585C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ServerDatabaseAndPartnerScopesAreOnlyAllowedInTopOrg(string orgId)
		{
			return new LocalizedString("ServerDatabaseAndPartnerScopesAreOnlyAllowedInTopOrg", "ExF6003B", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString SetupProgressCreateJournalingRuleCollection
		{
			get
			{
				return new LocalizedString("SetupProgressCreateJournalingRuleCollection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWMIException2(string computerName, string message)
		{
			return new LocalizedString("ErrorWMIException2", "ExC534DA", false, true, Strings.ResourceManager, new object[]
			{
				computerName,
				message
			});
		}

		public static LocalizedString ConfirmationMessageNewAddressList(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewAddressList", "ExFDB193", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ExportNothingDeleteOnlyShouldExport(string srcDisplayname)
		{
			return new LocalizedString("ExportNothingDeleteOnlyShouldExport", "Ex8871F7", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname
			});
		}

		public static LocalizedString ADInitializationException(string reason)
		{
			return new LocalizedString("ADInitializationException", "Ex5CC08D", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString ErrorRecipientDoesNotHaveSpokenName(string name)
		{
			return new LocalizedString("ErrorRecipientDoesNotHaveSpokenName", "Ex1877B1", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ContentIndexingServiceNotInstalled
		{
			get
			{
				return new LocalizedString("ContentIndexingServiceNotInstalled", "Ex63639E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMServeConfigurationIsBroken
		{
			get
			{
				return new LocalizedString("ErrorMServeConfigurationIsBroken", "Ex280144", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestIntraOrganizationConnector
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestIntraOrganizationConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseAddWSManConfigSection(string file)
		{
			return new LocalizedString("VerboseAddWSManConfigSection", "ExE1A886", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString CasHealthOwaLoginWithNoCredentials
		{
			get
			{
				return new LocalizedString("CasHealthOwaLoginWithNoCredentials", "Ex247541", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningInvalidRuleCollectionADObject(string identity, string reason)
		{
			return new LocalizedString("WarningInvalidRuleCollectionADObject", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				reason
			});
		}

		public static LocalizedString MonitoringServiceDisplayName
		{
			get
			{
				return new LocalizedString("MonitoringServiceDisplayName", "ExBF6AAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PreviousQueryTime(string time)
		{
			return new LocalizedString("PreviousQueryTime", "Ex6055BF", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		public static LocalizedString ComAdminUnableToCreateApplicationException(string applicationName)
		{
			return new LocalizedString("ComAdminUnableToCreateApplicationException", "ExEE9447", false, true, Strings.ResourceManager, new object[]
			{
				applicationName
			});
		}

		public static LocalizedString EdgeSubscriptionRequiresCAPICert(string thumbprint)
		{
			return new LocalizedString("EdgeSubscriptionRequiresCAPICert", "ExA584DD", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorDefaultPolicyCannotHaveRule(string policy)
		{
			return new LocalizedString("ErrorDefaultPolicyCannotHaveRule", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		public static LocalizedString CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab
		{
			get
			{
				return new LocalizedString("CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RegSvr32Failed
		{
			get
			{
				return new LocalizedString("RegSvr32Failed", "Ex2CA560", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DeviceWipeSucceeded
		{
			get
			{
				return new LocalizedString("DeviceWipeSucceeded", "Ex40BEA1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseTestUserIdentity(string user)
		{
			return new LocalizedString("VerboseTestUserIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorAtleastOneOfCSVInput
		{
			get
			{
				return new LocalizedString("ErrorAtleastOneOfCSVInput", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ScopeIsNotAllowedForRole(string unScopedRoleType)
		{
			return new LocalizedString("ScopeIsNotAllowedForRole", "ExBBC57F", false, true, Strings.ResourceManager, new object[]
			{
				unScopedRoleType
			});
		}

		public static LocalizedString ConfirmationMessageSetIPAllowListProvider(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetIPAllowListProvider", "Ex31DE4A", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString QuarantineMessageTypeSpam
		{
			get
			{
				return new LocalizedString("QuarantineMessageTypeSpam", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ResumeSgcUseRpc(string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("ResumeSgcUseRpc", "Ex740C42", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportVersion
			});
		}

		public static LocalizedString SetupProgressStoppingMailSubmissionService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingMailSubmissionService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidOrganization
		{
			get
			{
				return new LocalizedString("ErrorInvalidOrganization", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString HostedSGContainerNotFoundException(string orgName)
		{
			return new LocalizedString("HostedSGContainerNotFoundException", "ExA63757", false, true, Strings.ResourceManager, new object[]
			{
				orgName
			});
		}

		public static LocalizedString VerboseRestoreIISConfig(string cfgFile)
		{
			return new LocalizedString("VerboseRestoreIISConfig", "ExCE72AA", false, true, Strings.ResourceManager, new object[]
			{
				cfgFile
			});
		}

		public static LocalizedString JournalingReportNdrToNotSet
		{
			get
			{
				return new LocalizedString("JournalingReportNdrToNotSet", "Ex045117", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailFailedUnlinkSharePointSite(string mbx, string sharePointUrl, string ex)
		{
			return new LocalizedString("ErrorTeamMailFailedUnlinkSharePointSite", "", false, false, Strings.ResourceManager, new object[]
			{
				mbx,
				sharePointUrl,
				ex
			});
		}

		public static LocalizedString ProgressStatusInProgress
		{
			get
			{
				return new LocalizedString("ProgressStatusInProgress", "Ex893EC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppSomeTransactionsFailed(LocalizedString applicationShortName, string detailedInformation)
		{
			return new LocalizedString("CasHealthWebAppSomeTransactionsFailed", "Ex8C8626", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				detailedInformation
			});
		}

		public static LocalizedString ConfigurationContainerNotFoundException
		{
			get
			{
				return new LocalizedString("ConfigurationContainerNotFoundException", "ExA6CC2D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToMountReplicatedDbWithMissingEdbFile(string databaseId)
		{
			return new LocalizedString("ErrorFailedToMountReplicatedDbWithMissingEdbFile", "Ex029EE7", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		public static LocalizedString SmtpInternalServerSettings
		{
			get
			{
				return new LocalizedString("SmtpInternalServerSettings", "Ex82F9FE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateServicePlan(string identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateServicePlan", "Ex05288C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString TowsDomainNotSsl(string url)
		{
			return new LocalizedString("TowsDomainNotSsl", "", false, false, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ErrorConnectSystemMailbox(string identity, string database)
		{
			return new LocalizedString("ErrorConnectSystemMailbox", "Ex3C3ACA", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				database
			});
		}

		public static LocalizedString MalboxFolderRightsCreateSubfolders
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsCreateSubfolders", "Ex7A817D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseNoAssociatedUserMailboxOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedUserMailboxOnDatabaseCondition", "Ex0ABA1B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorFailedToManagedFoldersInMailbox
		{
			get
			{
				return new LocalizedString("ErrorFailedToManagedFoldersInMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidEndpointParameter(string parameterName, string type, LocalizedString reason)
		{
			return new LocalizedString("ErrorInvalidEndpointParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				type,
				reason
			});
		}

		public static LocalizedString FederationCertificateHasNoPrivateKey(string propertyName)
		{
			return new LocalizedString("FederationCertificateHasNoPrivateKey", "Ex0561D3", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString InterceptorErrorCustomResponseCodeInvalid(string value)
		{
			return new LocalizedString("InterceptorErrorCustomResponseCodeInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString VerboseFixingVersion(string id)
		{
			return new LocalizedString("VerboseFixingVersion", "ExC4CD3C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString StopDagFailedException(string errorServers, string dagName)
		{
			return new LocalizedString("StopDagFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				errorServers,
				dagName
			});
		}

		public static LocalizedString OpenServiceFailed
		{
			get
			{
				return new LocalizedString("OpenServiceFailed", "ExC0F5AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotLocateServer(string errorMsg)
		{
			return new LocalizedString("CannotLocateServer", "Ex4E3F79", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString ErrorNameNotFQDN
		{
			get
			{
				return new LocalizedString("ErrorNameNotFQDN", "ExCD15BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentMonitoringCorrelation
		{
			get
			{
				return new LocalizedString("SetupComponentMonitoringCorrelation", "Ex81CB81", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxServerNotHostingMdbException(string mailboxServer)
		{
			return new LocalizedString("MailboxServerNotHostingMdbException", "Ex22E636", false, true, Strings.ResourceManager, new object[]
			{
				mailboxServer
			});
		}

		public static LocalizedString SetupProgressCreateDatabaseFolders
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDatabaseFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InternalErrorException(int number)
		{
			return new LocalizedString("InternalErrorException", "", false, false, Strings.ResourceManager, new object[]
			{
				number
			});
		}

		public static LocalizedString WarningJobIsPoisoned(string identity, int poisonCount)
		{
			return new LocalizedString("WarningJobIsPoisoned", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				poisonCount
			});
		}

		public static LocalizedString VerboseOABVdirFound(string DN)
		{
			return new LocalizedString("VerboseOABVdirFound", "Ex4F69ED", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		public static LocalizedString CannotRunOnSubscribedEdge
		{
			get
			{
				return new LocalizedString("CannotRunOnSubscribedEdge", "ExB4AEEC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty
		{
			get
			{
				return new LocalizedString("NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TargetSharingEprNotSet(string remoteName)
		{
			return new LocalizedString("TargetSharingEprNotSet", "Ex30F2FE", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		public static LocalizedString MtrtMessageTransportRule(string ruleName, string id)
		{
			return new LocalizedString("MtrtMessageTransportRule", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName,
				id
			});
		}

		public static LocalizedString StatusMessageUpdatePublicFolderMailboxCompleted
		{
			get
			{
				return new LocalizedString("StatusMessageUpdatePublicFolderMailboxCompleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMalwareFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString RemoveADServerMetadataServerNotFoundNative(string name)
		{
			return new LocalizedString("RemoveADServerMetadataServerNotFoundNative", "Ex313874", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RemovingPackageByProductCode(Guid productCode)
		{
			return new LocalizedString("RemovingPackageByProductCode", "ExDFFB24", false, true, Strings.ResourceManager, new object[]
			{
				productCode
			});
		}

		public static LocalizedString DatabaseSeedStatusLabelReadPerSec
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelReadPerSec", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestRHUseCopyStatusRpc(string serverVersion, string rpcSupportVersion)
		{
			return new LocalizedString("TestRHUseCopyStatusRpc", "ExBE11A5", false, true, Strings.ResourceManager, new object[]
			{
				serverVersion,
				rpcSupportVersion
			});
		}

		public static LocalizedString DisableConversationsRunning(string user)
		{
			return new LocalizedString("DisableConversationsRunning", "ExFE2813", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorInvalidDateRangeException
		{
			get
			{
				return new LocalizedString("ErrorInvalidDateRangeException", "Ex2A50E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DuplicateTPDKeyId(string keyIdType, string keyId)
		{
			return new LocalizedString("DuplicateTPDKeyId", "", false, false, Strings.ResourceManager, new object[]
			{
				keyIdType,
				keyId
			});
		}

		public static LocalizedString ErrorNoTrustConfigured
		{
			get
			{
				return new LocalizedString("ErrorNoTrustConfigured", "ExBE1659", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEnableRoleGroup
		{
			get
			{
				return new LocalizedString("ErrorEnableRoleGroup", "Ex7E99A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeSubscriptionWarnConfigObjectsWillBeDeleted(string expiry)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSubscriptionWarnConfigObjectsWillBeDeleted", "Ex837AC9", false, true, Strings.ResourceManager, new object[]
			{
				expiry
			});
		}

		public static LocalizedString MapiTransactionFailedAgainstServerPrefix
		{
			get
			{
				return new LocalizedString("MapiTransactionFailedAgainstServerPrefix", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateFederationTrusts
		{
			get
			{
				return new LocalizedString("SetupProgressCreateFederationTrusts", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaPingRequestSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingRequestSucceeded", "Ex3BE15D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewInterceptorRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageNewInterceptorRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorE14TenantRulesNeedUpdateBeforeMigratingToE15(string errorDetails)
		{
			return new LocalizedString("ErrorE14TenantRulesNeedUpdateBeforeMigratingToE15", "", false, false, Strings.ResourceManager, new object[]
			{
				errorDetails
			});
		}

		public static LocalizedString ConfirmationOnDisablingInternalLicensing
		{
			get
			{
				return new LocalizedString("ConfirmationOnDisablingInternalLicensing", "Ex6A3664", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetDagHealthInfoNoResultsWarning
		{
			get
			{
				return new LocalizedString("GetDagHealthInfoNoResultsWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMailboxFolderPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxFolderPermission", "Ex232294", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString InvalidTransportRoleOnReceiveConnector
		{
			get
			{
				return new LocalizedString("InvalidTransportRoleOnReceiveConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallImap4ServiceTask
		{
			get
			{
				return new LocalizedString("UninstallImap4ServiceTask", "Ex95FBCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSetScopeValidateNewScopedAssignment(string id, string assignmentId)
		{
			return new LocalizedString("VerboseSetScopeValidateNewScopedAssignment", "ExCF4179", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		public static LocalizedString ErrorDlpPolicyTemplateAlreadyInstalled(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyTemplateAlreadyInstalled", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InstallNotificationsBrokerServiceTask
		{
			get
			{
				return new LocalizedString("InstallNotificationsBrokerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDlpPolicyCollectionCannotContainTransportRules
		{
			get
			{
				return new LocalizedString("ErrorDlpPolicyCollectionCannotContainTransportRules", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateEmailAddressPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateEmailAddressPolicy", "Ex48C969", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DelegateRoleTypePublicFolderAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypePublicFolderAdmin", "ExE311C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressAutoForwardEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressAutoForwardEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveDatabaseAvailabilityGroupNetwork(string network)
		{
			return new LocalizedString("ConfirmationMessageRemoveDatabaseAvailabilityGroupNetwork", "Ex0D9F0F", false, true, Strings.ResourceManager, new object[]
			{
				network
			});
		}

		public static LocalizedString MRSDiagnosticXmlParsingError(string error, string xml)
		{
			return new LocalizedString("MRSDiagnosticXmlParsingError", "", false, false, Strings.ResourceManager, new object[]
			{
				error,
				xml
			});
		}

		public static LocalizedString InvalidOrganizationGuid(string s)
		{
			return new LocalizedString("InvalidOrganizationGuid", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString VerboseMailboxDelegateSkipNotADUser(string user)
		{
			return new LocalizedString("VerboseMailboxDelegateSkipNotADUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ConfirmationMessageOverrideContentMailbox
		{
			get
			{
				return new LocalizedString("ConfirmationMessageOverrideContentMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CreateOwaForEcpWarning
		{
			get
			{
				return new LocalizedString("CreateOwaForEcpWarning", "ExA5316E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ContinueMountWithDataLoss
		{
			get
			{
				return new LocalizedString("ContinueMountWithDataLoss", "Ex3F5D9E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRecipientNotUnique(object idValue)
		{
			return new LocalizedString("ErrorRecipientNotUnique", "Ex8155FB", false, true, Strings.ResourceManager, new object[]
			{
				idValue
			});
		}

		public static LocalizedString InPlaceHoldScopeException(string identity)
		{
			return new LocalizedString("InPlaceHoldScopeException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSetEdgeSyncEhfConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageSetEdgeSyncEhfConnector", "Ex978E4F", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString SetupComponentConfigPermissionsBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentConfigPermissionsBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionDiagnosticStoreServiceIsNotRunning
		{
			get
			{
				return new LocalizedString("MapiTransactionDiagnosticStoreServiceIsNotRunning", "Ex43D2D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddAdminAuditLog(string org)
		{
			return new LocalizedString("ConfirmationMessageAddAdminAuditLog", "Ex1B0283", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString DurationShouldBeLessThan1Year(string duration)
		{
			return new LocalizedString("DurationShouldBeLessThan1Year", "", false, false, Strings.ResourceManager, new object[]
			{
				duration
			});
		}

		public static LocalizedString WarningSetMailboxSingleItemRecoveryDelay(double minutes)
		{
			return new LocalizedString("WarningSetMailboxSingleItemRecoveryDelay", "Ex86A45D", false, true, Strings.ResourceManager, new object[]
			{
				minutes
			});
		}

		public static LocalizedString ErrorMoreThanOneDefaultMailTipTranslationSpecified
		{
			get
			{
				return new LocalizedString("ErrorMoreThanOneDefaultMailTipTranslationSpecified", "Ex5C0759", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CompleteOrganizationUpgradeDescription
		{
			get
			{
				return new LocalizedString("CompleteOrganizationUpgradeDescription", "Ex44A409", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxReplicationServiceNotScanningForJobs(TimeSpan lastScanAge)
		{
			return new LocalizedString("MailboxReplicationServiceNotScanningForJobs", "ExD7475D", false, true, Strings.ResourceManager, new object[]
			{
				lastScanAge
			});
		}

		public static LocalizedString ErrorInvalidTenantGlsRecord(string identity, string glsResolvedForest, string sourceForest, string targetForest)
		{
			return new LocalizedString("ErrorInvalidTenantGlsRecord", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				glsResolvedForest,
				sourceForest,
				targetForest
			});
		}

		public static LocalizedString ErrorRecipientInSentToConditionCannotBeDistributionGroup(string recipient)
		{
			return new LocalizedString("ErrorRecipientInSentToConditionCannotBeDistributionGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString RestoreMailboxNotRecoveryDatabase(string databaseName)
		{
			return new LocalizedString("RestoreMailboxNotRecoveryDatabase", "ExC7D7BE", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		public static LocalizedString SchemaImportProcessFailure(string exeFileName, string schemaFileName, int code, string errorFilePath)
		{
			return new LocalizedString("SchemaImportProcessFailure", "ExA2B06D", false, true, Strings.ResourceManager, new object[]
			{
				exeFileName,
				schemaFileName,
				code,
				errorFilePath
			});
		}

		public static LocalizedString ErrorTenantOrgInUnexpectedState
		{
			get
			{
				return new LocalizedString("ErrorTenantOrgInUnexpectedState", "Ex2EAFD0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetFederationInformationShouldUseUnsecureRedirect(string url, string redirectUrl, string redirectHostname)
		{
			return new LocalizedString("GetFederationInformationShouldUseUnsecureRedirect", "ExCC29F5", false, true, Strings.ResourceManager, new object[]
			{
				url,
				redirectUrl,
				redirectHostname
			});
		}

		public static LocalizedString InvalidKeySize(int keySize)
		{
			return new LocalizedString("InvalidKeySize", "Ex2608ED", false, true, Strings.ResourceManager, new object[]
			{
				keySize
			});
		}

		public static LocalizedString ConversationsMailboxAlreadyEnabled
		{
			get
			{
				return new LocalizedString("ConversationsMailboxAlreadyEnabled", "Ex1B541E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDomainControllerIsNotGlobalCatelog(string dc, string error)
		{
			return new LocalizedString("VerboseDomainControllerIsNotGlobalCatelog", "ExBCF599", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				error
			});
		}

		public static LocalizedString ImportE14TransportRuleCollectionInDCError
		{
			get
			{
				return new LocalizedString("ImportE14TransportRuleCollectionInDCError", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRestoreDatabaseAvailabilityGroupADSite(string Identity, string ad)
		{
			return new LocalizedString("ConfirmationMessageRestoreDatabaseAvailabilityGroupADSite", "ExE8EA22", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ad
			});
		}

		public static LocalizedString VerboseDefaultOABIsOlderThanVersionE12(string DN)
		{
			return new LocalizedString("VerboseDefaultOABIsOlderThanVersionE12", "Ex10F6F7", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		public static LocalizedString ErrorCannotDeleteGroupRoleAssignmentConstraint(string roleGroupName, string roleAssignment, string role)
		{
			return new LocalizedString("ErrorCannotDeleteGroupRoleAssignmentConstraint", "ExF1D7F9", false, true, Strings.ResourceManager, new object[]
			{
				roleGroupName,
				roleAssignment,
				role
			});
		}

		public static LocalizedString MessageTypeAutoForward
		{
			get
			{
				return new LocalizedString("MessageTypeAutoForward", "Ex847DA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemovePolicyTipConfig(string dentity)
		{
			return new LocalizedString("ConfirmationMessageRemovePolicyTipConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				dentity
			});
		}

		public static LocalizedString VerboseCreatingChildVDir(string name, string parent)
		{
			return new LocalizedString("VerboseCreatingChildVDir", "Ex15495F", false, true, Strings.ResourceManager, new object[]
			{
				name,
				parent
			});
		}

		public static LocalizedString ErrorObjectAlreadyExists(string objType, string id)
		{
			return new LocalizedString("ErrorObjectAlreadyExists", "ExE19F77", false, true, Strings.ResourceManager, new object[]
			{
				objType,
				id
			});
		}

		public static LocalizedString InvalidWKObjectTargetException(string guid, string container, string target, string groupType)
		{
			return new LocalizedString("InvalidWKObjectTargetException", "Ex9EA27D", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				container,
				target,
				groupType
			});
		}

		public static LocalizedString RegistryKeyNotFound(string name, string path)
		{
			return new LocalizedString("RegistryKeyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				path
			});
		}

		public static LocalizedString GlobalLocatorServiceExceptionThrown(string e)
		{
			return new LocalizedString("GlobalLocatorServiceExceptionThrown", "", false, false, Strings.ResourceManager, new object[]
			{
				e
			});
		}

		public static LocalizedString ErrorNoGlobalGatalogFound(string forest)
		{
			return new LocalizedString("ErrorNoGlobalGatalogFound", "Ex663E47", false, true, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		public static LocalizedString ClassificationRuleCollectionNonUniqueLangCodesInRuleDescription(string resourceIdRef, string nonUniqueLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueLangCodesInRuleDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				nonUniqueLangCodes
			});
		}

		public static LocalizedString ErrorMaxParameterLengthExceeded(string parameterName, int maxValueLength)
		{
			return new LocalizedString("ErrorMaxParameterLengthExceeded", "ExC2B3D1", false, true, Strings.ResourceManager, new object[]
			{
				parameterName,
				maxValueLength
			});
		}

		public static LocalizedString CasHealthOwaHttpUnknownLogoffError
		{
			get
			{
				return new LocalizedString("CasHealthOwaHttpUnknownLogoffError", "ExD11123", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationChangePartitionTrust(string partitionName, string originalTrust, string newTrust)
		{
			return new LocalizedString("ConfirmationChangePartitionTrust", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName,
				originalTrust,
				newTrust
			});
		}

		public static LocalizedString CasHealthEasScenarioSyncFolderItems
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioSyncFolderItems", "Ex8D1A92", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FrontEndTransportServiceDisplayName
		{
			get
			{
				return new LocalizedString("FrontEndTransportServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorADTopologyServiceNotAvailable(string server, string errorMessage)
		{
			return new LocalizedString("ErrorADTopologyServiceNotAvailable", "Ex8E1845", false, true, Strings.ResourceManager, new object[]
			{
				server,
				errorMessage
			});
		}

		public static LocalizedString DagFswServerNotAccessibleToDeleteFswException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswServerNotAccessibleToDeleteFswException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		public static LocalizedString ComponentTaskSection
		{
			get
			{
				return new LocalizedString("ComponentTaskSection", "Ex864CCF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPermissionCheckFailure(string phoneNumber)
		{
			return new LocalizedString("ErrorPermissionCheckFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				phoneNumber
			});
		}

		public static LocalizedString ErrorUnknownAccessRights(string input)
		{
			return new LocalizedString("ErrorUnknownAccessRights", "Ex473D84", false, true, Strings.ResourceManager, new object[]
			{
				input
			});
		}

		public static LocalizedString FolderNameInvalidPathChars(string folderName)
		{
			return new LocalizedString("FolderNameInvalidPathChars", "", false, false, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		public static LocalizedString InvalidAgentName(string name)
		{
			return new LocalizedString("InvalidAgentName", "Ex07AB61", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailboxQuarantine(string mailbox)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxQuarantine", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageRemoveJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveJournalrule", "ExF41353", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope
		{
			get
			{
				return new LocalizedString("ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope", "Ex613FFA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageExportTransportRuleCollection
		{
			get
			{
				return new LocalizedString("ConfirmationMessageExportTransportRuleCollection", "ExD452E2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRuleMissingPredicate
		{
			get
			{
				return new LocalizedString("ErrorRuleMissingPredicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteLegacyWithE15NotAllowed
		{
			get
			{
				return new LocalizedString("ErrorRemoteLegacyWithE15NotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallMailboxTransportSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailboxTransportSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TowsXForest(string emailAddress, string url)
		{
			return new LocalizedString("TowsXForest", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress,
				url
			});
		}

		public static LocalizedString ErrorOrganizationParameterRequired
		{
			get
			{
				return new LocalizedString("ErrorOrganizationParameterRequired", "Ex48A959", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDateRangeInvalid
		{
			get
			{
				return new LocalizedString("ErrorDateRangeInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeStreamingOpticsDescription
		{
			get
			{
				return new LocalizedString("ExchangeStreamingOpticsDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDepartRestrictionInvalid
		{
			get
			{
				return new LocalizedString("ErrorDepartRestrictionInvalid", "Ex4B7DB8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LocalSiteNameIsEmpty
		{
			get
			{
				return new LocalizedString("LocalSiteNameIsEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaAttachmentFileTypeInvalidCharacterException(string fieldName, int arrayIndex, string invalidType, int invalidCharIndex, char invalidChar)
		{
			return new LocalizedString("OwaAttachmentFileTypeInvalidCharacterException", "Ex4B2B10", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				arrayIndex,
				invalidType,
				invalidCharIndex,
				invalidChar
			});
		}

		public static LocalizedString InvalidIncidentReportContent
		{
			get
			{
				return new LocalizedString("InvalidIncidentReportContent", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthHttpResponseHeaders
		{
			get
			{
				return new LocalizedString("CasHealthHttpResponseHeaders", "ExC8B2A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressLicenseEnforcement
		{
			get
			{
				return new LocalizedString("SetupProgressLicenseEnforcement", "Ex435A2E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToRetrieveFederationMetadata(string exception)
		{
			return new LocalizedString("FailedToRetrieveFederationMetadata", "Ex32DDC4", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString TenantNotificationNoNotificationRecipientsSpecified
		{
			get
			{
				return new LocalizedString("TenantNotificationNoNotificationRecipientsSpecified", "Ex45E50D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveActiveSyncDeviceClass(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveActiveSyncDeviceClass", "Ex0C871F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TestSearchTask
		{
			get
			{
				return new LocalizedString("TestSearchTask", "ExEAB277", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveADPermissionAccessRights(string Identity, string AccessRights, string User)
		{
			return new LocalizedString("ConfirmationMessageRemoveADPermissionAccessRights", "Ex7BA7BC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				AccessRights,
				User
			});
		}

		public static LocalizedString ErrorVdirNotExisted(string app, string configFile)
		{
			return new LocalizedString("ErrorVdirNotExisted", "ExB92BC9", false, true, Strings.ResourceManager, new object[]
			{
				app,
				configFile
			});
		}

		public static LocalizedString ErrorUserOrSecurityGroupNotUnique(string id)
		{
			return new LocalizedString("ErrorUserOrSecurityGroupNotUnique", "ExC8C26B", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString MailboxNotJunkRuleCapable(string identity)
		{
			return new LocalizedString("MailboxNotJunkRuleCapable", "Ex7D0223", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ServiceFailedToStop(string service)
		{
			return new LocalizedString("ServiceFailedToStop", "Ex99045C", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		public static LocalizedString SetupProgressUMFaxEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressUMFaxEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorVerificationCodeUnmatch(string passcode)
		{
			return new LocalizedString("ErrorVerificationCodeUnmatch", "ExF89182", false, true, Strings.ResourceManager, new object[]
			{
				passcode
			});
		}

		public static LocalizedString ErrorMultipleDefaultRetentionPolicy
		{
			get
			{
				return new LocalizedString("ErrorMultipleDefaultRetentionPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateOutOfTheBoxReducedMrmTags
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutOfTheBoxReducedMrmTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AgentLogNoLogsAtLocation(string location)
		{
			return new LocalizedString("AgentLogNoLogsAtLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				location
			});
		}

		public static LocalizedString ComplianceSearchCreateTaskActivity
		{
			get
			{
				return new LocalizedString("ComplianceSearchCreateTaskActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaGetLogonPageStart(string url)
		{
			return new LocalizedString("CasHealthOwaGetLogonPageStart", "Ex0D7D00", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SupportedToolsCannotFindFile
		{
			get
			{
				return new LocalizedString("SupportedToolsCannotFindFile", "Ex787421", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskNodeNotFoundTryConfigOnlyException(string machineName, string clusterName)
		{
			return new LocalizedString("DagTaskNodeNotFoundTryConfigOnlyException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName,
				clusterName
			});
		}

		public static LocalizedString LegacyRegistryMarkersComponentDescription
		{
			get
			{
				return new LocalizedString("LegacyRegistryMarkersComponentDescription", "ExF4D72E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RunningAlwaysToRunComponent(string component)
		{
			return new LocalizedString("RunningAlwaysToRunComponent", "Ex1713D3", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString NoPermissionToReadFile(string file)
		{
			return new LocalizedString("NoPermissionToReadFile", "ExC29EA7", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString NoMailboxAssociationIdentityProvided
		{
			get
			{
				return new LocalizedString("NoMailboxAssociationIdentityProvided", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFixingEmailAddressPolicyFilterMetadata
		{
			get
			{
				return new LocalizedString("VerboseFixingEmailAddressPolicyFilterMetadata", "ExC2168A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeOtherPhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributeOtherPhoneNumber", "Ex9CB2A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeUpgradeBucketNotEnoughCapacity(string bucket, string bucketCapacity, string orgMailboxes)
		{
			return new LocalizedString("ExchangeUpgradeBucketNotEnoughCapacity", "", false, false, Strings.ResourceManager, new object[]
			{
				bucket,
				bucketCapacity,
				orgMailboxes
			});
		}

		public static LocalizedString AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups
		{
			get
			{
				return new LocalizedString("AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups", "Ex6CD14A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRemovingRoleAssignment(string id)
		{
			return new LocalizedString("VerboseRemovingRoleAssignment", "Ex1888CF", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageSetCountryList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetCountryList", "Ex4354B0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString NoPrivateKeyInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoPrivateKeyInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDisableArbitrationMailboxWithOABsAssigned(string mbxId)
		{
			return new LocalizedString("ErrorDisableArbitrationMailboxWithOABsAssigned", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString VerboseResetAdministrativeGroup(string id)
		{
			return new LocalizedString("VerboseResetAdministrativeGroup", "ExB92DC2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorMailboxDatabaseNotOnE14Sp1Server(string database)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnE14Sp1Server", "Ex78D81F", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString AllAlternateServiceAccountCredentialsAreInvalidOnCleanup(string fqdn)
		{
			return new LocalizedString("AllAlternateServiceAccountCredentialsAreInvalidOnCleanup", "Ex749937", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		public static LocalizedString TestSearchRunning(string user)
		{
			return new LocalizedString("TestSearchRunning", "Ex24B8FF", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString EnableConversationsProcessingConversations(string user)
		{
			return new LocalizedString("EnableConversationsProcessingConversations", "Ex6BBA57", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorMailboxNotUnique(string identity)
		{
			return new LocalizedString("ErrorMailboxNotUnique", "Ex838C9A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorCannotUpdateLegacyMailbox(string mailbox)
		{
			return new LocalizedString("ErrorCannotUpdateLegacyMailbox", "Ex6FD99C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString RegistryValueMissingOrInvalidException(string keyPath, string valueName)
		{
			return new LocalizedString("RegistryValueMissingOrInvalidException", "", false, false, Strings.ResourceManager, new object[]
			{
				keyPath,
				valueName
			});
		}

		public static LocalizedString CasHealthCasServerNotFound
		{
			get
			{
				return new LocalizedString("CasHealthCasServerNotFound", "Ex870341", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthCalendarShortName
		{
			get
			{
				return new LocalizedString("CasHealthCalendarShortName", "ExEFA4CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToDeSerializeImportedTrustedPublishingDomain(Exception ex)
		{
			return new LocalizedString("FailedToDeSerializeImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				ex
			});
		}

		public static LocalizedString TenantAlreadyHasMigrationDifferentProtocol(string tenantName, string protocolname)
		{
			return new LocalizedString("TenantAlreadyHasMigrationDifferentProtocol", "Ex84750B", false, true, Strings.ResourceManager, new object[]
			{
				tenantName,
				protocolname
			});
		}

		public static LocalizedString ErrorCannotMovePublicFoldersWithNullEntryId
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFoldersWithNullEntryId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ChangePasswordFailed
		{
			get
			{
				return new LocalizedString("ChangePasswordFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailuserWithMultipleJournalArchive(string journalAddress)
		{
			return new LocalizedString("ErrorMailuserWithMultipleJournalArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				journalAddress
			});
		}

		public static LocalizedString ErrorUserOrContactNotFound(string id)
		{
			return new LocalizedString("ErrorUserOrContactNotFound", "ExA3CBA1", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CasHealthOwaCredentialFailure
		{
			get
			{
				return new LocalizedString("CasHealthOwaCredentialFailure", "Ex32D139", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewDatabaseAvailabilityGroupConfiguration(string Server)
		{
			return new LocalizedString("ConfirmationMessageNewDatabaseAvailabilityGroupConfiguration", "", false, false, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString ErrorNetIDWithoutBypassWLIDInSet
		{
			get
			{
				return new LocalizedString("ErrorNetIDWithoutBypassWLIDInSet", "ExC96311", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CheckReportingServerDatabaseParameters(string errorMsg)
		{
			return new LocalizedString("CheckReportingServerDatabaseParameters", "Ex0FC867", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString ErrorNoAutoGroupApprovalApplicationInOrg(string org)
		{
			return new LocalizedString("ErrorNoAutoGroupApprovalApplicationInOrg", "Ex62D362", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString WaitingForClusterServiceToStart(string serverName)
		{
			return new LocalizedString("WaitingForClusterServiceToStart", "Ex4C5136", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode
		{
			get
			{
				return new LocalizedString("PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode", "ExAA7B90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallOldMailSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("UninstallOldMailSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DefaultAllContacts
		{
			get
			{
				return new LocalizedString("DefaultAllContacts", "ExF0DAE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningApplyingTransitionWhileRelocationStatusNotReachedStateRequested(string identity, string requested, string status)
		{
			return new LocalizedString("WarningApplyingTransitionWhileRelocationStatusNotReachedStateRequested", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				requested,
				status
			});
		}

		public static LocalizedString SeederCancelDbSeedRpcFailedException(string dbName, string targetMachine, string errMessage)
		{
			return new LocalizedString("SeederCancelDbSeedRpcFailedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dbName,
				targetMachine,
				errMessage
			});
		}

		public static LocalizedString UsingMonitoringMailboxAuthenticationCredentials
		{
			get
			{
				return new LocalizedString("UsingMonitoringMailboxAuthenticationCredentials", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetManagementRoleEntry(string Name, string Role)
		{
			return new LocalizedString("ConfirmationMessageSetManagementRoleEntry", "Ex582010", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role
			});
		}

		public static LocalizedString MailboxIsDownlevel(string userDisplayName)
		{
			return new LocalizedString("MailboxIsDownlevel", "Ex872D51", false, true, Strings.ResourceManager, new object[]
			{
				userDisplayName
			});
		}

		public static LocalizedString ConfirmationMessageNewGlobalAddressList(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewGlobalAddressList", "ExEFDD42", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString MoveFailedValidation(string validationMessage)
		{
			return new LocalizedString("MoveFailedValidation", "Ex17BE10", false, true, Strings.ResourceManager, new object[]
			{
				validationMessage
			});
		}

		public static LocalizedString ErrorMoveActiveCopyNotFoundException(Guid db, string errorMsg)
		{
			return new LocalizedString("ErrorMoveActiveCopyNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				db,
				errorMsg
			});
		}

		public static LocalizedString IntegratedVDirNotSupported
		{
			get
			{
				return new LocalizedString("IntegratedVDirNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExpirationTimeTooSoon(DateTime time)
		{
			return new LocalizedString("ExpirationTimeTooSoon", "ExFAD392", false, true, Strings.ResourceManager, new object[]
			{
				time
			});
		}

		public static LocalizedString SetupProgressCreateRBACPoliciesContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACPoliciesContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewRBACDefaultPolicy(string Name, string Roles)
		{
			return new LocalizedString("ConfirmationMessageNewRBACDefaultPolicy", "Ex363755", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Roles
			});
		}

		public static LocalizedString RoleTaskCount(string role, int count)
		{
			return new LocalizedString("RoleTaskCount", "ExD02B10", false, true, Strings.ResourceManager, new object[]
			{
				role,
				count
			});
		}

		public static LocalizedString ProtectedServiceHostDescription
		{
			get
			{
				return new LocalizedString("ProtectedServiceHostDescription", "Ex6186EF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotFindDCForDomain(string domainDN)
		{
			return new LocalizedString("ErrorCannotFindDCForDomain", "Ex1B1D6E", false, true, Strings.ResourceManager, new object[]
			{
				domainDN
			});
		}

		public static LocalizedString VerboseCheckLogFileExistingInPath(string server, string path)
		{
			return new LocalizedString("VerboseCheckLogFileExistingInPath", "ExC6D662", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		public static LocalizedString AlsEmailBodyStartDate(string date)
		{
			return new LocalizedString("AlsEmailBodyStartDate", "", false, false, Strings.ResourceManager, new object[]
			{
				date
			});
		}

		public static LocalizedString SearchCompletedCannotBeResumed(string name)
		{
			return new LocalizedString("SearchCompletedCannotBeResumed", "ExD9A7E3", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorNoRemoteGlobalCatalogSettingForLocalMove(string identity)
		{
			return new LocalizedString("ErrorNoRemoteGlobalCatalogSettingForLocalMove", "Ex3202D2", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString VerboseDefaultOABFound(string id)
		{
			return new LocalizedString("VerboseDefaultOABFound", "ExFD42E4", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorTemplateAndTemplateDataCannotBothBeDefined
		{
			get
			{
				return new LocalizedString("ErrorTemplateAndTemplateDataCannotBothBeDefined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentMidFileCopyMonitoring
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyMonitoring", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoPreLIndividual(RightsManagementFailureCode failureCode)
		{
			return new LocalizedString("InfoPreLIndividual", "Ex15CE6A", false, true, Strings.ResourceManager, new object[]
			{
				failureCode
			});
		}

		public static LocalizedString SetupProgressStartingCredentialService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingCredentialService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnPremisesOrganizationOrganizationRelationshipNotExists(OrganizationRelationshipIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOrganizationRelationshipNotExists", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString InvalidIntegrityCheckJobIdentity(string identity)
		{
			return new LocalizedString("InvalidIntegrityCheckJobIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CasHealthEasSyncOne
		{
			get
			{
				return new LocalizedString("CasHealthEasSyncOne", "ExB0EF01", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MachinePingScenario
		{
			get
			{
				return new LocalizedString("MachinePingScenario", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAutomaticProvisioningFailedToFindDatabase(string parameterName)
		{
			return new LocalizedString("ErrorAutomaticProvisioningFailedToFindDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString ProcessUtilizationManagerServiceDescription
		{
			get
			{
				return new LocalizedString("ProcessUtilizationManagerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPartitionNotEnabledForProvisioning(string partitionName)
		{
			return new LocalizedString("ErrorPartitionNotEnabledForProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		public static LocalizedString RequiredDecryptionCertificate(string ski)
		{
			return new LocalizedString("RequiredDecryptionCertificate", "", false, false, Strings.ResourceManager, new object[]
			{
				ski
			});
		}

		public static LocalizedString ConfirmationMessageRemoveUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveUser", "ExA5E17C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TenantAlreadyHasMigrationPending
		{
			get
			{
				return new LocalizedString("TenantAlreadyHasMigrationPending", "Ex3EE219", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidReportingStartDate(DateTime startDate)
		{
			return new LocalizedString("InvalidReportingStartDate", "ExA56D5B", false, true, Strings.ResourceManager, new object[]
			{
				startDate
			});
		}

		public static LocalizedString ErrorReHomeTargetDatabaseLocationNotFound(string database)
		{
			return new LocalizedString("ErrorReHomeTargetDatabaseLocationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString OwaMetabaseStopBinFilteringFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseStopBinFilteringFailure", "ExC31788", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetQueueDigestSiteNotFound(AdSiteIdParameter adObjectId)
		{
			return new LocalizedString("GetQueueDigestSiteNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				adObjectId
			});
		}

		public static LocalizedString ConfirmationMessageNewTopLevelManagementRole(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewTopLevelManagementRole", "ExE613B3", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString PopImapSearchForTestMsg(string subject)
		{
			return new LocalizedString("PopImapSearchForTestMsg", "Ex1B1BB5", false, true, Strings.ResourceManager, new object[]
			{
				subject
			});
		}

		public static LocalizedString CasHealthEasScenarioPing
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioPing", "ExAC0B2B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDlpPolicyNotFound(string identity)
		{
			return new LocalizedString("ErrorDlpPolicyNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CreateEcpForOwaWarning
		{
			get
			{
				return new LocalizedString("CreateEcpForOwaWarning", "Ex8DD5BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageDisableTransportRule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableTransportRule", "Ex0D50B7", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString LookupExtendedRightFailedException(string right)
		{
			return new LocalizedString("LookupExtendedRightFailedException", "Ex7EF958", false, true, Strings.ResourceManager, new object[]
			{
				right
			});
		}

		public static LocalizedString ErrorRecipientViewRootNotFoundUnderScope(string ou, string scope)
		{
			return new LocalizedString("ErrorRecipientViewRootNotFoundUnderScope", "Ex3A25E7", false, true, Strings.ResourceManager, new object[]
			{
				ou,
				scope
			});
		}

		public static LocalizedString ErrorCannotChangeMailboxOutOfWriteScope(string mbx, string reason)
		{
			return new LocalizedString("ErrorCannotChangeMailboxOutOfWriteScope", "Ex90FC38", false, true, Strings.ResourceManager, new object[]
			{
				mbx,
				reason
			});
		}

		public static LocalizedString ConfirmationMessageRemoveDelegate(string Identity, string Group, string Role)
		{
			return new LocalizedString("ConfirmationMessageRemoveDelegate", "ExAEC004", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Group,
				Role
			});
		}

		public static LocalizedString ErrorMailboxServerNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMailboxServerNotUnique", "Ex204A49", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString LogMigrationAfterApplyRUS(string alias, string proxyAddresses)
		{
			return new LocalizedString("LogMigrationAfterApplyRUS", "Ex1EC934", false, true, Strings.ResourceManager, new object[]
			{
				alias,
				proxyAddresses
			});
		}

		public static LocalizedString ConfirmationMessageTestEdgeSyncMserv
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestEdgeSyncMserv", "Ex3161CB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotCreateRoleAcrossOrganizations(string currentOrg, string parentRole, string parentOrg)
		{
			return new LocalizedString("ErrorCannotCreateRoleAcrossOrganizations", "Ex68CD6B", false, true, Strings.ResourceManager, new object[]
			{
				currentOrg,
				parentRole,
				parentOrg
			});
		}

		public static LocalizedString ErrorAuthNewCertificateExpire(string thumbprint)
		{
			return new LocalizedString("ErrorAuthNewCertificateExpire", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorCannotRemovePublicFolderMailboxWithFolders
		{
			get
			{
				return new LocalizedString("ErrorCannotRemovePublicFolderMailboxWithFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMCallAnsweringRuleLeaveVoiceMessage
		{
			get
			{
				return new LocalizedString("UMCallAnsweringRuleLeaveVoiceMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeCertificateUpdatedForUM(string server)
		{
			return new LocalizedString("ExchangeCertificateUpdatedForUM", "Ex86FAD9", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString MicrosoftExchangeContainerNotFoundException
		{
			get
			{
				return new LocalizedString("MicrosoftExchangeContainerNotFoundException", "Ex0A8CF2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToRemoveUserPhotoException(string identity, string failure)
		{
			return new LocalizedString("UnableToRemoveUserPhotoException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				failure
			});
		}

		public static LocalizedString CannotFindSubscriptionSite
		{
			get
			{
				return new LocalizedString("CannotFindSubscriptionSite", "ExFA160E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnsupportedAssignmentMethod(string assignmentMethod)
		{
			return new LocalizedString("ErrorUnsupportedAssignmentMethod", "Ex334F21", false, true, Strings.ResourceManager, new object[]
			{
				assignmentMethod
			});
		}

		public static LocalizedString ErrorGroupMembersCannotContainItself(string id)
		{
			return new LocalizedString("ErrorGroupMembersCannotContainItself", "Ex6B2848", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString CasHealtRemotePowerShellOpenRunspaceSucceeded
		{
			get
			{
				return new LocalizedString("CasHealtRemotePowerShellOpenRunspaceSucceeded", "ExFB4330", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPasswordTooShort(string memberName)
		{
			return new LocalizedString("ErrorPasswordTooShort", "Ex8FDC23", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString CasHealthEasScenarioDeleteItem
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioDeleteItem", "ExA29736", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRequestIsProtected(string mailbox)
		{
			return new LocalizedString("ErrorRequestIsProtected", "ExA4FC0C", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageSetFederationTrust1(string Identity, string Thumbprint, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust1", "Ex96F52B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Thumbprint,
				metadataUrl
			});
		}

		public static LocalizedString UserFederatedDomainInMultipleRemoteOrgRelationship(string userFedDomain, string remoteOrgRel)
		{
			return new LocalizedString("UserFederatedDomainInMultipleRemoteOrgRelationship", "", false, false, Strings.ResourceManager, new object[]
			{
				userFedDomain,
				remoteOrgRel
			});
		}

		public static LocalizedString ConfirmationMessageAddMailboxFolderPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxFolderPermission", "ExB14F60", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString ConfirmationMessageInstallSystemMessageClassification
		{
			get
			{
				return new LocalizedString("ConfirmationMessageInstallSystemMessageClassification", "ExDCF461", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoWroteObjectToDC(string server, string dn)
		{
			return new LocalizedString("InfoWroteObjectToDC", "Ex423EDF", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dn
			});
		}

		public static LocalizedString ErrorOwaMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorOwaMailboxPolicyNotFound", "Ex881212", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString CasHealthWebAppLiveIdStart
		{
			get
			{
				return new LocalizedString("CasHealthWebAppLiveIdStart", "ExE9305A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewFederationTrustSuccessAppId(string partnerSTS, string appId)
		{
			return new LocalizedString("NewFederationTrustSuccessAppId", "ExBCF35E", false, true, Strings.ResourceManager, new object[]
			{
				partnerSTS,
				appId
			});
		}

		public static LocalizedString ErrorCannotUpdateRecipientOfDomain(string domainFqdn, string errorMessage)
		{
			return new LocalizedString("ErrorCannotUpdateRecipientOfDomain", "Ex5E4B39", false, true, Strings.ResourceManager, new object[]
			{
				domainFqdn,
				errorMessage
			});
		}

		public static LocalizedString SetupProgressMailUserCountQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMailUserCountQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PhoneNumberIsNotE164
		{
			get
			{
				return new LocalizedString("PhoneNumberIsNotE164", "Ex2D8988", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AssistantsServiceDisplayName
		{
			get
			{
				return new LocalizedString("AssistantsServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MapiTransactionDiagnosticStoreStateCheckFailure(string errorMsg)
		{
			return new LocalizedString("MapiTransactionDiagnosticStoreStateCheckFailure", "ExF63898", false, true, Strings.ResourceManager, new object[]
			{
				errorMsg
			});
		}

		public static LocalizedString ErrorDbCopyHostServerInvalid(string dbCopyName)
		{
			return new LocalizedString("ErrorDbCopyHostServerInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopyName
			});
		}

		public static LocalizedString ErrorInvalidMoveRequest(string identity, string validationMessage)
		{
			return new LocalizedString("ErrorInvalidMoveRequest", "ExDFC442", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				validationMessage
			});
		}

		public static LocalizedString ErrorRmsOnlineAuthenticationCertificateNotFound
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlineAuthenticationCertificateNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailContact", "Ex1A0048", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WordIsWhiteSpace
		{
			get
			{
				return new LocalizedString("WordIsWhiteSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageStartMsoFullSync(string orgId, string syncType)
		{
			return new LocalizedString("ConfirmationMessageStartMsoFullSync", "ExC18733", false, true, Strings.ResourceManager, new object[]
			{
				orgId,
				syncType
			});
		}

		public static LocalizedString ErrorCannotSetJournalingReportNdrTo
		{
			get
			{
				return new LocalizedString("ErrorCannotSetJournalingReportNdrTo", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionParameterSourceForestGlobalCatalog(string sourceForestGCParameter, string gcParameter)
		{
			return new LocalizedString("ExceptionParameterSourceForestGlobalCatalog", "ExABE0CA", false, true, Strings.ResourceManager, new object[]
			{
				sourceForestGCParameter,
				gcParameter
			});
		}

		public static LocalizedString ConfirmationMessageSetExchangeAssistanceId(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeAssistanceId", "Ex09CC5C", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString OverrideNotFound(string identity, string type, string propertyName)
		{
			return new LocalizedString("OverrideNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				type,
				propertyName
			});
		}

		public static LocalizedString CreateUsgPermissionDeniedException(string dn)
		{
			return new LocalizedString("CreateUsgPermissionDeniedException", "ExD99086", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString VerboseSettingWriteShadowProperties(string value)
		{
			return new LocalizedString("VerboseSettingWriteShadowProperties", "Ex84F2A8", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString SetupProgressOwaDelegateAccessEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaDelegateAccessEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RMSServerIsNotConfigured
		{
			get
			{
				return new LocalizedString("RMSServerIsNotConfigured", "ExDB14FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMNotAvailableForUserInTargetForest
		{
			get
			{
				return new LocalizedString("UMNotAvailableForUserInTargetForest", "Ex2BF818", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetServiceInstanceMapResultCodeUnspecifiedError
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodeUnspecifiedError", "ExAA06F9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentProvisioningFeatures
		{
			get
			{
				return new LocalizedString("SetupComponentProvisioningFeatures", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateFDS(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateFDS", "Ex051685", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorIISPathInvalid(string iisPath)
		{
			return new LocalizedString("ErrorIISPathInvalid", "Ex7F124A", false, true, Strings.ResourceManager, new object[]
			{
				iisPath
			});
		}

		public static LocalizedString CasHealthOwaTrustAnyCertificate
		{
			get
			{
				return new LocalizedString("CasHealthOwaTrustAnyCertificate", "ExE5B624", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasScenarioOptions
		{
			get
			{
				return new LocalizedString("CasHealthEasScenarioOptions", "Ex1F3236", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppOrphanVirtualDirectory(LocalizedString applicationShortName, string name)
		{
			return new LocalizedString("CasHealthWebAppOrphanVirtualDirectory", "Ex45FAFC", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				name
			});
		}

		public static LocalizedString ErrorOriginalEdbFilePathMissed(string database)
		{
			return new LocalizedString("ErrorOriginalEdbFilePathMissed", "ExE0101C", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ErrorCannotCleanupSecondaryDomain(string exception)
		{
			return new LocalizedString("ErrorCannotCleanupSecondaryDomain", "Ex6B756C", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString ErrorRemoveMailboxWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailboxWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString ErrorCannotDeleteGlobalThrottlingPolicy
		{
			get
			{
				return new LocalizedString("ErrorCannotDeleteGlobalThrottlingPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotSetToOldClientAccessArray(string arrayVersion, string minSupportedVersion)
		{
			return new LocalizedString("ErrorCannotSetToOldClientAccessArray", "", false, false, Strings.ResourceManager, new object[]
			{
				arrayVersion,
				minSupportedVersion
			});
		}

		public static LocalizedString NewMailboxSearchActivity
		{
			get
			{
				return new LocalizedString("NewMailboxSearchActivity", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString JournalingParameterErrorGccWithScope
		{
			get
			{
				return new LocalizedString("JournalingParameterErrorGccWithScope", "Ex7D11B4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnableToUpdateGroupMailbox(string error)
		{
			return new LocalizedString("ErrorUnableToUpdateGroupMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ErrorNotActiveOrganization(string orgId)
		{
			return new LocalizedString("ErrorNotActiveOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString ExceptionOccured(string message)
		{
			return new LocalizedString("ExceptionOccured", "Ex9F0AB3", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString CasHealthOwaNoAuthChallenge
		{
			get
			{
				return new LocalizedString("CasHealthOwaNoAuthChallenge", "ExCBA41D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAssigneeComputerNotFound(string id)
		{
			return new LocalizedString("ErrorAssigneeComputerNotFound", "Ex093D2C", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ExportingMailbox(string identity, string sourceServer, string pstFilePath)
		{
			return new LocalizedString("ExportingMailbox", "Ex119C3E", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				sourceServer,
				pstFilePath
			});
		}

		public static LocalizedString InstallMailboxReplicationServiceTask
		{
			get
			{
				return new LocalizedString("InstallMailboxReplicationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportAutoDiscoverSameForest
		{
			get
			{
				return new LocalizedString("ExportAutoDiscoverSameForest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddRoleGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageAddRoleGroupMember", "Ex4ADCAC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		public static LocalizedString ErrorServicePlanDoesNotSupportPilot(string name, string plan, string programId)
		{
			return new LocalizedString("ErrorServicePlanDoesNotSupportPilot", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				plan,
				programId
			});
		}

		public static LocalizedString JournalRuleCorrupt
		{
			get
			{
				return new LocalizedString("JournalRuleCorrupt", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusSuspended
		{
			get
			{
				return new LocalizedString("CopyStatusSuspended", "ExF547EE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BestEffortNotAllowedInServerModeException
		{
			get
			{
				return new LocalizedString("BestEffortNotAllowedInServerModeException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString RemoveProvisionedServerDescription
		{
			get
			{
				return new LocalizedString("RemoveProvisionedServerDescription", "Ex058EA6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuthSetNewEffectDate
		{
			get
			{
				return new LocalizedString("ErrorAuthSetNewEffectDate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseResolvingCustomRecipientWriteScope
		{
			get
			{
				return new LocalizedString("VerboseResolvingCustomRecipientWriteScope", "Ex0CDF18", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallTranscodingServiceEx
		{
			get
			{
				return new LocalizedString("UninstallTranscodingServiceEx", "Ex110532", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveReportingVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageRemoveReportingVirtualDirectory", "Ex60FA0A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ArchiveDatabaseDifferentFromRawValueError(string archiveDb, string archiveDbRaw)
		{
			return new LocalizedString("ArchiveDatabaseDifferentFromRawValueError", "", false, false, Strings.ResourceManager, new object[]
			{
				archiveDb,
				archiveDbRaw
			});
		}

		public static LocalizedString ExportMailboxDiagnosticLogsComponentNotFound(string componentName, string identity, string acceptableValues)
		{
			return new LocalizedString("ExportMailboxDiagnosticLogsComponentNotFound", "Ex4988CA", false, true, Strings.ResourceManager, new object[]
			{
				componentName,
				identity,
				acceptableValues
			});
		}

		public static LocalizedString MtrtMessageSpamAdditional
		{
			get
			{
				return new LocalizedString("MtrtMessageSpamAdditional", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorProvisioningReconciliationCookieNotSet
		{
			get
			{
				return new LocalizedString("ErrorProvisioningReconciliationCookieNotSet", "ExBDE244", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestMailflowSucceededNoDatabaseOnTargetServer(string target)
		{
			return new LocalizedString("TestMailflowSucceededNoDatabaseOnTargetServer", "Ex6C055D", false, true, Strings.ResourceManager, new object[]
			{
				target
			});
		}

		public static LocalizedString ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DirectoryMustBeEmpty(string directory)
		{
			return new LocalizedString("DirectoryMustBeEmpty", "ExD0C911", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		public static LocalizedString GetCalendarDiagnosticLogNoCleanGoidErrorMessage
		{
			get
			{
				return new LocalizedString("GetCalendarDiagnosticLogNoCleanGoidErrorMessage", "ExA523F4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCustomAttribute8
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute8", "Ex34464C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch
		{
			get
			{
				return new LocalizedString("ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxDatabaseCasImap4CasPop3CasWebServicesServiceProblemMessage(int impactedUserCount)
		{
			return new LocalizedString("MailboxDatabaseCasImap4CasPop3CasWebServicesServiceProblemMessage", "Ex24C944", false, true, Strings.ResourceManager, new object[]
			{
				impactedUserCount
			});
		}

		public static LocalizedString ConfirmationMessageNewSyncUser(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewSyncUser", "Ex654801", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString SetupComponentConfiguringMDB
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMDB", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SuspendSgcRpcRequest(string sg)
		{
			return new LocalizedString("SuspendSgcRpcRequest", "Ex85A887", false, true, Strings.ResourceManager, new object[]
			{
				sg
			});
		}

		public static LocalizedString ConfirmationMessageRemoveRBACPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRBACPolicy", "ExF3BD18", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorArrayRemovalMembership(string identity, int serverCount)
		{
			return new LocalizedString("ErrorArrayRemovalMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				serverCount
			});
		}

		public static LocalizedString ProgressStopUpdateAD
		{
			get
			{
				return new LocalizedString("ProgressStopUpdateAD", "Ex6FF99A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AceIsUnsupportedTypeException(string aceType)
		{
			return new LocalizedString("AceIsUnsupportedTypeException", "Ex152A29", false, true, Strings.ResourceManager, new object[]
			{
				aceType
			});
		}

		public static LocalizedString Warning
		{
			get
			{
				return new LocalizedString("Warning", "Ex3E2494", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeManager
		{
			get
			{
				return new LocalizedString("ADAttributeManager", "Ex6E8364", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidDateParameterException(DateTime startDate, DateTime endDate)
		{
			return new LocalizedString("InvalidDateParameterException", "", false, false, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		public static LocalizedString ErrorSupervisionEntryNotPresent(string entry, string tag)
		{
			return new LocalizedString("ErrorSupervisionEntryNotPresent", "ExD9FD5F", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		public static LocalizedString DomainNotReachableException(string dom, string taskName)
		{
			return new LocalizedString("DomainNotReachableException", "Ex02887D", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				taskName
			});
		}

		public static LocalizedString PageCookieInterruptedException
		{
			get
			{
				return new LocalizedString("PageCookieInterruptedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoArchiveForTeamMailbox(string user)
		{
			return new LocalizedString("ErrorNoArchiveForTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString UnSupportedUMLanguageException(string language)
		{
			return new LocalizedString("UnSupportedUMLanguageException", "", false, false, Strings.ResourceManager, new object[]
			{
				language
			});
		}

		public static LocalizedString ErrorUnableToReleaseDomain(string domain, string appId, string errdetails)
		{
			return new LocalizedString("ErrorUnableToReleaseDomain", "Ex74A241", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				appId,
				errdetails
			});
		}

		public static LocalizedString ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequested(string dbName, bool isSkipCEC, bool isSkipHealth, bool isSkipLag)
		{
			return new LocalizedString("ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequested", "ExA53135", false, true, Strings.ResourceManager, new object[]
			{
				dbName,
				isSkipCEC,
				isSkipHealth,
				isSkipLag
			});
		}

		public static LocalizedString ConfirmationMessageRemoveOwaVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOwaVirtualDirectory", "Ex8F49F9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarningMailboxFolderPermissionUnchanged(string identity)
		{
			return new LocalizedString("WarningMailboxFolderPermissionUnchanged", "Ex008798", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DatacenterClientAccessPerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("DatacenterClientAccessPerfCountersComponentDescription", "Ex7B085F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetPublicFolderMailboxRehomeDatabaseConfirmationMessage(string mbxIdentity)
		{
			return new LocalizedString("SetPublicFolderMailboxRehomeDatabaseConfirmationMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxIdentity
			});
		}

		public static LocalizedString IndividualRecipient
		{
			get
			{
				return new LocalizedString("IndividualRecipient", "Ex5A8A85", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AmbiguousOutlookProbeIdentity(string probeIdentity, string ambiguous1, string ambiguous2)
		{
			return new LocalizedString("AmbiguousOutlookProbeIdentity", "", false, false, Strings.ResourceManager, new object[]
			{
				probeIdentity,
				ambiguous1,
				ambiguous2
			});
		}

		public static LocalizedString MalboxFolderRightsCreateItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsCreateItems", "ExBE007B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProtocolConnectivityScenario(string protocol)
		{
			return new LocalizedString("ProtocolConnectivityScenario", "ExED614D", false, true, Strings.ResourceManager, new object[]
			{
				protocol
			});
		}

		public static LocalizedString RuleStateDisabled
		{
			get
			{
				return new LocalizedString("RuleStateDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RuleVersionIncompatible(string server, string rulename)
		{
			return new LocalizedString("RuleVersionIncompatible", "Ex5E78D1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				rulename
			});
		}

		public static LocalizedString MalboxFolderRightsReadItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsReadItems", "ExFD8466", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSyncAccountsMaxAccountsQuota
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsMaxAccountsQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetQueueDigestFailedToRetrieveADTopology(string error)
		{
			return new LocalizedString("GetQueueDigestFailedToRetrieveADTopology", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString DatabaseSeedStatusLabelWritten
		{
			get
			{
				return new LocalizedString("DatabaseSeedStatusLabelWritten", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetPasswordForLogonDisabledAccount
		{
			get
			{
				return new LocalizedString("ErrorSetPasswordForLogonDisabledAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MonitoringServiceCheckDesc
		{
			get
			{
				return new LocalizedString("MonitoringServiceCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SiteParameterRequired
		{
			get
			{
				return new LocalizedString("SiteParameterRequired", "Ex6C61A8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMservEntry(string id)
		{
			return new LocalizedString("ConfirmationMessageSetMservEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ExchangeTracingProviderInstallFailed(int errorHresult)
		{
			return new LocalizedString("ExchangeTracingProviderInstallFailed", "ExD6BA1A", false, true, Strings.ResourceManager, new object[]
			{
				errorHresult
			});
		}

		public static LocalizedString ExceptionLogEntryLineInvalidFile(int vline, string vfile)
		{
			return new LocalizedString("ExceptionLogEntryLineInvalidFile", "ExEE68EB", false, true, Strings.ResourceManager, new object[]
			{
				vline,
				vfile
			});
		}

		public static LocalizedString GetDagHealthInfoRequestTimedOut(int timeoutSecs)
		{
			return new LocalizedString("GetDagHealthInfoRequestTimedOut", "", false, false, Strings.ResourceManager, new object[]
			{
				timeoutSecs
			});
		}

		public static LocalizedString IisTasksVirtualDirectoryValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksVirtualDirectoryValidationProperty", "ExE35E19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseUsingAssignmentAsTemplate(string id)
		{
			return new LocalizedString("VerboseUsingAssignmentAsTemplate", "Ex6BF2DC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorCreateRoomListSecurityGroup(string idRecipient)
		{
			return new LocalizedString("ErrorCreateRoomListSecurityGroup", "Ex03CD58", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		public static LocalizedString NullCurrentOrganizationIdException
		{
			get
			{
				return new LocalizedString("NullCurrentOrganizationIdException", "ExCAAE50", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotForceRusResetConfiguration(string dc, string message)
		{
			return new LocalizedString("ErrorCannotForceRusResetConfiguration", "Ex2C7986", false, true, Strings.ResourceManager, new object[]
			{
				dc,
				message
			});
		}

		public static LocalizedString ErrorSpecifiedMailboxShouldBeAuditLogMailbox(string identity)
		{
			return new LocalizedString("ErrorSpecifiedMailboxShouldBeAuditLogMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ClassificationRuleCollectionIllegalScopedSetOobOperation
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionIllegalScopedSetOobOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorDuplicateTargetServerException(string server)
		{
			return new LocalizedString("SendConnectorDuplicateTargetServerException", "Ex4D243B", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorFailedToRestoreDatabaseStatus(string databaseName, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToRestoreDatabaseStatus", "ExB1FE1F", false, true, Strings.ResourceManager, new object[]
			{
				databaseName,
				errorMessage
			});
		}

		public static LocalizedString WarningTooManyDefaultGALs(int length)
		{
			return new LocalizedString("WarningTooManyDefaultGALs", "Ex50F302", false, true, Strings.ResourceManager, new object[]
			{
				length
			});
		}

		public static LocalizedString InvalidSmtpAddress
		{
			get
			{
				return new LocalizedString("InvalidSmtpAddress", "Ex830FD1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidSubscription(string subscription)
		{
			return new LocalizedString("InvalidSubscription", "Ex6C04D6", false, true, Strings.ResourceManager, new object[]
			{
				subscription
			});
		}

		public static LocalizedString InvalidRuleSearchFilter(string filter, string errorMessage)
		{
			return new LocalizedString("InvalidRuleSearchFilter", "", false, false, Strings.ResourceManager, new object[]
			{
				filter,
				errorMessage
			});
		}

		public static LocalizedString ConfirmationMessageAddIPBlockListEntryIPAddress(string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageAddIPBlockListEntryIPAddress", "Ex5DB00A", false, true, Strings.ResourceManager, new object[]
			{
				IPAddress
			});
		}

		public static LocalizedString TestOrganizationRelationshipError
		{
			get
			{
				return new LocalizedString("TestOrganizationRelationshipError", "ExA961E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OutlookProtectionRuleRmsTemplateNotUnique(string name)
		{
			return new LocalizedString("OutlookProtectionRuleRmsTemplateNotUnique", "Ex29D6D0", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationMessageNewRetentionTag(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRetentionTag", "ExE6A4D7", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmationMessageDisableMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailbox", "Ex256889", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxIdentity(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxIdentity", "Ex13CF83", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressStartingContentIndexingService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingContentIndexingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnsupportedRecipientScopeType(string id, string type)
		{
			return new LocalizedString("ErrorUnsupportedRecipientScopeType", "ExEE090B", false, true, Strings.ResourceManager, new object[]
			{
				id,
				type
			});
		}

		public static LocalizedString CasHealthOwaLogonError
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogonError", "ExD30AA1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmRemoveIndexEntryMissingADData(string indexEntry)
		{
			return new LocalizedString("ConfirmRemoveIndexEntryMissingADData", "ExE8237B", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		public static LocalizedString ErrorTeamMailboxChangeByNonMember(string tm)
		{
			return new LocalizedString("ErrorTeamMailboxChangeByNonMember", "", false, false, Strings.ResourceManager, new object[]
			{
				tm
			});
		}

		public static LocalizedString FailedToGetLogs(string user, string error)
		{
			return new LocalizedString("FailedToGetLogs", "ExED430D", false, true, Strings.ResourceManager, new object[]
			{
				user,
				error
			});
		}

		public static LocalizedString WarningMultipleStreamForFingerprint(int streamCount, string streamName)
		{
			return new LocalizedString("WarningMultipleStreamForFingerprint", "", false, false, Strings.ResourceManager, new object[]
			{
				streamCount,
				streamName
			});
		}

		public static LocalizedString Error_KnowniPhoneIssues
		{
			get
			{
				return new LocalizedString("Error_KnowniPhoneIssues", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningNoMonitoringTenant(string id)
		{
			return new LocalizedString("WarningNoMonitoringTenant", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageSetAutoTagging(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAutoTagging", "ExD639ED", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorTenantRetentionTagLimitReached(int limit)
		{
			return new LocalizedString("ErrorTenantRetentionTagLimitReached", "", false, false, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		public static LocalizedString ConfirmationMessageMailboxSpellingConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxSpellingConfiguration", "ExA59DCF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled
		{
			get
			{
				return new LocalizedString("OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled", "Ex1CCCA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClientAccessExchangeCertificateComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessExchangeCertificateComponentDescription", "ExCEFC64", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorScopeExclusive(string scope, string parameterName)
		{
			return new LocalizedString("ErrorScopeExclusive", "Ex0CEF56", false, true, Strings.ResourceManager, new object[]
			{
				scope,
				parameterName
			});
		}

		public static LocalizedString VerboseSetScopeValidateRemoveOriginalScopedAssignment(string id, string assignmentId)
		{
			return new LocalizedString("VerboseSetScopeValidateRemoveOriginalScopedAssignment", "Ex782594", false, true, Strings.ResourceManager, new object[]
			{
				id,
				assignmentId
			});
		}

		public static LocalizedString VerboseRemoveWorkloadManagementPolicy(string Name)
		{
			return new LocalizedString("VerboseRemoveWorkloadManagementPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ErrorSimilarWorkloadPolicyExist(string wlmPolicy, string type)
		{
			return new LocalizedString("ErrorSimilarWorkloadPolicyExist", "", false, false, Strings.ResourceManager, new object[]
			{
				wlmPolicy,
				type
			});
		}

		public static LocalizedString DagFswInsufficientPermissionsToDeleteFswException(string fswMachine, string share, Exception ex)
		{
			return new LocalizedString("DagFswInsufficientPermissionsToDeleteFswException", "", false, false, Strings.ResourceManager, new object[]
			{
				fswMachine,
				share,
				ex
			});
		}

		public static LocalizedString ConfirmationMessageSetRoleGroup(string Identity, string Roles, string ManagedBy)
		{
			return new LocalizedString("ConfirmationMessageSetRoleGroup", "Ex3EDCDC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Roles,
				ManagedBy
			});
		}

		public static LocalizedString SenderAndRmsOnlineParametersCannotBeCombined
		{
			get
			{
				return new LocalizedString("SenderAndRmsOnlineParametersCannotBeCombined", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TopologyServiceDisplayName
		{
			get
			{
				return new LocalizedString("TopologyServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationTurnOffLitigationHold(string expireTime)
		{
			return new LocalizedString("ConfirmationTurnOffLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				expireTime
			});
		}

		public static LocalizedString ConfirmationMessageSetHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorChangeConfigurationNotSupported
		{
			get
			{
				return new LocalizedString("ErrorChangeConfigurationNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorErrorConditionHeaderValueMissing
		{
			get
			{
				return new LocalizedString("InterceptorErrorConditionHeaderValueMissing", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEcpTestWebService(string uri)
		{
			return new LocalizedString("CasHealthEcpTestWebService", "Ex3E4AA9", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString VerboseCheckIISConfiguration
		{
			get
			{
				return new LocalizedString("VerboseCheckIISConfiguration", "Ex362CC3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationUserLimitExceeded(int count)
		{
			return new LocalizedString("MigrationUserLimitExceeded", "", false, false, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString SetupComponentADSchema
		{
			get
			{
				return new LocalizedString("SetupComponentADSchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaHttpGetNonOkayForPing(int code, string name)
		{
			return new LocalizedString("CasHealthOwaHttpGetNonOkayForPing", "Ex16F7CA", false, true, Strings.ResourceManager, new object[]
			{
				code,
				name
			});
		}

		public static LocalizedString ConfirmationMessageDisableRpcHttp(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableRpcHttp", "Ex7F2CC4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InstallingIMAP4Service
		{
			get
			{
				return new LocalizedString("InstallingIMAP4Service", "Ex4690C7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MSExchangeMGMTDisplayName
		{
			get
			{
				return new LocalizedString("MSExchangeMGMTDisplayName", "Ex360B59", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorIncrementalMergesRequireSuspendWhenReadyToComplete(string name)
		{
			return new LocalizedString("ErrorIncrementalMergesRequireSuspendWhenReadyToComplete", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString AdminAuditLogSearchNegativeResultSize
		{
			get
			{
				return new LocalizedString("AdminAuditLogSearchNegativeResultSize", "Ex0C094F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite", "Ex85B5CE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToMoveDatabaseSystemFiles(string fromPath, string toPath)
		{
			return new LocalizedString("ErrorFailedToMoveDatabaseSystemFiles", "Ex14A3B8", false, true, Strings.ResourceManager, new object[]
			{
				fromPath,
				toPath
			});
		}

		public static LocalizedString WritableServerNotFound(string WritableServer)
		{
			return new LocalizedString("WritableServerNotFound", "Ex3C377A", false, true, Strings.ResourceManager, new object[]
			{
				WritableServer
			});
		}

		public static LocalizedString SetupProgressMailTipsEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressMailTipsEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AddAccessRuleCryptographic(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleCryptographic", "Ex86045F", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorCannotRetargetArchiveForPrimaryOnlyMoves(string identity)
		{
			return new LocalizedString("ErrorCannotRetargetArchiveForPrimaryOnlyMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CopyStatusInitializing
		{
			get
			{
				return new LocalizedString("CopyStatusInitializing", "Ex580273", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotDeleteReplayState(string db, string server, string error)
		{
			return new LocalizedString("ErrorCannotDeleteReplayState", "Ex280C63", false, true, Strings.ResourceManager, new object[]
			{
				db,
				server,
				error
			});
		}

		public static LocalizedString ErrorCannotSetPowerShellMaxTenantRunspaces
		{
			get
			{
				return new LocalizedString("ErrorCannotSetPowerShellMaxTenantRunspaces", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidRecipientForModerationAction(string recipient)
		{
			return new LocalizedString("InvalidRecipientForModerationAction", "Ex446962", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ErrorFolderFilterInvalid(LocalizedString errorMessage)
		{
			return new LocalizedString("ErrorFolderFilterInvalid", "ExE9E568", false, true, Strings.ResourceManager, new object[]
			{
				errorMessage
			});
		}

		public static LocalizedString StartADTopologyService
		{
			get
			{
				return new LocalizedString("StartADTopologyService", "Ex2F4283", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchADError(string error)
		{
			return new LocalizedString("TestSearchADError", "ExD08158", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString InvalidRuleSearchFilterMissingElements
		{
			get
			{
				return new LocalizedString("InvalidRuleSearchFilterMissingElements", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SeederServerLevelBeginCalled(string serverName)
		{
			return new LocalizedString("SeederServerLevelBeginCalled", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SpecifiedOUNotFound
		{
			get
			{
				return new LocalizedString("SpecifiedOUNotFound", "Ex3263D5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtAddBlindCopyToRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddBlindCopyToRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEdbFilePathOccupiedByDirectory(string filePath, string serverName)
		{
			return new LocalizedString("ErrorEdbFilePathOccupiedByDirectory", "Ex93F0E7", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				serverName
			});
		}

		public static LocalizedString NoSLCCertChainInImportedTrustedPublishingDomain
		{
			get
			{
				return new LocalizedString("NoSLCCertChainInImportedTrustedPublishingDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAcceptedDomainsInvalidType(string domain)
		{
			return new LocalizedString("ErrorAcceptedDomainsInvalidType", "Ex2339BD", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString messageMailboxNotFoundException(MailboxIdParameter mailbox)
		{
			return new LocalizedString("messageMailboxNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString EdgeAndHubSharingSameDirectTrustCertNotAllowed(string thumbprint)
		{
			return new LocalizedString("EdgeAndHubSharingSameDirectTrustCertNotAllowed", "Ex985BAE", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString FailedToReadDatabaseSchemaVersionInformationForServer(string serverName)
		{
			return new LocalizedString("FailedToReadDatabaseSchemaVersionInformationForServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SetupProgressStopHealthManagerService
		{
			get
			{
				return new LocalizedString("SetupProgressStopHealthManagerService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPowerShellCorrupted
		{
			get
			{
				return new LocalizedString("ErrorPowerShellCorrupted", "ExE9A02C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTextMessageInsufficientPermission
		{
			get
			{
				return new LocalizedString("ErrorTextMessageInsufficientPermission", "Ex6712A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IncompleteParameterGroup(string parameter, string otherParameters)
		{
			return new LocalizedString("IncompleteParameterGroup", "Ex3C189C", false, true, Strings.ResourceManager, new object[]
			{
				parameter,
				otherParameters
			});
		}

		public static LocalizedString ConfirmationMessageRemoveHostedConnectionFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedConnectionFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString DlpPolicyDescriptionDisplayName
		{
			get
			{
				return new LocalizedString("DlpPolicyDescriptionDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidEapSetPriority(string priority)
		{
			return new LocalizedString("ErrorInvalidEapSetPriority", "ExEF5B55", false, true, Strings.ResourceManager, new object[]
			{
				priority
			});
		}

		public static LocalizedString ConfirmationMessageDisableMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CookieVersionUnsupportedException(int version)
		{
			return new LocalizedString("CookieVersionUnsupportedException", "", false, false, Strings.ResourceManager, new object[]
			{
				version
			});
		}

		public static LocalizedString WarningInboxRuleOutlookBlobExists
		{
			get
			{
				return new LocalizedString("WarningInboxRuleOutlookBlobExists", "Ex2E5E15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RmsUrlsCannotBeSet
		{
			get
			{
				return new LocalizedString("RmsUrlsCannotBeSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskClusteringShouldBeEnabledException(string serverName)
		{
			return new LocalizedString("DagTaskClusteringShouldBeEnabledException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString InfoGetUL(Uri uri)
		{
			return new LocalizedString("InfoGetUL", "Ex597DB8", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString UMCallAnsweringRuleScheduleStatus(string scheduleStatus)
		{
			return new LocalizedString("UMCallAnsweringRuleScheduleStatus", "", false, false, Strings.ResourceManager, new object[]
			{
				scheduleStatus
			});
		}

		public static LocalizedString ErrorNotSupportedFolderClass(string folderClass, string validFolderClasses)
		{
			return new LocalizedString("ErrorNotSupportedFolderClass", "ExDAE967", false, true, Strings.ResourceManager, new object[]
			{
				folderClass,
				validFolderClasses
			});
		}

		public static LocalizedString MoreThanOneObjects(string theType)
		{
			return new LocalizedString("MoreThanOneObjects", "", false, false, Strings.ResourceManager, new object[]
			{
				theType
			});
		}

		public static LocalizedString DebugEndSaveDataObject
		{
			get
			{
				return new LocalizedString("DebugEndSaveDataObject", "Ex4BE65D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTestMailboxPasswordNotFound(string identity, string scriptsPath, string datacenter)
		{
			return new LocalizedString("ErrorTestMailboxPasswordNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				scriptsPath,
				datacenter
			});
		}

		public static LocalizedString IisUtilityWebObjectNotCreatedException(string parent, string name, string type)
		{
			return new LocalizedString("IisUtilityWebObjectNotCreatedException", "ExB96518", false, true, Strings.ResourceManager, new object[]
			{
				parent,
				name,
				type
			});
		}

		public static LocalizedString ConfirmationMessageStartEdgeSynchronization
		{
			get
			{
				return new LocalizedString("ConfirmationMessageStartEdgeSynchronization", "ExB0FFFF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionSharingViolationRemoveOperationVerbose(string identity, string ruleIdsInUse, string referencingTransportRuleNames)
		{
			return new LocalizedString("ClassificationRuleCollectionSharingViolationRemoveOperationVerbose", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				ruleIdsInUse,
				referencingTransportRuleNames
			});
		}

		public static LocalizedString ConstraintUpgrade(string database, DataMoveReplicationConstraintParameter old, DataMoveReplicationConstraintParameter suggested)
		{
			return new LocalizedString("ConstraintUpgrade", "Ex95D012", false, true, Strings.ResourceManager, new object[]
			{
				database,
				old,
				suggested
			});
		}

		public static LocalizedString ConfirmationMessageEnableRemoteMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableRemoteMailbox", "Ex22EB96", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString VerboseResolvingSecurityPrinciplals
		{
			get
			{
				return new LocalizedString("VerboseResolvingSecurityPrinciplals", "Ex75FBB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaFbaConfigurationPublicTimeoutMustBeLessThanOrEqualToPrivateTimeoutException(int publicTimeout, int privateTimeout)
		{
			return new LocalizedString("OwaFbaConfigurationPublicTimeoutMustBeLessThanOrEqualToPrivateTimeoutException", "Ex875681", false, true, Strings.ResourceManager, new object[]
			{
				publicTimeout,
				privateTimeout
			});
		}

		public static LocalizedString ErrorOrgsStillUsingThisTrust(string trust, string orgList)
		{
			return new LocalizedString("ErrorOrgsStillUsingThisTrust", "Ex1BDE5E", false, true, Strings.ResourceManager, new object[]
			{
				trust,
				orgList
			});
		}

		public static LocalizedString ErrorWinRMCmdNotFound(string file)
		{
			return new LocalizedString("ErrorWinRMCmdNotFound", "Ex3CA450", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString WarningFswNotFound(string identity)
		{
			return new LocalizedString("WarningFswNotFound", "ExE00937", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningLegacyExchangeServerForMailContact
		{
			get
			{
				return new LocalizedString("WarningLegacyExchangeServerForMailContact", "ExBD7CDA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSecondaryPartitionNotEnabledForProvisioning(string partitionName)
		{
			return new LocalizedString("ErrorSecondaryPartitionNotEnabledForProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		public static LocalizedString ErrorLiveIdError(string message)
		{
			return new LocalizedString("ErrorLiveIdError", "Ex41B420", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorTemplatesMayNotContainRulesWithImmutableIds
		{
			get
			{
				return new LocalizedString("ErrorTemplatesMayNotContainRulesWithImmutableIds", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateStatusRevoked
		{
			get
			{
				return new LocalizedString("CertificateStatusRevoked", "Ex2D0920", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConversationsItemWithoutConversationId(string user, string itemid)
		{
			return new LocalizedString("ConversationsItemWithoutConversationId", "Ex3ABCDD", false, true, Strings.ResourceManager, new object[]
			{
				user,
				itemid
			});
		}

		public static LocalizedString ErrorSetTeamMailboxUserPermissions(string tm, string error)
		{
			return new LocalizedString("ErrorSetTeamMailboxUserPermissions", "", false, false, Strings.ResourceManager, new object[]
			{
				tm,
				error
			});
		}

		public static LocalizedString ErrorAuthSchemeExists(string authRedirect, string scheme)
		{
			return new LocalizedString("ErrorAuthSchemeExists", "", false, false, Strings.ResourceManager, new object[]
			{
				authRedirect,
				scheme
			});
		}

		public static LocalizedString ProcessStandardOutput(string output)
		{
			return new LocalizedString("ProcessStandardOutput", "Ex17B05C", false, true, Strings.ResourceManager, new object[]
			{
				output
			});
		}

		public static LocalizedString CasHealthOwaPingError
		{
			get
			{
				return new LocalizedString("CasHealthOwaPingError", "Ex321681", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRetargetOutboundMoves(string identity)
		{
			return new LocalizedString("ErrorCannotRetargetOutboundMoves", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ReservedString5
		{
			get
			{
				return new LocalizedString("ReservedString5", "Ex0BFCB9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmtpConnectivitySuccessEvent(string server, string successes)
		{
			return new LocalizedString("SmtpConnectivitySuccessEvent", "ExC2F86B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				successes
			});
		}

		public static LocalizedString WarningDatabaseScopeCreationApplicableOnlyInSP
		{
			get
			{
				return new LocalizedString("WarningDatabaseScopeCreationApplicableOnlyInSP", "ExD7D94E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceNameEws
		{
			get
			{
				return new LocalizedString("ServiceNameEws", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskClusterNameIsNotDagNameException(string mailboxServer, string clusterName, string dagName)
		{
			return new LocalizedString("DagTaskClusterNameIsNotDagNameException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				clusterName,
				dagName
			});
		}

		public static LocalizedString ConfirmationMessageNewRemoteAccountPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRemoteAccountPolicy", "ExF68145", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString MailboxAssociationMailboxNotFound
		{
			get
			{
				return new LocalizedString("MailboxAssociationMailboxNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdminAuditLogsLocationNotFound(string organization)
		{
			return new LocalizedString("AdminAuditLogsLocationNotFound", "Ex10EBB7", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString SetupComponentMidFileCopyBridgehead
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NodePausedCheckDesc
		{
			get
			{
				return new LocalizedString("NodePausedCheckDesc", "ExDBEC0E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AllLinkedGroupMembers
		{
			get
			{
				return new LocalizedString("AllLinkedGroupMembers", "ExB0BB71", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxIsConnected(string userId, string mailboxId)
		{
			return new LocalizedString("ErrorMailboxIsConnected", "ExC386D7", false, true, Strings.ResourceManager, new object[]
			{
				userId,
				mailboxId
			});
		}

		public static LocalizedString SharedCacheServiceDescription
		{
			get
			{
				return new LocalizedString("SharedCacheServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDefaultDomainNotFound(AcceptedDomainIdParameter domain)
		{
			return new LocalizedString("ErrorDefaultDomainNotFound", "Ex121315", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString InstallKeynoteConnectorServiceTask
		{
			get
			{
				return new LocalizedString("InstallKeynoteConnectorServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidIncidentReportOriginalMail
		{
			get
			{
				return new LocalizedString("InvalidIncidentReportOriginalMail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseReadADSecurityDescriptor(string id)
		{
			return new LocalizedString("VerboseReadADSecurityDescriptor", "Ex76BAA1", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorConflictingMailboxes
		{
			get
			{
				return new LocalizedString("ErrorConflictingMailboxes", "Ex5EA958", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveVirtualDirectoryCouldNotAccessWebServicesRootException
		{
			get
			{
				return new LocalizedString("RemoveVirtualDirectoryCouldNotAccessWebServicesRootException", "ExE5BD1A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidIntegerFieldException(string fieldName, int value, int min, int max)
		{
			return new LocalizedString("InvalidIntegerFieldException", "Ex25E76A", false, true, Strings.ResourceManager, new object[]
			{
				fieldName,
				value,
				min,
				max
			});
		}

		public static LocalizedString ConfirmationMessageSetSyncConfig(string organization)
		{
			return new LocalizedString("ConfirmationMessageSetSyncConfig", "Ex9237BA", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString ErrorInvalidAuthServerTypeValue
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuthServerTypeValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCorruptRuleAction
		{
			get
			{
				return new LocalizedString("ErrorCorruptRuleAction", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEntryNotInRecipientOrg(string entry)
		{
			return new LocalizedString("ErrorEntryNotInRecipientOrg", "Ex2CDE11", false, true, Strings.ResourceManager, new object[]
			{
				entry
			});
		}

		public static LocalizedString MemberNotFoundException(string id, string group)
		{
			return new LocalizedString("MemberNotFoundException", "Ex149EE7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				group
			});
		}

		public static LocalizedString ErrorRunspaceServerSettingsNotFound
		{
			get
			{
				return new LocalizedString("ErrorRunspaceServerSettingsNotFound", "Ex167E53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseResetRecoveryDatabase(string idDatabase)
		{
			return new LocalizedString("VerboseResetRecoveryDatabase", "Ex10518B", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase
			});
		}

		public static LocalizedString ErrorExchangeAdministratorsGroupNotFound(string groupType, string memberOperated)
		{
			return new LocalizedString("ErrorExchangeAdministratorsGroupNotFound", "Ex55A379", false, true, Strings.ResourceManager, new object[]
			{
				groupType,
				memberOperated
			});
		}

		public static LocalizedString ConfirmationMessageConnectMailboxResource(string Identity, string ResourceType, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxResource", "Ex4647F1", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ResourceType,
				Database
			});
		}

		public static LocalizedString ClassificationRuleCollectionOffendingListSeparator
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionOffendingListSeparator", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ScenarioEwsConvertId
		{
			get
			{
				return new LocalizedString("ScenarioEwsConvertId", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressCopyingCopyLogFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingCopyLogFiles", "Ex9FD341", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisasterRecoveryAdminToolsRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryAdminToolsRoleDescription", "Ex21DAF1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified
		{
			get
			{
				return new LocalizedString("ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified", "Ex466DF1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBPAMergeFileLoad
		{
			get
			{
				return new LocalizedString("ErrorBPAMergeFileLoad", "Ex82FA5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DomainIsParameterInvalid(string domainNames)
		{
			return new LocalizedString("DomainIsParameterInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				domainNames
			});
		}

		public static LocalizedString InvalidUMProxyAddressException(string proxyAddress)
		{
			return new LocalizedString("InvalidUMProxyAddressException", "", false, false, Strings.ResourceManager, new object[]
			{
				proxyAddress
			});
		}

		public static LocalizedString ConfirmationMessageSetOrganization(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOrganization", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString IISNotInstalledException
		{
			get
			{
				return new LocalizedString("IISNotInstalledException", "Ex48FA6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTenantRetentionPolicyLimitReached(int limit)
		{
			return new LocalizedString("ErrorTenantRetentionPolicyLimitReached", "", false, false, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMobileMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileMailboxPolicy", "ExC95EC8", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupComponentPreSetupAdminTools
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupAdminTools", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotDetermineRequester
		{
			get
			{
				return new LocalizedString("ErrorCannotDetermineRequester", "ExF4A663", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorUserNotUnique", "ExCD0F74", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString VerboseFixingEmailAddressPoliciesInNativeMode
		{
			get
			{
				return new LocalizedString("VerboseFixingEmailAddressPoliciesInNativeMode", "Ex63F1A7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEmptyManagementSiteLink(string domain)
		{
			return new LocalizedString("ErrorEmptyManagementSiteLink", "ExB51B7C", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString DebugEndUpnUniquenessCheck
		{
			get
			{
				return new LocalizedString("DebugEndUpnUniquenessCheck", "ExB368EA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidArgumentForServerRoleException(string property, string role)
		{
			return new LocalizedString("InvalidArgumentForServerRoleException", "", false, false, Strings.ResourceManager, new object[]
			{
				property,
				role
			});
		}

		public static LocalizedString ConfirmationMessageEnableJournalrule(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableJournalrule", "Ex543530", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageRemoveRoleGroup(string Identity, string Roles, string ManagedBy, string RoleAssignments)
		{
			return new LocalizedString("ConfirmationMessageRemoveRoleGroup", "Ex84AD52", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Roles,
				ManagedBy,
				RoleAssignments
			});
		}

		public static LocalizedString ConfirmationMessageSetThrottlingPolicyAssociationToNull(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetThrottlingPolicyAssociationToNull", "Ex1DE741", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarningMonitoringTenantNotActive(string id, string status)
		{
			return new LocalizedString("WarningMonitoringTenantNotActive", "", false, false, Strings.ResourceManager, new object[]
			{
				id,
				status
			});
		}

		public static LocalizedString SmtpConnectivityEndPointResult(string endpoint, string result)
		{
			return new LocalizedString("SmtpConnectivityEndPointResult", "ExA19338", false, true, Strings.ResourceManager, new object[]
			{
				endpoint,
				result
			});
		}

		public static LocalizedString InfoPLCreated
		{
			get
			{
				return new LocalizedString("InfoPLCreated", "ExFB438C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionNumberExceedLimit(int limit)
		{
			return new LocalizedString("ClassificationRuleCollectionNumberExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				limit
			});
		}

		public static LocalizedString ExRBACSaveRemoveRoleEntry(string entryName, string roleId, string error)
		{
			return new LocalizedString("ExRBACSaveRemoveRoleEntry", "Ex542029", false, true, Strings.ResourceManager, new object[]
			{
				entryName,
				roleId,
				error
			});
		}

		public static LocalizedString UMCallAnsweringRuleFindMeWithoutContext(int key, string firstNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithoutContext", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				firstNumber
			});
		}

		public static LocalizedString VerboseFailedRemoveGalDNInExchangeContainer(string idGlobalAddressList)
		{
			return new LocalizedString("VerboseFailedRemoveGalDNInExchangeContainer", "Ex9D1511", false, true, Strings.ResourceManager, new object[]
			{
				idGlobalAddressList
			});
		}

		public static LocalizedString SetupProgressRemoveServerObject
		{
			get
			{
				return new LocalizedString("SetupProgressRemoveServerObject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionNonUniqueLangCodesInRuleName(string resourceIdRef, string nonUniqueLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueLangCodesInRuleName", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				nonUniqueLangCodes
			});
		}

		public static LocalizedString UnknownFailureFromCiRpcServer
		{
			get
			{
				return new LocalizedString("UnknownFailureFromCiRpcServer", "Ex37DC27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRestoreDatabaseAvailabilityGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRestoreDatabaseAvailabilityGroup", "Ex3C7AF1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WarningActionWillOnlyBeAppliedIfMessageIsNotRejected
		{
			get
			{
				return new LocalizedString("WarningActionWillOnlyBeAppliedIfMessageIsNotRejected", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CookieNotUpdated
		{
			get
			{
				return new LocalizedString("CookieNotUpdated", "Ex692A1E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProcessingAceActivity
		{
			get
			{
				return new LocalizedString("ProcessingAceActivity", "Ex2093F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaFbaAuthTypeExpected
		{
			get
			{
				return new LocalizedString("CasHealthOwaFbaAuthTypeExpected", "Ex548296", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveOwaVirtualDirectoryCannotDisambiguateException(string applicationRoot, string webSite, string virtualDirectory, string results)
		{
			return new LocalizedString("RemoveOwaVirtualDirectoryCannotDisambiguateException", "ExFC35F7", false, true, Strings.ResourceManager, new object[]
			{
				applicationRoot,
				webSite,
				virtualDirectory,
				results
			});
		}

		public static LocalizedString ConfirmationMessageClearMobileDevice(string Identity)
		{
			return new LocalizedString("ConfirmationMessageClearMobileDevice", "ExEFA933", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorScopeOutOfRoleScope(string id, string orgName)
		{
			return new LocalizedString("ErrorScopeOutOfRoleScope", "Ex516B29", false, true, Strings.ResourceManager, new object[]
			{
				id,
				orgName
			});
		}

		public static LocalizedString CannotEditLegacySearchObjectWithoutUpgrade(string searchName)
		{
			return new LocalizedString("CannotEditLegacySearchObjectWithoutUpgrade", "", false, false, Strings.ResourceManager, new object[]
			{
				searchName
			});
		}

		public static LocalizedString WarningNewAdminAuditLogSearchOnPreR5(string org)
		{
			return new LocalizedString("WarningNewAdminAuditLogSearchOnPreR5", "Ex4FF611", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ConfirmationMessageRemoveHostedContentFilterConfig(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedContentFilterConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSendMapiSubmitSystemProbe
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSendMapiSubmitSystemProbe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNullParameter(string parameter)
		{
			return new LocalizedString("ErrorNullParameter", "Ex8AE501", false, true, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString ConfirmationMessageStartELCAssistant
		{
			get
			{
				return new LocalizedString("ConfirmationMessageStartELCAssistant", "Ex3E1F51", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AlsSubjectAdmin(string name, string requester)
		{
			return new LocalizedString("AlsSubjectAdmin", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				requester
			});
		}

		public static LocalizedString ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithPrecannedFilter(string Name, string IncludedRecipients, string EnabledEmailAddressTemplates)
		{
			return new LocalizedString("ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithPrecannedFilter", "Ex448B6B", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				IncludedRecipients,
				EnabledEmailAddressTemplates
			});
		}

		public static LocalizedString MobileDeviceLogNoLogsExist
		{
			get
			{
				return new LocalizedString("MobileDeviceLogNoLogsExist", "ExB27C15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToCreateExchangeOabFolder(string serverName, string errormsg)
		{
			return new LocalizedString("ErrorFailedToCreateExchangeOabFolder", "Ex856764", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errormsg
			});
		}

		public static LocalizedString ErrorEmailTextBig(int size)
		{
			return new LocalizedString("ErrorEmailTextBig", "", false, false, Strings.ResourceManager, new object[]
			{
				size
			});
		}

		public static LocalizedString ExceptionLogEntryLineInvalid(int vline)
		{
			return new LocalizedString("ExceptionLogEntryLineInvalid", "ExA00C86", false, true, Strings.ResourceManager, new object[]
			{
				vline
			});
		}

		public static LocalizedString ConfirmationMessageSetFederatedDomain(string domain, string org)
		{
			return new LocalizedString("ConfirmationMessageSetFederatedDomain", "ExAC1EA3", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				org
			});
		}

		public static LocalizedString ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod
		{
			get
			{
				return new LocalizedString("ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtEventExpand
		{
			get
			{
				return new LocalizedString("MtrtEventExpand", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EmptyTargetMailbox
		{
			get
			{
				return new LocalizedString("EmptyTargetMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDistributionGroupNameTooLong
		{
			get
			{
				return new LocalizedString("ErrorDistributionGroupNameTooLong", "ExB62014", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateOutOfTheBoxDefaultMRMTags
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOutOfTheBoxDefaultMRMTags", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTargetMailboxDatabaseVersionUnsupported
		{
			get
			{
				return new LocalizedString("ErrorTargetMailboxDatabaseVersionUnsupported", "ExB5BC6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfigurationFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentConfigurationFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningShouldWriteToRidMaster(string dc1, string dc2)
		{
			return new LocalizedString("WarningShouldWriteToRidMaster", "", false, false, Strings.ResourceManager, new object[]
			{
				dc1,
				dc2
			});
		}

		public static LocalizedString RepairUrgencyHigh
		{
			get
			{
				return new LocalizedString("RepairUrgencyHigh", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressUpdatingResourcePropertySchema
		{
			get
			{
				return new LocalizedString("SetupProgressUpdatingResourcePropertySchema", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConflictingAcceptedDomain(string domain)
		{
			return new LocalizedString("ConflictingAcceptedDomain", "Ex563F47", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString DefaultAllDistributionLists
		{
			get
			{
				return new LocalizedString("DefaultAllDistributionLists", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateGlobalAutoDiscoverContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateGlobalAutoDiscoverContainer", "ExAA0671", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorConfirmEntireForestRule(string rule)
		{
			return new LocalizedString("InterceptorConfirmEntireForestRule", "", false, false, Strings.ResourceManager, new object[]
			{
				rule
			});
		}

		public static LocalizedString GenericError(string message)
		{
			return new LocalizedString("GenericError", "Ex2A35D7", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString MigrationCompleteAfterScheduledBatchesOnly
		{
			get
			{
				return new LocalizedString("MigrationCompleteAfterScheduledBatchesOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMMailboxPolicySetAllowFaxError
		{
			get
			{
				return new LocalizedString("UMMailboxPolicySetAllowFaxError", "Ex9E4802", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AttachmentFilterNoExceptionConnector
		{
			get
			{
				return new LocalizedString("AttachmentFilterNoExceptionConnector", "Ex40FFE6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxDatabaseCopy(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxDatabaseCopy", "Ex387EEC", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		public static LocalizedString TaskNotSupportedOnVersionException(string cmdletName, int serverVersion)
		{
			return new LocalizedString("TaskNotSupportedOnVersionException", "Ex2B2CA0", false, true, Strings.ResourceManager, new object[]
			{
				cmdletName,
				serverVersion
			});
		}

		public static LocalizedString ConfirmationMessageNewSystemMessageDsn(string Code, string Text, string Internal, string Language)
		{
			return new LocalizedString("ConfirmationMessageNewSystemMessageDsn", "ExDDA8B5", false, true, Strings.ResourceManager, new object[]
			{
				Code,
				Text,
				Internal,
				Language
			});
		}

		public static LocalizedString EnableConversationsRunning(string user)
		{
			return new LocalizedString("EnableConversationsRunning", "Ex206E52", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ChangePasswordLockedOut
		{
			get
			{
				return new LocalizedString("ChangePasswordLockedOut", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoIsNotMemberOfGroup(string obj, string group)
		{
			return new LocalizedString("InfoIsNotMemberOfGroup", "Ex1BECD9", false, true, Strings.ResourceManager, new object[]
			{
				obj,
				group
			});
		}

		public static LocalizedString ErrorNoCASServersInSite(string site)
		{
			return new LocalizedString("ErrorNoCASServersInSite", "ExD54D34", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString SetupProgressCreateWLMContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateWLMContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionWhileWritingOutputFile(string filename, string exMessage)
		{
			return new LocalizedString("ExceptionWhileWritingOutputFile", "Ex4B84D0", false, true, Strings.ResourceManager, new object[]
			{
				filename,
				exMessage
			});
		}

		public static LocalizedString GlobalLocatorServiceResultFailure
		{
			get
			{
				return new LocalizedString("GlobalLocatorServiceResultFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotRunForeignConnectorTaskOnEdge
		{
			get
			{
				return new LocalizedString("CannotRunForeignConnectorTaskOnEdge", "Ex54A5B8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StandaloneMailboxString(string serverName)
		{
			return new LocalizedString("StandaloneMailboxString", "ExA3DDC9", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString CasHealthOwaAuthMethodHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthMethodHeader", "Ex092C46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDuringTaskExecution(int count)
		{
			return new LocalizedString("ErrorDuringTaskExecution", "ExE024CB", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString TestSearchCheckServer
		{
			get
			{
				return new LocalizedString("TestSearchCheckServer", "Ex405F77", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressUpdateTenantMailboxes
		{
			get
			{
				return new LocalizedString("SetupProgressUpdateTenantMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTrustAlreadyDefined
		{
			get
			{
				return new LocalizedString("ErrorTrustAlreadyDefined", "ExE80BC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetOrganizationConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetOrganizationConfig", "Ex9259C5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOnlyOneProvisioningPolicyAllowed(string id)
		{
			return new LocalizedString("ErrorOnlyOneProvisioningPolicyAllowed", "ExEE82CB", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString RequiredIdentityInformationNotSet
		{
			get
			{
				return new LocalizedString("RequiredIdentityInformationNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetGroupRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorSetGroupRoleAssignment", "ExC19EB3", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		public static LocalizedString ConfirmationMessageEnableLiveId(string SiteId, string SiteName, string TargetInstance)
		{
			return new LocalizedString("ConfirmationMessageEnableLiveId", "Ex46DBA4", false, true, Strings.ResourceManager, new object[]
			{
				SiteId,
				SiteName,
				TargetInstance
			});
		}

		public static LocalizedString ErrorPublicFolderReferralServerHasNoPublicFolderDatabase(string server)
		{
			return new LocalizedString("ErrorPublicFolderReferralServerHasNoPublicFolderDatabase", "Ex09DD9D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorSetOWAMailboxPolicyToE12User
		{
			get
			{
				return new LocalizedString("ErrorSetOWAMailboxPolicyToE12User", "Ex56922E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorConflictingRestrictionParameters(string param1, string param2)
		{
			return new LocalizedString("ErrorConflictingRestrictionParameters", "Ex7422D2", false, true, Strings.ResourceManager, new object[]
			{
				param1,
				param2
			});
		}

		public static LocalizedString VerboseRemovingRoleAssignmentPolicy(string id)
		{
			return new LocalizedString("VerboseRemovingRoleAssignmentPolicy", "Ex2AF217", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorIndividualRecipientNeeded(string badId)
		{
			return new LocalizedString("ErrorIndividualRecipientNeeded", "ExD919C6", false, true, Strings.ResourceManager, new object[]
			{
				badId
			});
		}

		public static LocalizedString ErrorWrongRoleAssignmentUserType(string id, string recipientTypeDetails)
		{
			return new LocalizedString("ErrorWrongRoleAssignmentUserType", "Ex9F07C7", false, true, Strings.ResourceManager, new object[]
			{
				id,
				recipientTypeDetails
			});
		}

		public static LocalizedString MsiCouldNotRemoveProductDetailed(Guid productCode, string message, int errorCode, string msiError)
		{
			return new LocalizedString("MsiCouldNotRemoveProductDetailed", "Ex14D022", false, true, Strings.ResourceManager, new object[]
			{
				productCode,
				message,
				errorCode,
				msiError
			});
		}

		public static LocalizedString TenantScopedInboundConnectorRequiredForCMCConnector(string name)
		{
			return new LocalizedString("TenantScopedInboundConnectorRequiredForCMCConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CorruptRuleCollection(string reason)
		{
			return new LocalizedString("CorruptRuleCollection", "Ex3084E9", false, true, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString RequestAlreadySuspended(string name)
		{
			return new LocalizedString("RequestAlreadySuspended", "Ex6AB058", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorTargetPartitionHasTenantWithSameId(string oldTenant, string newPartition, string duplicateTenant, string guid)
		{
			return new LocalizedString("ErrorTargetPartitionHasTenantWithSameId", "", false, false, Strings.ResourceManager, new object[]
			{
				oldTenant,
				newPartition,
				duplicateTenant,
				guid
			});
		}

		public static LocalizedString ConfirmationMessageMailboxCalendarFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxCalendarFolder", "Ex39502F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressRemovingPublicFolderDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingPublicFolderDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressCopyingLogFiles
		{
			get
			{
				return new LocalizedString("ProgressCopyingLogFiles", "ExAF0FAC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidAdSite(string adSite)
		{
			return new LocalizedString("InvalidAdSite", "", false, false, Strings.ResourceManager, new object[]
			{
				adSite
			});
		}

		public static LocalizedString ErrorTenantRelocationNotAllowed(string tenant, string forest)
		{
			return new LocalizedString("ErrorTenantRelocationNotAllowed", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				forest
			});
		}

		public static LocalizedString CasHealthShortErrorMsgFromException(string exceptionType, string exceptionMessage)
		{
			return new LocalizedString("CasHealthShortErrorMsgFromException", "ExB0CF08", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage
			});
		}

		public static LocalizedString ConfirmationMessageSetMailContact(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailContact", "Ex643124", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupComponentProvisionServer
		{
			get
			{
				return new LocalizedString("SetupComponentProvisionServer", "ExCC58F7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmRetentionPolicyAllowed(string identity)
		{
			return new LocalizedString("ConfirmRetentionPolicyAllowed", "ExF072D7", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString FailedToDeleteTempEdbFile(string path)
		{
			return new LocalizedString("FailedToDeleteTempEdbFile", "ExF55A05", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString NeedEitherAssemblyPathOrValidName
		{
			get
			{
				return new LocalizedString("NeedEitherAssemblyPathOrValidName", "Ex5158E4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnableToAddCertificateToRootStore(string thumbprint, string serverName)
		{
			return new LocalizedString("UnableToAddCertificateToRootStore", "Ex2416ED", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint,
				serverName
			});
		}

		public static LocalizedString ErrorFindCertificateOnServerObject
		{
			get
			{
				return new LocalizedString("ErrorFindCertificateOnServerObject", "Ex5CA8C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionExsetdataGetMessageError(uint scErr, uint sc)
		{
			return new LocalizedString("ExceptionExsetdataGetMessageError", "ExC4293A", false, true, Strings.ResourceManager, new object[]
			{
				scErr,
				sc
			});
		}

		public static LocalizedString WarningOabSiteFolderCheckNotRun(string server)
		{
			return new LocalizedString("WarningOabSiteFolderCheckNotRun", "Ex415D88", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorProvisioningReconciliationConfigNotFound
		{
			get
			{
				return new LocalizedString("ErrorProvisioningReconciliationConfigNotFound", "ExA830C9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddDistributionGroupMember(string Identity, string Member)
		{
			return new LocalizedString("ConfirmationMessageAddDistributionGroupMember", "ExCE2C27", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Member
			});
		}

		public static LocalizedString SetupProgressStopEdgeTransportService
		{
			get
			{
				return new LocalizedString("SetupProgressStopEdgeTransportService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorResourceRoomOrEquipmentOnly(string room, string equipment, string fullString, string partialType)
		{
			return new LocalizedString("ErrorResourceRoomOrEquipmentOnly", "Ex3EDA8E", false, true, Strings.ResourceManager, new object[]
			{
				room,
				equipment,
				fullString,
				partialType
			});
		}

		public static LocalizedString OnlineIsIntegQueryJobException(string database, string failure)
		{
			return new LocalizedString("OnlineIsIntegQueryJobException", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				failure
			});
		}

		public static LocalizedString DebugStartInAcceptedDomainCheck
		{
			get
			{
				return new LocalizedString("DebugStartInAcceptedDomainCheck", "Ex1D2BD8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallMailSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallClientAccessIisWebServiceExtensions
		{
			get
			{
				return new LocalizedString("InstallClientAccessIisWebServiceExtensions", "ExD40A2D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CouldNotLocateAnyTeamMailbox
		{
			get
			{
				return new LocalizedString("CouldNotLocateAnyTeamMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateStatusUnknown
		{
			get
			{
				return new LocalizedString("CertificateStatusUnknown", "ExE6C9BE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRequest(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString VariablesSection
		{
			get
			{
				return new LocalizedString("VariablesSection", "Ex804FE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCheckingRmsOnlineAuthenticationCertificate
		{
			get
			{
				return new LocalizedString("InfoCheckingRmsOnlineAuthenticationCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningParametersIgnored(string parameters)
		{
			return new LocalizedString("WarningParametersIgnored", "Ex3122CD", false, true, Strings.ResourceManager, new object[]
			{
				parameters
			});
		}

		public static LocalizedString RemovingIndexEntry(string indexEntry)
		{
			return new LocalizedString("RemovingIndexEntry", "ExEB634A", false, true, Strings.ResourceManager, new object[]
			{
				indexEntry
			});
		}

		public static LocalizedString ProtocolSettingsFullDetails(string server, string port, string encryption)
		{
			return new LocalizedString("ProtocolSettingsFullDetails", "ExB395D4", false, true, Strings.ResourceManager, new object[]
			{
				server,
				port,
				encryption
			});
		}

		public static LocalizedString WarningCannotUpgradeRole(string roleId, string error)
		{
			return new LocalizedString("WarningCannotUpgradeRole", "ExC6F388", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				error
			});
		}

		public static LocalizedString CasConnectivityTaskTimeout(uint seconds)
		{
			return new LocalizedString("CasConnectivityTaskTimeout", "ExE6C6E6", false, true, Strings.ResourceManager, new object[]
			{
				seconds
			});
		}

		public static LocalizedString MtrtNotifySender
		{
			get
			{
				return new LocalizedString("MtrtNotifySender", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransportSettingsNotFound
		{
			get
			{
				return new LocalizedString("TransportSettingsNotFound", "ExF525DD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidAddOperationOnDBCopyForCircularLoggingEnabledDB(string pfdb)
		{
			return new LocalizedString("ErrorInvalidAddOperationOnDBCopyForCircularLoggingEnabledDB", "Ex25C110", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxRestoreRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxRestoreRequest", "Ex7BE180", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorInvalidOperationOnMoveMasterForPublicFolder(string pfdb)
		{
			return new LocalizedString("ErrorInvalidOperationOnMoveMasterForPublicFolder", "Ex772F0B", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString WarningLinkingWLMPolicyToLocalServerFailed(string policyName, string serverName, string error)
		{
			return new LocalizedString("WarningLinkingWLMPolicyToLocalServerFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName,
				serverName,
				error
			});
		}

		public static LocalizedString ErrorCannotStartPilotFOrOrgBeingUpgraded(string orgId)
		{
			return new LocalizedString("ErrorCannotStartPilotFOrOrgBeingUpgraded", "", false, false, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString SearchingForCertificateBySubject(string trimmedIssuedTo)
		{
			return new LocalizedString("SearchingForCertificateBySubject", "Ex4EDA5B", false, true, Strings.ResourceManager, new object[]
			{
				trimmedIssuedTo
			});
		}

		public static LocalizedString ConfirmationMessageRestoreDetailsTemplate(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRestoreDetailsTemplate", "Ex19DDB5", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SetupProgressCreateRBACRoleAssignments
		{
			get
			{
				return new LocalizedString("SetupProgressCreateRBACRoleAssignments", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetContentIndexTask
		{
			get
			{
				return new LocalizedString("GetContentIndexTask", "ExDF5851", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotUpdateInvalidRecipient(string idRecipient)
		{
			return new LocalizedString("ErrorCannotUpdateInvalidRecipient", "Ex1FBEEA", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient
			});
		}

		public static LocalizedString VerificationOfRemoteOrganizationRelationshipFailed(string remoteName)
		{
			return new LocalizedString("VerificationOfRemoteOrganizationRelationshipFailed", "Ex00DDA5", false, true, Strings.ResourceManager, new object[]
			{
				remoteName
			});
		}

		public static LocalizedString BackSyncFailedToConvertSyncObjectToDirectoryObject
		{
			get
			{
				return new LocalizedString("BackSyncFailedToConvertSyncObjectToDirectoryObject", "Ex9C7F3A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributePagerNumber
		{
			get
			{
				return new LocalizedString("ADAttributePagerNumber", "ExBFACC6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressEnableSelfManagement
		{
			get
			{
				return new LocalizedString("SetupProgressEnableSelfManagement", "Ex022DFD", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributePhoneNumber
		{
			get
			{
				return new LocalizedString("ADAttributePhoneNumber", "ExADCEA2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TenantNotificationVerboseNotSendingEmailDailyCap
		{
			get
			{
				return new LocalizedString("TenantNotificationVerboseNotSendingEmailDailyCap", "Ex6B0473", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthTestUserInDataCenterNotAccessible(string testDomain)
		{
			return new LocalizedString("CasHealthTestUserInDataCenterNotAccessible", "Ex56E898", false, true, Strings.ResourceManager, new object[]
			{
				testDomain
			});
		}

		public static LocalizedString DagNetworkAllDisabledWarning
		{
			get
			{
				return new LocalizedString("DagNetworkAllDisabledWarning", "Ex65CB44", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ContentIndexServiceDescription
		{
			get
			{
				return new LocalizedString("ContentIndexServiceDescription", "ExE02F2E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetMessageClassification(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMessageClassification", "Ex88F31E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorFileNotFound(string filename)
		{
			return new LocalizedString("ErrorFileNotFound", "Ex1B08F3", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		public static LocalizedString SetupProgressGALSyncEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressGALSyncEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveMailboxIsJournalReportNdrTo(string mbxId)
		{
			return new LocalizedString("ErrorRemoveMailboxIsJournalReportNdrTo", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString ErrorNameNotSet
		{
			get
			{
				return new LocalizedString("ErrorNameNotSet", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidFilterForLowestEap(string idEap, string input)
		{
			return new LocalizedString("ErrorInvalidFilterForLowestEap", "Ex1347D0", false, true, Strings.ResourceManager, new object[]
			{
				idEap,
				input
			});
		}

		public static LocalizedString IPListProviderNameExists(string name)
		{
			return new LocalizedString("IPListProviderNameExists", "Ex0534B1", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString StartingMomService
		{
			get
			{
				return new LocalizedString("StartingMomService", "Ex1B5FAF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRoleEntryNotExistOnParent(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryNotExistOnParent", "Ex3225F4", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		public static LocalizedString ConfirmationMessageStopMailboxSearch(string name)
		{
			return new LocalizedString("ConfirmationMessageStopMailboxSearch", "Ex75BE8B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarningSearchAdminAuditLogOnPreR5(string org)
		{
			return new LocalizedString("WarningSearchAdminAuditLogOnPreR5", "Ex897DCB", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString WarningRetentionTagIdChange(string tagName)
		{
			return new LocalizedString("WarningRetentionTagIdChange", "Ex4B930B", false, true, Strings.ResourceManager, new object[]
			{
				tagName
			});
		}

		public static LocalizedString SetupProgressRecipientMailSubmissionRateQuota
		{
			get
			{
				return new LocalizedString("SetupProgressRecipientMailSubmissionRateQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchCreateMessage(string MDB, string ID)
		{
			return new LocalizedString("TestSearchCreateMessage", "ExA29C84", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		public static LocalizedString SgcFailedToSuspendRpc(string sg, string error)
		{
			return new LocalizedString("SgcFailedToSuspendRpc", "ExBA045F", false, true, Strings.ResourceManager, new object[]
			{
				sg,
				error
			});
		}

		public static LocalizedString ErrorSupervisionEntryAlreadyPresent(string entry, string tag)
		{
			return new LocalizedString("ErrorSupervisionEntryAlreadyPresent", "Ex00320F", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		public static LocalizedString WrongNumberOfTokens(string line, string file, string expectedNumber)
		{
			return new LocalizedString("WrongNumberOfTokens", "ExACE486", false, true, Strings.ResourceManager, new object[]
			{
				line,
				file,
				expectedNumber
			});
		}

		public static LocalizedString MalboxFolderRightsEditOwnedItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsEditOwnedItems", "Ex07BE7E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TTNameWithNonTTServiceplan(string suffix)
		{
			return new LocalizedString("TTNameWithNonTTServiceplan", "", false, false, Strings.ResourceManager, new object[]
			{
				suffix
			});
		}

		public static LocalizedString WritableDatabaseNotUnique(string WritableDatabase)
		{
			return new LocalizedString("WritableDatabaseNotUnique", "ExB0E406", false, true, Strings.ResourceManager, new object[]
			{
				WritableDatabase
			});
		}

		public static LocalizedString SetupPerimeterSafelistingUIMode
		{
			get
			{
				return new LocalizedString("SetupPerimeterSafelistingUIMode", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidFilterForDefaultGlobalAddressList(string id, string input, string expected)
		{
			return new LocalizedString("ErrorInvalidFilterForDefaultGlobalAddressList", "Ex73BAE0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				input,
				expected
			});
		}

		public static LocalizedString ConfirmationMessageSetOfflineAddressBook(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOfflineAddressBook", "Ex777D9D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorNoMailboxPlanWithSKUCapability(string skuCapability)
		{
			return new LocalizedString("ErrorNoMailboxPlanWithSKUCapability", "ExD9E818", false, true, Strings.ResourceManager, new object[]
			{
				skuCapability
			});
		}

		public static LocalizedString MobileDeviceLogPath(string path)
		{
			return new LocalizedString("MobileDeviceLogPath", "Ex5BD9F1", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString VerboseSearchingAssigneeInConfigNC
		{
			get
			{
				return new LocalizedString("VerboseSearchingAssigneeInConfigNC", "ExCB758B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PerfCounterDefinition(string counterName, PerformanceCounterType counterType)
		{
			return new LocalizedString("PerfCounterDefinition", "ExA2F7D1", false, true, Strings.ResourceManager, new object[]
			{
				counterName,
				counterType
			});
		}

		public static LocalizedString CasHealthWebServicesException(string message, string stack)
		{
			return new LocalizedString("CasHealthWebServicesException", "ExD2E63F", false, true, Strings.ResourceManager, new object[]
			{
				message,
				stack
			});
		}

		public static LocalizedString AllForeignAccounts
		{
			get
			{
				return new LocalizedString("AllForeignAccounts", "Ex5CA2D8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OnPremisesOrganizationOrganizationRelationshipNotUnique(OrganizationRelationshipIdParameter identity)
		{
			return new LocalizedString("OnPremisesOrganizationOrganizationRelationshipNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CasHealthCouldNotLogUserDataCenterNoDetailedInfo(string testDomain, string scriptName)
		{
			return new LocalizedString("CasHealthCouldNotLogUserDataCenterNoDetailedInfo", "Ex34AB60", false, true, Strings.ResourceManager, new object[]
			{
				testDomain,
				scriptName
			});
		}

		public static LocalizedString ConfirmationMessageStopMigrationBatch(string batchName)
		{
			return new LocalizedString("ConfirmationMessageStopMigrationBatch", "Ex43FADD", false, true, Strings.ResourceManager, new object[]
			{
				batchName
			});
		}

		public static LocalizedString OriginalUriVerbose(string originalUri)
		{
			return new LocalizedString("OriginalUriVerbose", "ExBC1C1F", false, true, Strings.ResourceManager, new object[]
			{
				originalUri
			});
		}

		public static LocalizedString CasHealthEasSyncZeroScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthEasSyncZeroScenarioDescription", "Ex159F45", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PromptFileNotFoundException(string p1, string p2)
		{
			return new LocalizedString("PromptFileNotFoundException", "ExB1429D", false, true, Strings.ResourceManager, new object[]
			{
				p1,
				p2
			});
		}

		public static LocalizedString ExceptionTargetMailboxNotFound(string id, string search)
		{
			return new LocalizedString("ExceptionTargetMailboxNotFound", "ExE9F9B1", false, true, Strings.ResourceManager, new object[]
			{
				id,
				search
			});
		}

		public static LocalizedString SetupProgressMaxSendTransportQuota
		{
			get
			{
				return new LocalizedString("SetupProgressMaxSendTransportQuota", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IdentityWasNotInValidFormat(string rawIdentity)
		{
			return new LocalizedString("IdentityWasNotInValidFormat", "ExCAA9C7", false, true, Strings.ResourceManager, new object[]
			{
				rawIdentity
			});
		}

		public static LocalizedString FfoWebServicePreConfigComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServicePreConfigComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisasterRecoveryUnifiedMessagingRoleDescription
		{
			get
			{
				return new LocalizedString("DisasterRecoveryUnifiedMessagingRoleDescription", "ExA20CB6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotStartRunningSearch(string name)
		{
			return new LocalizedString("CannotStartRunningSearch", "ExC33C41", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupProgressActiveSyncEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressActiveSyncEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorManagedMemberNotExists(string memberName)
		{
			return new LocalizedString("ErrorManagedMemberNotExists", "ExBA0CE1", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ErrorInvalidAuditOwnerOperationType
		{
			get
			{
				return new LocalizedString("ErrorInvalidAuditOwnerOperationType", "Ex2FFD46", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ActiveDirectoryConnectivityTransactionsAllSucceeded
		{
			get
			{
				return new LocalizedString("ActiveDirectoryConnectivityTransactionsAllSucceeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DefaultPublicFolders
		{
			get
			{
				return new LocalizedString("DefaultPublicFolders", "Ex9E6405", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateAutoGroupRetentionPolicyTag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateAutoGroupRetentionPolicyTag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MonitoringItemAlreadyHasGlobalOverride(string workitem, string overrideName, string workitemType)
		{
			return new LocalizedString("MonitoringItemAlreadyHasGlobalOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				workitem,
				overrideName,
				workitemType
			});
		}

		public static LocalizedString ErrorReadingUpdatedUserFromAD(string saveDC, string readDC)
		{
			return new LocalizedString("ErrorReadingUpdatedUserFromAD", "Ex65AF71", false, true, Strings.ResourceManager, new object[]
			{
				saveDC,
				readDC
			});
		}

		public static LocalizedString CasHealthTestUserOnIncorrectServer(string domain, string userName, string foundOn, string shouldBeOn)
		{
			return new LocalizedString("CasHealthTestUserOnIncorrectServer", "Ex1EE517", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName,
				foundOn,
				shouldBeOn
			});
		}

		public static LocalizedString CrossPremiseServerNotSelected(string server)
		{
			return new LocalizedString("CrossPremiseServerNotSelected", "Ex249E8D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorRemovedMailboxCannotBeUsedWithDatabaseParameter(string databaseValue)
		{
			return new LocalizedString("ErrorRemovedMailboxCannotBeUsedWithDatabaseParameter", "ExE9A40D", false, true, Strings.ResourceManager, new object[]
			{
				databaseValue
			});
		}

		public static LocalizedString ConfirmationMessageNewDynamicDistributionGroupCustomFilter(string Name, string RecipientFilter, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewDynamicDistributionGroupCustomFilter", "Ex60DD60", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				RecipientFilter,
				OrganizationalUnit
			});
		}

		public static LocalizedString ServiceNotInstalled(string servicename)
		{
			return new LocalizedString("ServiceNotInstalled", "Ex1F216A", false, true, Strings.ResourceManager, new object[]
			{
				servicename
			});
		}

		public static LocalizedString MultipleDefaultPoliciesExist(string organization)
		{
			return new LocalizedString("MultipleDefaultPoliciesExist", "Ex9C597B", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString MoveStatusUnknown
		{
			get
			{
				return new LocalizedString("MoveStatusUnknown", "ExCD8796", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewPublicFolderMailboxMigrationRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolderMailboxMigrationRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString TestSearchCIIsDisabled(string mdb)
		{
			return new LocalizedString("TestSearchCIIsDisabled", "Ex60D11D", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString CasHealthOwaLongName
		{
			get
			{
				return new LocalizedString("CasHealthOwaLongName", "Ex598ABE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SafeRecipientsNotUpdated(int safeRecipients, int safeRecipientDomains, string identity)
		{
			return new LocalizedString("SafeRecipientsNotUpdated", "Ex507BB2", false, true, Strings.ResourceManager, new object[]
			{
				safeRecipients,
				safeRecipientDomains,
				identity
			});
		}

		public static LocalizedString CasHealthEcpShortName
		{
			get
			{
				return new LocalizedString("CasHealthEcpShortName", "ExE0D78B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstructResetCredentials(string detailedInformation)
		{
			return new LocalizedString("InstructResetCredentials", "Ex2C9EC5", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		public static LocalizedString CopyStatusMounting
		{
			get
			{
				return new LocalizedString("CopyStatusMounting", "ExA6FB97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExchangeConfigurationContainerNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorExchangeConfigurationContainerNotUnique", "ExAC9CB9", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString VerboseArchiveNotExistInStore(string identity)
		{
			return new LocalizedString("VerboseArchiveNotExistInStore", "Ex034C5D", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString CopyOperation
		{
			get
			{
				return new LocalizedString("CopyOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAmbiguousElcFolderId(string folderid)
		{
			return new LocalizedString("ErrorAmbiguousElcFolderId", "Ex196C57", false, true, Strings.ResourceManager, new object[]
			{
				folderid
			});
		}

		public static LocalizedString SendConnectorWrongSourceServerRole(string serverName)
		{
			return new LocalizedString("SendConnectorWrongSourceServerRole", "Ex64D0EC", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString FfoWebServiceProvisionComponentDescription
		{
			get
			{
				return new LocalizedString("FfoWebServiceProvisionComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorConflictResourceCustom
		{
			get
			{
				return new LocalizedString("ErrorConflictResourceCustom", "ExAFEBB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionFingerprintsExceedLimit(int actualCount, int limit)
		{
			return new LocalizedString("ClassificationRuleCollectionFingerprintsExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				actualCount,
				limit
			});
		}

		public static LocalizedString InstallAssistantsServiceTask
		{
			get
			{
				return new LocalizedString("InstallAssistantsServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidAddOperationDatabaseIsNotMounted(string pfdb)
		{
			return new LocalizedString("ErrorInvalidAddOperationDatabaseIsNotMounted", "ExAFA103", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString SetupProgressCreateOWAMailboxPolicyContainers
		{
			get
			{
				return new LocalizedString("SetupProgressCreateOWAMailboxPolicyContainers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveTeamMailboxProvisioningPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveTeamMailboxProvisioningPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString RequestingFederationMetadataFromEndPoint(string metadataEpr)
		{
			return new LocalizedString("RequestingFederationMetadataFromEndPoint", "Ex332BEB", false, true, Strings.ResourceManager, new object[]
			{
				metadataEpr
			});
		}

		public static LocalizedString VerboseDeleteFile(string server, string targetFilePath)
		{
			return new LocalizedString("VerboseDeleteFile", "Ex6E834B", false, true, Strings.ResourceManager, new object[]
			{
				server,
				targetFilePath
			});
		}

		public static LocalizedString MRSProxyPingSkipped(string mrsServer)
		{
			return new LocalizedString("MRSProxyPingSkipped", "", false, false, Strings.ResourceManager, new object[]
			{
				mrsServer
			});
		}

		public static LocalizedString StampExistingResponsePassThroughOnVirtualDirectoryFailure(string serverName, string metabasePath, int exitCode, string errors)
		{
			return new LocalizedString("StampExistingResponsePassThroughOnVirtualDirectoryFailure", "Ex420735", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath,
				exitCode,
				errors
			});
		}

		public static LocalizedString KeynoteConnectorServiceDisplayName
		{
			get
			{
				return new LocalizedString("KeynoteConnectorServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewPublicFolder(string parent, string Name)
		{
			return new LocalizedString("ConfirmationMessageNewPublicFolder", "ExD4E28C", false, true, Strings.ResourceManager, new object[]
			{
				parent,
				Name
			});
		}

		public static LocalizedString ConfirmationMessageImportRecipientDataProperty(string recipient)
		{
			return new LocalizedString("ConfirmationMessageImportRecipientDataProperty", "Ex451FCE", false, true, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString ADAttributeCustomAttribute5
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute5", "ExC654E7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeCustomAttribute1
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute1", "ExF9BF19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFilterParametersIntraOrg
		{
			get
			{
				return new LocalizedString("ErrorFilterParametersIntraOrg", "Ex978DF5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPreE12TargetConfigurationOnly(string database)
		{
			return new LocalizedString("ErrorPreE12TargetConfigurationOnly", "Ex9ABE35", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ConfirmationMessageAddRecipientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddRecipientPermission", "ExAB0943", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString CasHealthWebAppLiveIdEnd
		{
			get
			{
				return new LocalizedString("CasHealthWebAppLiveIdEnd", "Ex3AC8A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WebServiceRoleEntryNotSupportParametersAndSnapin
		{
			get
			{
				return new LocalizedString("WebServiceRoleEntryNotSupportParametersAndSnapin", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtEventFail
		{
			get
			{
				return new LocalizedString("MtrtEventFail", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RegistryAccessSecurityExceptionWrite(string key)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionWrite", "ExF51160", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString CasHealthWebAppRequestException(Uri requestUri, WebExceptionStatus status, string serverName, string exceptionMessage)
		{
			return new LocalizedString("CasHealthWebAppRequestException", "ExEFE426", false, true, Strings.ResourceManager, new object[]
			{
				requestUri,
				status,
				serverName,
				exceptionMessage
			});
		}

		public static LocalizedString WarningMessageSizeRestrictionOutOfSync
		{
			get
			{
				return new LocalizedString("WarningMessageSizeRestrictionOutOfSync", "Ex673B08", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxShouldMoveE14ToLowerVersion(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxShouldMoveE14ToLowerVersion", "ExD4DF67", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		public static LocalizedString MigrationCSVNotAllowed
		{
			get
			{
				return new LocalizedString("MigrationCSVNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedIisRestartForChangingECPFeatureWarning
		{
			get
			{
				return new LocalizedString("NeedIisRestartForChangingECPFeatureWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TlsSenderCertificateNameMatchesFfoFDSmtpCertificateId(string certificate)
		{
			return new LocalizedString("TlsSenderCertificateNameMatchesFfoFDSmtpCertificateId", "", false, false, Strings.ResourceManager, new object[]
			{
				certificate
			});
		}

		public static LocalizedString ClassificationRuleCollectionUnexpectedContents
		{
			get
			{
				return new LocalizedString("ClassificationRuleCollectionUnexpectedContents", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PerfCounterFileInUse(string counterName, int retries, int retryPeriod)
		{
			return new LocalizedString("PerfCounterFileInUse", "Ex5D35E6", false, true, Strings.ResourceManager, new object[]
			{
				counterName,
				retries,
				retryPeriod
			});
		}

		public static LocalizedString ErrorFailToDeleteDueToSubFolders(string identity)
		{
			return new LocalizedString("ErrorFailToDeleteDueToSubFolders", "Ex37D10F", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString BPADownloadingUpdates
		{
			get
			{
				return new LocalizedString("BPADownloadingUpdates", "Ex39C59A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FoundMultipleObjectById
		{
			get
			{
				return new LocalizedString("FoundMultipleObjectById", "Ex206B90", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPrimaryTargetIsNotAnMEU(string user)
		{
			return new LocalizedString("ErrorPrimaryTargetIsNotAnMEU", "Ex1A22FB", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString EtrHasRmsAction(string ruleName)
		{
			return new LocalizedString("EtrHasRmsAction", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName
			});
		}

		public static LocalizedString ErrorSubmitCommandInvalid(string command, int cmd)
		{
			return new LocalizedString("ErrorSubmitCommandInvalid", "ExDD53C3", false, true, Strings.ResourceManager, new object[]
			{
				command,
				cmd
			});
		}

		public static LocalizedString CasHealthSpecifyMailboxForResetCredentials
		{
			get
			{
				return new LocalizedString("CasHealthSpecifyMailboxForResetCredentials", "Ex11665A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPostSetupCafe
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupCafe", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewRoleGroup(string Name, string Roles, string ManagedBy, string RecipientWriteScope, string ConfigWriteScope)
		{
			return new LocalizedString("ConfirmationMessageNewRoleGroup", "Ex2CEA40", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Roles,
				ManagedBy,
				RecipientWriteScope,
				ConfigWriteScope
			});
		}

		public static LocalizedString DagTaskRemovingNodeToCluster(string serverName)
		{
			return new LocalizedString("DagTaskRemovingNodeToCluster", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString WarningEdbFileLocationNotExists(string path)
		{
			return new LocalizedString("WarningEdbFileLocationNotExists", "Ex4B8C71", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ConfirmationMessageSetIPAllowListProvidersConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetIPAllowListProvidersConfig", "ExF479B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RequestNotSuspended(string name)
		{
			return new LocalizedString("RequestNotSuspended", "ExDC9423", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupComponentConfiguringRpcClientAccessService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringRpcClientAccessService", "Ex81E298", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAddGroupMemberCrossTenant
		{
			get
			{
				return new LocalizedString("ErrorAddGroupMemberCrossTenant", "ExEB32A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBPAOutputConflict
		{
			get
			{
				return new LocalizedString("ErrorBPAOutputConflict", "Ex119F74", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoteMailboxImportNeedRemoteProxy
		{
			get
			{
				return new LocalizedString("ErrorRemoteMailboxImportNeedRemoteProxy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidForeignForestGroupException(string name, string domain)
		{
			return new LocalizedString("InvalidForeignForestGroupException", "ExC99DE5", false, true, Strings.ResourceManager, new object[]
			{
				name,
				domain
			});
		}

		public static LocalizedString VerboseServiceValidatorResponseTrace(string name, string message)
		{
			return new LocalizedString("VerboseServiceValidatorResponseTrace", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				message
			});
		}

		public static LocalizedString ElcUserConfigurationException(string reason)
		{
			return new LocalizedString("ElcUserConfigurationException", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString ServicesComponentDescription
		{
			get
			{
				return new LocalizedString("ServicesComponentDescription", "Ex7CFDEE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTenantNotInActiveOrgState(string identity)
		{
			return new LocalizedString("ErrorTenantNotInActiveOrgState", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString MoveMailboxConfigurationOnlyShouldMove(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxConfigurationOnlyShouldMove", "Ex95FBD7", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		public static LocalizedString StartingOnePointService
		{
			get
			{
				return new LocalizedString("StartingOnePointService", "ExC66849", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageEnableMailboxLinkedAndResource(string Identity, string LinkedMasterAccount, string LinkedDomainController, string ResourceType)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxLinkedAndResource", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity,
				LinkedMasterAccount,
				LinkedDomainController,
				ResourceType
			});
		}

		public static LocalizedString ErrorCannotResumeIfNotSuspended
		{
			get
			{
				return new LocalizedString("ErrorCannotResumeIfNotSuspended", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToGetDatabaseStatus(string databaseId)
		{
			return new LocalizedString("ErrorFailedToGetDatabaseStatus", "Ex51A19F", false, true, Strings.ResourceManager, new object[]
			{
				databaseId
			});
		}

		public static LocalizedString SetupProgressRemovingMailboxDatabase
		{
			get
			{
				return new LocalizedString("SetupProgressRemovingMailboxDatabase", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotModifyCompletedRequest(string identity)
		{
			return new LocalizedString("ErrorCannotModifyCompletedRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorMobileMailboxPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorMobileMailboxPolicyNotUnique", "ExF1B98E", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString VerboseCheckDirectoryExistenceCondition(string server, string path)
		{
			return new LocalizedString("VerboseCheckDirectoryExistenceCondition", "Ex7FD64E", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		public static LocalizedString ErrorBadEmailAddressTemplate(string eapId, string templates)
		{
			return new LocalizedString("ErrorBadEmailAddressTemplate", "Ex0CCCEC", false, true, Strings.ResourceManager, new object[]
			{
				eapId,
				templates
			});
		}

		public static LocalizedString MismatchedUser(string user, string organizationOfUser, string organizationRelationship, string organizationOfOrgRelationship)
		{
			return new LocalizedString("MismatchedUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user,
				organizationOfUser,
				organizationRelationship,
				organizationOfOrgRelationship
			});
		}

		public static LocalizedString MobileDeviceLogNotRetrieved
		{
			get
			{
				return new LocalizedString("MobileDeviceLogNotRetrieved", "Ex693FCC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AuditLogSearchNonUniqueArbitrationMailbox(string organization)
		{
			return new LocalizedString("AuditLogSearchNonUniqueArbitrationMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString RemoveLiveFedDomainReserveRequest(string domain)
		{
			return new LocalizedString("RemoveLiveFedDomainReserveRequest", "ExDB0CE7", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString DeletionAndUnsearchableNotPermitted
		{
			get
			{
				return new LocalizedString("DeletionAndUnsearchableNotPermitted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewRoutingGroupConnector(string name, string sourceRgName, string targetRgName, int cost)
		{
			return new LocalizedString("ConfirmationMessageNewRoutingGroupConnector", "ExBB205B", false, true, Strings.ResourceManager, new object[]
			{
				name,
				sourceRgName,
				targetRgName,
				cost
			});
		}

		public static LocalizedString InboxRuleDescriptionOr
		{
			get
			{
				return new LocalizedString("InboxRuleDescriptionOr", "Ex82B1C5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSiteNotFound(object site)
		{
			return new LocalizedString("ErrorSiteNotFound", "ExD7564F", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString ErrorUniversalGroupCannotHaveLocalGroup(string universalGroup, string localGroup)
		{
			return new LocalizedString("ErrorUniversalGroupCannotHaveLocalGroup", "Ex6F2C0D", false, true, Strings.ResourceManager, new object[]
			{
				universalGroup,
				localGroup
			});
		}

		public static LocalizedString MonitoringCorrelationServiceDisplayName
		{
			get
			{
				return new LocalizedString("MonitoringCorrelationServiceDisplayName", "Ex9B924E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorExternalEmailAddressNotSmtpAddress(string address)
		{
			return new LocalizedString("ErrorExternalEmailAddressNotSmtpAddress", "Ex2A4EEB", false, true, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		public static LocalizedString ErrorTeamMailboxTooManyOwnersAndMembers(int num, int limit)
		{
			return new LocalizedString("ErrorTeamMailboxTooManyOwnersAndMembers", "", false, false, Strings.ResourceManager, new object[]
			{
				num,
				limit
			});
		}

		public static LocalizedString ProgressEmailAddressPolicyPreparingPriority
		{
			get
			{
				return new LocalizedString("ProgressEmailAddressPolicyPreparingPriority", "Ex11D9DA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DataClassificationFingerprintsDescriptionMissing(string name)
		{
			return new LocalizedString("DataClassificationFingerprintsDescriptionMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorPSTFileIsDirectory(string path)
		{
			return new LocalizedString("ErrorPSTFileIsDirectory", "ExB6A9D6", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString MtrtApplyHtmlDisclaimer
		{
			get
			{
				return new LocalizedString("MtrtApplyHtmlDisclaimer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmManagedFolderMailboxPolicyAllowed(string identity)
		{
			return new LocalizedString("ConfirmManagedFolderMailboxPolicyAllowed", "Ex3882E0", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString UnableToConnect
		{
			get
			{
				return new LocalizedString("UnableToConnect", "ExE8079B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailFlowPartnerNotUnique(MailFlowPartnerIdParameter name)
		{
			return new LocalizedString("MailFlowPartnerNotUnique", "Ex2D75A2", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString FailedToForceCleanupNode(string nodeName, string dagName, string error)
		{
			return new LocalizedString("FailedToForceCleanupNode", "", false, false, Strings.ResourceManager, new object[]
			{
				nodeName,
				dagName,
				error
			});
		}

		public static LocalizedString ClassificationRuleCollectionCustomTermsCountExceedLimit(int numberOfCustomTermsLimit, string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionCustomTermsCountExceedLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				numberOfCustomTermsLimit,
				offendingRuleIds
			});
		}

		public static LocalizedString UninstallExchangeOrganizationDescription
		{
			get
			{
				return new LocalizedString("UninstallExchangeOrganizationDescription", "Ex384391", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidServerLegacyDistinguishName(string mailbox)
		{
			return new LocalizedString("ErrorInvalidServerLegacyDistinguishName", "Ex5EE5ED", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageRemoveReceiveConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveReceiveConnector", "ExDABCE9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString GetFederationInformationTokenIssuerDoesntMatch(string local, string remote)
		{
			return new LocalizedString("GetFederationInformationTokenIssuerDoesntMatch", "Ex24A4A8", false, true, Strings.ResourceManager, new object[]
			{
				local,
				remote
			});
		}

		public static LocalizedString InterceptorWarningArchivedItemsLifeTime(string identity, string path, int days)
		{
			return new LocalizedString("InterceptorWarningArchivedItemsLifeTime", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				path,
				days
			});
		}

		public static LocalizedString CasHealthScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthScenarioDescription", "Ex445A71", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DualWriteSaveWarningMessage
		{
			get
			{
				return new LocalizedString("DualWriteSaveWarningMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveAcceptedDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAcceptedDomain", "Ex30D480", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ParameterNotAllowedWithTopLevelRole(string paramName, string roleType)
		{
			return new LocalizedString("ParameterNotAllowedWithTopLevelRole", "ExC4ADFE", false, true, Strings.ResourceManager, new object[]
			{
				paramName,
				roleType
			});
		}

		public static LocalizedString CasHealthWebAppLiveIdSendingRequest(Uri requestUri)
		{
			return new LocalizedString("CasHealthWebAppLiveIdSendingRequest", "Ex15B74B", false, true, Strings.ResourceManager, new object[]
			{
				requestUri
			});
		}

		public static LocalizedString VerboseFixingObjectsUnderRootIdFilter(string root, string filter)
		{
			return new LocalizedString("VerboseFixingObjectsUnderRootIdFilter", "Ex60DEF7", false, true, Strings.ResourceManager, new object[]
			{
				root,
				filter
			});
		}

		public static LocalizedString ErrorCannotChangeName
		{
			get
			{
				return new LocalizedString("ErrorCannotChangeName", "Ex44DF57", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IisUtilityCannotDisambiguateWebSiteException(string webSiteName, string path1, string path2)
		{
			return new LocalizedString("IisUtilityCannotDisambiguateWebSiteException", "ExA47AF0", false, true, Strings.ResourceManager, new object[]
			{
				webSiteName,
				path1,
				path2
			});
		}

		public static LocalizedString GetMsoDiagnosticsProgressBatch(int i, int total)
		{
			return new LocalizedString("GetMsoDiagnosticsProgressBatch", "", false, false, Strings.ResourceManager, new object[]
			{
				i,
				total
			});
		}

		public static LocalizedString ErrorTooManyTransportRules(int max)
		{
			return new LocalizedString("ErrorTooManyTransportRules", "ExDEADB0", false, true, Strings.ResourceManager, new object[]
			{
				max
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailboxResource(string Identity, string ResourceType)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxResource", "Ex84D1A6", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ResourceType
			});
		}

		public static LocalizedString SetupComponentPostSetupAdminTools
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupAdminTools", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRelocationStateRequestedIsTooLow(string tenant, string requestedState, string currentState)
		{
			return new LocalizedString("ErrorRelocationStateRequestedIsTooLow", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant,
				requestedState,
				currentState
			});
		}

		public static LocalizedString MtrtAddToRecipient
		{
			get
			{
				return new LocalizedString("MtrtAddToRecipient", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NeedToSpecifyADSiteObject
		{
			get
			{
				return new LocalizedString("NeedToSpecifyADSiteObject", "Ex0E9780", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsDefaultScopeNotFound(string groupName)
		{
			return new LocalizedString("ExchangeSettingsDefaultScopeNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		public static LocalizedString ErrorConfigurationOnly
		{
			get
			{
				return new LocalizedString("ErrorConfigurationOnly", "Ex1EA18C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWindowsLiveIdRequired(string user)
		{
			return new LocalizedString("ErrorWindowsLiveIdRequired", "ExB663E9", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString MesoVersionInvalidException(string description)
		{
			return new LocalizedString("MesoVersionInvalidException", "ExE8D191", false, true, Strings.ResourceManager, new object[]
			{
				description
			});
		}

		public static LocalizedString DatacenterSetupComponentPerfCountersBridgehead
		{
			get
			{
				return new LocalizedString("DatacenterSetupComponentPerfCountersBridgehead", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FBAServiceDisplayName
		{
			get
			{
				return new LocalizedString("FBAServiceDisplayName", "Ex171E06", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAutoDiscoverValidatorRequiresRedirection(string emailAddress)
		{
			return new LocalizedString("ErrorAutoDiscoverValidatorRequiresRedirection", "", false, false, Strings.ResourceManager, new object[]
			{
				emailAddress
			});
		}

		public static LocalizedString ExecutingScriptNonFatal(string script)
		{
			return new LocalizedString("ExecutingScriptNonFatal", "Ex218064", false, true, Strings.ResourceManager, new object[]
			{
				script
			});
		}

		public static LocalizedString TransitionInfoLabelLastSuccessTransition
		{
			get
			{
				return new LocalizedString("TransitionInfoLabelLastSuccessTransition", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPrimarySmtpAndWindowsAddressDifferent
		{
			get
			{
				return new LocalizedString("ErrorPrimarySmtpAndWindowsAddressDifferent", "Ex7A3A81", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorWriteOpOnDehydratedTenant
		{
			get
			{
				return new LocalizedString("ErrorWriteOpOnDehydratedTenant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PSTExportComplete(string filePath, string computerName)
		{
			return new LocalizedString("PSTExportComplete", "ExEA9F2A", false, true, Strings.ResourceManager, new object[]
			{
				filePath,
				computerName
			});
		}

		public static LocalizedString ErrorRmsOnlineAuthenticationCertificateNotYetValid
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlineAuthenticationCertificateNotYetValid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallWatchDogServiceTask
		{
			get
			{
				return new LocalizedString("UninstallWatchDogServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNameMustBeUniquePerMailbox(string name, string mbx)
		{
			return new LocalizedString("ErrorNameMustBeUniquePerMailbox", "ExF5BBE1", false, true, Strings.ResourceManager, new object[]
			{
				name,
				mbx
			});
		}

		public static LocalizedString WritableServerNotUnique(string WritableServer)
		{
			return new LocalizedString("WritableServerNotUnique", "ExD6CE61", false, true, Strings.ResourceManager, new object[]
			{
				WritableServer
			});
		}

		public static LocalizedString ErrorCannotFindFingerprintDataClassification(string identity)
		{
			return new LocalizedString("ErrorCannotFindFingerprintDataClassification", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningCannotGetGlsTenantFromOrgId(string orgid, string errMsg)
		{
			return new LocalizedString("WarningCannotGetGlsTenantFromOrgId", "", false, false, Strings.ResourceManager, new object[]
			{
				orgid,
				errMsg
			});
		}

		public static LocalizedString ServerConfigurationException(string serverName, string errorMessage)
		{
			return new LocalizedString("ServerConfigurationException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		public static LocalizedString ErrorSpecifyAutoMappingOnNonFullAccess
		{
			get
			{
				return new LocalizedString("ErrorSpecifyAutoMappingOnNonFullAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UMCallAnsweringRuleFindMeWithoutContextWithSecondNumber(int key, string firstNumber, string secondNumber)
		{
			return new LocalizedString("UMCallAnsweringRuleFindMeWithoutContextWithSecondNumber", "", false, false, Strings.ResourceManager, new object[]
			{
				key,
				firstNumber,
				secondNumber
			});
		}

		public static LocalizedString TestSearchCreateTestFolderError(string ID, string database)
		{
			return new LocalizedString("TestSearchCreateTestFolderError", "Ex03E160", false, true, Strings.ResourceManager, new object[]
			{
				ID,
				database
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMoveRequest", "ExD32DBB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorInvalidBatchParameter(string parameterName, string type, string direction)
		{
			return new LocalizedString("ErrorInvalidBatchParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName,
				type,
				direction
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxPermanentAndLiveId(string Identity, string liveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermanentAndLiveId", "Ex44E694", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveId
			});
		}

		public static LocalizedString ClientAccessPrereqCheck
		{
			get
			{
				return new LocalizedString("ClientAccessPrereqCheck", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageExportMigrationReport(string tenantName)
		{
			return new LocalizedString("ConfirmationMessageExportMigrationReport", "ExA7BDDA", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString ConfirmationMessageStopDatabaseAvailabilityGroupADSite(string Identity, string ad)
		{
			return new LocalizedString("ConfirmationMessageStopDatabaseAvailabilityGroupADSite", "Ex444B3B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				ad
			});
		}

		public static LocalizedString ConfirmationMessageAuthNewDateTooShort(int hours)
		{
			return new LocalizedString("ConfirmationMessageAuthNewDateTooShort", "", false, false, Strings.ResourceManager, new object[]
			{
				hours
			});
		}

		public static LocalizedString ErrorPathNotUniqueAmongExistingDbCopies(string location, string field)
		{
			return new LocalizedString("ErrorPathNotUniqueAmongExistingDbCopies", "Ex2AD616", false, true, Strings.ResourceManager, new object[]
			{
				location,
				field
			});
		}

		public static LocalizedString ErrorSharingPolicyNotFound(string policyDN)
		{
			return new LocalizedString("ErrorSharingPolicyNotFound", "Ex499702", false, true, Strings.ResourceManager, new object[]
			{
				policyDN
			});
		}

		public static LocalizedString RmsSharedIdentityBeingLinkedToComputer(string userDn, string userOriginatingServer, string computerDn, string computerOriginatingServer)
		{
			return new LocalizedString("RmsSharedIdentityBeingLinkedToComputer", "Ex87325B", false, true, Strings.ResourceManager, new object[]
			{
				userDn,
				userOriginatingServer,
				computerDn,
				computerOriginatingServer
			});
		}

		public static LocalizedString ConfirmationMessageAuthSettingOutage
		{
			get
			{
				return new LocalizedString("ConfirmationMessageAuthSettingOutage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageAddMailboxPermissionOwner(string Identity, string Owner)
		{
			return new LocalizedString("ConfirmationMessageAddMailboxPermissionOwner", "Ex82C109", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Owner
			});
		}

		public static LocalizedString ErrorNoAuditLogForArchive(string user)
		{
			return new LocalizedString("ErrorNoAuditLogForArchive", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString WarningModerationWithWrongGroupType
		{
			get
			{
				return new LocalizedString("WarningModerationWithWrongGroupType", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveManagementRoleEntry(string Name, string Role)
		{
			return new LocalizedString("ConfirmationMessageRemoveManagementRoleEntry", "Ex0AB3C3", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				Role
			});
		}

		public static LocalizedString SupportedToolsDataInvalidToolVersionRange(string toolName)
		{
			return new LocalizedString("SupportedToolsDataInvalidToolVersionRange", "Ex4BABBB", false, true, Strings.ResourceManager, new object[]
			{
				toolName
			});
		}

		public static LocalizedString ErrorWebsiteAmbiguousInIIS(string webSiteName, string serverName)
		{
			return new LocalizedString("ErrorWebsiteAmbiguousInIIS", "Ex258F75", false, true, Strings.ResourceManager, new object[]
			{
				webSiteName,
				serverName
			});
		}

		public static LocalizedString CasHealthOwaMailboxServerHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaMailboxServerHeader", "Ex2B7F6B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotSeparatePrimaryFromArchiveBecauseServerIsDownlevel(string serverName, string serverVersion)
		{
			return new LocalizedString("ErrorCannotSeparatePrimaryFromArchiveBecauseServerIsDownlevel", "ExA9E13E", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				serverVersion
			});
		}

		public static LocalizedString ConfirmationMessageSetEdgeSyncMservConnector(string id)
		{
			return new LocalizedString("ConfirmationMessageSetEdgeSyncMservConnector", "ExB16800", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString NewPolicyMustBeInTheSameDialPlanAsOldPolicy(string s)
		{
			return new LocalizedString("NewPolicyMustBeInTheSameDialPlanAsOldPolicy", "ExD09923", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString DebugEndEnablingUM
		{
			get
			{
				return new LocalizedString("DebugEndEnablingUM", "Ex8E6E56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseEdbFileLocationUniqueUnderDAGCondition(string path)
		{
			return new LocalizedString("VerboseEdbFileLocationUniqueUnderDAGCondition", "ExF45E9A", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString ConfirmGenerateExchangeCertificateRequest(string friendlyName, string subjectName, string domainNames, AllowedServices services, int keySize)
		{
			return new LocalizedString("ConfirmGenerateExchangeCertificateRequest", "ExE0070D", false, true, Strings.ResourceManager, new object[]
			{
				friendlyName,
				subjectName,
				domainNames,
				services,
				keySize
			});
		}

		public static LocalizedString ProgressJoinNode(string node)
		{
			return new LocalizedString("ProgressJoinNode", "Ex134620", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		public static LocalizedString FormsAuthenticationMarkPathUnknownSetError(string metabasePath, int propertyID, int hresult)
		{
			return new LocalizedString("FormsAuthenticationMarkPathUnknownSetError", "ExB3AC34", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID,
				hresult
			});
		}

		public static LocalizedString FederatedOrganizationIdNotSet
		{
			get
			{
				return new LocalizedString("FederatedOrganizationIdNotSet", "Ex35EA9E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCheckFileExistenceCondition(string server, string path)
		{
			return new LocalizedString("VerboseCheckFileExistenceCondition", "Ex3B623A", false, true, Strings.ResourceManager, new object[]
			{
				server,
				path
			});
		}

		public static LocalizedString MigrationNotEnabledForTenant(string tenantName)
		{
			return new LocalizedString("MigrationNotEnabledForTenant", "Ex456681", false, true, Strings.ResourceManager, new object[]
			{
				tenantName
			});
		}

		public static LocalizedString SetupProgressCreateDSNCustomizationContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDSNCustomizationContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorReHomeOriginalDatabaseLocationNotFound(string database)
		{
			return new LocalizedString("ErrorReHomeOriginalDatabaseLocationNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString WarningCannedRoleGroupCreateWithoutManager(string roleGroup, string userNotFound)
		{
			return new LocalizedString("WarningCannedRoleGroupCreateWithoutManager", "Ex621EB8", false, true, Strings.ResourceManager, new object[]
			{
				roleGroup,
				userNotFound
			});
		}

		public static LocalizedString ErrorUnknownRequestIndex(string indexId)
		{
			return new LocalizedString("ErrorUnknownRequestIndex", "Ex31F6BA", false, true, Strings.ResourceManager, new object[]
			{
				indexId
			});
		}

		public static LocalizedString WebServicesTestEventDetail(string cmdletName, string scenario, string result, string latency)
		{
			return new LocalizedString("WebServicesTestEventDetail", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdletName,
				scenario,
				result,
				latency
			});
		}

		public static LocalizedString SetupProgressStoppingMailboxReplicationService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingMailboxReplicationService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MalboxFolderRightsFolderContact
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsFolderContact", "ExE6C695", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RmsTemplateNotFound(string name)
		{
			return new LocalizedString("RmsTemplateNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString VerboseSyncTaskDomainControllerMismatch(Guid orgDc, Guid newDc)
		{
			return new LocalizedString("VerboseSyncTaskDomainControllerMismatch", "Ex5804A0", false, true, Strings.ResourceManager, new object[]
			{
				orgDc,
				newDc
			});
		}

		public static LocalizedString ErrorParsingCSV(int rowIndex, string columnName, string message)
		{
			return new LocalizedString("ErrorParsingCSV", "", false, false, Strings.ResourceManager, new object[]
			{
				rowIndex,
				columnName,
				message
			});
		}

		public static LocalizedString MapiSubmitSystemProbeNoMessageFound
		{
			get
			{
				return new LocalizedString("MapiSubmitSystemProbeNoMessageFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorStartWinrm(string error)
		{
			return new LocalizedString("ErrorStartWinrm", "Ex2265D8", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ErrorOabVirtualDirectoryAlreadyExistsWithRecovery(string vdir, string website, string serverName)
		{
			return new LocalizedString("ErrorOabVirtualDirectoryAlreadyExistsWithRecovery", "Ex5EB3B4", false, true, Strings.ResourceManager, new object[]
			{
				vdir,
				website,
				serverName
			});
		}

		public static LocalizedString WarningNonemptyManagedFolderNotDeleted
		{
			get
			{
				return new LocalizedString("WarningNonemptyManagedFolderNotDeleted", "ExB09045", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthWebAppTransactionWarnings(LocalizedString applicationShortName, string detailedInformation)
		{
			return new LocalizedString("CasHealthWebAppTransactionWarnings", "ExB7179B", false, true, Strings.ResourceManager, new object[]
			{
				applicationShortName,
				detailedInformation
			});
		}

		public static LocalizedString SetupProgressCreateMailboxManagedFolders
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMailboxManagedFolders", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidTimeRange
		{
			get
			{
				return new LocalizedString("InvalidTimeRange", "Ex576FE0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CreatedJunkEmailRule(string mailboxIdentity)
		{
			return new LocalizedString("CreatedJunkEmailRule", "Ex6210DF", false, true, Strings.ResourceManager, new object[]
			{
				mailboxIdentity
			});
		}

		public static LocalizedString ConfirmationMessageInstallDlpPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageInstallDlpPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorCanNotRemoveMailboxToWellKnownHostedMailboxSG(string mailbox, string sgName, string org, string error)
		{
			return new LocalizedString("ErrorCanNotRemoveMailboxToWellKnownHostedMailboxSG", "Ex8DD044", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				sgName,
				org,
				error
			});
		}

		public static LocalizedString SetupProgressCreateClientAccessContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateClientAccessContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SuccessAddServerMonitoringOverride(string identity, string serverName)
		{
			return new LocalizedString("SuccessAddServerMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				serverName
			});
		}

		public static LocalizedString SetupPrereqAnalysisCompleted
		{
			get
			{
				return new LocalizedString("SetupPrereqAnalysisCompleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseRemovedRoleAssignment(string id)
		{
			return new LocalizedString("VerboseRemovedRoleAssignment", "ExE46532", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseMdbLinkedToPfdb(string mdb, string pfdb)
		{
			return new LocalizedString("VerboseMdbLinkedToPfdb", "Ex91322F", false, true, Strings.ResourceManager, new object[]
			{
				mdb,
				pfdb
			});
		}

		public static LocalizedString ConfirmationMessageNewMailboxUser(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxUser", "Ex583C5B", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString MoveMailboxNotOnDomainController(string userDN, string domainController)
		{
			return new LocalizedString("MoveMailboxNotOnDomainController", "Ex077C9B", false, true, Strings.ResourceManager, new object[]
			{
				userDN,
				domainController
			});
		}

		public static LocalizedString ErrorInvalidFederationMetadata(string message)
		{
			return new LocalizedString("ErrorInvalidFederationMetadata", "Ex80EF1C", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString CasHealthAirSyncHeaderNotFound(string header, string url)
		{
			return new LocalizedString("CasHealthAirSyncHeaderNotFound", "Ex6FC618", false, true, Strings.ResourceManager, new object[]
			{
				header,
				url
			});
		}

		public static LocalizedString RequiredEndDateParameter
		{
			get
			{
				return new LocalizedString("RequiredEndDateParameter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCasArrayNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorCasArrayNotFound", "ExC17E95", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString RpcClientAccessServiceDisplayName
		{
			get
			{
				return new LocalizedString("RpcClientAccessServiceDisplayName", "ExD44745", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SendConnectorCreatingOppositeConnector(string sourceRgName, string targetRgName)
		{
			return new LocalizedString("SendConnectorCreatingOppositeConnector", "Ex1B7166", false, true, Strings.ResourceManager, new object[]
			{
				sourceRgName,
				targetRgName
			});
		}

		public static LocalizedString LogonUserIsNotAValidADRecipient(string user)
		{
			return new LocalizedString("LogonUserIsNotAValidADRecipient", "Ex70C620", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorPatternIsTooExpensive(string regex)
		{
			return new LocalizedString("ErrorPatternIsTooExpensive", "", false, false, Strings.ResourceManager, new object[]
			{
				regex
			});
		}

		public static LocalizedString ErrorMailboxLacksDatabase(string identity)
		{
			return new LocalizedString("ErrorMailboxLacksDatabase", "Ex374D1E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmDisableLastSharedConfiguration(string server)
		{
			return new LocalizedString("ConfirmDisableLastSharedConfiguration", "Ex9035F2", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString WarningNoCookiesRemovedForRollback
		{
			get
			{
				return new LocalizedString("WarningNoCookiesRemovedForRollback", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotOpenLegacyMailbox(string mbx)
		{
			return new LocalizedString("ErrorCannotOpenLegacyMailbox", "Ex1FEA4C", false, true, Strings.ResourceManager, new object[]
			{
				mbx
			});
		}

		public static LocalizedString InfoImportingTpdFromRmsOnlineCheckedWithTemplates(string templateNames)
		{
			return new LocalizedString("InfoImportingTpdFromRmsOnlineCheckedWithTemplates", "", false, false, Strings.ResourceManager, new object[]
			{
				templateNames
			});
		}

		public static LocalizedString SetupMultiEngineAVEnabled
		{
			get
			{
				return new LocalizedString("SetupMultiEngineAVEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidCharacterInVirtualDirectoryName(string vdirName)
		{
			return new LocalizedString("ErrorInvalidCharacterInVirtualDirectoryName", "Ex2FA009", false, true, Strings.ResourceManager, new object[]
			{
				vdirName
			});
		}

		public static LocalizedString UninstallNotificationsBrokerServiceTask
		{
			get
			{
				return new LocalizedString("UninstallNotificationsBrokerServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxAuditLog(string Name, string Database, string AuditLog, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxAuditLog", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				Database,
				AuditLog,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString InvalidMsoSyncServiceResponse(string reason)
		{
			return new LocalizedString("InvalidMsoSyncServiceResponse", "", false, false, Strings.ResourceManager, new object[]
			{
				reason
			});
		}

		public static LocalizedString ADAttributeFirstName
		{
			get
			{
				return new LocalizedString("ADAttributeFirstName", "Ex05CDB2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNonActiveOrganizationFound(string name)
		{
			return new LocalizedString("ErrorNonActiveOrganizationFound", "Ex3F026B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString InstallFreeBusyFolderCreatedFolder(string folder)
		{
			return new LocalizedString("InstallFreeBusyFolderCreatedFolder", "Ex4B15C4", false, true, Strings.ResourceManager, new object[]
			{
				folder
			});
		}

		public static LocalizedString DebugStartRetrievingAuditConfig
		{
			get
			{
				return new LocalizedString("DebugStartRetrievingAuditConfig", "Ex6753ED", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorServicePlanDoesntAllowSharedConfiguration(string programid, string offerid)
		{
			return new LocalizedString("ErrorServicePlanDoesntAllowSharedConfiguration", "ExFFD499", false, true, Strings.ResourceManager, new object[]
			{
				programid,
				offerid
			});
		}

		public static LocalizedString ErrorObjectNotManagableFromCurrentConsole(string id, string objectVersion)
		{
			return new LocalizedString("ErrorObjectNotManagableFromCurrentConsole", "ExBA63C5", false, true, Strings.ResourceManager, new object[]
			{
				id,
				objectVersion
			});
		}

		public static LocalizedString ErrorSystemFileNotFound(string file)
		{
			return new LocalizedString("ErrorSystemFileNotFound", "Ex402D43", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString EwsNotSupportedException
		{
			get
			{
				return new LocalizedString("EwsNotSupportedException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMalwareFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMalwareFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningChangeTemplateState(string identity)
		{
			return new LocalizedString("WarningChangeTemplateState", "Ex89E196", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString VerboseApplyingAuthenticationSettingForVDir(string identity)
		{
			return new LocalizedString("VerboseApplyingAuthenticationSettingForVDir", "Ex5B9588", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorUserOrContactNotUnique(string id)
		{
			return new LocalizedString("ErrorUserOrContactNotUnique", "Ex606C72", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString IncludeAutoDiscoverOnlyApplicableToCAS
		{
			get
			{
				return new LocalizedString("IncludeAutoDiscoverOnlyApplicableToCAS", "Ex7103E9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMobileDevice(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMobileDevice", "ExE201D3", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorDCNotAvailable(string hostName)
		{
			return new LocalizedString("ErrorDCNotAvailable", "Ex88AB8C", false, true, Strings.ResourceManager, new object[]
			{
				hostName
			});
		}

		public static LocalizedString ReplicationCheckResultUndefined
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultUndefined", "Ex159B35", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaLogoffError
		{
			get
			{
				return new LocalizedString("CasHealthOwaLogoffError", "Ex69BEE9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGetSiteMailboxDiagnostics(string name, string error)
		{
			return new LocalizedString("ErrorGetSiteMailboxDiagnostics", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				error
			});
		}

		public static LocalizedString DagTaskDone
		{
			get
			{
				return new LocalizedString("DagTaskDone", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MustProvideNonEmptyStringForIdentity
		{
			get
			{
				return new LocalizedString("MustProvideNonEmptyStringForIdentity", "Ex8C4AD5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDeleteTemplate
		{
			get
			{
				return new LocalizedString("WarningDeleteTemplate", "Ex9C1C82", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageCompleteOrganizationUpgrade(string OrganizationalPath)
		{
			return new LocalizedString("ConfirmationMessageCompleteOrganizationUpgrade", "Ex809893", false, true, Strings.ResourceManager, new object[]
			{
				OrganizationalPath
			});
		}

		public static LocalizedString ConfirmationMessageNewMailContact(string Name, string ExternalEmailAddress, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewMailContact", "Ex56F958", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				ExternalEmailAddress,
				OrganizationalUnit
			});
		}

		public static LocalizedString ConfirmationMessageEnableRpcHttpExternalAndInternal(string WebSiteName, string Server, string ExternalHostname, string ExternalClientAuthenticationMethod, string InternalHostname, string InternalClientAuthenticationMethod, string IISAuthenticationMethods)
		{
			return new LocalizedString("ConfirmationMessageEnableRpcHttpExternalAndInternal", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server,
				ExternalHostname,
				ExternalClientAuthenticationMethod,
				InternalHostname,
				InternalClientAuthenticationMethod,
				IISAuthenticationMethods
			});
		}

		public static LocalizedString InvalidMobileDeviceIdentity(string identity)
		{
			return new LocalizedString("InvalidMobileDeviceIdentity", "ExC78B0E", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ProgressStatusReadingManagementRoleTree(int count)
		{
			return new LocalizedString("ProgressStatusReadingManagementRoleTree", "Ex82FCB6", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString SetupProgressStoppingWMIService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingWMIService", "Ex18AE53", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotMoveArbitrationMailboxesCrossForest(string mailbox)
		{
			return new LocalizedString("ErrorCannotMoveArbitrationMailboxesCrossForest", "ExB84B70", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString ConfirmationMessageStopELCAssistant
		{
			get
			{
				return new LocalizedString("ConfirmationMessageStopELCAssistant", "Ex5DC720", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MalboxFolderRightsDeleteOwnedItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsDeleteOwnedItems", "Ex4AB282", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAuthNewCertificateNeeded
		{
			get
			{
				return new LocalizedString("ErrorAuthNewCertificateNeeded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ContentIndexingServiceStillInstalled
		{
			get
			{
				return new LocalizedString("ContentIndexingServiceStillInstalled", "ExC947D6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNoAvailablePublicFolderDatabaseInDatacenter(string orgName)
		{
			return new LocalizedString("ErrorNoAvailablePublicFolderDatabaseInDatacenter", "Ex77AC87", false, true, Strings.ResourceManager, new object[]
			{
				orgName
			});
		}

		public static LocalizedString CasHealthOwaConnectionRefused
		{
			get
			{
				return new LocalizedString("CasHealthOwaConnectionRefused", "ExA504E0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedDocumentsNoResultsDatabase(string mdb)
		{
			return new LocalizedString("FailedDocumentsNoResultsDatabase", "", false, false, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString NoMatchingUMMailboxPolicyInTargetForest
		{
			get
			{
				return new LocalizedString("NoMatchingUMMailboxPolicyInTargetForest", "ExDDCF41", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SuccessRemoveServerMonitoringOverride(string identity, string serverName)
		{
			return new LocalizedString("SuccessRemoveServerMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				identity,
				serverName
			});
		}

		public static LocalizedString ProgressActivityRemovingWorkloadManagementPolicyTree(string id)
		{
			return new LocalizedString("ProgressActivityRemovingWorkloadManagementPolicyTree", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ContentIndexingPHStubNotFound
		{
			get
			{
				return new LocalizedString("ContentIndexingPHStubNotFound", "ExA4DCB7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestMailflow
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestMailflow", "Ex396F30", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeOtherFaxNumber
		{
			get
			{
				return new LocalizedString("ADAttributeOtherFaxNumber", "ExC8FFBC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRetrieveCASServer(string serverId)
		{
			return new LocalizedString("ErrorCannotRetrieveCASServer", "", false, false, Strings.ResourceManager, new object[]
			{
				serverId
			});
		}

		public static LocalizedString CasHealthCouldNotLogUserForAutodiscover(string domain, string userName, string additionalInfo)
		{
			return new LocalizedString("CasHealthCouldNotLogUserForAutodiscover", "ExDCAB29", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				userName,
				additionalInfo
			});
		}

		public static LocalizedString AcceptedDomainIsReferencedByAddressTemplate(SmtpDomainWithSubdomains domain, SmtpProxyAddressTemplate template)
		{
			return new LocalizedString("AcceptedDomainIsReferencedByAddressTemplate", "Ex3264BB", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				template
			});
		}

		public static LocalizedString ErrorManagedFolderMailboxPolicyNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorManagedFolderMailboxPolicyNotFound", "Ex796730", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString AddAccessRuleUnauthorizedAccess(string thumbprint)
		{
			return new LocalizedString("AddAccessRuleUnauthorizedAccess", "Ex3E62FB", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString ErrorChildObjectTypeParameter
		{
			get
			{
				return new LocalizedString("ErrorChildObjectTypeParameter", "Ex3E728C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SiteMailboxPolicySet(string policy)
		{
			return new LocalizedString("SiteMailboxPolicySet", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		public static LocalizedString DataClassificationFingerprintsMissing(string name)
		{
			return new LocalizedString("DataClassificationFingerprintsMissing", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString CorruptionTypeParameterIncompatible(string paramName)
		{
			return new LocalizedString("CorruptionTypeParameterIncompatible", "", false, false, Strings.ResourceManager, new object[]
			{
				paramName
			});
		}

		public static LocalizedString ConfirmationMessageTestIPBlockListProvider(string Identity, string IPAddress)
		{
			return new LocalizedString("ConfirmationMessageTestIPBlockListProvider", "Ex3F6B92", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				IPAddress
			});
		}

		public static LocalizedString ClassificationRuleCollectionOobRulePackIdViolation(string rulePackId, string reservedPrefix)
		{
			return new LocalizedString("ClassificationRuleCollectionOobRulePackIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				rulePackId,
				reservedPrefix
			});
		}

		public static LocalizedString SetupProgressCreateDag
		{
			get
			{
				return new LocalizedString("SetupProgressCreateDag", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCertificateNotFound(string certThumbprint)
		{
			return new LocalizedString("ErrorCertificateNotFound", "ExFF0307", false, true, Strings.ResourceManager, new object[]
			{
				certThumbprint
			});
		}

		public static LocalizedString WarningScheduledTimeIsUnchanged(string scheduleParameter)
		{
			return new LocalizedString("WarningScheduledTimeIsUnchanged", "", false, false, Strings.ResourceManager, new object[]
			{
				scheduleParameter
			});
		}

		public static LocalizedString DagTaskCouldNotFindMatchingNetwork(string ipAddress, string machineName)
		{
			return new LocalizedString("DagTaskCouldNotFindMatchingNetwork", "", false, false, Strings.ResourceManager, new object[]
			{
				ipAddress,
				machineName
			});
		}

		public static LocalizedString ReplayLagStatusLabelActual
		{
			get
			{
				return new LocalizedString("ReplayLagStatusLabelActual", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TemplateTypeNotValid(string type)
		{
			return new LocalizedString("TemplateTypeNotValid", "", false, false, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		public static LocalizedString MtrtPrependSubject
		{
			get
			{
				return new LocalizedString("MtrtPrependSubject", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoChangingGroupType(string group, string groupType)
		{
			return new LocalizedString("InfoChangingGroupType", "Ex17356A", false, true, Strings.ResourceManager, new object[]
			{
				group,
				groupType
			});
		}

		public static LocalizedString CannotRemoveUMCRCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveUMCRCertificate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseMountDatabaseStillOnlined(string id)
		{
			return new LocalizedString("VerboseMountDatabaseStillOnlined", "ExBBC4C2", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString Error_MessageClassFilter
		{
			get
			{
				return new LocalizedString("Error_MessageClassFilter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewCallAnsweringRule(string name)
		{
			return new LocalizedString("ConfirmationMessageNewCallAnsweringRule", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConfirmationAddSupervisionListEntry(string entry, string tag)
		{
			return new LocalizedString("ConfirmationAddSupervisionListEntry", "Ex1BDB0B", false, true, Strings.ResourceManager, new object[]
			{
				entry,
				tag
			});
		}

		public static LocalizedString DomainNameIsNotValidForCertificate(string domain)
		{
			return new LocalizedString("DomainNameIsNotValidForCertificate", "Ex3D2BFD", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ConfirmationMessageDisableServiceEmailChannel(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableServiceEmailChannel", "ExB31D61", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MetabaseGetPropertiesFailure
		{
			get
			{
				return new LocalizedString("MetabaseGetPropertiesFailure", "Ex4E7A23", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthLogon(string Domain, string UserName)
		{
			return new LocalizedString("CasHealthLogon", "Ex0466A8", false, true, Strings.ResourceManager, new object[]
			{
				Domain,
				UserName
			});
		}

		public static LocalizedString ExRbacRoleGroupInMultiTenantException(Guid guid, string groupName)
		{
			return new LocalizedString("ExRbacRoleGroupInMultiTenantException", "Ex2A1B05", false, true, Strings.ResourceManager, new object[]
			{
				guid,
				groupName
			});
		}

		public static LocalizedString ErrorNonExistentDirectoryUser(string user)
		{
			return new LocalizedString("ErrorNonExistentDirectoryUser", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString FolderMoveRequestCheckComplete
		{
			get
			{
				return new LocalizedString("FolderMoveRequestCheckComplete", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite", "Ex491855", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallMonitoringCorrelationServiceTask
		{
			get
			{
				return new LocalizedString("InstallMonitoringCorrelationServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDuplicateNonActiveOrganizationExists(string name)
		{
			return new LocalizedString("ErrorDuplicateNonActiveOrganizationExists", "ExE5B94B", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString TowsException(string url, string message)
		{
			return new LocalizedString("TowsException", "", false, false, Strings.ResourceManager, new object[]
			{
				url,
				message
			});
		}

		public static LocalizedString ExportDestinationIsReadonly(string name)
		{
			return new LocalizedString("ExportDestinationIsReadonly", "ExBFF0C4", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString TcpListenerRequestFailed(string machineName, string error)
		{
			return new LocalizedString("TcpListenerRequestFailed", "ExB35B57", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString ErrorSetGroupMailboxUserPermissions(Guid groupMailbox, string error)
		{
			return new LocalizedString("ErrorSetGroupMailboxUserPermissions", "", false, false, Strings.ResourceManager, new object[]
			{
				groupMailbox,
				error
			});
		}

		public static LocalizedString ConfirmationMessageSuspendOfflineMoveRequest(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSuspendOfflineMoveRequest", "Ex6F96C0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString FailedBecauseofADDataValidationException(string error)
		{
			return new LocalizedString("FailedBecauseofADDataValidationException", "Ex04C0D6", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ErrorDisableMailboxWithLitigationHold(string mbxId)
		{
			return new LocalizedString("ErrorDisableMailboxWithLitigationHold", "", false, false, Strings.ResourceManager, new object[]
			{
				mbxId
			});
		}

		public static LocalizedString TestSearchGetNonIpmSubTreeFolder(string MDB, string ID)
		{
			return new LocalizedString("TestSearchGetNonIpmSubTreeFolder", "Ex13DFD8", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID
			});
		}

		public static LocalizedString FolderNotExistsOnRemoteServer(string path, string serverName)
		{
			return new LocalizedString("FolderNotExistsOnRemoteServer", "ExACD40A", false, true, Strings.ResourceManager, new object[]
			{
				path,
				serverName
			});
		}

		public static LocalizedString ConfirmationMessageUpdateSyncStatistics
		{
			get
			{
				return new LocalizedString("ConfirmationMessageUpdateSyncStatistics", "ExAF1681", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClientAccessRoleDisplayName
		{
			get
			{
				return new LocalizedString("ClientAccessRoleDisplayName", "ExDD1A1C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewAccountPartition(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmationMessageNewMicrosoftExchangeRecipient
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewMicrosoftExchangeRecipient", "Ex832602", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseNoAssociatedMoveRequestOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedMoveRequestOnDatabaseCondition", "Ex593253", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageMailboxRegionalConfiguration(string Identity)
		{
			return new LocalizedString("ConfirmationMessageMailboxRegionalConfiguration", "ExEA13C4", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString GzipCannotBeSetToError
		{
			get
			{
				return new LocalizedString("GzipCannotBeSetToError", "ExD90270", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ThrottlingServiceDescription
		{
			get
			{
				return new LocalizedString("ThrottlingServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoSuccess(LocalizedString message)
		{
			return new LocalizedString("InfoSuccess", "Ex73849D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString FailedToGetCopyEdbFileStatus(string server, string edbFilePath)
		{
			return new LocalizedString("FailedToGetCopyEdbFileStatus", "Ex43544F", false, true, Strings.ResourceManager, new object[]
			{
				server,
				edbFilePath
			});
		}

		public static LocalizedString InvalidMobileDeviceIdType(string type)
		{
			return new LocalizedString("InvalidMobileDeviceIdType", "ExC95718", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		public static LocalizedString FileLocationNotChanged
		{
			get
			{
				return new LocalizedString("FileLocationNotChanged", "Ex584244", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewHostedConnectionFilterPolicy(string name)
		{
			return new LocalizedString("ConfirmationMessageNewHostedConnectionFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ConversationsNoConversationsFound
		{
			get
			{
				return new LocalizedString("ConversationsNoConversationsFound", "ExB59169", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyMultipleCommandsNotSupported(string command)
		{
			return new LocalizedString("DlpPolicyMultipleCommandsNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				command
			});
		}

		public static LocalizedString VerboseFoundAssigneeInDomainNC(string policy)
		{
			return new LocalizedString("VerboseFoundAssigneeInDomainNC", "Ex3566A1", false, true, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		public static LocalizedString TooManyEmbeddedExpressions(int maxExpressionCount)
		{
			return new LocalizedString("TooManyEmbeddedExpressions", "", false, false, Strings.ResourceManager, new object[]
			{
				maxExpressionCount
			});
		}

		public static LocalizedString ErrorCannotTurnOnBothAndAndRemove
		{
			get
			{
				return new LocalizedString("ErrorCannotTurnOnBothAndAndRemove", "Ex775E98", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoGetRacAndClc
		{
			get
			{
				return new LocalizedString("InfoGetRacAndClc", "Ex105AB3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingHygieneUpdateService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingHygieneUpdateService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TransportSyncManagerServiceDescription
		{
			get
			{
				return new LocalizedString("TransportSyncManagerServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDuplicateAuthServer(string authServer)
		{
			return new LocalizedString("ErrorDuplicateAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				authServer
			});
		}

		public static LocalizedString RejectMessageActionIsBeingOverridded
		{
			get
			{
				return new LocalizedString("RejectMessageActionIsBeingOverridded", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchCatalogErrorMessage(string error)
		{
			return new LocalizedString("TestSearchCatalogErrorMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString VerboseInSiteOABVdirFound(string DN)
		{
			return new LocalizedString("VerboseInSiteOABVdirFound", "Ex4AC225", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		public static LocalizedString ErrorMailboxRelocationJoinTargetNotContainerOwner(string mailbox)
		{
			return new LocalizedString("ErrorMailboxRelocationJoinTargetNotContainerOwner", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString SetServiceInstanceMapResultCodePartitionUnavailable
		{
			get
			{
				return new LocalizedString("SetServiceInstanceMapResultCodePartitionUnavailable", "ExA99DA9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressStoppingContentIndexingService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingContentIndexingService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PhoneNumberInvalidCountryCode
		{
			get
			{
				return new LocalizedString("PhoneNumberInvalidCountryCode", "ExD39E9C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoSystemProbeEventFound(Guid guid)
		{
			return new LocalizedString("NoSystemProbeEventFound", "", false, false, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString ConfirmationMessageSetPublicFolderLocalReplicaAgeLimit(string Identity, string Server, string LocalReplicaAgeLimit)
		{
			return new LocalizedString("ConfirmationMessageSetPublicFolderLocalReplicaAgeLimit", "Ex077F81", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Server,
				LocalReplicaAgeLimit
			});
		}

		public static LocalizedString IrmLicensingIsDisabled
		{
			get
			{
				return new LocalizedString("IrmLicensingIsDisabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDisableMailboxWithJournalArchiveWithDirSync
		{
			get
			{
				return new LocalizedString("ErrorDisableMailboxWithJournalArchiveWithDirSync", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SomeEssentialServicesForTheRoleNotRunning(string roleName, string servicesNotRunning)
		{
			return new LocalizedString("SomeEssentialServicesForTheRoleNotRunning", "Ex74EAE3", false, true, Strings.ResourceManager, new object[]
			{
				roleName,
				servicesNotRunning
			});
		}

		public static LocalizedString FederationTrustHasAllStsCertificates
		{
			get
			{
				return new LocalizedString("FederationTrustHasAllStsCertificates", "Ex83E238", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPreSetupGateway
		{
			get
			{
				return new LocalizedString("SetupComponentPreSetupGateway", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetUMMailbox(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetUMMailbox", "Ex508528", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorMailTipSetTranslationsWithoutDefault
		{
			get
			{
				return new LocalizedString("ErrorMailTipSetTranslationsWithoutDefault", "ExBE67EC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallThrottlingServiceTask
		{
			get
			{
				return new LocalizedString("InstallThrottlingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewELCContentSettings(string Name, string FolderName, string MessageClass)
		{
			return new LocalizedString("ConfirmationMessageNewELCContentSettings", "ExC731DC", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				FolderName,
				MessageClass
			});
		}

		public static LocalizedString ErrorCasArrayAlreadyExistsInSite(string site)
		{
			return new LocalizedString("ErrorCasArrayAlreadyExistsInSite", "Ex27FE96", false, true, Strings.ResourceManager, new object[]
			{
				site
			});
		}

		public static LocalizedString ArchiveConnectivityResultArchiveNotActive
		{
			get
			{
				return new LocalizedString("ArchiveConnectivityResultArchiveNotActive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotUpdateInvalidMailbox(string mailbox, string error)
		{
			return new LocalizedString("ErrorCannotUpdateInvalidMailbox", "ExF3974E", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				error
			});
		}

		public static LocalizedString ConfirmationMessageNewEdgeSyncMservConnectorWithSiteSpecified(string id)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSyncMservConnectorWithSiteSpecified", "ExF2EA06", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorCannotScopeEsnPolicy(string policy)
		{
			return new LocalizedString("ErrorCannotScopeEsnPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		public static LocalizedString ConfirmationMessageSetActiveSyncDeviceAccessRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetActiveSyncDeviceAccessRule", "Ex5AE837", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorSuspendWhenReadyToCompleteCannotBeUsedDuringCompletion(string name)
		{
			return new LocalizedString("ErrorSuspendWhenReadyToCompleteCannotBeUsedDuringCompletion", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ReplicationCheckResultFailed
		{
			get
			{
				return new LocalizedString("ReplicationCheckResultFailed", "Ex31FE72", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SuspendWRTCPreventCompletionCannotBeSetOnNewRequests
		{
			get
			{
				return new LocalizedString("SuspendWRTCPreventCompletionCannotBeSetOnNewRequests", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMultipleJournalArchiveAddress
		{
			get
			{
				return new LocalizedString("ErrorMultipleJournalArchiveAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestFederationTrust
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestFederationTrust", "Ex053404", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DelegateRoleTypeViewOnlyAdmin
		{
			get
			{
				return new LocalizedString("DelegateRoleTypeViewOnlyAdmin", "ExB6A18C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerToContactMustBeInSameDagException(string serverToContact, string expectedDag, string actualDag)
		{
			return new LocalizedString("ServerToContactMustBeInSameDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverToContact,
				expectedDag,
				actualDag
			});
		}

		public static LocalizedString CouldNotFindLocalAdministratorGroup(string server, string user)
		{
			return new LocalizedString("CouldNotFindLocalAdministratorGroup", "ExF741C2", false, true, Strings.ResourceManager, new object[]
			{
				server,
				user
			});
		}

		public static LocalizedString ConfirmationMessageRemoveAddressListRecursively(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressListRecursively", "ExF7B71E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ServiceNameOab
		{
			get
			{
				return new LocalizedString("ServiceNameOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ScenarioOfflineAddressBook
		{
			get
			{
				return new LocalizedString("ScenarioOfflineAddressBook", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EADCInsufficientRights(string cmdlet)
		{
			return new LocalizedString("EADCInsufficientRights", "", false, false, Strings.ResourceManager, new object[]
			{
				cmdlet
			});
		}

		public static LocalizedString ErrorNonMatchingLegacyDNs(string sourceMailboxLegDN, string targetMailbox, string parameterName)
		{
			return new LocalizedString("ErrorNonMatchingLegacyDNs", "Ex57056A", false, true, Strings.ResourceManager, new object[]
			{
				sourceMailboxLegDN,
				targetMailbox,
				parameterName
			});
		}

		public static LocalizedString FailedBecauseofADTransientException(string error)
		{
			return new LocalizedString("FailedBecauseofADTransientException", "Ex32599A", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString ErrorExceededTextScanLimit(int textScanLimits)
		{
			return new LocalizedString("ErrorExceededTextScanLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				textScanLimits
			});
		}

		public static LocalizedString CreateVirtualDirectoryMetabaseFailure(string serverName, string metabasePath)
		{
			return new LocalizedString("CreateVirtualDirectoryMetabaseFailure", "Ex87800F", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				metabasePath
			});
		}

		public static LocalizedString ErrorCertificateNotYetValid(string thumbprint)
		{
			return new LocalizedString("ErrorCertificateNotYetValid", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString NewFederationTrustSuccess(string appId, string appUri)
		{
			return new LocalizedString("NewFederationTrustSuccess", "Ex554429", false, true, Strings.ResourceManager, new object[]
			{
				appId,
				appUri
			});
		}

		public static LocalizedString ErrorInvalidRequest(string identity, string validationMessage)
		{
			return new LocalizedString("ErrorInvalidRequest", "Ex46B31F", false, true, Strings.ResourceManager, new object[]
			{
				identity,
				validationMessage
			});
		}

		public static LocalizedString AboutToExportCertificateToFile(string Thumbprint, string fileName)
		{
			return new LocalizedString("AboutToExportCertificateToFile", "ExE53687", false, true, Strings.ResourceManager, new object[]
			{
				Thumbprint,
				fileName
			});
		}

		public static LocalizedString TestSearchStatus
		{
			get
			{
				return new LocalizedString("TestSearchStatus", "ExDF5C5B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IisTasksValidationInvalidVirtualDirectoryCharException(string virtualDirectory, char badChar, int charIndex, char[] invalidChars)
		{
			return new LocalizedString("IisTasksValidationInvalidVirtualDirectoryCharException", "Ex24435B", false, true, Strings.ResourceManager, new object[]
			{
				virtualDirectory,
				badChar,
				charIndex,
				invalidChars
			});
		}

		public static LocalizedString SetupProgressApplicationImpersonationEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressApplicationImpersonationEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCreatingManagementWebServiceVDir(string identity)
		{
			return new LocalizedString("VerboseCreatingManagementWebServiceVDir", "ExFE7321", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupProgressStartingIISAdminService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingIISAdminService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentMidFileCopyFrontendTransport
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyFrontendTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskErrorServerWrongVersion(string serverName)
		{
			return new LocalizedString("DagTaskErrorServerWrongVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse
		{
			get
			{
				return new LocalizedString("ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotSwitchLinkedInAccount
		{
			get
			{
				return new LocalizedString("CannotSwitchLinkedInAccount", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoRmsVersionChecked
		{
			get
			{
				return new LocalizedString("InfoRmsVersionChecked", "Ex112D4D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchDeleteFolders(string MDB, string ID, int numFolders)
		{
			return new LocalizedString("TestSearchDeleteFolders", "Ex659CAE", false, true, Strings.ResourceManager, new object[]
			{
				MDB,
				ID,
				numFolders
			});
		}

		public static LocalizedString ErrorPSTFolderPathNotExist(string path)
		{
			return new LocalizedString("ErrorPSTFolderPathNotExist", "ExCFF6B0", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString CasHealthOwaUnsecureAccess(string authMethod)
		{
			return new LocalizedString("CasHealthOwaUnsecureAccess", "ExF29039", false, true, Strings.ResourceManager, new object[]
			{
				authMethod
			});
		}

		public static LocalizedString FailedToRunServerMonitoringOverride(string server, string failure)
		{
			return new LocalizedString("FailedToRunServerMonitoringOverride", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				failure
			});
		}

		public static LocalizedString LogOnlyOperation
		{
			get
			{
				return new LocalizedString("LogOnlyOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotChangeServiceInstanceNameError(string serviceInstanceId)
		{
			return new LocalizedString("CannotChangeServiceInstanceNameError", "", false, false, Strings.ResourceManager, new object[]
			{
				serviceInstanceId
			});
		}

		public static LocalizedString HttpWebRequestFailure(string s)
		{
			return new LocalizedString("HttpWebRequestFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString DagTaskNoServersAreStartedException(string dagName)
		{
			return new LocalizedString("DagTaskNoServersAreStartedException", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		public static LocalizedString MtrtMessageFailureReason(string recipientStatus)
		{
			return new LocalizedString("MtrtMessageFailureReason", "", false, false, Strings.ResourceManager, new object[]
			{
				recipientStatus
			});
		}

		public static LocalizedString ErrorPublicFolderStatisticsNotFound(string folder, string server)
		{
			return new LocalizedString("ErrorPublicFolderStatisticsNotFound", "Ex580B38", false, true, Strings.ResourceManager, new object[]
			{
				folder,
				server
			});
		}

		public static LocalizedString UnifiedMessagingMailboxPolicyHasProtectUnauthenticatedVoiceMailSetTo(string policyName, DRMProtectionOptions drmProtectionOption)
		{
			return new LocalizedString("UnifiedMessagingMailboxPolicyHasProtectUnauthenticatedVoiceMailSetTo", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName,
				drmProtectionOption
			});
		}

		public static LocalizedString ErrorFailedToReadRecipientForUpdate(string idRecipient, string errorMessage)
		{
			return new LocalizedString("ErrorFailedToReadRecipientForUpdate", "ExA079ED", false, true, Strings.ResourceManager, new object[]
			{
				idRecipient,
				errorMessage
			});
		}

		public static LocalizedString CasHealthOwaAuthFailExternal
		{
			get
			{
				return new LocalizedString("CasHealthOwaAuthFailExternal", "ExB88F36", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRecipientViewRootDuplicated(string ou)
		{
			return new LocalizedString("ErrorRecipientViewRootDuplicated", "ExCE7EBA", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		public static LocalizedString ErrorTooManyModerators(int maxNum)
		{
			return new LocalizedString("ErrorTooManyModerators", "ExE185E2", false, true, Strings.ResourceManager, new object[]
			{
				maxNum
			});
		}

		public static LocalizedString CertificateStatusDateInvalid
		{
			get
			{
				return new LocalizedString("CertificateStatusDateInvalid", "Ex0CC2A2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetAcceptedDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAcceptedDomain", "ExAB1976", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InfoAttributeAceNotPresent(string dn, string attr)
		{
			return new LocalizedString("InfoAttributeAceNotPresent", "Ex5D90C7", false, true, Strings.ResourceManager, new object[]
			{
				dn,
				attr
			});
		}

		public static LocalizedString MustBeUnpacked
		{
			get
			{
				return new LocalizedString("MustBeUnpacked", "Ex578C15", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoDeviceFilterRuleByName(string name)
		{
			return new LocalizedString("NoDeviceFilterRuleByName", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString VerboseApprovalRequestSubmitted(string group, string messageId)
		{
			return new LocalizedString("VerboseApprovalRequestSubmitted", "", false, false, Strings.ResourceManager, new object[]
			{
				group,
				messageId
			});
		}

		public static LocalizedString LogMigrationRegistryKeyNotExist(string keyPath)
		{
			return new LocalizedString("LogMigrationRegistryKeyNotExist", "Ex00379F", false, true, Strings.ResourceManager, new object[]
			{
				keyPath
			});
		}

		public static LocalizedString ConfirmationMessageRemovePublicFolder(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemovePublicFolder", "Ex1257C0", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ClientAccessEcpComponentDescription
		{
			get
			{
				return new LocalizedString("ClientAccessEcpComponentDescription", "Ex60817E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerbosePublicFolderAdminsUsgCreationRollingbackFailed(string exception)
		{
			return new LocalizedString("VerbosePublicFolderAdminsUsgCreationRollingbackFailed", "Ex2385B6", false, true, Strings.ResourceManager, new object[]
			{
				exception
			});
		}

		public static LocalizedString PublishingNotEnabled
		{
			get
			{
				return new LocalizedString("PublishingNotEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SearchWorkerError(string mailbox, string message)
		{
			return new LocalizedString("SearchWorkerError", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox,
				message
			});
		}

		public static LocalizedString EmptyTaskListException
		{
			get
			{
				return new LocalizedString("EmptyTaskListException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningReplicationLatency
		{
			get
			{
				return new LocalizedString("WarningReplicationLatency", "Ex1BA91F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NoWebServicesExternalUrlFoundException
		{
			get
			{
				return new LocalizedString("NoWebServicesExternalUrlFoundException", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationPartitionMailboxAmbiguous
		{
			get
			{
				return new LocalizedString("MigrationPartitionMailboxAmbiguous", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentMidFileCopyGateway
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyGateway", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidLegacyExchangeDnParameterValue(string parameterName)
		{
			return new LocalizedString("InvalidLegacyExchangeDnParameterValue", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString ErrorInvalidRoleRenaming(string actualName, string newName)
		{
			return new LocalizedString("ErrorInvalidRoleRenaming", "Ex7F23E8", false, true, Strings.ResourceManager, new object[]
			{
				actualName,
				newName
			});
		}

		public static LocalizedString BadEncodingParameterException(string value)
		{
			return new LocalizedString("BadEncodingParameterException", "ExF42090", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString SetupProgressListOpenFiles
		{
			get
			{
				return new LocalizedString("SetupProgressListOpenFiles", "ExE10DC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetOwaAdminTaskInvalidExpressionComponentCharacterException(string value, char badChar)
		{
			return new LocalizedString("GetOwaAdminTaskInvalidExpressionComponentCharacterException", "Ex127BF4", false, true, Strings.ResourceManager, new object[]
			{
				value,
				badChar
			});
		}

		public static LocalizedString SupportedToolsContainsInconsistentData
		{
			get
			{
				return new LocalizedString("SupportedToolsContainsInconsistentData", "ExE13FFF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaGetLogonPageSucceeded
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetLogonPageSucceeded", "Ex003E0F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionRegexPerformanceValidationFailure(string name, string problem)
		{
			return new LocalizedString("ClassificationRuleCollectionRegexPerformanceValidationFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				problem
			});
		}

		public static LocalizedString ConfirmationMessageAddIPAllowListProvider(string Name, string LookupDomain)
		{
			return new LocalizedString("ConfirmationMessageAddIPAllowListProvider", "ExE1A875", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				LookupDomain
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxDatabaseCopy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxDatabaseCopy", "ExA4B4DA", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString DagTaskErrorTooManyServers(string dagName, int max)
		{
			return new LocalizedString("DagTaskErrorTooManyServers", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				max
			});
		}

		public static LocalizedString SupportedToolsUnableToGetToolData
		{
			get
			{
				return new LocalizedString("SupportedToolsUnableToGetToolData", "ExFE12C2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TotalFolderCount(string folderPath)
		{
			return new LocalizedString("TotalFolderCount", "", false, false, Strings.ResourceManager, new object[]
			{
				folderPath
			});
		}

		public static LocalizedString ProgressStatusFailed
		{
			get
			{
				return new LocalizedString("ProgressStatusFailed", "Ex808E10", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOrgStillUsingThisMailFlowPartner(string trust, string org)
		{
			return new LocalizedString("ErrorOrgStillUsingThisMailFlowPartner", "Ex61731B", false, true, Strings.ResourceManager, new object[]
			{
				trust,
				org
			});
		}

		public static LocalizedString PopImapErrorIOTimeout(int seconds)
		{
			return new LocalizedString("PopImapErrorIOTimeout", "ExEDE17A", false, true, Strings.ResourceManager, new object[]
			{
				seconds
			});
		}

		public static LocalizedString ErrorCredentialNotSupportedForEndpointType(string endpointType)
		{
			return new LocalizedString("ErrorCredentialNotSupportedForEndpointType", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointType
			});
		}

		public static LocalizedString AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr
		{
			get
			{
				return new LocalizedString("AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorStartAfterEarlierThanCompleteAfter
		{
			get
			{
				return new LocalizedString("ErrorStartAfterEarlierThanCompleteAfter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LogLocationError(string registryPath, string registryValue)
		{
			return new LocalizedString("LogLocationError", "Ex43E9AA", false, true, Strings.ResourceManager, new object[]
			{
				registryPath,
				registryValue
			});
		}

		public static LocalizedString ClassificationRuleCollectionInvalidLangCodesInRuleDescription(string resourceIdRef, string invalidLangCodes)
		{
			return new LocalizedString("ClassificationRuleCollectionInvalidLangCodesInRuleDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				resourceIdRef,
				invalidLangCodes
			});
		}

		public static LocalizedString TenantNotificationBody(string organizationName, string timeStamp, string eventMessage, string helpUrl)
		{
			return new LocalizedString("TenantNotificationBody", "Ex6D7FF9", false, true, Strings.ResourceManager, new object[]
			{
				organizationName,
				timeStamp,
				eventMessage,
				helpUrl
			});
		}

		public static LocalizedString ProvisioningRequestCannotBeCanceled
		{
			get
			{
				return new LocalizedString("ProvisioningRequestCannotBeCanceled", "Ex7BBCC4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorModifyE14DatabaseNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyE14DatabaseNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaGetAuthEmptyPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGetAuthEmptyPage", "Ex7758EB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailboxDatabaseNotOnCurrentCmdletVersion(string database, string serverVersion, string cmdletVersion)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotOnCurrentCmdletVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				database,
				serverVersion,
				cmdletVersion
			});
		}

		public static LocalizedString DagTaskServerIPAddressSameAsStaticIPAddress(string serverName, string conflict, string dag)
		{
			return new LocalizedString("DagTaskServerIPAddressSameAsStaticIPAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				conflict,
				dag
			});
		}

		public static LocalizedString DagTaskCheckingClusterNodesForDagMembership(string clusterName)
		{
			return new LocalizedString("DagTaskCheckingClusterNodesForDagMembership", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName
			});
		}

		public static LocalizedString ErrorInvalidRemoveOperationOnDBCopyForCircularLoggingEnabledDB(string pfdb)
		{
			return new LocalizedString("ErrorInvalidRemoveOperationOnDBCopyForCircularLoggingEnabledDB", "Ex35C75F", false, true, Strings.ResourceManager, new object[]
			{
				pfdb
			});
		}

		public static LocalizedString CompletedWithWarningMoveHistoryEntry(string completionTimestamp, string dbName, string mailboxSize, string moveDuration, string warning)
		{
			return new LocalizedString("CompletedWithWarningMoveHistoryEntry", "ExA6E095", false, true, Strings.ResourceManager, new object[]
			{
				completionTimestamp,
				dbName,
				mailboxSize,
				moveDuration,
				warning
			});
		}

		public static LocalizedString ConfirmationMessageAddADPermissionOwner(string Identity, string Owner)
		{
			return new LocalizedString("ConfirmationMessageAddADPermissionOwner", "ExA740C5", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Owner
			});
		}

		public static LocalizedString FDServiceDescription
		{
			get
			{
				return new LocalizedString("FDServiceDescription", "Ex2E1119", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidDeliveryStatus
		{
			get
			{
				return new LocalizedString("InvalidDeliveryStatus", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidIdentityTypeForClearCmdletException(string identity)
		{
			return new LocalizedString("InvalidIdentityTypeForClearCmdletException", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageRemovePswsVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageRemovePswsVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		public static LocalizedString ActiveSyncPolicyApplicationListTooLong(int listLimit, int memberLimit)
		{
			return new LocalizedString("ActiveSyncPolicyApplicationListTooLong", "", false, false, Strings.ResourceManager, new object[]
			{
				listLimit,
				memberLimit
			});
		}

		public static LocalizedString ErrorCannotRetargetToDifferentVersionArchiveServerThanOriginal(string newServerVersion, string oldServerVersion)
		{
			return new LocalizedString("ErrorCannotRetargetToDifferentVersionArchiveServerThanOriginal", "", false, false, Strings.ResourceManager, new object[]
			{
				newServerVersion,
				oldServerVersion
			});
		}

		public static LocalizedString ErrorCannotSetLegacyArchiveJournalingEnabled
		{
			get
			{
				return new LocalizedString("ErrorCannotSetLegacyArchiveJournalingEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotLoadScript(string fileName, string exception)
		{
			return new LocalizedString("CannotLoadScript", "Ex86BE94", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				exception
			});
		}

		public static LocalizedString WarningJournalArchiveMailboxHasNoMailUser
		{
			get
			{
				return new LocalizedString("WarningJournalArchiveMailboxHasNoMailUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchMailboxNotArchived(string mailbox)
		{
			return new LocalizedString("TestSearchMailboxNotArchived", "Ex704A79", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString CurrentRoles(string roles)
		{
			return new LocalizedString("CurrentRoles", "ExFE4B3A", false, true, Strings.ResourceManager, new object[]
			{
				roles
			});
		}

		public static LocalizedString CasHealthConfirmTestActiveSyncUsingAutodiscovery
		{
			get
			{
				return new LocalizedString("CasHealthConfirmTestActiveSyncUsingAutodiscovery", "Ex026420", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DisableMailboxQuarantineWarningMessage(string mailbox)
		{
			return new LocalizedString("DisableMailboxQuarantineWarningMessage", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString CasHealthOwaAuthTypesSupported3(string method1, string method2, string method3)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported3", "Ex6DD5A5", false, true, Strings.ResourceManager, new object[]
			{
				method1,
				method2,
				method3
			});
		}

		public static LocalizedString ExtractingLang(string lang)
		{
			return new LocalizedString("ExtractingLang", "ExA365D3", false, true, Strings.ResourceManager, new object[]
			{
				lang
			});
		}

		public static LocalizedString InfoCheckingRmsOnlinePrerequisites
		{
			get
			{
				return new LocalizedString("InfoCheckingRmsOnlinePrerequisites", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorChangePasswordRequiresOldPasswordNewPassword
		{
			get
			{
				return new LocalizedString("ErrorChangePasswordRequiresOldPasswordNewPassword", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InterceptorErrorInvalidEventConditionPair(string evt, string condition, string validConditions)
		{
			return new LocalizedString("InterceptorErrorInvalidEventConditionPair", "", false, false, Strings.ResourceManager, new object[]
			{
				evt,
				condition,
				validConditions
			});
		}

		public static LocalizedString SetupProgressDisableWMIAsync
		{
			get
			{
				return new LocalizedString("SetupProgressDisableWMIAsync", "Ex9F1113", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConstraintFallback(DataMoveReplicationConstraintParameter desired, DataMoveReplicationConstraintParameter suggested, string database)
		{
			return new LocalizedString("ConstraintFallback", "Ex825CA4", false, true, Strings.ResourceManager, new object[]
			{
				desired,
				suggested,
				database
			});
		}

		public static LocalizedString RpsFileCreated(string sourceFilename, string targetFilename)
		{
			return new LocalizedString("RpsFileCreated", "", false, false, Strings.ResourceManager, new object[]
			{
				sourceFilename,
				targetFilename
			});
		}

		public static LocalizedString ConfirmationMessageSetReceiveConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetReceiveConnector", "Ex24A021", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CannotRemoveInternalTransportCertificate
		{
			get
			{
				return new LocalizedString("CannotRemoveInternalTransportCertificate", "Ex6F8153", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorArbitrationMailboxDatabase(string server)
		{
			return new LocalizedString("ErrorArbitrationMailboxDatabase", "Ex7D8853", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString VerboseMountDatabaseForcely(string id)
		{
			return new LocalizedString("VerboseMountDatabaseForcely", "Ex8D0C54", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseRemoveWSManConfigSection(string file)
		{
			return new LocalizedString("VerboseRemoveWSManConfigSection", "ExC2FBE2", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString CasHealthWebAppAuthenticationVerificationError(LocalizedString applicationLongName)
		{
			return new LocalizedString("CasHealthWebAppAuthenticationVerificationError", "ExD7DE05", false, true, Strings.ResourceManager, new object[]
			{
				applicationLongName
			});
		}

		public static LocalizedString ErrorFailedToGetPreL
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetPreL", "ExFAF1BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorPartnerApplicationUseAuthServerCannotSetUrl
		{
			get
			{
				return new LocalizedString("ErrorPartnerApplicationUseAuthServerCannotSetUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyAndDeleteOperation
		{
			get
			{
				return new LocalizedString("CopyAndDeleteOperation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CompleteMigrationBatchNotSupported
		{
			get
			{
				return new LocalizedString("CompleteMigrationBatchNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StartPreSetupDescription
		{
			get
			{
				return new LocalizedString("StartPreSetupDescription", "Ex84820C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InsufficientEmailsForAutoTagging(int requiredTrainingCount)
		{
			return new LocalizedString("InsufficientEmailsForAutoTagging", "ExAAD72D", false, true, Strings.ResourceManager, new object[]
			{
				requiredTrainingCount
			});
		}

		public static LocalizedString MtrtEventTransportRule
		{
			get
			{
				return new LocalizedString("MtrtEventTransportRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString PopGettingMessageIDs
		{
			get
			{
				return new LocalizedString("PopGettingMessageIDs", "Ex6CFD11", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateTransportRuleCollection
		{
			get
			{
				return new LocalizedString("SetupProgressCreateTransportRuleCollection", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorChangeWindowsLiveID(string recipinet)
		{
			return new LocalizedString("ErrorChangeWindowsLiveID", "Ex47708A", false, true, Strings.ResourceManager, new object[]
			{
				recipinet
			});
		}

		public static LocalizedString AgentLogInvalidTimeRange
		{
			get
			{
				return new LocalizedString("AgentLogInvalidTimeRange", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DlpPolicyMissingLocaleAttribute(string elementName, string elementValue)
		{
			return new LocalizedString("DlpPolicyMissingLocaleAttribute", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				elementValue
			});
		}

		public static LocalizedString DagTaskComputerAccountExistsAndIsEnabledException(string cnoName)
		{
			return new LocalizedString("DagTaskComputerAccountExistsAndIsEnabledException", "", false, false, Strings.ResourceManager, new object[]
			{
				cnoName
			});
		}

		public static LocalizedString VerboseNoAssociatedUserMailboxOrMoveRequestOnDatabaseCondition(string id)
		{
			return new LocalizedString("VerboseNoAssociatedUserMailboxOrMoveRequestOnDatabaseCondition", "", false, false, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorAgentPriorityCannotBeChanged
		{
			get
			{
				return new LocalizedString("ErrorAgentPriorityCannotBeChanged", "Ex0C3021", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MsiProductCode(Guid productCode)
		{
			return new LocalizedString("MsiProductCode", "ExB406A8", false, true, Strings.ResourceManager, new object[]
			{
				productCode
			});
		}

		public static LocalizedString CasHealthCalendarScenarioTestView
		{
			get
			{
				return new LocalizedString("CasHealthCalendarScenarioTestView", "ExEC911A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOrganizationalUnitNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorOrganizationalUnitNotUnique", "Ex7FDA52", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ProgressMoveDatabasePath(string idDatabase)
		{
			return new LocalizedString("ProgressMoveDatabasePath", "ExD3A53A", false, true, Strings.ResourceManager, new object[]
			{
				idDatabase
			});
		}

		public static LocalizedString InvalidPKConfigFormat(string file)
		{
			return new LocalizedString("InvalidPKConfigFormat", "Ex0BCE29", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString SetupComponentPostSetupMailbox
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusDismounting
		{
			get
			{
				return new LocalizedString("CopyStatusDismounting", "Ex6469DB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressActivityUpdateRecipient
		{
			get
			{
				return new LocalizedString("ProgressActivityUpdateRecipient", "Ex6564DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString BadFastMessageRetrievalParameterException(string value)
		{
			return new LocalizedString("BadFastMessageRetrievalParameterException", "Ex20C210", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString ParameterErrorForInternalUsage
		{
			get
			{
				return new LocalizedString("ParameterErrorForInternalUsage", "ExB62EA4", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTeamMailboxUserTypeUnqualified(string users)
		{
			return new LocalizedString("ErrorTeamMailboxUserTypeUnqualified", "", false, false, Strings.ResourceManager, new object[]
			{
				users
			});
		}

		public static LocalizedString ErrorCannotEnableJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorCannotEnableJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationDisablingPartitionFromProvisioning(string partitionName)
		{
			return new LocalizedString("ConfirmationDisablingPartitionFromProvisioning", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveRemoteAccountPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRemoteAccountPolicy", "Ex60377F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InterceptorErrorConditionInvalidRegex(string value, ArgumentException error)
		{
			return new LocalizedString("InterceptorErrorConditionInvalidRegex", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				error
			});
		}

		public static LocalizedString SiteIdMustBePositive(uint siteId)
		{
			return new LocalizedString("SiteIdMustBePositive", "Ex721033", false, true, Strings.ResourceManager, new object[]
			{
				siteId
			});
		}

		public static LocalizedString SuspendSgcOnHostServer(string sg, string server)
		{
			return new LocalizedString("SuspendSgcOnHostServer", "Ex73E16F", false, true, Strings.ResourceManager, new object[]
			{
				sg,
				server
			});
		}

		public static LocalizedString RequestQueueIdentified(string databaseName)
		{
			return new LocalizedString("RequestQueueIdentified", "", false, false, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		public static LocalizedString ConfirmationMessageRemoveHostedConnectionFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedConnectionFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorSourceArchiveMailboxDoesNotExist(string user)
		{
			return new LocalizedString("ErrorSourceArchiveMailboxDoesNotExist", "ExAEA7B7", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString ErrorBPAMergeFileNotFound
		{
			get
			{
				return new LocalizedString("ErrorBPAMergeFileNotFound", "Ex3138A9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyingOABFiles(string oab, string server)
		{
			return new LocalizedString("CopyingOABFiles", "ExDAA5E3", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				server
			});
		}

		public static LocalizedString ErrorMailPublicFolderNotFoundInDirectory(string identity)
		{
			return new LocalizedString("ErrorMailPublicFolderNotFoundInDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString AgentLogInvalidSmtpResponse(int line, string filename)
		{
			return new LocalizedString("AgentLogInvalidSmtpResponse", "", false, false, Strings.ResourceManager, new object[]
			{
				line,
				filename
			});
		}

		public static LocalizedString SclValue
		{
			get
			{
				return new LocalizedString("SclValue", "ExC1AB6A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchGetServerFromActiveManager(string MDB)
		{
			return new LocalizedString("TestSearchGetServerFromActiveManager", "Ex02B6D0", false, true, Strings.ResourceManager, new object[]
			{
				MDB
			});
		}

		public static LocalizedString InfoError(LocalizedString message)
		{
			return new LocalizedString("InfoError", "Ex17782D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString FormsAuthenticationMarkPathCannotMarkSecureAttributeException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationMarkPathCannotMarkSecureAttributeException", "ExE4BBA5", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		public static LocalizedString ServerMustBeInDagException(string serverName)
		{
			return new LocalizedString("ServerMustBeInDagException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString MailboxFolderStatisticsException(string mailbox, string failure)
		{
			return new LocalizedString("MailboxFolderStatisticsException", "Ex3F6FA7", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				failure
			});
		}

		public static LocalizedString PerfCounterDefinitionFileNameDescription
		{
			get
			{
				return new LocalizedString("PerfCounterDefinitionFileNameDescription", "Ex46EB93", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnmanagedMemberExists(string memberName)
		{
			return new LocalizedString("ErrorUnmanagedMemberExists", "ExC33124", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString ErrorUnmanagedMemberNotExists(string memberName)
		{
			return new LocalizedString("ErrorUnmanagedMemberNotExists", "ExC9E083", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString HubParameterNotValidOnEdgeRole
		{
			get
			{
				return new LocalizedString("HubParameterNotValidOnEdgeRole", "Ex462A97", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUnsupportedBlockLanguage(string code)
		{
			return new LocalizedString("ErrorUnsupportedBlockLanguage", "", false, false, Strings.ResourceManager, new object[]
			{
				code
			});
		}

		public static LocalizedString NewDagClusteringInstalledLaterRunningChecksLaterVerbose
		{
			get
			{
				return new LocalizedString("NewDagClusteringInstalledLaterRunningChecksLaterVerbose", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxPermanentAndNotLiveId(string Identity, string LiveId)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermanentAndNotLiveId", "ExC7E272", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				LiveId
			});
		}

		public static LocalizedString TenantNotificationSubject(string eventCategory, int eventId)
		{
			return new LocalizedString("TenantNotificationSubject", "Ex8425FE", false, true, Strings.ResourceManager, new object[]
			{
				eventCategory,
				eventId
			});
		}

		public static LocalizedString ErrorLiveIdDomainNameInvalid(string message)
		{
			return new LocalizedString("ErrorLiveIdDomainNameInvalid", "ExDF1C2D", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString VerboseSettingPreferredServerForDomain(string dom, string server)
		{
			return new LocalizedString("VerboseSettingPreferredServerForDomain", "ExED71AC", false, true, Strings.ResourceManager, new object[]
			{
				dom,
				server
			});
		}

		public static LocalizedString CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault
		{
			get
			{
				return new LocalizedString("CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRequestAlreadyCanceled(string identity)
		{
			return new LocalizedString("ErrorRequestAlreadyCanceled", "ExAB2602", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString FormsAuthenticationMarkPathAccessDeniedException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationMarkPathAccessDeniedException", "Ex7B4757", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		public static LocalizedString MailboxExchangeCertificateComponentDescription
		{
			get
			{
				return new LocalizedString("MailboxExchangeCertificateComponentDescription", "Ex0C9461", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUMInvalidAddressFormat(string s)
		{
			return new LocalizedString("ErrorUMInvalidAddressFormat", "Ex70A9AC", false, true, Strings.ResourceManager, new object[]
			{
				s
			});
		}

		public static LocalizedString ErrorParameterInvalidForManagedTenant(string organization)
		{
			return new LocalizedString("ErrorParameterInvalidForManagedTenant", "Ex11D41D", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString DagTaskProblemChangingQuorumExceptionBadNetPath(string clusterName, string fsw, Exception ex)
		{
			return new LocalizedString("DagTaskProblemChangingQuorumExceptionBadNetPath", "", false, false, Strings.ResourceManager, new object[]
			{
				clusterName,
				fsw,
				ex
			});
		}

		public static LocalizedString ADAttributeCustomAttribute12
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute12", "Ex73D073", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidSubscriptionFile
		{
			get
			{
				return new LocalizedString("InvalidSubscriptionFile", "Ex648198", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerbosePropertiesRead(string properties)
		{
			return new LocalizedString("VerbosePropertiesRead", "", false, false, Strings.ResourceManager, new object[]
			{
				properties
			});
		}

		public static LocalizedString CannotRemoveMailUserCatchAllRecipient(string domain)
		{
			return new LocalizedString("CannotRemoveMailUserCatchAllRecipient", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorInboxRuleTooBig
		{
			get
			{
				return new LocalizedString("ErrorInboxRuleTooBig", "Ex5079F1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TSNoProblemsDetected(string serverName)
		{
			return new LocalizedString("TSNoProblemsDetected", "Ex3642F9", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ConfirmationMessageUpdateDatabaseCopyBegin(string dbCopy)
		{
			return new LocalizedString("ConfirmationMessageUpdateDatabaseCopyBegin", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopy
			});
		}

		public static LocalizedString ErrorUserHasAlternateMailboxes(string mailbox)
		{
			return new LocalizedString("ErrorUserHasAlternateMailboxes", "ExD2FF1E", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString UnexpectedError(string exceptionMessage)
		{
			return new LocalizedString("UnexpectedError", "", false, false, Strings.ResourceManager, new object[]
			{
				exceptionMessage
			});
		}

		public static LocalizedString ErrorServicePlanInconsistent(string fileName, string programId, string offerId, string details)
		{
			return new LocalizedString("ErrorServicePlanInconsistent", "Ex08CD17", false, true, Strings.ResourceManager, new object[]
			{
				fileName,
				programId,
				offerId,
				details
			});
		}

		public static LocalizedString OutlookProtectionRuleRmsTemplateNotSet
		{
			get
			{
				return new LocalizedString("OutlookProtectionRuleRmsTemplateNotSet", "Ex404112", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LocalSiteColon
		{
			get
			{
				return new LocalizedString("LocalSiteColon", "ExADEF76", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidDuration(string minDuration, string maxDuration)
		{
			return new LocalizedString("InvalidDuration", "", false, false, Strings.ResourceManager, new object[]
			{
				minDuration,
				maxDuration
			});
		}

		public static LocalizedString OwaAdOrphanFound(string id)
		{
			return new LocalizedString("OwaAdOrphanFound", "Ex19CFCC", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorDirectoryNotExist(string path)
		{
			return new LocalizedString("ErrorDirectoryNotExist", "Ex3B1A3F", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString FailedToSetRequestedDatabaseSchemaVersion(string database)
		{
			return new LocalizedString("FailedToSetRequestedDatabaseSchemaVersion", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ConfirmationMessageNewDynamicDistributionGroupPrecannedFilter(string Name, string IncludedRecipients, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewDynamicDistributionGroupPrecannedFilter", "ExBDA516", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				IncludedRecipients,
				OrganizationalUnit
			});
		}

		public static LocalizedString DirectoryPathDoesntExist
		{
			get
			{
				return new LocalizedString("DirectoryPathDoesntExist", "Ex7EA173", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtQuarantine
		{
			get
			{
				return new LocalizedString("MtrtQuarantine", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AlsSubjectMailboxFailure(string name)
		{
			return new LocalizedString("AlsSubjectMailboxFailure", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString FailedToValidateSLCCertChain(WellKnownErrorCode eCode)
		{
			return new LocalizedString("FailedToValidateSLCCertChain", "", false, false, Strings.ResourceManager, new object[]
			{
				eCode
			});
		}

		public static LocalizedString CouldNotUpgradeSpecificContentSetting(string setting)
		{
			return new LocalizedString("CouldNotUpgradeSpecificContentSetting", "Ex31F8AE", false, true, Strings.ResourceManager, new object[]
			{
				setting
			});
		}

		public static LocalizedString SetupProgressOwaGlobalAddressListEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressOwaGlobalAddressListEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetMsoDiagnosticsProgressIteration(int i, int total)
		{
			return new LocalizedString("GetMsoDiagnosticsProgressIteration", "", false, false, Strings.ResourceManager, new object[]
			{
				i,
				total
			});
		}

		public static LocalizedString SameOwaVersionDoNotCopyLPFiles
		{
			get
			{
				return new LocalizedString("SameOwaVersionDoNotCopyLPFiles", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDefaultMalwareFilterPolicyCannotBeDeleted
		{
			get
			{
				return new LocalizedString("ErrorDefaultMalwareFilterPolicyCannotBeDeleted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestRHRpcQueryAllDone(int count)
		{
			return new LocalizedString("TestRHRpcQueryAllDone", "Ex6A2FD8", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString MigrationStartAfterScheduledBatchesOnly
		{
			get
			{
				return new LocalizedString("MigrationStartAfterScheduledBatchesOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailboxPermissionAccessRights(string Identity, string AccessRights, string User)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailboxPermissionAccessRights", "Ex8227F8", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				AccessRights,
				User
			});
		}

		public static LocalizedString InvalidDlpPolicyConfiguration
		{
			get
			{
				return new LocalizedString("InvalidDlpPolicyConfiguration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetAvailabilityConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetAvailabilityConfig", "ExA13062", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSyncTaskCookieCurrentWatermarksMissingCurrentDC(Guid orgDc, Guid newDc)
		{
			return new LocalizedString("VerboseSyncTaskCookieCurrentWatermarksMissingCurrentDC", "Ex174DD5", false, true, Strings.ResourceManager, new object[]
			{
				orgDc,
				newDc
			});
		}

		public static LocalizedString ResetAutoBlockedDevicesException(string recipient)
		{
			return new LocalizedString("ResetAutoBlockedDevicesException", "", false, false, Strings.ResourceManager, new object[]
			{
				recipient
			});
		}

		public static LocalizedString BPAScanInProgress
		{
			get
			{
				return new LocalizedString("BPAScanInProgress", "ExC343DF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExportWithPrivateKeyRequiresPassword
		{
			get
			{
				return new LocalizedString("ExportWithPrivateKeyRequiresPassword", "ExC391B0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorReadMailboxSecurityDescriptor(string identity)
		{
			return new LocalizedString("ErrorReadMailboxSecurityDescriptor", "Ex52FC30", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString TopologyServiceOperation(string operationType)
		{
			return new LocalizedString("TopologyServiceOperation", "", false, false, Strings.ResourceManager, new object[]
			{
				operationType
			});
		}

		public static LocalizedString CasHealthScenarioResetCredentials
		{
			get
			{
				return new LocalizedString("CasHealthScenarioResetCredentials", "Ex00DCDE", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProtocolTransactionShortErrorMsgFromExceptionWithInnerException(string exceptionType, string exceptionMessage, string innerExceptionType, string innerExceptionMessage)
		{
			return new LocalizedString("ProtocolTransactionShortErrorMsgFromExceptionWithInnerException", "Ex3FA93E", false, true, Strings.ResourceManager, new object[]
			{
				exceptionType,
				exceptionMessage,
				innerExceptionType,
				innerExceptionMessage
			});
		}

		public static LocalizedString ConfirmationMessageOutlookProtectionRuleWithEmptyCondition(string identity)
		{
			return new LocalizedString("ConfirmationMessageOutlookProtectionRuleWithEmptyCondition", "ExE81D2D", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString KeynoteConnectorServiceDescription
		{
			get
			{
				return new LocalizedString("KeynoteConnectorServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetSearchDocumentFormat
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetSearchDocumentFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSettingWriteOriginatingChangeTimestamp(string value)
		{
			return new LocalizedString("VerboseSettingWriteOriginatingChangeTimestamp", "ExC081B8", false, true, Strings.ResourceManager, new object[]
			{
				value
			});
		}

		public static LocalizedString ErrorCannotDetermineIisVersion(string serverName)
		{
			return new LocalizedString("ErrorCannotDetermineIisVersion", "Ex03C6CF", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ConfirmationMessageDisableMailUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageDisableMailUser", "Ex75935F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UpdatingLegDnForDatabaseCopy(string dbcopyName)
		{
			return new LocalizedString("UpdatingLegDnForDatabaseCopy", "Ex0F0E68", false, true, Strings.ResourceManager, new object[]
			{
				dbcopyName
			});
		}

		public static LocalizedString ErrorInvalidSizeRangeException
		{
			get
			{
				return new LocalizedString("ErrorInvalidSizeRangeException", "ExD13FD8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DatabaseCopyDisconnectedCheck(string configType, string sgName, string checkingState, string serverName)
		{
			return new LocalizedString("DatabaseCopyDisconnectedCheck", "ExF88BD7", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				checkingState,
				serverName
			});
		}

		public static LocalizedString MigrationUserNotFound(string userName)
		{
			return new LocalizedString("MigrationUserNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		public static LocalizedString ErrorNoDatabaseInfor
		{
			get
			{
				return new LocalizedString("ErrorNoDatabaseInfor", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DebugStartEnablingUM
		{
			get
			{
				return new LocalizedString("DebugStartEnablingUM", "Ex3284E3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchFailed(string mailbox, string mdb, string activeServer)
		{
			return new LocalizedString("TestSearchFailed", "Ex456BE3", false, true, Strings.ResourceManager, new object[]
			{
				mailbox,
				mdb,
				activeServer
			});
		}

		public static LocalizedString ErrorSettingCertOnTenant
		{
			get
			{
				return new LocalizedString("ErrorSettingCertOnTenant", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IgnoringException(string message)
		{
			return new LocalizedString("IgnoringException", "Ex3092DF", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorFailedToGetTemplateTenant
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetTemplateTenant", "Ex1319A6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmRemoveExchangeCertificate(string thumbprint)
		{
			return new LocalizedString("ConfirmRemoveExchangeCertificate", "Ex0ADF40", false, true, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString CannotRunOnNonHubTransport
		{
			get
			{
				return new LocalizedString("CannotRunOnNonHubTransport", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseCannedAddressListAlreadyExists(string name)
		{
			return new LocalizedString("VerboseCannedAddressListAlreadyExists", "ExA9257D", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorRmsOnlineAuthenticationCertificateExpired
		{
			get
			{
				return new LocalizedString("ErrorRmsOnlineAuthenticationCertificateExpired", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorFailedToGetULDueToInvalidSuperUserConfiguration
		{
			get
			{
				return new LocalizedString("ErrorFailedToGetULDueToInvalidSuperUserConfiguration", "ExCEF983", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskErrorEncounteredMoreDetailsInLog(string logFile, string serverName)
		{
			return new LocalizedString("DagTaskErrorEncounteredMoreDetailsInLog", "", false, false, Strings.ResourceManager, new object[]
			{
				logFile,
				serverName
			});
		}

		public static LocalizedString RemoveOrganizationDescription
		{
			get
			{
				return new LocalizedString("RemoveOrganizationDescription", "Ex637E96", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthTestNewUserScriptName
		{
			get
			{
				return new LocalizedString("CasHealthTestNewUserScriptName", "ExD48032", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionRunProcessFailedRetry(int errorCode, uint retryCount)
		{
			return new LocalizedString("ExceptionRunProcessFailedRetry", "", false, false, Strings.ResourceManager, new object[]
			{
				errorCode,
				retryCount
			});
		}

		public static LocalizedString ErrorUnableToFindFqdnForHostADErrorException(string computerName, string ex)
		{
			return new LocalizedString("ErrorUnableToFindFqdnForHostADErrorException", "", false, false, Strings.ResourceManager, new object[]
			{
				computerName,
				ex
			});
		}

		public static LocalizedString WarningSearchUserNotFound(string idStringValue)
		{
			return new LocalizedString("WarningSearchUserNotFound", "ExF696B0", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorAllRoomListNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorAllRoomListNotUnique", "", false, false, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString NewProductInstallation(string packagePath, string propertyValues)
		{
			return new LocalizedString("NewProductInstallation", "ExD8DDC3", false, true, Strings.ResourceManager, new object[]
			{
				packagePath,
				propertyValues
			});
		}

		public static LocalizedString ConfirmationMessageNewInboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageNewInboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InstallGatewayRoleDescription
		{
			get
			{
				return new LocalizedString("InstallGatewayRoleDescription", "ExC4272A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidClientCertificateSubjectName
		{
			get
			{
				return new LocalizedString("InvalidClientCertificateSubjectName", "Ex38242D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentPostSetupClientAccess
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupClientAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotUpdatePublicFolderHierarchyInformation
		{
			get
			{
				return new LocalizedString("ErrorCannotUpdatePublicFolderHierarchyInformation", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OutlookConnectivityErrorUserNotFound(string identity)
		{
			return new LocalizedString("OutlookConnectivityErrorUserNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorGroupNotFoundOnDomainController(string id, string dc)
		{
			return new LocalizedString("ErrorGroupNotFoundOnDomainController", "Ex4B3DC3", false, true, Strings.ResourceManager, new object[]
			{
				id,
				dc
			});
		}

		public static LocalizedString ConfirmationDumpProvisioningCache(string server, string application)
		{
			return new LocalizedString("ConfirmationDumpProvisioningCache", "", false, false, Strings.ResourceManager, new object[]
			{
				server,
				application
			});
		}

		public static LocalizedString ConversationsFailedToProcessMailbox(string error)
		{
			return new LocalizedString("ConversationsFailedToProcessMailbox", "Ex616E7A", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString WarningArbitrationRetentionPolicyNotAvailable(string policyName)
		{
			return new LocalizedString("WarningArbitrationRetentionPolicyNotAvailable", "Ex7AA7FD", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		public static LocalizedString messageAutodiscoverServiceUnavailableException
		{
			get
			{
				return new LocalizedString("messageAutodiscoverServiceUnavailableException", "ExBC439D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsCannotChangeScopeOnScopeFilteredGroup(string groupName)
		{
			return new LocalizedString("ExchangeSettingsCannotChangeScopeOnScopeFilteredGroup", "", false, false, Strings.ResourceManager, new object[]
			{
				groupName
			});
		}

		public static LocalizedString InfoIRMConfigLoaded
		{
			get
			{
				return new LocalizedString("InfoIRMConfigLoaded", "ExDE5265", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CertificateInformation(string issuer, DateTime notBefore, DateTime notAfter, string subject)
		{
			return new LocalizedString("CertificateInformation", "", false, false, Strings.ResourceManager, new object[]
			{
				issuer,
				notBefore,
				notAfter,
				subject
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxAuditLogAgeLimitSmaller(string Identity, string newAgeLimit)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxAuditLogAgeLimitSmaller", "ExBB9D09", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				newAgeLimit
			});
		}

		public static LocalizedString CasHealthOwaGotLanguageSelectionPage
		{
			get
			{
				return new LocalizedString("CasHealthOwaGotLanguageSelectionPage", "Ex561CDF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotFindRPSInstallLocation(string RPSInstallLocation)
		{
			return new LocalizedString("CannotFindRPSInstallLocation", "Ex754C83", false, true, Strings.ResourceManager, new object[]
			{
				RPSInstallLocation
			});
		}

		public static LocalizedString ErrorParameterValueRequired(string missingParamName)
		{
			return new LocalizedString("ErrorParameterValueRequired", "Ex218504", false, true, Strings.ResourceManager, new object[]
			{
				missingParamName
			});
		}

		public static LocalizedString WarningMustInvokeUpdateOABToStartScheduledGeneration
		{
			get
			{
				return new LocalizedString("WarningMustInvokeUpdateOABToStartScheduledGeneration", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressStatusReadingAddressListTree(int count)
		{
			return new LocalizedString("ProgressStatusReadingAddressListTree", "ExBBA096", false, true, Strings.ResourceManager, new object[]
			{
				count
			});
		}

		public static LocalizedString HaltingExecution
		{
			get
			{
				return new LocalizedString("HaltingExecution", "Ex10590F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetRemoteDomain(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetRemoteDomain", "ExD17155", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CasHealthPowerShellLongName
		{
			get
			{
				return new LocalizedString("CasHealthPowerShellLongName", "ExBE80AA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseStartToSubmitApprovalRequest(string group, string approvers)
		{
			return new LocalizedString("VerboseStartToSubmitApprovalRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				group,
				approvers
			});
		}

		public static LocalizedString ErrorELCFolderIsDestination(string folderName, string destinationFolderName, string destinationContentSetting)
		{
			return new LocalizedString("ErrorELCFolderIsDestination", "Ex1E4AFB", false, true, Strings.ResourceManager, new object[]
			{
				folderName,
				destinationFolderName,
				destinationContentSetting
			});
		}

		public static LocalizedString AppIdElementIsEmpty
		{
			get
			{
				return new LocalizedString("AppIdElementIsEmpty", "ExBBFA89", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseTryingToParseOPathFilter(string filter)
		{
			return new LocalizedString("VerboseTryingToParseOPathFilter", "ExC22777", false, true, Strings.ResourceManager, new object[]
			{
				filter
			});
		}

		public static LocalizedString CasHealthCalendarWebRequestException(string message)
		{
			return new LocalizedString("CasHealthCalendarWebRequestException", "Ex5328C9", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmOrphanUserMissingADData(string identity)
		{
			return new LocalizedString("ConfirmOrphanUserMissingADData", "ExAF487A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorInvalidResponseXml(string xml)
		{
			return new LocalizedString("ErrorInvalidResponseXml", "", false, false, Strings.ResourceManager, new object[]
			{
				xml
			});
		}

		public static LocalizedString ConfirmationMessageNewMergeRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMergeRequest", "Ex43EDE9", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString DagNicDown(string nodeName, string nicAddress, string nicState)
		{
			return new LocalizedString("DagNicDown", "Ex8770BB", false, true, Strings.ResourceManager, new object[]
			{
				nodeName,
				nicAddress,
				nicState
			});
		}

		public static LocalizedString CannotOpenRegistryKey(string name)
		{
			return new LocalizedString("CannotOpenRegistryKey", "Ex48D947", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarningNewAdminAuditLogSearchOnPreE15(string org)
		{
			return new LocalizedString("WarningNewAdminAuditLogSearchOnPreE15", "", false, false, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ConfirmationMessageAddAvailabilityAddressSpace(string ForestName, string AccessMethod)
		{
			return new LocalizedString("ConfirmationMessageAddAvailabilityAddressSpace", "Ex1AFFD7", false, true, Strings.ResourceManager, new object[]
			{
				ForestName,
				AccessMethod
			});
		}

		public static LocalizedString ConfirmationMessageSetManagedFolderMailboxPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetManagedFolderMailboxPolicy", "ExBC0EDF", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString InPlaceHoldNotAllowedForAllSourceMailboxes
		{
			get
			{
				return new LocalizedString("InPlaceHoldNotAllowedForAllSourceMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOabGenFailedE14(string oabId, string server, string errormsg)
		{
			return new LocalizedString("ErrorOabGenFailedE14", "", false, false, Strings.ResourceManager, new object[]
			{
				oabId,
				server,
				errormsg
			});
		}

		public static LocalizedString NoMdbWasMovedWhileRunning
		{
			get
			{
				return new LocalizedString("NoMdbWasMovedWhileRunning", "Ex05B24B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAdUserNotFound(string userPrincipalName, string errorMessage)
		{
			return new LocalizedString("ErrorAdUserNotFound", "Ex61FDBD", false, true, Strings.ResourceManager, new object[]
			{
				userPrincipalName,
				errorMessage
			});
		}

		public static LocalizedString FailedToResetAdministrativeGroupLinkedToPfdb(string administrativeGroup, string pfdb, string error)
		{
			return new LocalizedString("FailedToResetAdministrativeGroupLinkedToPfdb", "ExEE1C9B", false, true, Strings.ResourceManager, new object[]
			{
				administrativeGroup,
				pfdb,
				error
			});
		}

		public static LocalizedString MtrtDeleteAttachment
		{
			get
			{
				return new LocalizedString("MtrtDeleteAttachment", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetFederationTrust4(string Identity, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust4", "Ex607F6D", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				metadataUrl
			});
		}

		public static LocalizedString TestSearchRecoveryMdb(string mdb)
		{
			return new LocalizedString("TestSearchRecoveryMdb", "Ex249AFC", false, true, Strings.ResourceManager, new object[]
			{
				mdb
			});
		}

		public static LocalizedString MailboxSearchObjectExist(string name)
		{
			return new LocalizedString("MailboxSearchObjectExist", "ExFBB642", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString VerboseCreateMember(string memberName)
		{
			return new LocalizedString("VerboseCreateMember", "Ex0B2722", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString DagTaskCouldNotDisableAccountName(string dagName, Exception ex)
		{
			return new LocalizedString("DagTaskCouldNotDisableAccountName", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName,
				ex
			});
		}

		public static LocalizedString IncomingUserNameEmpty
		{
			get
			{
				return new LocalizedString("IncomingUserNameEmpty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewDatabaseAvailabilityGroup(string Server)
		{
			return new LocalizedString("ConfirmationMessageNewDatabaseAvailabilityGroup", "Ex0ACCAC", false, true, Strings.ResourceManager, new object[]
			{
				Server
			});
		}

		public static LocalizedString AddressRewriteSessionNull
		{
			get
			{
				return new LocalizedString("AddressRewriteSessionNull", "Ex4E1285", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNameValueStringTooLong(string param, int maxLen, int actualLen)
		{
			return new LocalizedString("ErrorNameValueStringTooLong", "Ex4BC346", false, true, Strings.ResourceManager, new object[]
			{
				param,
				maxLen,
				actualLen
			});
		}

		public static LocalizedString ErrorApplicationNotExist(string name, string configFile)
		{
			return new LocalizedString("ErrorApplicationNotExist", "Ex76E4F9", false, true, Strings.ResourceManager, new object[]
			{
				name,
				configFile
			});
		}

		public static LocalizedString AgentLogInvalidLocation(string location)
		{
			return new LocalizedString("AgentLogInvalidLocation", "", false, false, Strings.ResourceManager, new object[]
			{
				location
			});
		}

		public static LocalizedString ErrorAccessRightsEmpty
		{
			get
			{
				return new LocalizedString("ErrorAccessRightsEmpty", "Ex4AE991", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorAddCertificateOnEdge(string message)
		{
			return new LocalizedString("ErrorAddCertificateOnEdge", "Ex14CBB4", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ErrorMountPreventedByRecordedErr(string databaseId, string serverName, string errorMessage)
		{
			return new LocalizedString("ErrorMountPreventedByRecordedErr", "Ex2BA92D", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				serverName,
				errorMessage
			});
		}

		public static LocalizedString ErrorCheckHasLocalReplicas(string databaseId, string serverFQDN)
		{
			return new LocalizedString("ErrorCheckHasLocalReplicas", "Ex78064B", false, true, Strings.ResourceManager, new object[]
			{
				databaseId,
				serverFQDN
			});
		}

		public static LocalizedString SomeActiveSyncTransactionsFailed(string detailedInformation)
		{
			return new LocalizedString("SomeActiveSyncTransactionsFailed", "Ex07244D", false, true, Strings.ResourceManager, new object[]
			{
				detailedInformation
			});
		}

		public static LocalizedString CheckDatabaseStatus(string database)
		{
			return new LocalizedString("CheckDatabaseStatus", "Ex13E2CD", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString SetupComponentMailboxGlobalConfig
		{
			get
			{
				return new LocalizedString("SetupComponentMailboxGlobalConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MtrtEventDeliver
		{
			get
			{
				return new LocalizedString("MtrtEventDeliver", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SystemContainerNotFoundException(string domain, Guid guid)
		{
			return new LocalizedString("SystemContainerNotFoundException", "Ex41A017", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				guid
			});
		}

		public static LocalizedString EcpUrlNotMatchOwaWarning
		{
			get
			{
				return new LocalizedString("EcpUrlNotMatchOwaWarning", "ExAEAC6D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString E2k3InteropGroupNotFoundException(Guid guid)
		{
			return new LocalizedString("E2k3InteropGroupNotFoundException", "Ex32F637", false, true, Strings.ResourceManager, new object[]
			{
				guid
			});
		}

		public static LocalizedString DlpPolicyFieldLengthsExceedsLimit(string elementName, int maxAllowedLength)
		{
			return new LocalizedString("DlpPolicyFieldLengthsExceedsLimit", "", false, false, Strings.ResourceManager, new object[]
			{
				elementName,
				maxAllowedLength
			});
		}

		public static LocalizedString CasHealthEasPing
		{
			get
			{
				return new LocalizedString("CasHealthEasPing", "Ex3EE605", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMailboxDatabaseNonRecovery(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewMailboxDatabaseNonRecovery", "Ex5A10DA", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ErrorVirtualDirectoryAlreadyExists(string virtualDirectoryName, string webSiteName, string serverName)
		{
			return new LocalizedString("ErrorVirtualDirectoryAlreadyExists", "Ex708236", false, true, Strings.ResourceManager, new object[]
			{
				virtualDirectoryName,
				webSiteName,
				serverName
			});
		}

		public static LocalizedString ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs
		{
			get
			{
				return new LocalizedString("ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs", "Ex221D27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetELCContentSettings(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetELCContentSettings", "Ex51A75D", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString WSManIISHostingConfigurationComponentDescription
		{
			get
			{
				return new LocalizedString("WSManIISHostingConfigurationComponentDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DiagnosticsHeader
		{
			get
			{
				return new LocalizedString("DiagnosticsHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotConvertAqsToKql(string error)
		{
			return new LocalizedString("CannotConvertAqsToKql", "", false, false, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString UnknownMigrationUserStatusSummaryValue
		{
			get
			{
				return new LocalizedString("UnknownMigrationUserStatusSummaryValue", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaMetabaseIsapiUninstallFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseIsapiUninstallFailure", "Ex21C720", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoreThanOneTeamMailboxes
		{
			get
			{
				return new LocalizedString("MoreThanOneTeamMailboxes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxErrorFromCom(string displayname, string smtp, string summary, int statusCode)
		{
			return new LocalizedString("MoveMailboxErrorFromCom", "ExAABAEA", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				summary,
				statusCode
			});
		}

		public static LocalizedString GetFederationInformationTrustedHostnames(string hostnames)
		{
			return new LocalizedString("GetFederationInformationTrustedHostnames", "Ex5904C1", false, true, Strings.ResourceManager, new object[]
			{
				hostnames
			});
		}

		public static LocalizedString CasHealthOwaIsaFbaFormdirParseFailed
		{
			get
			{
				return new LocalizedString("CasHealthOwaIsaFbaFormdirParseFailed", "Ex84179C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EventLogText
		{
			get
			{
				return new LocalizedString("EventLogText", "ExDF796C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RegistryAccessSecurityExceptionReadValue(string key, string value)
		{
			return new LocalizedString("RegistryAccessSecurityExceptionReadValue", "Ex35B44B", false, true, Strings.ResourceManager, new object[]
			{
				key,
				value
			});
		}

		public static LocalizedString AddDagServerMailboxServerIsInDifferentClusterException(string mailboxServer, string thisClusterName, string otherClusterName)
		{
			return new LocalizedString("AddDagServerMailboxServerIsInDifferentClusterException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer,
				thisClusterName,
				otherClusterName
			});
		}

		public static LocalizedString ManageDelegation2ProvisioningInDNS
		{
			get
			{
				return new LocalizedString("ManageDelegation2ProvisioningInDNS", "ExBF7F56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewAuthRedirect(string name)
		{
			return new LocalizedString("ConfirmationMessageNewAuthRedirect", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString WarningDedicatedMailboxPlanDataNotFound(string customAttributeName)
		{
			return new LocalizedString("WarningDedicatedMailboxPlanDataNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				customAttributeName
			});
		}

		public static LocalizedString IsapiFilterNotRemovedException(string parent, string name)
		{
			return new LocalizedString("IsapiFilterNotRemovedException", "Ex4972C6", false, true, Strings.ResourceManager, new object[]
			{
				parent,
				name
			});
		}

		public static LocalizedString SetupPrereqAnalysis
		{
			get
			{
				return new LocalizedString("SetupPrereqAnalysis", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UninstallContentIndexingServiceTask
		{
			get
			{
				return new LocalizedString("UninstallContentIndexingServiceTask", "Ex0C622E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotAssignCertificateToUMCR(string thumbprint)
		{
			return new LocalizedString("CannotAssignCertificateToUMCR", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString SetupProgressSyncAccountsPollingInterval
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsPollingInterval", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SenderIPAddressOverlapsServiceProviderIPAddressesId(string ipRange)
		{
			return new LocalizedString("SenderIPAddressOverlapsServiceProviderIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		public static LocalizedString ExternalJournalRuleScope
		{
			get
			{
				return new LocalizedString("ExternalJournalRuleScope", "Ex256922", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestMigrationServerAvailabilityPasswordException
		{
			get
			{
				return new LocalizedString("TestMigrationServerAvailabilityPasswordException", "ExAD3F5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthEasOptionsScenarioDescription
		{
			get
			{
				return new LocalizedString("CasHealthEasOptionsScenarioDescription", "Ex027B9A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VoiceMessageOriginatorAlreadyExists(string contact)
		{
			return new LocalizedString("VoiceMessageOriginatorAlreadyExists", "Ex327B25", false, true, Strings.ResourceManager, new object[]
			{
				contact
			});
		}

		public static LocalizedString ConfirmationMessageRemoveMailFlowPartnerConfigWithName(string name)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailFlowPartnerConfigWithName", "Ex2BEBD2", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ProgressStatusRemovingWorkloadManagementPolicyTree
		{
			get
			{
				return new LocalizedString("ProgressStatusRemovingWorkloadManagementPolicyTree", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageInitializeExchangeLegacyPermissions
		{
			get
			{
				return new LocalizedString("ConfirmationMessageInitializeExchangeLegacyPermissions", "ExE7B8B2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CopyStatusSeeding
		{
			get
			{
				return new LocalizedString("CopyStatusSeeding", "Ex347D27", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageTestOrganizationRelationship
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestOrganizationRelationship", "ExB659BA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidEndpointType(string endpointId, string type)
		{
			return new LocalizedString("ErrorInvalidEndpointType", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointId,
				type
			});
		}

		public static LocalizedString UceContentFilterAlreadyExists(string dn)
		{
			return new LocalizedString("UceContentFilterAlreadyExists", "Ex8A64DC", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString UninstallOldAssistantsServiceTask
		{
			get
			{
				return new LocalizedString("UninstallOldAssistantsServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInheritedObjectTypeNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorInheritedObjectTypeNotUnique", "Ex142F0C", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString LaunchSubTask(string task)
		{
			return new LocalizedString("LaunchSubTask", "Ex1623EE", false, true, Strings.ResourceManager, new object[]
			{
				task
			});
		}

		public static LocalizedString ReservedString4
		{
			get
			{
				return new LocalizedString("ReservedString4", "ExA1B0AC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AdminGroupNotFoundException(string adminGroup)
		{
			return new LocalizedString("AdminGroupNotFoundException", "ExBE8507", false, true, Strings.ResourceManager, new object[]
			{
				adminGroup
			});
		}

		public static LocalizedString DeviceWipePending
		{
			get
			{
				return new LocalizedString("DeviceWipePending", "Ex4A1308", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetOutboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetOutboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString SearchMaxResultCountWarning(int maxResultRows)
		{
			return new LocalizedString("SearchMaxResultCountWarning", "", false, false, Strings.ResourceManager, new object[]
			{
				maxResultRows
			});
		}

		public static LocalizedString RpcHttpAvailability(string server)
		{
			return new LocalizedString("RpcHttpAvailability", "ExA1D158", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString LogSourceServerRusUnavaliable(string server, string details)
		{
			return new LocalizedString("LogSourceServerRusUnavaliable", "ExC7A3D1", false, true, Strings.ResourceManager, new object[]
			{
				server,
				details
			});
		}

		public static LocalizedString InfoEnterpriseMode
		{
			get
			{
				return new LocalizedString("InfoEnterpriseMode", "Ex01993F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServiceNameAutoDiscover
		{
			get
			{
				return new LocalizedString("ServiceNameAutoDiscover", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveRemoteAccountSyncCache
		{
			get
			{
				return new LocalizedString("RemoveRemoteAccountSyncCache", "Ex4D47F3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorLiveDomainReservationError(string message)
		{
			return new LocalizedString("ErrorLiveDomainReservationError", "Ex545171", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString OabFilesLeft(string oab, string location)
		{
			return new LocalizedString("OabFilesLeft", "Ex20B594", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				location
			});
		}

		public static LocalizedString DualWriteDeleteWarningMessage
		{
			get
			{
				return new LocalizedString("DualWriteDeleteWarningMessage", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmSetProvisioningReconciliationConfig
		{
			get
			{
				return new LocalizedString("ConfirmSetProvisioningReconciliationConfig", "ExBB5EE8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMoveAddressListToChildOrSelf(string id, string idTarget)
		{
			return new LocalizedString("ErrorMoveAddressListToChildOrSelf", "Ex1FF5A8", false, true, Strings.ResourceManager, new object[]
			{
				id,
				idTarget
			});
		}

		public static LocalizedString BPAConfigurationErrorFound(string error)
		{
			return new LocalizedString("BPAConfigurationErrorFound", "Ex28883C", false, true, Strings.ResourceManager, new object[]
			{
				error
			});
		}

		public static LocalizedString MacroNameNotSpecified(string attribute)
		{
			return new LocalizedString("MacroNameNotSpecified", "Ex85A665", false, true, Strings.ResourceManager, new object[]
			{
				attribute
			});
		}

		public static LocalizedString UninstallThrottlingServiceTask
		{
			get
			{
				return new LocalizedString("UninstallThrottlingServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MRSCorruptDataInDiagnostics(string element, string value)
		{
			return new LocalizedString("MRSCorruptDataInDiagnostics", "", false, false, Strings.ResourceManager, new object[]
			{
				element,
				value
			});
		}

		public static LocalizedString SetupProgressPublicFoldersEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressPublicFoldersEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NotificationEmailsParameterMissing
		{
			get
			{
				return new LocalizedString("NotificationEmailsParameterMissing", "Ex4EA731", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ClassificationRuleCollectionNonUniqueRuleIdViolation(string offendingRuleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionNonUniqueRuleIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				offendingRuleIds
			});
		}

		public static LocalizedString CasHealthWebAppNoCasArgumentError
		{
			get
			{
				return new LocalizedString("CasHealthWebAppNoCasArgumentError", "Ex3E2DA3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewAdminAuditLogSearch(string org)
		{
			return new LocalizedString("ConfirmationMessageNewAdminAuditLogSearch", "Ex7034EA", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ErrorOOBUpgradeInProgress(string fromservicePlan, string toserviceplan)
		{
			return new LocalizedString("ErrorOOBUpgradeInProgress", "Ex941ECA", false, true, Strings.ResourceManager, new object[]
			{
				fromservicePlan,
				toserviceplan
			});
		}

		public static LocalizedString SetupProgressCreateExchangeMimeTypes
		{
			get
			{
				return new LocalizedString("SetupProgressCreateExchangeMimeTypes", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ShouldContinueMoreMailboxesThanMaxSearch(int mailboxCount, uint maxNumber)
		{
			return new LocalizedString("ShouldContinueMoreMailboxesThanMaxSearch", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxCount,
				maxNumber
			});
		}

		public static LocalizedString ErrorCannotDisableRemotePowershelForLastDelegatingOrgAdmin(string id)
		{
			return new LocalizedString("ErrorCannotDisableRemotePowershelForLastDelegatingOrgAdmin", "ExC2E600", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ImplicitPartitionIdSupplied(string partitionId)
		{
			return new LocalizedString("ImplicitPartitionIdSupplied", "", false, false, Strings.ResourceManager, new object[]
			{
				partitionId
			});
		}

		public static LocalizedString AddResubmitRequestConfirmation(string startTime, string endTime, string destination)
		{
			return new LocalizedString("AddResubmitRequestConfirmation", "", false, false, Strings.ResourceManager, new object[]
			{
				startTime,
				endTime,
				destination
			});
		}

		public static LocalizedString ShouldContinueToExpandGroupsForHold
		{
			get
			{
				return new LocalizedString("ShouldContinueToExpandGroupsForHold", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RemoveADServerMetadataUsingDC(string dc)
		{
			return new LocalizedString("RemoveADServerMetadataUsingDC", "Ex8F8DD0", false, true, Strings.ResourceManager, new object[]
			{
				dc
			});
		}

		public static LocalizedString ConfirmationMessageSetEventLogLevel(string Identity, string Level)
		{
			return new LocalizedString("ConfirmationMessageSetEventLogLevel", "Ex804E13", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Level
			});
		}

		public static LocalizedString WarningDeprovisioningCoexistenceDomain(string domain)
		{
			return new LocalizedString("WarningDeprovisioningCoexistenceDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString HybridMailflowGetFfoDCPublicIPAddressesFailed
		{
			get
			{
				return new LocalizedString("HybridMailflowGetFfoDCPublicIPAddressesFailed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewEdgeSubscriptionWarnEdgeFQDNMustbeResolvable(string site, string edgeFQDN, string port)
		{
			return new LocalizedString("ConfirmationMessageNewEdgeSubscriptionWarnEdgeFQDNMustbeResolvable", "", false, false, Strings.ResourceManager, new object[]
			{
				site,
				edgeFQDN,
				port
			});
		}

		public static LocalizedString ConfirmationMessageRemoveEcpVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveEcpVirtualDirectory", "Ex7546A1", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageDisableHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageDisableHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSwitchMobileMailboxDefaultPolicy(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchMobileMailboxDefaultPolicy", "ExF89B9B", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorSharingPolicyNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorSharingPolicyNotUnique", "Ex77C41D", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorNotAuthorizedForParameter(string parameterName)
		{
			return new LocalizedString("ErrorNotAuthorizedForParameter", "", false, false, Strings.ResourceManager, new object[]
			{
				parameterName
			});
		}

		public static LocalizedString ConfirmationMessageNewCmdletExtensionAgent(string assembly, string classFactory)
		{
			return new LocalizedString("ConfirmationMessageNewCmdletExtensionAgent", "Ex1CC33A", false, true, Strings.ResourceManager, new object[]
			{
				assembly,
				classFactory
			});
		}

		public static LocalizedString ConfirmationMessageSetAutoAcceptMailboxSettings(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetAutoAcceptMailboxSettings", "Ex449F08", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableAddressListPaging(string org)
		{
			return new LocalizedString("ConfirmationMessageEnableAddressListPaging", "Ex79739C", false, true, Strings.ResourceManager, new object[]
			{
				org
			});
		}

		public static LocalizedString ExecutingScript(string script)
		{
			return new LocalizedString("ExecutingScript", "ExA63131", false, true, Strings.ResourceManager, new object[]
			{
				script
			});
		}

		public static LocalizedString MigrationAutoStopForInProgressOnly
		{
			get
			{
				return new LocalizedString("MigrationAutoStopForInProgressOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveMailUser(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveMailUser", "ExCDA1FB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorLogFolderPathNotAvailable
		{
			get
			{
				return new LocalizedString("ErrorLogFolderPathNotAvailable", "Ex2C512D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskClusteringShouldBeDisabledException(string serverName)
		{
			return new LocalizedString("DagTaskClusteringShouldBeDisabledException", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString ComponentEmpty(string component)
		{
			return new LocalizedString("ComponentEmpty", "Ex23081B", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString ErrorInvalidConfigScopeOnNonHosterRoleAssignment(string id)
		{
			return new LocalizedString("ErrorInvalidConfigScopeOnNonHosterRoleAssignment", "Ex9BDEDD", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString VerboseDeletePFTree(string id)
		{
			return new LocalizedString("VerboseDeletePFTree", "Ex64FCF0", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ErrorPublicFolderReferralHasWrittenToServer
		{
			get
			{
				return new LocalizedString("ErrorPublicFolderReferralHasWrittenToServer", "Ex18239B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressInstallingFreeBusyFolder
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingFreeBusyFolder", "Ex0D22FB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMigrationEndpoint(string endpointName)
		{
			return new LocalizedString("ConfirmationMessageNewMigrationEndpoint", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointName
			});
		}

		public static LocalizedString WarningMarkNewTemplatesAsDistributedForCreatingProtectionRules(string tpdName)
		{
			return new LocalizedString("WarningMarkNewTemplatesAsDistributedForCreatingProtectionRules", "Ex83CBEC", false, true, Strings.ResourceManager, new object[]
			{
				tpdName
			});
		}

		public static LocalizedString MigrationStartAfterAndAutoStartExclusive
		{
			get
			{
				return new LocalizedString("MigrationStartAfterAndAutoStartExclusive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetPswsVirtualDirectory(string name, string server)
		{
			return new LocalizedString("ConfirmationMessageSetPswsVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				name,
				server
			});
		}

		public static LocalizedString ErrorLogDirectoryNotExist(string directory)
		{
			return new LocalizedString("ErrorLogDirectoryNotExist", "Ex28331F", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		public static LocalizedString UninstallFfoWebServiceRoleDescription
		{
			get
			{
				return new LocalizedString("UninstallFfoWebServiceRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString LanguagePackDescription
		{
			get
			{
				return new LocalizedString("LanguagePackDescription", "Ex56AB4F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningTemplateNotModified(string identity)
		{
			return new LocalizedString("WarningTemplateNotModified", "ExAEAC51", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageSetFederationTrust2(string Identity, string Thumbprint)
		{
			return new LocalizedString("ConfirmationMessageSetFederationTrust2", "Ex0E373B", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Thumbprint
			});
		}

		public static LocalizedString InfoImportingTpdFromRmsOnlineCheckedNoTemplates
		{
			get
			{
				return new LocalizedString("InfoImportingTpdFromRmsOnlineCheckedNoTemplates", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSettingPassword(string id)
		{
			return new LocalizedString("VerboseSettingPassword", "ExB591A5", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationExportMailboxDiagnosticLogs
		{
			get
			{
				return new LocalizedString("ConfirmationExportMailboxDiagnosticLogs", "ExC31E43", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorModifyE12ServerNotAllowed
		{
			get
			{
				return new LocalizedString("ErrorModifyE12ServerNotAllowed", "Ex5F1D5D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRemoveMailboxWithJournalArchive
		{
			get
			{
				return new LocalizedString("ErrorRemoveMailboxWithJournalArchive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaAuthTypesSupported1(string method1)
		{
			return new LocalizedString("CasHealthOwaAuthTypesSupported1", "Ex91B5C7", false, true, Strings.ResourceManager, new object[]
			{
				method1
			});
		}

		public static LocalizedString InvalidProductKey
		{
			get
			{
				return new LocalizedString("InvalidProductKey", "Ex8567C0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CompletedMoveHistoryEntry(string completionTimestamp, string dbName, string mailboxSize, string moveDuration)
		{
			return new LocalizedString("CompletedMoveHistoryEntry", "ExD5EFF9", false, true, Strings.ResourceManager, new object[]
			{
				completionTimestamp,
				dbName,
				mailboxSize,
				moveDuration
			});
		}

		public static LocalizedString CannotLocateCurrentCertificate
		{
			get
			{
				return new LocalizedString("CannotLocateCurrentCertificate", "Ex3554B1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagNetworkHasNoNicForNode(string logicalNetName, string nodeName)
		{
			return new LocalizedString("DagNetworkHasNoNicForNode", "", false, false, Strings.ResourceManager, new object[]
			{
				logicalNetName,
				nodeName
			});
		}

		public static LocalizedString MtrtRouteMessageUsingConnector
		{
			get
			{
				return new LocalizedString("MtrtRouteMessageUsingConnector", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressInstallingContentIndexingMSI
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingContentIndexingMSI", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationBatchIsCorrupt(string jobName)
		{
			return new LocalizedString("MigrationBatchIsCorrupt", "", false, false, Strings.ResourceManager, new object[]
			{
				jobName
			});
		}

		public static LocalizedString ErrorSettingRealmOnFirstOrg
		{
			get
			{
				return new LocalizedString("ErrorSettingRealmOnFirstOrg", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationProcessInputLog(string filename)
		{
			return new LocalizedString("ConfirmationProcessInputLog", "ExEDD738", false, true, Strings.ResourceManager, new object[]
			{
				filename
			});
		}

		public static LocalizedString MailboxAssistantsServiceCouldNotBeStarted(string serverName, string errorMessage)
		{
			return new LocalizedString("MailboxAssistantsServiceCouldNotBeStarted", "ExD8D14F", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		public static LocalizedString ConfirmationMessageSetExchangeRpcClientAccessServer(string server)
		{
			return new LocalizedString("ConfirmationMessageSetExchangeRpcClientAccessServer", "Ex626DD1", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString FirstRoleAssignmentPolicyMustBeDefault
		{
			get
			{
				return new LocalizedString("FirstRoleAssignmentPolicyMustBeDefault", "ExCFAB8D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDefaultOABWebDistributionEnabled(string DN)
		{
			return new LocalizedString("VerboseDefaultOABWebDistributionEnabled", "Ex1C41D5", false, true, Strings.ResourceManager, new object[]
			{
				DN
			});
		}

		public static LocalizedString SetupProgressStoppingW3SVCService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingW3SVCService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DistributionGroup
		{
			get
			{
				return new LocalizedString("DistributionGroup", "ExB1E4B5", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SmtpAddressMissingForAutocopy(string userName)
		{
			return new LocalizedString("SmtpAddressMissingForAutocopy", "Ex577128", false, true, Strings.ResourceManager, new object[]
			{
				userName
			});
		}

		public static LocalizedString AmMoveRpcCompletedSourceServer(string sourceServer, string targetServer)
		{
			return new LocalizedString("AmMoveRpcCompletedSourceServer", "ExA94BD8", false, true, Strings.ResourceManager, new object[]
			{
				sourceServer,
				targetServer
			});
		}

		public static LocalizedString CannotEditManuallyModifiedRule
		{
			get
			{
				return new LocalizedString("CannotEditManuallyModifiedRule", "Ex98B092", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString EnabledEhfConnectorAlreadyExists(string enabledConnectorDN)
		{
			return new LocalizedString("EnabledEhfConnectorAlreadyExists", "", false, false, Strings.ResourceManager, new object[]
			{
				enabledConnectorDN
			});
		}

		public static LocalizedString InfoCouldNotFindMAPITLHInAdminGroup(string ag)
		{
			return new LocalizedString("InfoCouldNotFindMAPITLHInAdminGroup", "ExD78F0A", false, true, Strings.ResourceManager, new object[]
			{
				ag
			});
		}

		public static LocalizedString ExchangeUpgradeBucketSourceIncludedInTarget(string source, string target)
		{
			return new LocalizedString("ExchangeUpgradeBucketSourceIncludedInTarget", "", false, false, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString ErrorPublicFolderNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorPublicFolderNotFound", "Ex573FB5", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ConfirmationMessageClearTextMessagingAccount(string Identity)
		{
			return new LocalizedString("ConfirmationMessageClearTextMessagingAccount", "ExF57D8F", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MalboxFolderRightsDeleteAllItems
		{
			get
			{
				return new LocalizedString("MalboxFolderRightsDeleteAllItems", "Ex375566", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProtocolSettings
		{
			get
			{
				return new LocalizedString("ProtocolSettings", "Ex9AAB37", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestOrganizationRelationshipWarning
		{
			get
			{
				return new LocalizedString("TestOrganizationRelationshipWarning", "Ex31DD6C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRemoveAssociatedThrottlingPolicy(string policyName)
		{
			return new LocalizedString("ErrorCannotRemoveAssociatedThrottlingPolicy", "ExAA682A", false, true, Strings.ResourceManager, new object[]
			{
				policyName
			});
		}

		public static LocalizedString WarningReportNotAvailable
		{
			get
			{
				return new LocalizedString("WarningReportNotAvailable", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionHeader
		{
			get
			{
				return new LocalizedString("ExceptionHeader", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSyncAccountsTimeBeforeInactive
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsTimeBeforeInactive", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchTaskBaseError
		{
			get
			{
				return new LocalizedString("TestSearchTaskBaseError", "Ex7AAB49", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewMalwareFilterPolicy(string name)
		{
			return new LocalizedString("ConfirmationMessageNewMalwareFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString OrganizationDataValidationException(string validationError)
		{
			return new LocalizedString("OrganizationDataValidationException", "ExB1F02C", false, true, Strings.ResourceManager, new object[]
			{
				validationError
			});
		}

		public static LocalizedString NoNameArgument
		{
			get
			{
				return new LocalizedString("NoNameArgument", "Ex6FE5D3", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeSettingsBadFormatOfConfigPair(string pair)
		{
			return new LocalizedString("ExchangeSettingsBadFormatOfConfigPair", "", false, false, Strings.ResourceManager, new object[]
			{
				pair
			});
		}

		public static LocalizedString ErrorHttpsBindingNotExist(string configFile)
		{
			return new LocalizedString("ErrorHttpsBindingNotExist", "Ex2A3961", false, true, Strings.ResourceManager, new object[]
			{
				configFile
			});
		}

		public static LocalizedString CannotLocateFederationInfo
		{
			get
			{
				return new LocalizedString("CannotLocateFederationInfo", "ExC22B99", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString GetFederationInformationProgress
		{
			get
			{
				return new LocalizedString("GetFederationInformationProgress", "Ex9FFFE7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressInstallingMsFteMSI
		{
			get
			{
				return new LocalizedString("SetupProgressInstallingMsFteMSI", "Ex1C73E6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionPerfCounterLodctrFailed(int errorCode)
		{
			return new LocalizedString("ExceptionPerfCounterLodctrFailed", "Ex1F286C", false, true, Strings.ResourceManager, new object[]
			{
				errorCode
			});
		}

		public static LocalizedString ConfirmationMessageSetAccountPartition(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetAccountPartition", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmSearchMailboxDeleteContent(string task)
		{
			return new LocalizedString("ConfirmSearchMailboxDeleteContent", "ExD18FEF", false, true, Strings.ResourceManager, new object[]
			{
				task
			});
		}

		public static LocalizedString ErrorRollbackGlsExpected(string identity)
		{
			return new LocalizedString("ErrorRollbackGlsExpected", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningSetMailboxLitigationOwnerSMTP(string owner)
		{
			return new LocalizedString("WarningSetMailboxLitigationOwnerSMTP", "", false, false, Strings.ResourceManager, new object[]
			{
				owner
			});
		}

		public static LocalizedString ActiveDirectoryConnectivityTestFailed(string operation, string error, string exception)
		{
			return new LocalizedString("ActiveDirectoryConnectivityTestFailed", "", false, false, Strings.ResourceManager, new object[]
			{
				operation,
				error,
				exception
			});
		}

		public static LocalizedString ConfirmationMessageSetMailboxWithWindowsLiveID(string Identity, string liveID)
		{
			return new LocalizedString("ConfirmationMessageSetMailboxWithWindowsLiveID", "ExDFAC9A", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				liveID
			});
		}

		public static LocalizedString ErrorSharedConfigurationNotFound(string programid, string offerid, string version)
		{
			return new LocalizedString("ErrorSharedConfigurationNotFound", "Ex42D193", false, true, Strings.ResourceManager, new object[]
			{
				programid,
				offerid,
				version
			});
		}

		public static LocalizedString ErrorCannotSpecifyAccountNamespaceWithoutTrust
		{
			get
			{
				return new LocalizedString("ErrorCannotSpecifyAccountNamespaceWithoutTrust", "ExA52966", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ProgressEvictNode(string node)
		{
			return new LocalizedString("ProgressEvictNode", "Ex42D070", false, true, Strings.ResourceManager, new object[]
			{
				node
			});
		}

		public static LocalizedString DatabaseCopyInitializingCheck(string configType, string sgName, string checkingState, string serverName)
		{
			return new LocalizedString("DatabaseCopyInitializingCheck", "ExF9F57E", false, true, Strings.ResourceManager, new object[]
			{
				configType,
				sgName,
				checkingState,
				serverName
			});
		}

		public static LocalizedString ExchangeInteropUSGDescription
		{
			get
			{
				return new LocalizedString("ExchangeInteropUSGDescription", "Ex4960C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RmsSharedIdentityUserNotFound(string userCn)
		{
			return new LocalizedString("RmsSharedIdentityUserNotFound", "ExF543CA", false, true, Strings.ResourceManager, new object[]
			{
				userCn
			});
		}

		public static LocalizedString InterceptorErrorConditionConjunctionNotSupported(string operand)
		{
			return new LocalizedString("InterceptorErrorConditionConjunctionNotSupported", "", false, false, Strings.ResourceManager, new object[]
			{
				operand
			});
		}

		public static LocalizedString MtrtMessageDLPRule(string ruleName, string id, string policyName, string dlpid)
		{
			return new LocalizedString("MtrtMessageDLPRule", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleName,
				id,
				policyName,
				dlpid
			});
		}

		public static LocalizedString ADAttributeCustomAttribute9
		{
			get
			{
				return new LocalizedString("ADAttributeCustomAttribute9", "Ex576906", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSendTextMessagingVerificationCode(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSendTextMessagingVerificationCode", "ExD34003", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorNoAuditLogForNonUserMailbox(string user)
		{
			return new LocalizedString("ErrorNoAuditLogForNonUserMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString PromptToRemoveLogEventAction
		{
			get
			{
				return new LocalizedString("PromptToRemoveLogEventAction", "Ex3A2990", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRequiredMigrationFeatureNotEnabled(MigrationFeature feature)
		{
			return new LocalizedString("ErrorRequiredMigrationFeatureNotEnabled", "", false, false, Strings.ResourceManager, new object[]
			{
				feature
			});
		}

		public static LocalizedString FoundDefaultSharingPolicy(string name, string organization)
		{
			return new LocalizedString("FoundDefaultSharingPolicy", "Ex105B97", false, true, Strings.ResourceManager, new object[]
			{
				name,
				organization
			});
		}

		public static LocalizedString ConfirmationMessageNewMailFlowPartnerConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewMailFlowPartnerConfig", "Ex37D535", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CmdletValidatorParseErrors(string parseErrors)
		{
			return new LocalizedString("CmdletValidatorParseErrors", "", false, false, Strings.ResourceManager, new object[]
			{
				parseErrors
			});
		}

		public static LocalizedString ErrorDatabaseNotUnique(string idStringValue)
		{
			return new LocalizedString("ErrorDatabaseNotUnique", "ExFB6365", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString ErrorAlsFailedToProcessRequest
		{
			get
			{
				return new LocalizedString("ErrorAlsFailedToProcessRequest", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangeStreamingOpticsDisplayName
		{
			get
			{
				return new LocalizedString("ExchangeStreamingOpticsDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveAddressrewriteentry(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveAddressrewriteentry", "Ex24AABB", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString RemoveContentIndexTask
		{
			get
			{
				return new LocalizedString("RemoveContentIndexTask", "ExED254D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl
		{
			get
			{
				return new LocalizedString("ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StartingToRunChecks(string serverName)
		{
			return new LocalizedString("StartingToRunChecks", "Ex33C489", false, true, Strings.ResourceManager, new object[]
			{
				serverName
			});
		}

		public static LocalizedString SetupComponentMidFileCopyClientAccess
		{
			get
			{
				return new LocalizedString("SetupComponentMidFileCopyClientAccess", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorEdbFileLocationNotUniqueUnderSameDAG(string filePath)
		{
			return new LocalizedString("ErrorEdbFileLocationNotUniqueUnderSameDAG", "ExD51FC7", false, true, Strings.ResourceManager, new object[]
			{
				filePath
			});
		}

		public static LocalizedString UmLanguagePackPackagePathNotSpecified
		{
			get
			{
				return new LocalizedString("UmLanguagePackPackagePathNotSpecified", "ExBDA969", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnknownEntityLinkedToTenantInReportingDB(string tenantName, string managedEntitiyFullName)
		{
			return new LocalizedString("UnknownEntityLinkedToTenantInReportingDB", "Ex245D60", false, true, Strings.ResourceManager, new object[]
			{
				tenantName,
				managedEntitiyFullName
			});
		}

		public static LocalizedString ErrorAutoDiscoverEndpointNotFound(string domain)
		{
			return new LocalizedString("ErrorAutoDiscoverEndpointNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ErrorOuOutOfOrganization(string ou)
		{
			return new LocalizedString("ErrorOuOutOfOrganization", "Ex87C44E", false, true, Strings.ResourceManager, new object[]
			{
				ou
			});
		}

		public static LocalizedString ConfirmationMessageSetHostedEncryptionVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedEncryptionVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorLogFileCannotOpen(string file)
		{
			return new LocalizedString("ErrorLogFileCannotOpen", "ExEE440E", false, true, Strings.ResourceManager, new object[]
			{
				file
			});
		}

		public static LocalizedString ErrorCouldNotFindMoveRequest(string identity)
		{
			return new LocalizedString("ErrorCouldNotFindMoveRequest", "Ex1CC5F9", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString SetupProgressStartingAddressBookService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingAddressBookService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallComplianceAuditServiceTask
		{
			get
			{
				return new LocalizedString("InstallComplianceAuditServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFreeBusyFolderUnableToCheckDatabase(string database)
		{
			return new LocalizedString("InstallFreeBusyFolderUnableToCheckDatabase", "ExBC2406", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString SimilarScopeFound(string name)
		{
			return new LocalizedString("SimilarScopeFound", "Ex619010", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString HeaderNameNotAllowed(string headerName)
		{
			return new LocalizedString("HeaderNameNotAllowed", "Ex2D5BD3", false, true, Strings.ResourceManager, new object[]
			{
				headerName
			});
		}

		public static LocalizedString ConfirmationMessageNewAcceptedDomain(string Name, string DomainName)
		{
			return new LocalizedString("ConfirmationMessageNewAcceptedDomain", "ExAAC6F8", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				DomainName
			});
		}

		public static LocalizedString InternalTransportCertificateUpdatedOnEdge
		{
			get
			{
				return new LocalizedString("InternalTransportCertificateUpdatedOnEdge", "Ex27671D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive
		{
			get
			{
				return new LocalizedString("ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive", "ExD5041A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSetGroupMailboxAddMembersPrivate
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxAddMembersPrivate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxReplicationServiceNotInstalled
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceNotInstalled", "Ex67F0D0", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TooManyServicesContainers(string forest)
		{
			return new LocalizedString("TooManyServicesContainers", "", false, false, Strings.ResourceManager, new object[]
			{
				forest
			});
		}

		public static LocalizedString ConfirmationMessageNewReportingVirtualDirectory
		{
			get
			{
				return new LocalizedString("ConfirmationMessageNewReportingVirtualDirectory", "ExAAF37E", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime
		{
			get
			{
				return new LocalizedString("WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TowsMissingAutoDiscoverElement
		{
			get
			{
				return new LocalizedString("TowsMissingAutoDiscoverElement", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AuditLogSearchStartDateIsLaterThanEndDate(string startDate, string endDate)
		{
			return new LocalizedString("AuditLogSearchStartDateIsLaterThanEndDate", "", false, false, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		public static LocalizedString SetupProgressHideAdminAccessWarning
		{
			get
			{
				return new LocalizedString("SetupProgressHideAdminAccessWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorUserNotFoundInPermissionEntry(string userId)
		{
			return new LocalizedString("ErrorUserNotFoundInPermissionEntry", "", false, false, Strings.ResourceManager, new object[]
			{
				userId
			});
		}

		public static LocalizedString ConfirmationMessageSetMigrationConfig(string tenant)
		{
			return new LocalizedString("ConfirmationMessageSetMigrationConfig", "", false, false, Strings.ResourceManager, new object[]
			{
				tenant
			});
		}

		public static LocalizedString ExchangeCertificateUpdatedForUMCR(string server)
		{
			return new LocalizedString("ExchangeCertificateUpdatedForUMCR", "", false, false, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString SetupProgressStartEdgeTransportService
		{
			get
			{
				return new LocalizedString("SetupProgressStartEdgeTransportService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WipePendingNote
		{
			get
			{
				return new LocalizedString("WipePendingNote", "Ex4B1DEA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ComplianceAuditServiceNotInstalled
		{
			get
			{
				return new LocalizedString("ComplianceAuditServiceNotInstalled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MissingDataClassificationsName
		{
			get
			{
				return new LocalizedString("MissingDataClassificationsName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageMoveAddressList(string Identity, string Target)
		{
			return new LocalizedString("ConfirmationMessageMoveAddressList", "Ex44890F", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Target
			});
		}

		public static LocalizedString MoveNotSuspended(string identity)
		{
			return new LocalizedString("MoveNotSuspended", "Ex717378", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageNewExchangeUpgradeBucket(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewExchangeUpgradeBucket", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ConfirmationMessageRemoveExchangeRpcClientAccess(string server)
		{
			return new LocalizedString("ConfirmationMessageRemoveExchangeRpcClientAccess", "Ex4A2C7D", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorUnknown(string memberName)
		{
			return new LocalizedString("ErrorUnknown", "Ex48D7EB", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString UninstallMailboxTransportSubmissionServiceTask
		{
			get
			{
				return new LocalizedString("UninstallMailboxTransportSubmissionServiceTask", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OpenSCMFailed
		{
			get
			{
				return new LocalizedString("OpenSCMFailed", "ExF54DCA", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FoundAppId(string appId)
		{
			return new LocalizedString("FoundAppId", "Ex861DC5", false, true, Strings.ResourceManager, new object[]
			{
				appId
			});
		}

		public static LocalizedString SetupProgressStoppingServices
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingServices", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetHostedOutboundSpamFilterPolicy(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedOutboundSpamFilterPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString FailedToDeleteSystemMailbox(string id, string error)
		{
			return new LocalizedString("FailedToDeleteSystemMailbox", "Ex898CF0", false, true, Strings.ResourceManager, new object[]
			{
				id,
				error
			});
		}

		public static LocalizedString StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting
		{
			get
			{
				return new LocalizedString("StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DagTaskStoreMustBeRunningOnMachineException(string machineName)
		{
			return new LocalizedString("DagTaskStoreMustBeRunningOnMachineException", "", false, false, Strings.ResourceManager, new object[]
			{
				machineName
			});
		}

		public static LocalizedString DatabaseChecksWarning
		{
			get
			{
				return new LocalizedString("DatabaseChecksWarning", "Ex930F9B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressSyncAccountsSyncNowEnabled
		{
			get
			{
				return new LocalizedString("SetupProgressSyncAccountsSyncNowEnabled", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotResetDefaultOAB
		{
			get
			{
				return new LocalizedString("CannotResetDefaultOAB", "Ex67BCA7", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidAsyncNotificationProcessType(string processType)
		{
			return new LocalizedString("ErrorInvalidAsyncNotificationProcessType", "", false, false, Strings.ResourceManager, new object[]
			{
				processType
			});
		}

		public static LocalizedString FfoPrimingServiceDescription
		{
			get
			{
				return new LocalizedString("FfoPrimingServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString messageAutodiscoverTaskException(string field, string autodiscoverData)
		{
			return new LocalizedString("messageAutodiscoverTaskException", "", false, false, Strings.ResourceManager, new object[]
			{
				field,
				autodiscoverData
			});
		}

		public static LocalizedString ComAdminOtherOwnerException(string component)
		{
			return new LocalizedString("ComAdminOtherOwnerException", "Ex25C85B", false, true, Strings.ResourceManager, new object[]
			{
				component
			});
		}

		public static LocalizedString TargetSharingEprDoesNotMatchAnyExternalURI(string remoteTargetSharingEpr)
		{
			return new LocalizedString("TargetSharingEprDoesNotMatchAnyExternalURI", "ExD122CB", false, true, Strings.ResourceManager, new object[]
			{
				remoteTargetSharingEpr
			});
		}

		public static LocalizedString RoleLimitedDetails
		{
			get
			{
				return new LocalizedString("RoleLimitedDetails", "ExB8D3C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExceptionVirtualServerNotExists
		{
			get
			{
				return new LocalizedString("ExceptionVirtualServerNotExists", "Ex40B488", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotRetargetToDifferentVersionServerThanOriginal(string newServerVersion, string oldServerVersion)
		{
			return new LocalizedString("ErrorCannotRetargetToDifferentVersionServerThanOriginal", "", false, false, Strings.ResourceManager, new object[]
			{
				newServerVersion,
				oldServerVersion
			});
		}

		public static LocalizedString AutodiscoverUsingUrl(string uri)
		{
			return new LocalizedString("AutodiscoverUsingUrl", "Ex4C978D", false, true, Strings.ResourceManager, new object[]
			{
				uri
			});
		}

		public static LocalizedString ConfirmationMessageUpdateRoleGroupMember(string Identity, string Members)
		{
			return new LocalizedString("ConfirmationMessageUpdateRoleGroupMember", "ExDB5EE5", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Members
			});
		}

		public static LocalizedString ProgressActivityCreateAppId
		{
			get
			{
				return new LocalizedString("ProgressActivityCreateAppId", "Ex07AC85", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ExchangePartnerDoesntOwnDomain(string smtpDomain)
		{
			return new LocalizedString("ExchangePartnerDoesntOwnDomain", "Ex18B630", false, true, Strings.ResourceManager, new object[]
			{
				smtpDomain
			});
		}

		public static LocalizedString MapiTransactionResultCaseNotHandled(MapiTransactionResultEnum result)
		{
			return new LocalizedString("MapiTransactionResultCaseNotHandled", "ExA38177", false, true, Strings.ResourceManager, new object[]
			{
				result
			});
		}

		public static LocalizedString ErrorMultiReferenceParameter(string parameters, string values)
		{
			return new LocalizedString("ErrorMultiReferenceParameter", "Ex24E7C5", false, true, Strings.ResourceManager, new object[]
			{
				parameters,
				values
			});
		}

		public static LocalizedString OwaMetabaseSetPropertiesFailure
		{
			get
			{
				return new LocalizedString("OwaMetabaseSetPropertiesFailure", "Ex6063D9", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorSourceFileNotFound(string serverName, string fileName)
		{
			return new LocalizedString("ErrorSourceFileNotFound", "ExFEA531", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				fileName
			});
		}

		public static LocalizedString MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty
		{
			get
			{
				return new LocalizedString("MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TokenRequestFailed
		{
			get
			{
				return new LocalizedString("TokenRequestFailed", "ExFB65C6", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OneOrMoreTasksFailed
		{
			get
			{
				return new LocalizedString("OneOrMoreTasksFailed", "Ex3B5982", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageStartDatabaseAvailabilityGroupServer(string Identity, string server)
		{
			return new LocalizedString("ConfirmationMessageStartDatabaseAvailabilityGroupServer", "ExE438DD", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				server
			});
		}

		public static LocalizedString ConfirmationMessageAuthEffectiveDateNotReached(string thumbprint)
		{
			return new LocalizedString("ConfirmationMessageAuthEffectiveDateNotReached", "", false, false, Strings.ResourceManager, new object[]
			{
				thumbprint
			});
		}

		public static LocalizedString SkipReadEmptyTemplateGuid(string template)
		{
			return new LocalizedString("SkipReadEmptyTemplateGuid", "Ex56A875", false, true, Strings.ResourceManager, new object[]
			{
				template
			});
		}

		public static LocalizedString E4eLicensingIsDisabledSetRule
		{
			get
			{
				return new LocalizedString("E4eLicensingIsDisabledSetRule", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CrossValidationAlgorithmError(string mailbox)
		{
			return new LocalizedString("CrossValidationAlgorithmError", "Ex73EF09", false, true, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString DirectoryDoesNotExist(string directory)
		{
			return new LocalizedString("DirectoryDoesNotExist", "ExA676EC", false, true, Strings.ResourceManager, new object[]
			{
				directory
			});
		}

		public static LocalizedString ConfirmationMessageNewLinkedUser(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewLinkedUser", "Ex28CACB", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString DagTaskServerMailboxServerAlsoServesAsFswNodeException(string mailboxServer)
		{
			return new LocalizedString("DagTaskServerMailboxServerAlsoServesAsFswNodeException", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxServer
			});
		}

		public static LocalizedString ErrorCouldNotFindIndexEntriesForRequest(string name)
		{
			return new LocalizedString("ErrorCouldNotFindIndexEntriesForRequest", "ExB985EF", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString RestoreNeedsAlternateWitnessServer(string dagName)
		{
			return new LocalizedString("RestoreNeedsAlternateWitnessServer", "", false, false, Strings.ResourceManager, new object[]
			{
				dagName
			});
		}

		public static LocalizedString ValueIsEmptyException(string key)
		{
			return new LocalizedString("ValueIsEmptyException", "ExD19867", false, true, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString ErrorCheckingTPRListener(string machineName, string error)
		{
			return new LocalizedString("ErrorCheckingTPRListener", "ExC0E172", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString ConfirmationDisableJournalArchiving
		{
			get
			{
				return new LocalizedString("ConfirmationDisableJournalArchiving", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString messageMissingParameterException(string parameter)
		{
			return new LocalizedString("messageMissingParameterException", "", false, false, Strings.ResourceManager, new object[]
			{
				parameter
			});
		}

		public static LocalizedString ErrorTooManyDatabaseCopies(string database, int expectedCount)
		{
			return new LocalizedString("ErrorTooManyDatabaseCopies", "Ex2310A0", false, true, Strings.ResourceManager, new object[]
			{
				database,
				expectedCount
			});
		}

		public static LocalizedString SetupComponentPostSetupMonitoringCorrelation
		{
			get
			{
				return new LocalizedString("SetupComponentPostSetupMonitoringCorrelation", "ExCAEDDB", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailboxReplicationServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailboxReplicationServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewFederationTrustWithMetadata(string Name, string partnerSTS, string Thumbprint, string metadataUrl)
		{
			return new LocalizedString("ConfirmationMessageNewFederationTrustWithMetadata", "ExFBDBD5", false, true, Strings.ResourceManager, new object[]
			{
				Name,
				partnerSTS,
				Thumbprint,
				metadataUrl
			});
		}

		public static LocalizedString OwaPropertySetableOnlyOnOwaVirtualDirectory(string propertyName)
		{
			return new LocalizedString("OwaPropertySetableOnlyOnOwaVirtualDirectory", "ExADEAE3", false, true, Strings.ResourceManager, new object[]
			{
				propertyName
			});
		}

		public static LocalizedString WillNotRemoveFromLocalAdministratorGroup(string server, string user)
		{
			return new LocalizedString("WillNotRemoveFromLocalAdministratorGroup", "ExA76C20", false, true, Strings.ResourceManager, new object[]
			{
				server,
				user
			});
		}

		public static LocalizedString ConfirmationMessageTestMigrationServerAvailability
		{
			get
			{
				return new LocalizedString("ConfirmationMessageTestMigrationServerAvailability", "Ex7CB495", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerSiteInformationAlreadySet(string siteName)
		{
			return new LocalizedString("ServerSiteInformationAlreadySet", "", false, false, Strings.ResourceManager, new object[]
			{
				siteName
			});
		}

		public static LocalizedString InvalidAvailabilityAccessMethod
		{
			get
			{
				return new LocalizedString("InvalidAvailabilityAccessMethod", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageUpdateAddressList(string Identity)
		{
			return new LocalizedString("ConfirmationMessageUpdateAddressList", "Ex38C202", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString CannotManipulateAlternateServiceAccountsRemotely(string currentFqdn, string targetFqdn)
		{
			return new LocalizedString("CannotManipulateAlternateServiceAccountsRemotely", "Ex4A3632", false, true, Strings.ResourceManager, new object[]
			{
				currentFqdn,
				targetFqdn
			});
		}

		public static LocalizedString ErrorPSTFileNameIncorrect(string path)
		{
			return new LocalizedString("ErrorPSTFileNameIncorrect", "Ex11DAC9", false, true, Strings.ResourceManager, new object[]
			{
				path
			});
		}

		public static LocalizedString MigrationPleaseUseStartForReenablingIncremental
		{
			get
			{
				return new LocalizedString("MigrationPleaseUseStartForReenablingIncremental", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorMailTipRemoveDefaultAndTranslationsExist
		{
			get
			{
				return new LocalizedString("ErrorMailTipRemoveDefaultAndTranslationsExist", "Ex8E8937", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TestSearchOperationAborted
		{
			get
			{
				return new LocalizedString("TestSearchOperationAborted", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewRpcClientAccess(string Name)
		{
			return new LocalizedString("ConfirmationMessageNewRpcClientAccess", "ExDDEBC4", false, true, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString ComplianceServiceDisplayName
		{
			get
			{
				return new LocalizedString("ComplianceServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseSyncTaskPopulateCookie(int version, Guid dc, int lowWmsC, long lowWM, int highWmsC, long highWM, string pageCookie)
		{
			return new LocalizedString("VerboseSyncTaskPopulateCookie", "Ex1324DA", false, true, Strings.ResourceManager, new object[]
			{
				version,
				dc,
				lowWmsC,
				lowWM,
				highWmsC,
				highWM,
				pageCookie
			});
		}

		public static LocalizedString ErrorRecipientNotFound(object idValue)
		{
			return new LocalizedString("ErrorRecipientNotFound", "Ex94914C", false, true, Strings.ResourceManager, new object[]
			{
				idValue
			});
		}

		public static LocalizedString ErrorReadingAMRole(string machineName, string error)
		{
			return new LocalizedString("ErrorReadingAMRole", "Ex0AA439", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString ErrorDuplicateCertificateSubject(string subject)
		{
			return new LocalizedString("ErrorDuplicateCertificateSubject", "ExEAA8B9", false, true, Strings.ResourceManager, new object[]
			{
				subject
			});
		}

		public static LocalizedString ErrorDefaultRoleAssignmentPolicyNotUnique
		{
			get
			{
				return new LocalizedString("ErrorDefaultRoleAssignmentPolicyNotUnique", "ExB94B0B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningInvalidRoleAssignmentNotCloned(string id, string deprecatedRole)
		{
			return new LocalizedString("WarningInvalidRoleAssignmentNotCloned", "Ex028515", false, true, Strings.ResourceManager, new object[]
			{
				id,
				deprecatedRole
			});
		}

		public static LocalizedString SetupProgressWsbPlugin
		{
			get
			{
				return new LocalizedString("SetupProgressWsbPlugin", "Ex7F0B56", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRecipientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageRemoveRecipientPermission", "Ex191C71", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString MapiTransactionErrorMsgTimeout(double timeoutInSeconds)
		{
			return new LocalizedString("MapiTransactionErrorMsgTimeout", "Ex08B92C", false, true, Strings.ResourceManager, new object[]
			{
				timeoutInSeconds
			});
		}

		public static LocalizedString ConfirmationMessageNewFolderMoveRequest(string name)
		{
			return new LocalizedString("ConfirmationMessageNewFolderMoveRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString InfoProcessAddMember(string server)
		{
			return new LocalizedString("InfoProcessAddMember", "ExB4F0D8", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString UsageTypeCustom
		{
			get
			{
				return new LocalizedString("UsageTypeCustom", "Ex41BE81", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorInvalidNetId(string memberName)
		{
			return new LocalizedString("ErrorInvalidNetId", "Ex32664B", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString InvalidDomain
		{
			get
			{
				return new LocalizedString("InvalidDomain", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetTransportProcessingConfig
		{
			get
			{
				return new LocalizedString("ConfirmationMessageSetTransportProcessingConfig", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRoleEntryExistOnChildren(string roleId, string entryName)
		{
			return new LocalizedString("ErrorRoleEntryExistOnChildren", "Ex3720B0", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				entryName
			});
		}

		public static LocalizedString ErrorDlpInconsistentStateAndEnabledParameters(string stateParameterName, string enabledParameterName)
		{
			return new LocalizedString("ErrorDlpInconsistentStateAndEnabledParameters", "", false, false, Strings.ResourceManager, new object[]
			{
				stateParameterName,
				enabledParameterName
			});
		}

		public static LocalizedString ErrorMailboxDatabaseNotUnique(string identity)
		{
			return new LocalizedString("ErrorMailboxDatabaseNotUnique", "Ex2AD423", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString RecipientTenantNotFound(string syncobject)
		{
			return new LocalizedString("RecipientTenantNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				syncobject
			});
		}

		public static LocalizedString MsiProgressStatus
		{
			get
			{
				return new LocalizedString("MsiProgressStatus", "Ex1A67DC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorNetIDValuesDoNotMatch(string netId1, string netId2)
		{
			return new LocalizedString("ErrorNetIDValuesDoNotMatch", "Ex2D7C7A", false, true, Strings.ResourceManager, new object[]
			{
				netId1,
				netId2
			});
		}

		public static LocalizedString IisTasksValidationInvalidUnicodeException(string propertyName, string value, char badChar, int unicodeValue, int charIndex)
		{
			return new LocalizedString("IisTasksValidationInvalidUnicodeException", "Ex54BE7B", false, true, Strings.ResourceManager, new object[]
			{
				propertyName,
				value,
				badChar,
				unicodeValue,
				charIndex
			});
		}

		public static LocalizedString InterceptorErrorCustomResponseCodeMustMatchRejectAction(int value, string action, int high)
		{
			return new LocalizedString("InterceptorErrorCustomResponseCodeMustMatchRejectAction", "", false, false, Strings.ResourceManager, new object[]
			{
				value,
				action,
				high
			});
		}

		public static LocalizedString ConfirmationMessageAddPublicFolderClientPermission(string Identity, string User, string AccessRights)
		{
			return new LocalizedString("ConfirmationMessageAddPublicFolderClientPermission", "ExF1FD19", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				User,
				AccessRights
			});
		}

		public static LocalizedString VerboseClearAllPreferredDC
		{
			get
			{
				return new LocalizedString("VerboseClearAllPreferredDC", "Ex77C6C1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SelectedConnectionType(string type)
		{
			return new LocalizedString("SelectedConnectionType", "Ex5CEAA8", false, true, Strings.ResourceManager, new object[]
			{
				type
			});
		}

		public static LocalizedString FormsAuthenticationDeleteMarksIfUnusedUnknownErrorException(string metabasePath, int propertyID)
		{
			return new LocalizedString("FormsAuthenticationDeleteMarksIfUnusedUnknownErrorException", "ExE89297", false, true, Strings.ResourceManager, new object[]
			{
				metabasePath,
				propertyID
			});
		}

		public static LocalizedString CannotMoveE15OrLaterOab
		{
			get
			{
				return new LocalizedString("CannotMoveE15OrLaterOab", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString RpcNotRegistered(string server)
		{
			return new LocalizedString("RpcNotRegistered", "Ex8D5D8A", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ExportDestinationAccessDenied(string name)
		{
			return new LocalizedString("ExportDestinationAccessDenied", "Ex60A182", false, true, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ErrorCannotFindComputerObjectByServerFqdnNeedManualAdd(string fqdn)
		{
			return new LocalizedString("ErrorCannotFindComputerObjectByServerFqdnNeedManualAdd", "Ex64127A", false, true, Strings.ResourceManager, new object[]
			{
				fqdn
			});
		}

		public static LocalizedString RequestCertificateFileInvalid(string message)
		{
			return new LocalizedString("RequestCertificateFileInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageRemoveSendConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveSendConnector", "Ex2715E9", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorRusServiceUnavaliable(string server, string details)
		{
			return new LocalizedString("ErrorRusServiceUnavaliable", "ExDD6292", false, true, Strings.ResourceManager, new object[]
			{
				server,
				details
			});
		}

		public static LocalizedString ErrorEdbFilePathMissed(string database)
		{
			return new LocalizedString("ErrorEdbFilePathMissed", "Ex37BD57", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ErrorMailboxAuditLogSearchStartDateIsLaterThanEndDate(string startDate, string endDate)
		{
			return new LocalizedString("ErrorMailboxAuditLogSearchStartDateIsLaterThanEndDate", "ExB2607D", false, true, Strings.ResourceManager, new object[]
			{
				startDate,
				endDate
			});
		}

		public static LocalizedString MapiTransactionServerWithoutMdbs(string targetServer)
		{
			return new LocalizedString("MapiTransactionServerWithoutMdbs", "ExC952BE", false, true, Strings.ResourceManager, new object[]
			{
				targetServer
			});
		}

		public static LocalizedString DebugEndIsDomainReservedCheck
		{
			get
			{
				return new LocalizedString("DebugEndIsDomainReservedCheck", "ExEE6559", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCreatePasswordSettings(string dn)
		{
			return new LocalizedString("InfoCreatePasswordSettings", "Ex74D967", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString IisTasksNameValidationProperty
		{
			get
			{
				return new LocalizedString("IisTasksNameValidationProperty", "ExF13215", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FDS_OAD_PerfCountersComponentDescription
		{
			get
			{
				return new LocalizedString("FDS_OAD_PerfCountersComponentDescription", "Ex785F91", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ServerObjectIsNullWarning
		{
			get
			{
				return new LocalizedString("ServerObjectIsNullWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString TryingCertificate(string Subject, string Thumbprint)
		{
			return new LocalizedString("TryingCertificate", "Ex64C53F", false, true, Strings.ResourceManager, new object[]
			{
				Subject,
				Thumbprint
			});
		}

		public static LocalizedString ProgressStatusCompleted
		{
			get
			{
				return new LocalizedString("ProgressStatusCompleted", "ExD6B7F8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ReplayLagPlayDownReasonNotEnoughFreeSpace
		{
			get
			{
				return new LocalizedString("ReplayLagPlayDownReasonNotEnoughFreeSpace", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveOabVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveOabVirtualDirectory", "ExF23611", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorSetRecipientViewRootAndViewEntireForestToTrue
		{
			get
			{
				return new LocalizedString("ErrorSetRecipientViewRootAndViewEntireForestToTrue", "ExA51902", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString NewImap4ConfigurationTask
		{
			get
			{
				return new LocalizedString("NewImap4ConfigurationTask", "ExEDCE19", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotContinue(string operation)
		{
			return new LocalizedString("CannotContinue", "", false, false, Strings.ResourceManager, new object[]
			{
				operation
			});
		}

		public static LocalizedString NotEnoughFreePrioritiesAvailable(string priority)
		{
			return new LocalizedString("NotEnoughFreePrioritiesAvailable", "", false, false, Strings.ResourceManager, new object[]
			{
				priority
			});
		}

		public static LocalizedString ElcExpirationServiceUnavailable(string serverName, string errorCode)
		{
			return new LocalizedString("ElcExpirationServiceUnavailable", "", false, false, Strings.ResourceManager, new object[]
			{
				serverName,
				errorCode
			});
		}

		public static LocalizedString ScenarioAvailabilityService
		{
			get
			{
				return new LocalizedString("ScenarioAvailabilityService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MoveMailboxOnlineShouldMove(string displayname, string smtp, string database)
		{
			return new LocalizedString("MoveMailboxOnlineShouldMove", "Ex4DBD3A", false, true, Strings.ResourceManager, new object[]
			{
				displayname,
				smtp,
				database
			});
		}

		public static LocalizedString MigrationValidateNotSupported
		{
			get
			{
				return new LocalizedString("MigrationValidateNotSupported", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorGenericAllCannotbeUsedWithOtherAccessRights
		{
			get
			{
				return new LocalizedString("ErrorGenericAllCannotbeUsedWithOtherAccessRights", "Ex47BC5A", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoProcessAddRight(string right, string domain)
		{
			return new LocalizedString("InfoProcessAddRight", "Ex47EBF2", false, true, Strings.ResourceManager, new object[]
			{
				right,
				domain
			});
		}

		public static LocalizedString CasHealthOwaLogonAuthenticationMethod(string method)
		{
			return new LocalizedString("CasHealthOwaLogonAuthenticationMethod", "Ex97C263", false, true, Strings.ResourceManager, new object[]
			{
				method
			});
		}

		public static LocalizedString ErrorInvalidSizeRangeCondition
		{
			get
			{
				return new LocalizedString("ErrorInvalidSizeRangeCondition", "ExAA6372", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidMessageClassification(string classification)
		{
			return new LocalizedString("InvalidMessageClassification", "Ex169D57", false, true, Strings.ResourceManager, new object[]
			{
				classification
			});
		}

		public static LocalizedString ConfirmationMessageSetOrganizationFlags(string organization)
		{
			return new LocalizedString("ConfirmationMessageSetOrganizationFlags", "ExC3FA63", false, true, Strings.ResourceManager, new object[]
			{
				organization
			});
		}

		public static LocalizedString MigrationCsvParameterInvalid
		{
			get
			{
				return new LocalizedString("MigrationCsvParameterInvalid", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ADAttributeName
		{
			get
			{
				return new LocalizedString("ADAttributeName", "ExC2B93C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ValidatingUserObjectDescription
		{
			get
			{
				return new LocalizedString("ValidatingUserObjectDescription", "Ex5E402D", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetWorkloadPolicy(string Name)
		{
			return new LocalizedString("ConfirmationMessageSetWorkloadPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString DuplicateItemInGatewayIpAddressListId(string ip)
		{
			return new LocalizedString("DuplicateItemInGatewayIpAddressListId", "Ex448496", false, true, Strings.ResourceManager, new object[]
			{
				ip
			});
		}

		public static LocalizedString ErrorAdUserNotUnique(string user)
		{
			return new LocalizedString("ErrorAdUserNotUnique", "ExBD778E", false, true, Strings.ResourceManager, new object[]
			{
				user
			});
		}

		public static LocalizedString RmsOnline
		{
			get
			{
				return new LocalizedString("RmsOnline", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressDisplaySpecifiers
		{
			get
			{
				return new LocalizedString("SetupProgressDisplaySpecifiers", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewClassificationRuleCollection(string name)
		{
			return new LocalizedString("ConfirmationMessageNewClassificationRuleCollection", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString ClearingHostServerForDatabaseCopy(string dbCopyName)
		{
			return new LocalizedString("ClearingHostServerForDatabaseCopy", "", false, false, Strings.ResourceManager, new object[]
			{
				dbCopyName
			});
		}

		public static LocalizedString ConfirmationMessageSetHostedContentFilterRule(string identity)
		{
			return new LocalizedString("ConfirmationMessageSetHostedContentFilterRule", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningProvisionedServerAlreadyAssigned(string server)
		{
			return new LocalizedString("WarningProvisionedServerAlreadyAssigned", "Ex95FB53", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ExportToPSTShouldExport(string srcDisplayname, string PSTFolderPath)
		{
			return new LocalizedString("ExportToPSTShouldExport", "ExE094F2", false, true, Strings.ResourceManager, new object[]
			{
				srcDisplayname,
				PSTFolderPath
			});
		}

		public static LocalizedString VerboseWillBeLookingForAssignee(string checkConfigNC, string checkDomainNC)
		{
			return new LocalizedString("VerboseWillBeLookingForAssignee", "Ex673189", false, true, Strings.ResourceManager, new object[]
			{
				checkConfigNC,
				checkDomainNC
			});
		}

		public static LocalizedString SetMailboxSearchConfirmation(string identity)
		{
			return new LocalizedString("SetMailboxSearchConfirmation", "Ex425B0C", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString FailedToReadAirSyncDebugLogging(string user, string error)
		{
			return new LocalizedString("FailedToReadAirSyncDebugLogging", "Ex1FA32F", false, true, Strings.ResourceManager, new object[]
			{
				user,
				error
			});
		}

		public static LocalizedString ErrorCannotSetVirtualDirectoryOutOfWriteScope(string virtualDirectoryName, string reason)
		{
			return new LocalizedString("ErrorCannotSetVirtualDirectoryOutOfWriteScope", "", false, false, Strings.ResourceManager, new object[]
			{
				virtualDirectoryName,
				reason
			});
		}

		public static LocalizedString ExportMigrationBatchRowCountOutOfBoundsException(int requestedRowCount, int minRowCount, int maxRowCount)
		{
			return new LocalizedString("ExportMigrationBatchRowCountOutOfBoundsException", "ExB1DCBE", false, true, Strings.ResourceManager, new object[]
			{
				requestedRowCount,
				minRowCount,
				maxRowCount
			});
		}

		public static LocalizedString UnableToDetermineExecutingUser
		{
			get
			{
				return new LocalizedString("UnableToDetermineExecutingUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseDefaultGALFound(string id)
		{
			return new LocalizedString("VerboseDefaultGALFound", "ExE1F42D", false, true, Strings.ResourceManager, new object[]
			{
				id
			});
		}

		public static LocalizedString ConfirmationMessageRemoveExchangeSettings(string Name)
		{
			return new LocalizedString("ConfirmationMessageRemoveExchangeSettings", "", false, false, Strings.ResourceManager, new object[]
			{
				Name
			});
		}

		public static LocalizedString InfoReadObjectFromDC(string server, string dn)
		{
			return new LocalizedString("InfoReadObjectFromDC", "Ex67AEE6", false, true, Strings.ResourceManager, new object[]
			{
				server,
				dn
			});
		}

		public static LocalizedString TasksRpcListenerRpcFailed(string machineName, string error)
		{
			return new LocalizedString("TasksRpcListenerRpcFailed", "Ex623565", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString ErrorRemoteEndpointsCannotBeUsedOnLocalBatches(string endpointName)
		{
			return new LocalizedString("ErrorRemoteEndpointsCannotBeUsedOnLocalBatches", "", false, false, Strings.ResourceManager, new object[]
			{
				endpointName
			});
		}

		public static LocalizedString ExportIOFailure(string err)
		{
			return new LocalizedString("ExportIOFailure", "Ex3B7F53", false, true, Strings.ResourceManager, new object[]
			{
				err
			});
		}

		public static LocalizedString ComAdminInstallOleConverter
		{
			get
			{
				return new LocalizedString("ComAdminInstallOleConverter", "ExFAA989", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString DeleteClusterDBKey(string database)
		{
			return new LocalizedString("DeleteClusterDBKey", "", false, false, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString ConfirmationMessageSetDeliveryAgentConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDeliveryAgentConnector", "ExF22120", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString MRSProxyNotResponding(string mrsProxyServer, string mrsServer, LocalizedString error)
		{
			return new LocalizedString("MRSProxyNotResponding", "", false, false, Strings.ResourceManager, new object[]
			{
				mrsProxyServer,
				mrsServer,
				error
			});
		}

		public static LocalizedString BPACheckingForUpdates
		{
			get
			{
				return new LocalizedString("BPACheckingForUpdates", "ExB5286C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CorruptedRoleNeedsCleanupException(string roleId, string error)
		{
			return new LocalizedString("CorruptedRoleNeedsCleanupException", "Ex53113A", false, true, Strings.ResourceManager, new object[]
			{
				roleId,
				error
			});
		}

		public static LocalizedString SendConnectorValidSourceServerNotFound
		{
			get
			{
				return new LocalizedString("SendConnectorValidSourceServerNotFound", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorManagedMemberExists(string memberName)
		{
			return new LocalizedString("ErrorManagedMemberExists", "ExD9BD5D", false, true, Strings.ResourceManager, new object[]
			{
				memberName
			});
		}

		public static LocalizedString InfoMovedGroup(string group, string oldOU, string newOU)
		{
			return new LocalizedString("InfoMovedGroup", "Ex193D62", false, true, Strings.ResourceManager, new object[]
			{
				group,
				oldOU,
				newOU
			});
		}

		public static LocalizedString AboutToAddLocalOrgUSGToLocalAdminGroup
		{
			get
			{
				return new LocalizedString("AboutToAddLocalOrgUSGToLocalAdminGroup", "ExEFF7C8", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseFoundInvalidAlternateServiceAccountCredential(string qualifiedUserName, DateTime whenAdded, string failureReason)
		{
			return new LocalizedString("VerboseFoundInvalidAlternateServiceAccountCredential", "ExBC75BE", false, true, Strings.ResourceManager, new object[]
			{
				qualifiedUserName,
				whenAdded,
				failureReason
			});
		}

		public static LocalizedString DatabaseRedundancyCheckDesc
		{
			get
			{
				return new LocalizedString("DatabaseRedundancyCheckDesc", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MarkingMoveJobAsCanceled
		{
			get
			{
				return new LocalizedString("MarkingMoveJobAsCanceled", "Ex5CEC2C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InstallFrontendTransportRoleDescription
		{
			get
			{
				return new LocalizedString("InstallFrontendTransportRoleDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CannotProvisionNonCoexistenceDomain(string domain)
		{
			return new LocalizedString("CannotProvisionNonCoexistenceDomain", "", false, false, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString VerboseRereadRecipient(string id, string root)
		{
			return new LocalizedString("VerboseRereadRecipient", "Ex479BD5", false, true, Strings.ResourceManager, new object[]
			{
				id,
				root
			});
		}

		public static LocalizedString ConfirmationMessageSetInboundConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetInboundConnector", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString TestMailflowSucceeded(string source, string target)
		{
			return new LocalizedString("TestMailflowSucceeded", "ExC16C8B", false, true, Strings.ResourceManager, new object[]
			{
				source,
				target
			});
		}

		public static LocalizedString ErrorAdministratorNotInDomainError(string netId, string domainName)
		{
			return new LocalizedString("ErrorAdministratorNotInDomainError", "Ex053012", false, true, Strings.ResourceManager, new object[]
			{
				netId,
				domainName
			});
		}

		public static LocalizedString ErrorOabALAlreadyAssigned(string oab, string oabAL)
		{
			return new LocalizedString("ErrorOabALAlreadyAssigned", "ExFFBB2E", false, true, Strings.ResourceManager, new object[]
			{
				oab,
				oabAL
			});
		}

		public static LocalizedString CommitMetabaseChangesException(string server)
		{
			return new LocalizedString("CommitMetabaseChangesException", "Ex86D640", false, true, Strings.ResourceManager, new object[]
			{
				server
			});
		}

		public static LocalizedString ErrorAssociatedMRSRequestExists(string requestType)
		{
			return new LocalizedString("ErrorAssociatedMRSRequestExists", "ExF81D7C", false, true, Strings.ResourceManager, new object[]
			{
				requestType
			});
		}

		public static LocalizedString ClassificationRuleCollectionExistingRuleIdViolation(string ruleIds)
		{
			return new LocalizedString("ClassificationRuleCollectionExistingRuleIdViolation", "", false, false, Strings.ResourceManager, new object[]
			{
				ruleIds
			});
		}

		public static LocalizedString RmsSharedIdentityFailedToRemoveLink
		{
			get
			{
				return new LocalizedString("RmsSharedIdentityFailedToRemoveLink", "Ex13D44F", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressCreateMessageHygieneContainer
		{
			get
			{
				return new LocalizedString("SetupProgressCreateMessageHygieneContainer", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveRoutingGroupConnector(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveRoutingGroupConnector", "Ex8E2D6E", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorInvalidResponseFormat
		{
			get
			{
				return new LocalizedString("ErrorInvalidResponseFormat", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorOriginalLogFolderPathIsMissed(string database)
		{
			return new LocalizedString("ErrorOriginalLogFolderPathIsMissed", "Ex053530", false, true, Strings.ResourceManager, new object[]
			{
				database
			});
		}

		public static LocalizedString VerboseFailedToPrepopulateCache(string message)
		{
			return new LocalizedString("VerboseFailedToPrepopulateCache", "Ex03AC3B", false, true, Strings.ResourceManager, new object[]
			{
				message
			});
		}

		public static LocalizedString ConfirmationMessageEnableRpcHttpExternalOnly(string WebSiteName, string Server, string ExternalHostname, string ExternalClientAuthenticationMethod, string IISAuthenticationMethods)
		{
			return new LocalizedString("ConfirmationMessageEnableRpcHttpExternalOnly", "", false, false, Strings.ResourceManager, new object[]
			{
				WebSiteName,
				Server,
				ExternalHostname,
				ExternalClientAuthenticationMethod,
				IISAuthenticationMethods
			});
		}

		public static LocalizedString NewPolicyTipConfigDuplicate
		{
			get
			{
				return new LocalizedString("NewPolicyTipConfigDuplicate", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString messageClientAccessArrayNotFoundException(string site, ServerIdParameter serverId)
		{
			return new LocalizedString("messageClientAccessArrayNotFoundException", "", false, false, Strings.ResourceManager, new object[]
			{
				site,
				serverId
			});
		}

		public static LocalizedString UnwillingToPerformException(string name, string dom)
		{
			return new LocalizedString("UnwillingToPerformException", "Ex7BFD6B", false, true, Strings.ResourceManager, new object[]
			{
				name,
				dom
			});
		}

		public static LocalizedString ErrorTestMailboxNotFound(string scriptsPath, string datacenter, string errorDetails)
		{
			return new LocalizedString("ErrorTestMailboxNotFound", "", false, false, Strings.ResourceManager, new object[]
			{
				scriptsPath,
				datacenter,
				errorDetails
			});
		}

		public static LocalizedString RequiredColumnEmpty(int rowNumber, string required)
		{
			return new LocalizedString("RequiredColumnEmpty", "Ex52C554", false, true, Strings.ResourceManager, new object[]
			{
				rowNumber,
				required
			});
		}

		public static LocalizedString ErrorCannotDisablePrimaryPublicFolderMailbox(string name)
		{
			return new LocalizedString("ErrorCannotDisablePrimaryPublicFolderMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString VerboseUnlockingModulesSection
		{
			get
			{
				return new LocalizedString("VerboseUnlockingModulesSection", "Ex07EC3B", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorRootContainerNotExist(string root)
		{
			return new LocalizedString("ErrorRootContainerNotExist", "Ex1DC7EB", false, true, Strings.ResourceManager, new object[]
			{
				root
			});
		}

		public static LocalizedString DagTaskServerCanNotContactClusterException(int numberOfOtherServers, string otherServers)
		{
			return new LocalizedString("DagTaskServerCanNotContactClusterException", "", false, false, Strings.ResourceManager, new object[]
			{
				numberOfOtherServers,
				otherServers
			});
		}

		public static LocalizedString ErrorCannotUpgradeManagedFolder(string folderName)
		{
			return new LocalizedString("ErrorCannotUpgradeManagedFolder", "", false, false, Strings.ResourceManager, new object[]
			{
				folderName
			});
		}

		public static LocalizedString SetupProgressAllowRemotePowerShellForAdmins
		{
			get
			{
				return new LocalizedString("SetupProgressAllowRemotePowerShellForAdmins", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupProgressHostedConnectorFilterPolicy
		{
			get
			{
				return new LocalizedString("SetupProgressHostedConnectorFilterPolicy", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WriteScopeGreaterThanRoleScope(string scopeName, string roleName, string implicitScope)
		{
			return new LocalizedString("WriteScopeGreaterThanRoleScope", "ExFE35D5", false, true, Strings.ResourceManager, new object[]
			{
				scopeName,
				roleName,
				implicitScope
			});
		}

		public static LocalizedString RemoveADServerMetadataConfirmationMessage(string identity)
		{
			return new LocalizedString("RemoveADServerMetadataConfirmationMessage", "ExC10E7A", false, true, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ConfirmationMessageEnableMailboxAuditLog(string Identity)
		{
			return new LocalizedString("ConfirmationMessageEnableMailboxAuditLog", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString Error_InvalidAddress(string address)
		{
			return new LocalizedString("Error_InvalidAddress", "", false, false, Strings.ResourceManager, new object[]
			{
				address
			});
		}

		public static LocalizedString NoSmtpAddress
		{
			get
			{
				return new LocalizedString("NoSmtpAddress", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString UnifiedMessagingMailboxPolicyHasProtectAuthenticatedVoiceMailSetTo(string policyName, DRMProtectionOptions drmProtectionOption)
		{
			return new LocalizedString("UnifiedMessagingMailboxPolicyHasProtectAuthenticatedVoiceMailSetTo", "", false, false, Strings.ResourceManager, new object[]
			{
				policyName,
				drmProtectionOption
			});
		}

		public static LocalizedString ErrorBPAConfigDataSave
		{
			get
			{
				return new LocalizedString("ErrorBPAConfigDataSave", "Ex9A4568", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OfficeDataLoaderServiceDescription
		{
			get
			{
				return new LocalizedString("OfficeDataLoaderServiceDescription", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IISNotInstalled
		{
			get
			{
				return new LocalizedString("IISNotInstalled", "Ex4F725C", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorManagedByCrossTenant(string manageBy)
		{
			return new LocalizedString("ErrorManagedByCrossTenant", "Ex1753C5", false, true, Strings.ResourceManager, new object[]
			{
				manageBy
			});
		}

		public static LocalizedString MigrationPartitionMailboxInvalid(string mailbox)
		{
			return new LocalizedString("MigrationPartitionMailboxInvalid", "", false, false, Strings.ResourceManager, new object[]
			{
				mailbox
			});
		}

		public static LocalizedString AttemptingToManageRole(string mode, string role)
		{
			return new LocalizedString("AttemptingToManageRole", "ExB7DEB5", false, true, Strings.ResourceManager, new object[]
			{
				mode,
				role
			});
		}

		public static LocalizedString RmsOnlineFailedToGetTpd(Exception e, Exception inner)
		{
			return new LocalizedString("RmsOnlineFailedToGetTpd", "", false, false, Strings.ResourceManager, new object[]
			{
				e,
				inner
			});
		}

		public static LocalizedString GetPolicyTipConfigUrlUsedAsActionFilter
		{
			get
			{
				return new LocalizedString("GetPolicyTipConfigUrlUsedAsActionFilter", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotModifyRehomingRequest(string identity)
		{
			return new LocalizedString("ErrorCannotModifyRehomingRequest", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorSetGroupMailboxRemoveMembersOtherUser
		{
			get
			{
				return new LocalizedString("ErrorSetGroupMailboxRemoveMembersOtherUser", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString VerboseBeginTextExtraction(int fileSize, int textScanLimit)
		{
			return new LocalizedString("VerboseBeginTextExtraction", "", false, false, Strings.ResourceManager, new object[]
			{
				fileSize,
				textScanLimit
			});
		}

		public static LocalizedString CasHealthCalendarVDirSuccess
		{
			get
			{
				return new LocalizedString("CasHealthCalendarVDirSuccess", "ExD995BC", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString IgnoredAuthenticationWarning
		{
			get
			{
				return new LocalizedString("IgnoredAuthenticationWarning", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString AutoGroupJoinMessageSubject
		{
			get
			{
				return new LocalizedString("AutoGroupJoinMessageSubject", "ExD64285", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString CasHealthOwaErrorPageRequestUrl(string url)
		{
			return new LocalizedString("CasHealthOwaErrorPageRequestUrl", "ExC6CF0B", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString ConfirmationMessageNewTeamMailbox(string Name, string UserPrincipalName, string OrganizationalUnit)
		{
			return new LocalizedString("ConfirmationMessageNewTeamMailbox", "", false, false, Strings.ResourceManager, new object[]
			{
				Name,
				UserPrincipalName,
				OrganizationalUnit
			});
		}

		public static LocalizedString DagMemberUpCheckFailed(string serverName, string dagName)
		{
			return new LocalizedString("DagMemberUpCheckFailed", "ExE201FF", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				dagName
			});
		}

		public static LocalizedString MailboxAssistantsServiceCouldNotBeStopped(string serverName, string errorMessage)
		{
			return new LocalizedString("MailboxAssistantsServiceCouldNotBeStopped", "Ex415A5B", false, true, Strings.ResourceManager, new object[]
			{
				serverName,
				errorMessage
			});
		}

		public static LocalizedString MigrationOperationFailed
		{
			get
			{
				return new LocalizedString("MigrationOperationFailed", "Ex0F93AF", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString OwaAuthenticationNotMatchEcpWarning
		{
			get
			{
				return new LocalizedString("OwaAuthenticationNotMatchEcpWarning", "Ex3154A1", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageRemoveHostedEncryptionVirtualDirectory(string Identity)
		{
			return new LocalizedString("ConfirmationMessageRemoveHostedEncryptionVirtualDirectory", "", false, false, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString UnableToGetProcessForService(string serviceName, string exception)
		{
			return new LocalizedString("UnableToGetProcessForService", "Ex14BA3A", false, true, Strings.ResourceManager, new object[]
			{
				serviceName,
				exception
			});
		}

		public static LocalizedString ErrorCannotMovePublicFolderIntoSameMailbox
		{
			get
			{
				return new LocalizedString("ErrorCannotMovePublicFolderIntoSameMailbox", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageConnectMailboxShared(string Identity, string Shared, string Database)
		{
			return new LocalizedString("ConfirmationMessageConnectMailboxShared", "Ex3E167E", false, true, Strings.ResourceManager, new object[]
			{
				Identity,
				Shared,
				Database
			});
		}

		public static LocalizedString CasHealthOwaUrlColon(string url)
		{
			return new LocalizedString("CasHealthOwaUrlColon", "Ex93E13B", false, true, Strings.ResourceManager, new object[]
			{
				url
			});
		}

		public static LocalizedString SetupProgressStartingEdgeSyncService
		{
			get
			{
				return new LocalizedString("SetupProgressStartingEdgeSyncService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MailSubmissionServiceDisplayName
		{
			get
			{
				return new LocalizedString("MailSubmissionServiceDisplayName", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorDuplicateKey(int key)
		{
			return new LocalizedString("ErrorDuplicateKey", "", false, false, Strings.ResourceManager, new object[]
			{
				key
			});
		}

		public static LocalizedString ConfirmationMessageSwitchMailboxPolicy(string policyType, string Identity)
		{
			return new LocalizedString("ConfirmationMessageSwitchMailboxPolicy", "", false, false, Strings.ResourceManager, new object[]
			{
				policyType,
				Identity
			});
		}

		public static LocalizedString AutodiscoverFailure
		{
			get
			{
				return new LocalizedString("AutodiscoverFailure", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConflictedPolicyUpdateNotAllowed
		{
			get
			{
				return new LocalizedString("ConflictedPolicyUpdateNotAllowed", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InvalidCategory
		{
			get
			{
				return new LocalizedString("InvalidCategory", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString InfoCreateMESOContainer(string dn)
		{
			return new LocalizedString("InfoCreateMESOContainer", "Ex9EA7D9", false, true, Strings.ResourceManager, new object[]
			{
				dn
			});
		}

		public static LocalizedString ErrorNoDefaultAcceptedDomainFound(string orgId)
		{
			return new LocalizedString("ErrorNoDefaultAcceptedDomainFound", "Ex27F402", false, true, Strings.ResourceManager, new object[]
			{
				orgId
			});
		}

		public static LocalizedString IPRangeInConnectorContainsReservedIPAddressesId(string ipRange)
		{
			return new LocalizedString("IPRangeInConnectorContainsReservedIPAddressesId", "", false, false, Strings.ResourceManager, new object[]
			{
				ipRange
			});
		}

		public static LocalizedString HostedContentFilterActionDescription(string policy)
		{
			return new LocalizedString("HostedContentFilterActionDescription", "", false, false, Strings.ResourceManager, new object[]
			{
				policy
			});
		}

		public static LocalizedString DomainIgnoredBecauseApplicationUriInconsitent(string domain, string actualApplicationUri, string expectedApplicationUri)
		{
			return new LocalizedString("DomainIgnoredBecauseApplicationUriInconsitent", "Ex8EE66A", false, true, Strings.ResourceManager, new object[]
			{
				domain,
				actualApplicationUri,
				expectedApplicationUri
			});
		}

		public static LocalizedString TestSearchServiceNotRunning(string service)
		{
			return new LocalizedString("TestSearchServiceNotRunning", "ExF36E4F", false, true, Strings.ResourceManager, new object[]
			{
				service
			});
		}

		public static LocalizedString Error_NoDatabaseAttributesMatchingMailboxProvisioningConstraint(string mailboxProvisioningConstraint)
		{
			return new LocalizedString("Error_NoDatabaseAttributesMatchingMailboxProvisioningConstraint", "", false, false, Strings.ResourceManager, new object[]
			{
				mailboxProvisioningConstraint
			});
		}

		public static LocalizedString JournalingToExternalOnly
		{
			get
			{
				return new LocalizedString("JournalingToExternalOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTenantIsPiloting
		{
			get
			{
				return new LocalizedString("ErrorTenantIsPiloting", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageNewAuthServer(string name)
		{
			return new LocalizedString("ConfirmationMessageNewAuthServer", "", false, false, Strings.ResourceManager, new object[]
			{
				name
			});
		}

		public static LocalizedString SetupProgressStoppingAddressBookService
		{
			get
			{
				return new LocalizedString("SetupProgressStoppingAddressBookService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString SetupComponentConfiguringADTopologyService
		{
			get
			{
				return new LocalizedString("SetupComponentConfiguringADTopologyService", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString FailedToCreateAuditLogSearch
		{
			get
			{
				return new LocalizedString("FailedToCreateAuditLogSearch", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorCannotUMEnableInTarget(string user, string reason)
		{
			return new LocalizedString("ErrorCannotUMEnableInTarget", "Ex92C8B1", false, true, Strings.ResourceManager, new object[]
			{
				user,
				reason
			});
		}

		public static LocalizedString TPRListenerNotHealthy(string machineName, string error)
		{
			return new LocalizedString("TPRListenerNotHealthy", "ExD848BD", false, true, Strings.ResourceManager, new object[]
			{
				machineName,
				error
			});
		}

		public static LocalizedString ErrorNoTenantGlsRecord(string identity)
		{
			return new LocalizedString("ErrorNoTenantGlsRecord", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString WarningPropertySetIgnored
		{
			get
			{
				return new LocalizedString("WarningPropertySetIgnored", "Ex69E418", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString MigrationPleaseUseStopForDisablingIncremental
		{
			get
			{
				return new LocalizedString("MigrationPleaseUseStopForDisablingIncremental", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString StatusMessageSynchronizerRunningInBackground
		{
			get
			{
				return new LocalizedString("StatusMessageSynchronizerRunningInBackground", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorBothCustomAndPrecannedFilterSpecified
		{
			get
			{
				return new LocalizedString("ErrorBothCustomAndPrecannedFilterSpecified", "Ex63CCD2", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ErrorTaskRunningLocationFrontendOnly
		{
			get
			{
				return new LocalizedString("ErrorTaskRunningLocationFrontendOnly", "", false, false, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString ConfirmationMessageSetDistributionGroup(string Identity)
		{
			return new LocalizedString("ConfirmationMessageSetDistributionGroup", "ExDFA746", false, true, Strings.ResourceManager, new object[]
			{
				Identity
			});
		}

		public static LocalizedString ErrorDBOwningServerNotFound(string idStringValue)
		{
			return new LocalizedString("ErrorDBOwningServerNotFound", "Ex9B8A30", false, true, Strings.ResourceManager, new object[]
			{
				idStringValue
			});
		}

		public static LocalizedString CasHealthOwaErrorPageHeader
		{
			get
			{
				return new LocalizedString("CasHealthOwaErrorPageHeader", "Ex4B2980", false, true, Strings.ResourceManager, new object[0]);
			}
		}

		public static LocalizedString WarningDismountDatabaseToDoConfigurationOnly(string databaseName)
		{
			return new LocalizedString("WarningDismountDatabaseToDoConfigurationOnly", "Ex37DE77", false, true, Strings.ResourceManager, new object[]
			{
				databaseName
			});
		}

		public static LocalizedString DuplicateRemoteDomain(string domain)
		{
			return new LocalizedString("DuplicateRemoteDomain", "Ex032532", false, true, Strings.ResourceManager, new object[]
			{
				domain
			});
		}

		public static LocalizedString ConfirmationMessageInterceptorRuleForestWide(string identity)
		{
			return new LocalizedString("ConfirmationMessageInterceptorRuleForestWide", "", false, false, Strings.ResourceManager, new object[]
			{
				identity
			});
		}

		public static LocalizedString ErrorRemoveMailboxPlanRoleAssignment(string user, string role, string plan)
		{
			return new LocalizedString("ErrorRemoveMailboxPlanRoleAssignment", "Ex12E850", false, true, Strings.ResourceManager, new object[]
			{
				user,
				role,
				plan
			});
		}

		public static LocalizedString GetLocalizedString(Strings.IDs key)
		{
			return new LocalizedString(Strings.stringIDs[(uint)key], Strings.ResourceManager, new object[0]);
		}

		private static Dictionary<uint, string> stringIDs = new Dictionary<uint, string>(3091);

		private static ExchangeResourceManager ResourceManager = ExchangeResourceManager.GetResourceManager("Microsoft.Exchange.Management.Tasks.Strings", typeof(Strings).GetTypeInfo().Assembly);

		public enum IDs : uint
		{
			SetupComponentGatewayLocal = 139133773U,
			SetupProgressCreateServerObject = 1019266140U,
			ErrorPatternCannotContainEmptyAlternations = 3118077072U,
			SetupComponentPostSetupUnifiedMessaging = 3133271685U,
			CannotCombineWildcardRecipientAddress = 3076033759U,
			VerboseRebuildWSManRegistry = 4053421780U,
			CannotAddIPSafelistsIfIPSafelistingSyncDisabledId = 3032285884U,
			ExpiryDateSameOrBeforeActivationDate = 876478325U,
			ErrorPrecannedRoleAndSpecificMailboxFolderPermission = 2380804056U,
			ErrorCannotSpecifyScopeParameter = 274479317U,
			SetupProgressImportingAddionalEdgeSchema = 4176599321U,
			E4eLicensingIsDisabledCreateRule = 1856519480U,
			SetupProgressInstallMessageDeliveryContainer = 3267746767U,
			SetupProgressInstallAdministrativeGroupContainer = 361784375U,
			ErrorRoomPasswordMustBeSetWhenEnablingRoomADAccount = 2367053929U,
			SetupProgressCreateRBACRoles = 786067343U,
			ForwardSyncServiceDisplayName = 1845804172U,
			MoveContentIndexTask = 3030424583U,
			ADAttributeLastName = 1016721882U,
			ErrorMaxVersionOrFixVersionRequired = 859062683U,
			WarningIgnoreMailboxSettingOnlyPolicy = 2850084476U,
			InstallExchangeOrganizationDescription = 1427955775U,
			ClassificationRuleCollectionIllegalScopedNewOperation = 126246359U,
			CannotRemoveDefaultRemoteDomain = 3732489244U,
			SetupProgressCreateLiveEnableFederatedEmailMailbox = 45450529U,
			SetupComponentBridgeheadGlobalConfig = 1765853772U,
			CopyStatusMisconfigured = 1587179080U,
			DiagnosticsServiceDescription = 213659447U,
			DisableConversationsTask = 3491818999U,
			SetupProgressOutlookAnywhereEnabled = 622937693U,
			ErrorCannotSetPowerShellMaxTenantConcurrency = 3937769803U,
			ForwardSyncService2DisplayName = 2729327636U,
			ErrorSuspendWhenReadyToCompleteCannotBeSetWithIncrementalSyncInterval = 1063350901U,
			SetupProgressStoppingComplianceAuditService = 2071245439U,
			HealthManagerServiceDescription = 2461945188U,
			MessageTracingClientServiceDescription = 739210221U,
			RoleNonEditingAuthor = 1636409600U,
			ErrorSecondaryMailboxIdRequired = 2218700066U,
			HeaderName = 2909775076U,
			InvalidRecipient = 2790684056U,
			RcrDatabasesMountedCheckDesc = 512186364U,
			RemovingFiles = 277119228U,
			RoleContributor = 2589734627U,
			SetupProgressCreateRBACRolesContainer = 3036981548U,
			NoVersionMatch = 523386612U,
			JournalNdrMailboxInJournalRuleRecipient = 3195479398U,
			PromptToUpgradeRulesFormat = 4055862009U,
			ErrorAliasEmpty = 2917478147U,
			SetupProgressCreatePrecannedGAL = 3482350932U,
			ConnectorValidationFailedId = 2322679854U,
			PatternContainsProhibitedLeadingOrTrailingRegexCharacters = 277022941U,
			ConfirmationMessageImportJournalRuleCollection = 3852117776U,
			InfoGetLicensingUri = 1287226944U,
			InvalidSummmarizeBy = 904825440U,
			SetAppConfigValue = 793178976U,
			MsiReinstallMustAll = 3312690295U,
			MessageTypeReadReceipt = 680782013U,
			InfoLoadIRMConfig = 1329598090U,
			ErrorEmptyProxyAddressInWLID = 1720218724U,
			ErrorInvalidApplicationId = 1830044678U,
			ExceptionUserObjectAmbiguous = 597233763U,
			StartMidFileCopyDescription = 4051199925U,
			InstallFreeBusyFolderUnableToCreateFolder = 1580525556U,
			UceContentFilterObjectNotFound = 2295478344U,
			AuditLogSearchNamePrefix = 689400110U,
			SetupProgressCreatePrecannedAddressLists = 367024857U,
			MoreThanOneRecipient = 4203484097U,
			ConfirmationMessageNewEdgeSubscription = 1173059748U,
			Imap4BeServiceDescription = 830763533U,
			SetupProgressUpdateDatabaseCopy = 1019596387U,
			DatabaseWideTasksExceeded = 2140270019U,
			MatchSubDomainsIsInternalRelayOnly = 3053221044U,
			InstallBridgeheadRoleDescription = 1690438080U,
			ResourceCorruptCalConfig = 1897883499U,
			SetupProgressSearchMessageEnabled = 805031200U,
			IisTasksApplicationPoolValidationProperty = 3381267863U,
			IncompatibleVoiceMailProtectionAndAnalysisSettings = 2160696509U,
			CasHealtRemotePowerShellCloseRunspaceSucceeded = 1863749674U,
			SetupProgressInstallDefaultConnectionFilterContainer = 3928796881U,
			NoUserOrOrganiztionProvidedException = 3857675279U,
			ErrorInboxRuleMustHaveActions = 3733737272U,
			ConfirmationMessageWebServicesVirtualDirectoryContinue = 4218611731U,
			MigrationWorkflowServiceDescription = 593283652U,
			ErrorFolderIsMailEnabled = 156083260U,
			CasHealthOwaAuthTypeNotCheckedForExternalUrl = 634620851U,
			ExportCertificateAs12WithoutKey = 2953781159U,
			ChangePasswordInvalidNewPassword = 3512699247U,
			MigrationBatchIdMissing = 926742601U,
			CasHealthAdditionalInformation = 1422131190U,
			TestMigrationServerAvailabilityProtocolArgument = 3939837379U,
			OrganizationNotFederatedException = 2096844093U,
			ReplayLagStatusLabelPlayDownReason = 3160504501U,
			ErrorDialPlanNotMatch = 3354444285U,
			SetupComponentAllADRolesCommon = 4002412124U,
			QuorumGroupCheckDesc = 1401307769U,
			CasHealthSiteName = 543437901U,
			WarningAuthenticationTypeIsNotChanged = 1291176623U,
			ArbitrationMailboxDefaultDisplayName = 1647181233U,
			ErrorMoreThanOneAggregatedAccountOperationSpecified = 2290602049U,
			SetupProgressSchemaFile = 4115286253U,
			ConfirmationMessageImportDlpPolicy = 3380542549U,
			CasTransactionResultUndefined = 3583369532U,
			InfoNoTiFound = 4191725334U,
			TransitionStateInactive = 3094442783U,
			RpcProxyScenario = 2731029007U,
			ClearingCache = 2024045189U,
			CasHealthEasScenarioSyncOne = 1160072915U,
			ErrorNotSupportedWritableRecipient = 860632184U,
			PromptToOverwriteRulesOnImport = 1041810761U,
			ErrorPrimarySmtpAndEmailAddressesSpecified = 2801716203U,
			ErrorRemoveMailboxWithJournalArchiveWithDirSync = 1003706237U,
			ModerateActionMustBeTheOnlyAction = 3682029584U,
			TransitionInfoLabelCurrentState = 965874437U,
			ProgressValidatingFileLocations = 2076969542U,
			ComAdminUninstallOleConverter = 2357316042U,
			SetRuleSyncAcrossDifferentVersionsNeeded = 4146681835U,
			DatabasesCopyKeepingUpCheckDesc = 1534135610U,
			InvalidStartDateOffset = 4021383240U,
			WarningSupervisionTagsRemoved = 2142106696U,
			SetupProgressEnableWMIInbound = 549796425U,
			DefaultAllRooms = 1998021006U,
			JournalingParameterErrorGccWithoutRecipient = 777113388U,
			TenantAdminCannotInvokeHotmailOperation = 2991269321U,
			DlpPolicyInvalidCollectionError = 1614986787U,
			UCWADiscoveryUrlEmpty = 3163237226U,
			ActiveDirectorySearchScenario = 3568214229U,
			InfoGetCertificationUri = 1888394526U,
			UCWADiscoveryUrlException = 3248899022U,
			ErrorNoAggregatedAccountOperationSpecified = 681186416U,
			CertificateWasNotFound = 2266904519U,
			ErrorSystemFolderPathNotAvailable = 4098321834U,
			CasHealthOwaAuthTypeCheckedForInternalUrl = 4252886198U,
			GetQueueDigestForestParameterCannotBeFalse = 1806450332U,
			ExceptionEmptyStringNotAllowed = 3632772754U,
			MtrtAddHeader = 2448948717U,
			AnonymousUser = 1144958480U,
			CannotSetPerimeterOrgIdIfEhfConfigSyncIsDisabledId = 2027635495U,
			CasHealthOwaAuthenticationVerificationError = 485575497U,
			WarningSettingsNotModifiable = 580429770U,
			InstallDagMgmtServiceTask = 4280240728U,
			DataClassificationDnIdentityNotSupported = 3793537057U,
			InvalidRuleSearchFilterEmpty = 4162603766U,
			InvalidPage = 4029807706U,
			ErrorSuspendWhenReadyToCompleteCannotBeSetWithStartAfterOrCompleteAfter = 1240499241U,
			ErrorRemoveMailuserWithJournalArchive = 681744771U,
			ErrorInvalidEndpointParameterReasonInvalidProperty = 1288394341U,
			Pop3BeServiceDescription = 3248641044U,
			DefaultAllGroups = 3224500054U,
			ErrorDisableMailboxWithJournalArchive = 872238113U,
			ProgressActivityGetFederationMetadata = 2758012420U,
			InvalidPrimaryLeaseLocation = 1925218238U,
			InvalidSource = 4270189224U,
			LanguagePackPerfCounterMergeEnd = 386910029U,
			CheckServerConfiguration = 3881434143U,
			UpgradedSearchObjectDescription = 3485959825U,
			CopyStatusSinglePageRestore = 1359519288U,
			IgnoreRequireTLSConflict = 2764219150U,
			ErrorRpcHttpMustSpecifyInternalClientsRequireSslParameter = 3098305126U,
			EmptyMesssageWillBeCreated = 2769512906U,
			SubjectCnNotValidFQDN = 2142814423U,
			WarningExpiryDateBeforeCurrentDate = 1829927449U,
			MtrtRequireTLS = 339075801U,
			SendConnectorSourceServersSetForEdge = 68568156U,
			ErrorInvalidCertificateData = 3910947918U,
			NoKeyIDInImportedTrustedPublishingDomain = 2582005788U,
			SetupProgressDistributionListCountQuota = 3281590539U,
			ConfirmationMessageIRMConfig = 3636258538U,
			DebugStartGeneratingUniqueSamAccountName = 204012629U,
			CouldNotFindAutodiscoverService = 3148569182U,
			ErrorInvalidAuditAdminOperationType = 3468504006U,
			ErrorAuthServerCannotSwitchType = 3768201246U,
			VirtualDirectoryTypeNotApplicable = 1045148960U,
			RmsOnlineUrlsNotPresent = 1725140761U,
			StartPreConfigurationDescription = 3070965441U,
			ErrorAssociatedMoveRequestExists = 893233504U,
			MigrationStartAfterRequiresAutoComplete = 2558903800U,
			SomeMapiTransactionsFailedPrefix = 3445636645U,
			InfoCheckingTpdFromRmsOnline = 2031086061U,
			TenantNotificationUnavailableEventMessage = 2409328034U,
			DagTaskRestoreDagCouldNotOpenCluster = 2876349303U,
			ConfirmationMessageSetIPAllowListConfig = 1304474150U,
			UpdateManageDelegation2ProvisioningInDNS = 1086317875U,
			ErrorIgnoreDefaultScopeAndDCSetTogether = 3216817101U,
			CasHealthOwaNoCasArgumentError = 1657137395U,
			HybridMailflowOutboundConnectorComment = 1869397051U,
			PublishManageDelegation2ProvisioningInDNS = 2049140123U,
			InvalidActionSequence = 1018858686U,
			CannotUseDefaultAttributesForExchange2007OAB = 3567029179U,
			ImproperTypeForThisIdParameter = 1247936583U,
			SetupProgressStoppingWatchDogService = 1594256938U,
			ErrorPreventCompletionCannotSet = 2800695281U,
			ErrorTaskRunningLocation = 1000180735U,
			ErrorTenantOrgOutOfDate = 1044260641U,
			SetupProgressStartingComplianceAuditService = 3858535199U,
			ConfirmationMessageSetIPBlockListProvidersConfig = 1197534060U,
			UninstallMailboxReplicationServiceTask = 1114455400U,
			SetupProgressAutoReplyEnabled = 46134730U,
			SynNowCanOnlyRunAgainstHub = 1293373139U,
			UninstallKeynoteConnectorServiceTask = 1906820204U,
			ProgressStatusRemovingManagementRoleTree = 511946795U,
			CasTransactionResultSkipped = 345735772U,
			ErrorAgentCannotBeDisabled = 2053186887U,
			CreateSharedConfigurationRequiredForTT = 1842673731U,
			SetupProgressStoppingAdam = 3723446335U,
			CasHealthOwaGotIsaLogonPage = 3205347653U,
			CreateActiveSyncOraganizationSettings = 3576079758U,
			InheritedAceIgnored = 2814365579U,
			StartPreFileCopyDescription = 718060562U,
			SetupComponentConfiguringMailSubmissionService = 2306021189U,
			ErrorCannotGetLocalSite = 2062465841U,
			ErrorCannotSpecifySuspendCommentWithoutSuspend = 2995736033U,
			SetupProgressStartingRpcClientAccessService = 4218312291U,
			SetupComponentStoppingMailboxServices = 3248358162U,
			StartOrganizationPilotDescription = 1628012707U,
			AlsEmailFooter = 1068106535U,
			ConfirmationMessageRemoveEdgeSubscriptionRecipients = 1557867634U,
			CasHealthOwaNoInternalUrl = 3250043305U,
			ReversingTaskList = 3613594314U,
			SetupProgressMaxRecipientsTransportQuota = 1793609503U,
			ContactAdminForForwardingWarning = 1688623221U,
			SetResubmitRequestConfirmation = 1985418867U,
			ExsetdataLegacyOrganizationName = 3427981878U,
			PatternIsWhiteSpace = 1733149537U,
			SetupComponentPostSetupAllRoles = 4186825349U,
			SetupProgressStoppingServiceHostService = 4241796904U,
			ErrorDirectoryNotFound = 1382008128U,
			SetupProgressDisclosure = 1285179481U,
			CasHealthOwaPingFailed = 2812311335U,
			SetServerComponentStateInvalidLocalRemoteSwitch = 2534355845U,
			TokenSuccessfullyGenerated = 241488845U,
			InvalidLeaseDirectory = 3729565548U,
			AuthenticationMethodDigest = 2714395591U,
			ErrorPrimaryPublicFolderMailboxNotFound = 533822862U,
			NSPIGetProfileDetailsScenario = 2939831845U,
			SetupProgressCreateDefaultWLMPolicy = 2566981015U,
			UninstallUnifiedMessagingRoleDescription = 2727317856U,
			ErrorNeedToSpecifyScopeParameter = 2809178217U,
			InstallFfoPrimingServiceTask = 1167690000U,
			MailboxTransportSubmissionServiceDescription = 2266874684U,
			RejectStatusCode = 1434991878U,
			ErrorMaxVersionAndFixVersionSpecified = 1895340720U,
			CasTransactionResultSuccess = 2907455067U,
			InstallFreeBusyFolderNoPublicFolderDatabase = 2383751265U,
			SetupComponentConfiguringSharedCacheService = 301735889U,
			VerboseSaveADServerSettings = 2263616798U,
			ADAttributeCustomAttribute11 = 645477220U,
			ADAttributeCustomAttribute15 = 2614845688U,
			ErrorResetPasswordRequiresPassword = 2883464667U,
			FailureMappingMdbGuidForGet = 4056489825U,
			ScenarioAutoDiscoverOutlookProvider = 1720836242U,
			ImportCertificateUntrustedRoot = 2294833768U,
			AccountPrivilegeWarning = 2442376176U,
			InterceptorWarningCustomResponseCodeTextWithoutRejectAction = 3630480834U,
			SetupProgressCreateOrgContainer = 2160342179U,
			SetupProgressConfiguringDefaultTransportAgents = 1000887253U,
			MessageTypeEncrypted = 3544120613U,
			WordIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix = 1323896402U,
			NotPublicFolderDatabase = 3573549683U,
			ErrorPrecannedRoleAndSpecificPermission = 425417434U,
			OwaInvalidFormsAuthenticationConfiguration = 2188442253U,
			ErrorQuotaOnDefaultFolder = 840944282U,
			ADAttributeEmail = 4289093673U,
			WarningFederatedOrgIdNotEnabled = 2392105441U,
			SendingGuidInMailFrom = 45917787U,
			Error_MultipleItemsFound = 2976272587U,
			SetupComponentConfiguringMailboxPerfCounters = 1690073363U,
			SetupComponentConfiguringProtectedServiceHost = 2657860018U,
			ConversationsMailboxAlreadyDisabled = 3058326614U,
			MapiSubmitSystemProbeId = 163826707U,
			OutboundConnectorToRouteAcceptedDomainNotFound = 3114445527U,
			SetupProgressCreateRAPassignments = 2024750425U,
			ClassificationRuleCollectionIllegalScopedRemoveOperation = 977526821U,
			UninstallRecoveryActionArbiterServiceTask = 543355436U,
			EnableContentIndexTask = 2566309275U,
			SuppressXAnonymousTlsEnabledOnEdge = 823570622U,
			ReloadingMoveRequest = 2259906521U,
			SetupComponentMidFileCopyMailbox = 1585773875U,
			ErrorOrganizationIsNotInUpgradeState = 933450270U,
			AddressRewriteInvalidMapping = 2336039625U,
			DlpPolicyStateDescription = 1316689733U,
			ErrorContentSettingAlreadyExist = 1226199280U,
			SetupComponentPostUpdatingServicePlan = 4205883882U,
			ErrorSetMailboxCrossVersionRehoming = 3564253415U,
			TransitionInfoLabelLastFailureTransition = 2868264770U,
			AutoGroupManagedByCannotBeEmpty = 562001953U,
			ConfirmationMessageSetLoadBalanceSettings = 771584439U,
			ProductKeyRestartWarning = 1407354013U,
			MailboxParameterNotSpecified = 3530329232U,
			CasHealthEasScenarioDirectPushAndSync = 2424622863U,
			SetupProgressRegisterCmdletExtensionAgents = 1779020807U,
			MoveStatusWarning = 664730499U,
			SetupComponentStartingBridgeheadServices = 780734969U,
			ClockOutofSync = 2567786022U,
			ErrorSharePointUrlDoesNotMatchPartnerApplication = 2365917741U,
			MessageTypeApprovalRequest = 4072748617U,
			RecoveryActionArbiterServiceDisplayName = 611036308U,
			PartitionIdRequiredForMultipleOrgSearch = 1411232125U,
			ErrorDirectoryNotEmpty = 1536983777U,
			MigrationNeutralCultureIsInvalid = 4075921268U,
			ConfirmationMessageSetPendingFederationDomain = 2261648U,
			CouldNotFindTask = 744449214U,
			DlpPolicyModeDescription = 408063793U,
			ErrorSetVersion1OfExchange12OAB = 3439866578U,
			SetupComponentPreSetupCafe = 4022980833U,
			ErrorTaskCancelledBecauseMoreMailboxesThanSearchSupported = 2025774842U,
			SetupComponentPreUpdatingServicePlan = 17561413U,
			CasHealthOwaUnexpectedResponse = 490047050U,
			SendConnectorDashdashAddressSpaceNotOffEdge = 1069387158U,
			InvalidParameterSet = 2563356384U,
			AttachmentFilterADEntryNotFound = 3988796807U,
			CasHealthOwaNoLogonCookieReturned = 5426607U,
			SetupProgressMalwareFilterPolicy = 925956923U,
			ConfirmationMessageSetContentFilterConfig = 1605831397U,
			InstallFBAServiceTask = 3179690214U,
			MigrationCompleteAfterIncorrectState = 4199915451U,
			ActiveSyncOrganizationSettingsAmbiguous = 4056523457U,
			InfoImportingTpdFromRmsOnline = 1492775636U,
			MtrtEventMalware = 2422284162U,
			InvalidAggregatedDateTime = 3583996249U,
			ErrorRecipientTypeDetailsConflictWithRecipientType = 3407394740U,
			InfoCheckMode = 1761587115U,
			SetIISGzipMimeTypesFailure = 308522664U,
			SetupComponentConfiguringReplayService = 465050415U,
			MessageTypeSigned = 3606274629U,
			InstallADTopologyServiceTask = 1069404793U,
			SetupProgressCreateGlobalExchangeUSGs = 1251200968U,
			ADAttributeTitle = 2634964433U,
			MoveMailboxSourceCleanupTypeMailEnableSourceAccount = 1717488648U,
			NoSourceMailboxesAndNoPublicFolderSourcesSet = 1685700083U,
			SetupProgressCreateFederatedEmailMailbox = 563433368U,
			ErrorJoinRestrictionInvalid = 112004327U,
			TopologyServiceResultFailure = 2206782705U,
			WarningBulkOperationCannotDetermineRequester = 4222836121U,
			SetupComponentMidFileCopyOSP = 1239241343U,
			ErrorUMPolicyToPreE12 = 2571165378U,
			WarningTransportDecryptionMandatoryRequiresSuperUser = 1850979017U,
			UnableToRetrieveDeletePolicyTag = 2007613643U,
			ConfirmationMessageTestGlobalLocatorServiceIdentity = 233479074U,
			ReplayServiceCheckDesc = 1909346717U,
			ExchangeServersUSGDescription = 3819771664U,
			CertificateDoesNotHavePKCS10 = 2278864889U,
			ErrorMissingNameOrDescriptionOrIsDefaultParameters = 3741937590U,
			VerboseEndFingerprint = 333526005U,
			CasHealthSpecifiedServerIsNotCas = 503478192U,
			InstallingTranscodingService = 3649434212U,
			VerboseNotFoundAssigneeInConfigNC = 3750627262U,
			CannotRemoveDefaultSiteMailboxProvisioningPolicyException = 2388954365U,
			SetupProgressConfigureAdminGroup = 1785196314U,
			ErrorMicrosoftExchangeRecipientNotFound = 1058125491U,
			UmLanguagePackPrereqCheck = 52866768U,
			ADAttributeCustomAttribute6 = 1377545164U,
			ADAttributeCustomAttribute2 = 1377545168U,
			ErrorFileNameCannotBeEmptyOrNull = 3851263184U,
			ConfirmationMessageSetActiveSyncOrganizationSettings = 3464809167U,
			NewContentIndexTask = 2779757030U,
			MapiSubmitSystemProbeSuccesfullyDeleted = 3690963829U,
			ConfirmationMessageSetPop3Config = 3896912312U,
			Error_MissingOrganizerEmail = 3851464644U,
			ExchangeTracingProviderAlreadyExists = 2532482654U,
			ErrorRpcHttpMustSpecifyExternalClientAuthenticationMethodOrDefaultAuthenticationMethod = 3214881135U,
			InvalidBackupLeaseLocation = 2759728920U,
			CouldNotFindAutodiscoverStandardAuthBindingTransportElement = 1259814674U,
			CasConfigurationCheckSuccess = 2028085072U,
			RetrievingGlobalThrottlingPolicy = 2923667921U,
			SetupComponentConfiguringLegacyMailbox = 4213166642U,
			VerboseFixingAddressBooksInNativeMode = 3083753440U,
			CasHealthEasScenarioCreateItem = 3305350853U,
			FfoWebServiceEcpComponentDescription = 3128424281U,
			SetupProgressStartingThrottlingService = 2922449898U,
			TransitionStateActive = 735377508U,
			UMCallAnsweringRuleDescriptionIf = 2369645597U,
			InvalidTransportRule = 2595151256U,
			ImapExternalServerSettings = 463879924U,
			ErrorNoPropertyWasModified = 4205633792U,
			DisclaimerText = 1689084926U,
			InterceptorWarningPathIgnored = 4122757518U,
			CannotCombineWildcardSenderAddress = 2496907143U,
			SetupProgressOwaInstantMessagingEnabled = 1411848455U,
			SetupProgressCleanupOldMailboxPlan = 1610376224U,
			InvalidRejectEnhancedStatus = 2063369946U,
			CouldNotFindLocalhostDirectoryEntryException = 2144801278U,
			TSCrashDumpsOnlyAvailableOnLocalMachine = 4142265347U,
			ConfirmSetSyncDaemonArbitrationConfig = 3195028184U,
			MustProvideValidSessionForFindingRequests = 199165212U,
			PopImapConnecting = 1218978020U,
			SetupComponentCommonTenantConfigLast = 2370061645U,
			InstallShareIISLogFileDirectoryTask = 1470772353U,
			ErrorBPAConfigDataLoad = 1367543679U,
			UninstallHealthManagerServiceTask = 4014797545U,
			MtrtEventSubmit = 504739579U,
			ErrorCertificateMissingPrivateKey = 291523223U,
			RecipientDomainStarOnPremiseOutboundConnector = 357993642U,
			CertificateStatusUntrusted = 3588438151U,
			SetupProgressStartingReplayService = 533012186U,
			InstallReplayServiceTask = 3162817800U,
			InvalidDirection = 2576923962U,
			SetupProgressUpdateDatabaseSettings = 3874457483U,
			ErrorCannotChangeLinkedProperty = 1104283461U,
			LanguagePackPerfCounterMergeStart = 57521374U,
			DefaultSharingPolicyName = 1825160064U,
			SetupProgressCreateClassificationDefinitionsContainer = 1322418917U,
			SecurityDescriptorBeingUpdatedMsg = 3650915108U,
			MtrtRequireDecryption = 2388010079U,
			ErrorTeamMailboxCanNotLinkSharePointByNonOwner = 1003347076U,
			ErrorMailboxPlanInvalidInThisRelease = 3391359806U,
			BadWordsPolicyNotEnabledIfBadWordsListNull = 2607048324U,
			ProgressTaskComplete = 3287132233U,
			SetupProgressDisableWMIRPCSS = 63291148U,
			OrgPrereqCheck = 188776009U,
			MtrtSetHeader = 2809852842U,
			CannotRunOnEdge = 1148485298U,
			InterceptorErrorConditionHeaderNameMissing = 5951564U,
			CasHealthOwaShortName = 2914613013U,
			PopImapDisconnecting = 3088693696U,
			WillNotCreateGlobalThrottlingPolicy = 4035129721U,
			FederationTrustHasOutdatedCertificates = 1864829159U,
			ErrorEnableNonUniversalGroup = 261927478U,
			ConversationsFailedToCreateConversationsFolder = 1686636202U,
			VerboseSaveADServerSettingsSucceed = 3993542306U,
			SetupProgressPerMBXPlanRoleAssignmentPolicy = 1291241716U,
			AllMapiTransactionsSucceeded = 454353554U,
			WarningRestrictionWithWrongGroupType = 3395234788U,
			SetupProgressShowInAddressListsEnabled = 162508716U,
			ComplianceSearchTimeoutError = 231799122U,
			OrganizationParamRequired = 3163689273U,
			ErrorMultipleDefaultRetentionPolicyTag = 243123253U,
			CouldNotGetMsoEndpoint = 2977205104U,
			MoveRequestIsMissing = 354404596U,
			ErrorCannotChangeAcceptMessagesFrom = 1723752717U,
			MessageTraceMinimumCriteriaFieldsInError = 2951176425U,
			ErrorCannotChangeHiddenFromAddressListsEnabled = 3158077333U,
			ErrorDefaultRoleAssignmentPolicyNotFound = 420723843U,
			InvalidOrgCapabilityParameter = 733779898U,
			JournalingReportNdrToSameAsJournalEmailAddress = 2835118191U,
			ErrorRpcHttpSSLOffloadingDisabled = 2900893440U,
			ContinueOnEmptySearchQuery = 3622201701U,
			UninstallingIMAP4Service = 417532052U,
			WarningReturnDefaultOrganizationThrottlingPolicy = 551608721U,
			ErrorStartAfterCanBeSetOnlyInQueued = 3200589103U,
			ClientAccessLocalPermissionsComponentDescription = 3524052893U,
			MailboxDatabaseIsDown = 1037163961U,
			SetupComponentClientAccessGlobalConfig = 1068896218U,
			JournalingExpiryDateAlreadyExpired = 1898301735U,
			ErrorTargetEndpointRequired = 3871360571U,
			SetupProgressRecreateCannedRBACRoleGroups = 2497315428U,
			StoppinggMSExchangeFDS = 3593053823U,
			MtrtModerateMessageByUser = 604566495U,
			LogonFailure = 1116614049U,
			ErrorImageImport = 850579312U,
			AddressRewriteInvalidIdentity = 3673139399U,
			NewPop3ConfigurationTask = 464677521U,
			ErrorActivationPreferenceNotAllowedWhenHostServerUnlinked = 702091437U,
			ArchiveConnectivityResultArchiveNotProvisioned = 1029805125U,
			SetupExchangeHostedFilteringPerimeterEnabled = 4161304777U,
			SetupComponentMidFileCopyCafe = 2614046954U,
			ErrorTargetDatabaseNotAllowedForRemotePush = 3269945312U,
			ErrorADOperationSucceededButMetabaseOperationFailed = 3182689518U,
			SetupSettingAdminToolsConfiguredVersion = 1677794547U,
			UMCallAnsweringRuleUnknownContact = 2089273302U,
			MtrtSetAuditSeverity = 4276932551U,
			ReservedString1 = 4054043086U,
			SetupComponentConfigPermissionsFrontendTransport = 979064683U,
			CasHealthOwaGotOwaLogonPage = 874781227U,
			ADAttributeOtherHomePhoneNumber = 856583401U,
			SubjectPrefix = 1100730082U,
			SendConnectorSourceServersNotSet = 3128145071U,
			ErrorInvalidAuditDelegateOperationType = 2396781446U,
			ErrorCannotMoveWellKnownPublicFolders = 2547668869U,
			NoFederationMetadataEpr = 2261801750U,
			SetupProcessCreateDefaultThrottlingPolicy = 1654271044U,
			ToplogyScanFailed = 1420937392U,
			CasHealthOwaTimeoutInternal = 159047272U,
			DisasterRecoveryClientAccessRoleDescription = 1631562655U,
			MailboxReplicationServiceDescription = 1297659643U,
			ErrorFolderTypeModified = 1167159339U,
			CasHealthWebAppLogonScenarioName = 2404626142U,
			InstallCentralAdminRoleDescription = 2706201571U,
			StoppingIMAP4Service = 1960367174U,
			SetupProgressSyncAccountsTimeBeforeDormant = 206924338U,
			ConfirmationMessageResetADServerSettings = 1625538986U,
			NoAuthenticatedServerUri = 377011883U,
			VirtualDirectoryTypeRequired = 1220824217U,
			ErrorSoftDeletedMailboxCanOnlyChangeLitigationHoldEnabled = 3691311357U,
			SetupProgressMSOSyncEnabled = 3695562421U,
			MtrtEventBadmail = 2016035929U,
			GetImap4ConfigurationTask = 1375131586U,
			ErrorRecipientViewRootEmptyAndViewEntireForestToFalse = 668469937U,
			ConfirmationMessageSetExchangeAssistance = 316585499U,
			UpdateServicePlanDescription = 3529494341U,
			StartReplService = 1588246230U,
			MtrtEventSpam = 2051672478U,
			CasHealthUriFoundViaAutodiscovery = 3437115628U,
			ErrorFederationCertificateNotSpecified = 511090707U,
			SetupProgressInstallDefaultMessageFilterContainer = 2633315000U,
			ErrorFileIsTooSmallForFingerprint = 568876522U,
			TestTeamMailboxSharepointCallUnderOauthTask = 3953390382U,
			CasHealthEcpLongName = 3605578582U,
			WarningModifySubjectValueNotSet = 35832858U,
			ErrorRemoteArchiveTargetDatabaseMustBeSpecifiedForRemoteArchiveOnlyPush = 1687432599U,
			InvalidNotifyAddress = 3592677092U,
			QuarantineActionNotAvailable = 4170515100U,
			MtrtRedirectMessage = 3362446484U,
			CasHealthOwaUriScopeHeader = 2100396363U,
			EndPointNotRegisteredException = 2085573869U,
			MapiTransactionDiagnosticTargetDatabaseDismounted = 2163517138U,
			SetupComponentConfiguringServiceHost = 1632566846U,
			DlpPolicyXmlInvalid = 1808397640U,
			SetupProgressEnableWMIRPCSS = 13270221U,
			SetupProgressPopulateDatabases = 2728374224U,
			VerboseNoExchangeServersUSG = 461830259U,
			RegisterFilterFailed = 1325604176U,
			ErrorCannotRemoveSpecialUser = 3707507579U,
			MailboxTransportDeliveryServiceDescription = 787262776U,
			DefaultAllUsers = 3322195502U,
			SetupProgressStoppingRemoteRegistryService = 2823758188U,
			UpdateDbcDeleteFilesInvalidParametersException = 996743220U,
			ErrorInvalidDateRangeCondition = 4204700933U,
			SetupProgressInstallDefaultEmailAddressPolicy = 3051316042U,
			SetupProgressStoppingDagMgmtService = 4041875300U,
			MoveStatusFailed = 3649145916U,
			CasHealthCalendarScenarioTestICal = 1094916016U,
			WarningSecurePipelineTracingPath = 1670347310U,
			EnableConfigCustomizationsDescription = 3931827059U,
			WrongLogLevel = 3046221789U,
			ErrorPublicFolderFree = 3359504671U,
			ErrorUMInvalidParameters = 1392508367U,
			ADAttributeCustomAttribute10 = 3374360575U,
			DlpPolicyDescriptionDescription = 2945221880U,
			SetupProgressStoppingThrottlingService = 3087625658U,
			CasHealthOwaNotOwaPage = 1419643475U,
			ErrorRpcHttpMustSpecifyExternalClientAuthenticationParameter = 1180865852U,
			InstallOSPRoleDescription = 3495070055U,
			AllTenantsScopedSessionNotSupported = 3955140957U,
			ErrorUnableToFindValidPublicFolderMailbox = 235837528U,
			ProgressChangeFsw = 1117213053U,
			ConfirmationMessageNewEdgeSyncMservConnectorOnLocalSite = 625706739U,
			StartAfterOrCompleteAfterCannotBeSetOnLegacyRequests = 3110567830U,
			MtrtRejectMessage = 3492150331U,
			WarningConnectingPrimaryAsSecondary = 2525505760U,
			MapiTransactionResultUndefined = 3206520672U,
			ArgumentNotSet = 207684870U,
			VerboseNoWriteAccessToExchangeServers = 54348676U,
			ResponseHeader = 1227806140U,
			ErrorCannotChangeResourceProperties = 686932030U,
			InstallingMSExchangeFDS = 3526228985U,
			ErrorEnableWindowsLiveIdForEnterpriseMailbox = 533673063U,
			SetupDiagnosticsServiceComponent = 1494601097U,
			CannotConfigureAdfsOwaWithoutEcpFirst = 2510042328U,
			InstallAdminAuditLogConfig = 717668237U,
			ErrorNotEnoughInformationToFindRequest = 2074533376U,
			SetupProgressStartingRemoteRegistryService = 2648400316U,
			ErrorProofOfOwnershipNotValid = 148513305U,
			ErrorFailedToGetCertificationUri = 1099315268U,
			InvalidClassification = 1505963751U,
			ErrorInvalidOperation = 2063677784U,
			SetupComponentRoleSetterBridgehead = 1876927882U,
			SetupProgressOwaExplicitLogonEnabled = 4037451409U,
			CannotModifyOneOffTemplates = 791976745U,
			ReplayLagPlayDownReasonNone = 3310722589U,
			DeviceBlocked = 3159442548U,
			GetRemoteAccountSyncCache = 3940866218U,
			UsingTargetMonitoringMailbox = 434580719U,
			SetupComponentMidFileCopyUnifiedMessaging = 3316189097U,
			StoppingHealthService = 2902832461U,
			RemovePerfCounters = 1027987732U,
			ErrorSharedConfigurationUpgradeNotSupported = 2819120138U,
			UMCallAnsweringRuleProvideTheCallerWithTheseOptions = 748625712U,
			TestSearchTestThreadTimeOut = 3097596739U,
			SetupComponentCommonTransportConfiguration = 4178554518U,
			ConfirmationMessageTestSmtpConnectivity = 3498944269U,
			UninstallingPOP3Service = 2342824031U,
			MigrationTypeDoesntMatchConnectionSettings = 245532275U,
			DebugStartInternalBeginProcessing = 2445398080U,
			SetupComponentPreSetupMailbox = 1147595104U,
			ADTopologyServiceDisplayName = 4230134658U,
			ExceptionInvalidIisVersion = 1949851943U,
			SendConnectorNonE12SourceAndTargetServers = 2889503651U,
			ErrorInvalidJPEGFormat = 4289383202U,
			MtrtEventDefer = 2322437519U,
			InvalidRmsTemplate = 2609648925U,
			CasHealthCalendarScenarioTestICalDesc = 1043688457U,
			SetPop3ConfigurationTask = 1748950543U,
			SetupProgressOwaOrganizationEnabled = 2200535965U,
			ClassificationRuleCollectionMissingRootElementViolation = 988117695U,
			ErrorDistributionGroupNamingPolicy = 2194749999U,
			ProgressStartUpdateOtherAD = 1566772861U,
			DlpRuleMustContainMessageContainsDataClassificationPredicate = 3204500204U,
			SetupProgressConfigureSystemMessageClassification = 3331859280U,
			BPAScanCompleted = 948483101U,
			WarningPublicFolderFree = 3365309049U,
			SetupExchangeHostedFilteringAdminCenterAvailabilityEnabled = 905413889U,
			DeleteMessageActionMustBeTheOnlyAction = 4116851739U,
			ClientAccessPerfCountersComponentDescription = 4172665002U,
			SMTPNotEnabledForTlsCertificate = 941932955U,
			MonitoringServiceDescription = 2809770327U,
			CasHealthWarnTrustAllCertificates = 2193807956U,
			ServiceUnavaiable = 2571441823U,
			ClassificationRuleCollectionConfigValidationUnexpectedContents = 3938903556U,
			ErrorEndTimeSmallerThanNow = 797610307U,
			FailedToStartRegSvr32 = 782503604U,
			ConfirmationMessageSetMapiVirtualDirectory = 452522079U,
			UseDagDefaultOnOffNone = 3602520180U,
			MultipleMsoSyncObjectsRetrieved = 4211012520U,
			EnableCertificateFederation = 1234571969U,
			ReplicationCheckResultPassed = 3962371391U,
			SetupComponentPreSetupUnifiedMessaging = 1533048402U,
			SetupProgressCreateTransportSettingsContainer = 3287674875U,
			VerboseFixingStart = 3964614477U,
			SetupProgressPublicFolderMailboxCountQuota = 938999630U,
			SetupProgressHostedOutboundSpamFilterPolicy = 2501038566U,
			ErrorArchiveRemoteArchiveCannotBeSpecifiedTogether = 2012379768U,
			CasHealthTaskNotRunOnExchangeServer = 3067186331U,
			WatchDogServiceDescription = 16215670U,
			FindingEventSources = 754559519U,
			SetupProgressPopEnabled = 4120295996U,
			ADAttributePOBox = 4260106383U,
			ErrorInstallationModeMustBeBuildToBuildUpgrade = 1680887904U,
			SetupProgressCreateSenderRepuationConfiguration = 637756306U,
			ErrorOnlyOneParameterMayBeUsed = 1228780278U,
			Away = 930407740U,
			ErrorOnlyForestWideAllowIsAllowed = 1372052369U,
			SetupProgressPerMBXPlanRetentionPolicyEnabled = 1830297210U,
			ErrorOabVirtualDirectoryNameIsImmutable = 3865997491U,
			SetupProgressStartingMailboxReplicationService = 94891499U,
			RFRIGetReferralScenario = 3477937254U,
			SetupProgressCreateCmdletExtensionAgentContainer = 4294363030U,
			TransportSyncManagerServiceDisplayName = 1941627535U,
			AutodiscoverScenario = 1694156056U,
			WipeSucceededNote = 1012539222U,
			SetupComponentPerfCountersBridgehead = 184445993U,
			RemoteExchangeVersionNotSupported = 1516604862U,
			ProgressDeletingLogFiles = 4235274244U,
			ErrorPatternCannotBeginWithWildcardMultiMatch = 1026730790U,
			WarningNoDefaultGAL = 4012037194U,
			BackSyncUrlInvalidProtcolFormat = 3712723548U,
			MSExchangeMGMTDescription = 1583857132U,
			TcpListenerCheckDesc = 957901814U,
			CannotRemoveDefaultAcceptedDomain = 1970107969U,
			ErrorMoveToArchiveAppliedToSystemFolder = 4066206809U,
			ErrorDisableJournalArchiveMailuserNotSoftDeleted = 3925057385U,
			MigrationCSVNotAllowedForRunningState = 972735676U,
			AboutToAddForeginOrgUSGToLocalAdminGroup = 23416362U,
			SetupComponentPrepareSharedConfig = 1817485482U,
			MtrtGenerateIncidentReport = 61461170U,
			SetRemoteAccountSyncCache = 3553998014U,
			FileNotFound = 2797904681U,
			CouldNotFindMailboxDatabaseById = 1819604532U,
			MobileDeviceLogEMailFailure = 24533818U,
			SetupProgressGenericComponent = 2213042884U,
			ErrorAuthentication = 1910710192U,
			TenantNotificationVerboseSendingEmail = 2795454743U,
			ErrorSettingErrorReportingEnabledtoNull = 2449740657U,
			InfoOverallWarning = 2770526255U,
			ErrorCannotRetrieveLocalForest = 2204861371U,
			TenantNotificationVerboseNotSendingEmailPastDay = 2574649442U,
			PhoneNumberUsedByOthers = 277780160U,
			UnSupportedPermissionGroupsForEdge = 1144873528U,
			ErrorMoveOabToTiFrondEndServer = 4043674320U,
			ErrorJPEGFileTooBig = 3117239164U,
			EdgeParameterNotValidOnHubRole = 2141139127U,
			SetupProgressAutoGroupPermissions = 4147328458U,
			UmLanguagePackInvalidExtraction = 513638219U,
			Info_MessageItemHasBeenDeleted = 1539690042U,
			ErrorMailboxSearchStorageTransient = 88947707U,
			SetupProgressSyncAccountsEnabled = 2687598256U,
			ErrorEwsAllowListAndEwsBlockListSpecified = 537295937U,
			ReplayServiceDisplayName = 865295007U,
			InterceptorErrorActionInvalid = 1686462850U,
			ErrorMetadataMustBeAbsoluteUrl = 2183464741U,
			ConnectorIncorrectUsageConnectorStillReferenced = 3780701529U,
			ResubmitRequestStateInvalid = 433327936U,
			CasHealthEasSyncDownTestItem = 1037175036U,
			CasHealthOwaUrlAndCredentialsArgumentError = 1897752555U,
			ExportFileNameMissing = 1323904189U,
			DlpPolicyStateStateInvalid = 3065080461U,
			SetServiceInstanceMapResultCodeUnknownError = 3051615604U,
			SetupProgressUpgradeLegacyGlobalObjects = 3621387192U,
			RolePublishingAuthor = 2309238384U,
			ConfirmationMessageRemoveMapiVirtualDirectory = 920938791U,
			SetupProgressAddSeverToDag = 3787373033U,
			SetupProgressDisableWMIInbound = 3723166912U,
			SetupProgressCreatingEdgeContainers = 2486066850U,
			InterceptorConfirmDelayAction = 2869755872U,
			RuleNameAlreadyExist = 1453324876U,
			UsageTypeInternet = 3052282420U,
			ADAttributeZipCode = 381216251U,
			CertificateFound = 3550551595U,
			MoveMailboxSourceCleanupTypeDeleteSourceNTAccount = 1484480947U,
			ErrorSiteMailboxCannotLoadAddressTemplate = 4273097132U,
			InfoDatacenterMode = 3460801308U,
			ErrorCouldNotStartFullSyncForFirstOrg = 3989217663U,
			ErrorPatternCannotEndWithWildcardMultiMatch = 2851315938U,
			FormsAuthenticationDeleteMarkErrorPathNotFound = 4068899631U,
			ErrorFederatedIdentityandPasswordTogether = 180031276U,
			VerboseFixingRecipientsOnE12AdminGroup = 4038565178U,
			IncomingServerTooLong = 664667065U,
			ErrorPublicFolderReferralIncludeSelf = 177272670U,
			ErrorEwsEnforceAllowListAndEwsBlockListSpecified = 3320504571U,
			Error_EndDateCheck = 2943002002U,
			HybridMailflowNoOrganizationError = 3806563425U,
			ADAttributeHomePhoneNumber = 1457839961U,
			NoFederationTrust = 1797820726U,
			ErrorSyncMailboxWithMasterAccountSidNull = 386400541U,
			ErrorCannotMovePublicFoldersFromDifferentSourceMailbox = 3061164332U,
			Word = 4143129766U,
			CasHealthOwaGetFbaPageNonOKCode = 1434682002U,
			ParameterErrorForInternetUsage = 170573252U,
			LanguagePackCfgDescription = 3623745587U,
			UnifiedMessagingPrereqCheck = 1281443429U,
			ReservedString2 = 4054043087U,
			ErrorRpcHttpInvalidSwitchCombo = 3623354108U,
			CasHealthEasScenarioSyncTestItem = 3287501662U,
			MessageTypeVoicemail = 117825870U,
			UninstallMonitoringRoleDescription = 2331920480U,
			ShouldSpecifyEitherIdentityOrMailbox = 1264080170U,
			InvalidTemplate = 2685432525U,
			ADAttributeCustomAttribute14 = 1048761747U,
			TenantExecutionNotSupported = 2695346913U,
			SetupComponentStartingGatewayServices = 3666531412U,
			ErrorModifyJournalArchiveAddress = 1607246833U,
			MapiTransactionResultMdbMoved = 3777271156U,
			UninstallMailboxRoleDescription = 2837902138U,
			RepairUrgencyProhibited = 3785106612U,
			ErrorCannotRestoreFromPublicToPrivateMailbox = 2343523210U,
			ErrorMoveToDestinationFolderInvalid = 1301715689U,
			InvalidOperationIdentityWithShowDeletion = 1361742503U,
			ErrorTenantIsUpgrading = 1698089187U,
			JournalingParameterErrorGccTenantSettingNotExist = 2785027967U,
			LiveIdAuthenticationResultFailure = 4220433130U,
			FDS_UM_PerfCountersComponentDescription = 3393259516U,
			GzipLowDoesNotUseDynamicCompression = 3315552988U,
			ProgressStatusFinished = 1964968671U,
			CouldNotFindObjectById = 796416024U,
			UMCallAnsweringRuleInvalidValue = 1951165280U,
			StopReplService = 1083707598U,
			ErrorNoMatchedUserFound = 4037085182U,
			ErrorVirtualDirectoryNameNull = 3270764744U,
			ErrorDefaultHostedContentFilterPolicyCannotBeDeleted = 534542334U,
			SettingRequest = 3468207191U,
			ErrorReportingEnabledLegalMessage = 1878646175U,
			ClassificationRuleCollectionAlreadyExists = 3950782380U,
			ExportFileNameShouldNotBeSet = 3231976114U,
			ADAttributeState = 3882899654U,
			PhoneNumberAllowedOnlyWithDialplanWithCountryCode = 2283093077U,
			SetupComponentDataStorageConfiguration = 1653262113U,
			SetMailboxForwardingAddressConfirmationMessage = 163354931U,
			SetupProgressPermissionManagementEnabled = 2371482883U,
			SetImap4ConfigurationTask = 4052366510U,
			ErrorSourceEndpointRequired = 766796983U,
			LPPrepareInstallationSource = 735969708U,
			EADCWeakSourceCreds = 2661979141U,
			idCreateActiveSyncOraganizationSettings = 731066465U,
			ErrorPartnerApplicationEmptyRealmWhenNotUseAuthServer = 2469839629U,
			SetupProgressStoppingHTTPFilterService = 986846419U,
			Pop3ServiceDescription = 4253494883U,
			ErrorParametersRequiredForNewTenant = 261580922U,
			ErrorBookmarkIndexOutOfRange = 385792810U,
			RetentionPolicyNotEnabled = 1085159024U,
			ErrorRpcHttpMustSpecifyEitherInternalOrExternalHostName = 3250910474U,
			CompletePublicFolderMigrationBatchRequiresSourceLockDown = 420398710U,
			ErrorPublicFolderMigrationCompletedPreviously = 3561171250U,
			DataMartTimeoutException = 2772872006U,
			ProgressDeletingEdbFile = 1181325280U,
			DebugStartSetDatabase = 1570002996U,
			SearchServiceDisplayName = 4275861342U,
			ErrorCannotOperateOnOrgInCurrentState = 2155767711U,
			SetupProgressPerMBXPlanOWAPolicyEnabled = 1719064209U,
			SetupProgressStartingASUpdateService = 421167968U,
			SetupProgressStartingWMIProviderService = 533423045U,
			InvalidRequestJob = 1424238063U,
			MalboxFolderRightsFolderVisible = 1340234760U,
			SuspendSgcTimeout = 3941297540U,
			NonUniqueCategoryObject = 1794306721U,
			SendConnectorValidTargetServerNotFound = 3908311118U,
			WarningLegacyExchangeServer = 4274945649U,
			IntegratedVDirDisabledWarning = 1461816102U,
			SetupProgressStoppingReplayService = 582063934U,
			CasHealthOwaLogonScenarioDescription = 241712969U,
			AdminGroupsNotFoundException = 4253171919U,
			DiscoveryMailboxDisplayName = 2532440427U,
			ErrorAssignmentMethodWithoutRoleAssignee = 226086397U,
			CasHealthCouldNotObtainFqdn = 4255815683U,
			ErrorSetPasswordWithoutPermission = 1218462432U,
			SetupProgressUpdateMailboxes = 4247430353U,
			ErrorMissLinkedDomainController = 3679340841U,
			CasHealthOwaGetLogoffStart = 4287593485U,
			DebugEndCreateMemberRequest = 1824522771U,
			SetupProgressNewTLSCertificate = 1872464746U,
			UninstallingMSExchangeFDS = 390386316U,
			WarningLastPublicFolderDatabase = 292732930U,
			DNSRoutingEnabledMustBeSpecifiedForAuthMechanism = 3437030666U,
			SetupProgressCreateModeratedRecipients = 3479749483U,
			FileUploadServiceDisplayName = 4032370005U,
			DegubStartConnectingToDomainServices = 2940137032U,
			InvalidMessageIdentity = 488863134U,
			ComplianceSearchTaskCreationError = 2545086143U,
			ErrorSourceMailboxDatabaseVersionUnsupported = 1295832983U,
			UninstallClientAccessIisWebServiceExtensions = 2730360995U,
			UninstallExchangeStreamingOpticsTask = 1873803728U,
			SetupComponentConfiguringCore = 2499030806U,
			ADAttributeStreet = 2002903510U,
			SmtpConnectivityNoneSucceeded = 2993918660U,
			SetupComponentStartingMailboxServices = 2767568162U,
			FrontEndTransportServiceDescription = 318642788U,
			InvalidPageSize = 577523851U,
			SetupProgressCreateApplicationMailDestinationsContainer = 531065537U,
			ProvisioningRequestAlreadyCanceling = 692347082U,
			SetupProgressStoppingCredentialService = 1574844528U,
			SetupProgressImapEnabled = 596322096U,
			ProgressValidation = 1369158086U,
			ErrorRecipientContainerInvalidOrNotExists = 4216445905U,
			DomainsNotFoundException = 2063735667U,
			SetupProgressCreateMoveToArchiveRetentionPolicyTag = 872788106U,
			FailedToFindFederationTrust = 2954545082U,
			MailboxConnectScenario = 3818749374U,
			ElcUserConfigurationConfigurationItemNotAvailable = 4201996528U,
			OutlookProtectionRuleInvalidPriority = 28165407U,
			CouldNotFindEWSStandardAuthBindingTransportElement = 2616555063U,
			SetupProgressCreateArbitrationMailboxRetentionPolicy = 133450481U,
			AddressRewriteIdentityNotFound = 3692329177U,
			ErrorFailedToGetRacAndClcTenant = 30730169U,
			RemoveCertificateFederation = 1056311972U,
			ErrorWMAFileTooBig = 2034871165U,
			ADAttributeCustomAttribute3 = 1377545169U,
			IMSAdminHelperGetDataPathsCouldNotAllocateException = 1499192082U,
			CasHealthMustSpecifyCas = 784747152U,
			ConfirmationMessageSetSupervisionPolicy = 2311033855U,
			ErrorSetMailboxLitigationHoldDuration = 467522453U,
			AddressBookServiceDisplayName = 2485903499U,
			MigrationNoLargeItemLimitForLocalBatches = 3342681064U,
			SetupProgressConfigureAntispamObjects = 59123757U,
			ADAttributeDepartment = 3367615085U,
			ErrorFreeBusyResponsibility = 3295799601U,
			SetupComponentCommonGlobalConfig = 1920246746U,
			MetabaseSetPropertiesFailure = 3214028675U,
			ErrorLinkedMailboxesAreNotSupported = 350309502U,
			ExchangeSettingsEnableUsage = 3930521376U,
			DebugStartUpnUniquenessCheck = 1649334496U,
			MigrationCannotBeCompleted = 574372347U,
			IsapiDLLPathNotFoundException = 1904936963U,
			MtrtMessageFail = 2522223732U,
			CannotRemoveSharingPolicyWithUsersAssigned = 3694845743U,
			MissingDataClassificationsParameter = 1485874038U,
			Debug = 882462221U,
			ErrorFromSyncClientAndMembersUsedTogether = 2158213497U,
			NoAction = 161711511U,
			ErrorSuspendWRTCForOnlineOnly = 222253302U,
			ErrorMinimumAccountExpiry = 1533807700U,
			ComInteropTlbNotFound = 3367745963U,
			InstallContentIndexingServiceTask = 1442001356U,
			SetupComponentSMTPConfiguration = 2361559256U,
			InvalidOrganization = 906204482U,
			SyncNowAlreadyStartedException = 2291874325U,
			WarningPropertiesIgnored = 3812135455U,
			MoveMailboxGenerateWatsonDump = 3862568128U,
			AuthenticationMethodFba = 815668002U,
			WarningGeneratingMailboxIsNullOABWillNotBeGenerated = 3850237910U,
			WarningForceMessage = 1520502444U,
			SetupProgressCreateRBACContainer = 3119406771U,
			MetadataPropertyIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix = 1122863290U,
			InvalidStartAndEndTime = 4040765572U,
			CasHealthOwaUrlAndCasArgumentError = 4135619444U,
			WarnAboutStarAcceptedDomain = 2494275330U,
			NoTPDsImported = 2071494620U,
			SetupProgressCleanEmptyDirs = 1741046566U,
			SearchServiceDescription = 3879378277U,
			SetupComponentPostSetupBridgehead = 2801279682U,
			ProgressSavingADObject = 1756765869U,
			TenantOrganizationMissing2 = 1928317617U,
			MultipleCoexistenceDomainsFoundException = 4085285360U,
			ErrorNotEnoughPermissions = 3468299751U,
			CasHealthOwaGetAuthSucceeded = 963382869U,
			ErrorCannotUnlinkMailboxPlanForTenant = 379322642U,
			FDServiceDisplayName = 2954647688U,
			CasHealthUserNameHeader = 867272512U,
			ErrorInboxRuleHasNoAction = 248554005U,
			ErrorNotSupportInCrossOrg = 2162195429U,
			VerboseSyncTaskNullCookie = 3931432863U,
			SetupdProgressPrivacyLink = 3040152642U,
			SetupProgressTemplateTenant = 3017742918U,
			CasHealthOwaConnectionError = 2524348032U,
			SetupProgressStoppingInformationStoreService = 3804447234U,
			SetupProgressGatewayPerfCounters = 1498335696U,
			FailedToUnregisterContentIndexingBinaries = 920999072U,
			CreateDefaultActiveSyncMailboxPolicy = 3415113328U,
			SetupProgressCreateAutoDiscoverContainer = 2110592425U,
			FBAServiceDescription = 640336054U,
			AirSyncReportingProgressActivity = 3665160963U,
			SetupProgressStoppingExchangeMGMTService = 3640701559U,
			TaskBothConfigurationOnlyAndQuorumOnlySpecified = 3023752340U,
			ErrorCorruptFederationMetadata = 2676557537U,
			SetupProgressCreateAutoGroup = 899504670U,
			SetupProgressCleanupFiles = 674748907U,
			CasHealthWebAppNoCasMbxUmHtArgumentError = 3478112858U,
			SetupProgressStoppingSystemAttendantService = 3677088551U,
			ErrorBPAMoreThanOnePrereqServerSpecified = 1843600203U,
			ErrorDotNetInstallPathNotFound = 3418928659U,
			InstallImap4BeServiceTask = 1880877723U,
			MigrationMustSpecifyEmailOrMailboxDN = 4240176319U,
			CannotLocateTargetServiceEndpoint = 1465077572U,
			UnregisterFilterFailed = 362822361U,
			RegSvr32FailedToExit = 3201264196U,
			ComplianceAuditServiceNotUninstalled = 2773342531U,
			SetupProgressUninstallTransportLogSearchService = 3914082886U,
			SetupProgressDisableFastSearchSeedingPortRule = 2879434796U,
			GlobalLocatorServiceResultSuccess = 640518096U,
			DagNetworkInconsistentRoleException = 3548951548U,
			SetInstallPathInAppConfig = 3295286714U,
			ConfirmationMessageRemoveAutodiscoverVirtualDirectory = 2320102244U,
			DomainControllerName = 1874104103U,
			UninstallADTopologyServiceTask = 2631968966U,
			SmtpConnectivityAllTested = 2887275141U,
			ErrorInboxRuleNotSupported = 1174103519U,
			Verbose = 2666067648U,
			ContinueToRemoveHoldForInactive = 998944703U,
			CasHealthLatencyHeader = 2363277368U,
			ADAttributeFaxNumber = 2182511137U,
			SetupProgressCreateOutlookContainer = 4242268310U,
			InvalidCategoryObject = 195087670U,
			OfficeDataLoaderServiceDisplayName = 3886507265U,
			MoveStatusSucceeded = 1353995902U,
			LoadCredentialsSuccess = 1546277393U,
			LegacyIncludeOriginalMailParameterWillBeUpgraded = 2631471741U,
			FileShareQuorumCheckDesc = 3725160909U,
			ClientAccessComponentDescription = 2928336084U,
			StopADTopologyService = 928033673U,
			ErrorCannotChangeRoleGroupType = 872037930U,
			ErrorInvalidCasting = 1020220U,
			SetupProgressCreatingNewPublicFolderDatabase = 3437177865U,
			SortedAvailablePatches = 3327710720U,
			WarningSetMailboxLitigationHoldDuration = 2038537031U,
			ADUserIsMissingData = 343634016U,
			ExpiryCertMessage = 3219751466U,
			ContentIndexAlreadyExists = 2978007281U,
			ImportCertificateBase64DataInvalid = 2460780396U,
			InfoUL = 2469672135U,
			ErrorLocalMachineIsNotExchangeServer = 3855259485U,
			ErrorEwsEnforceBlockListAndEwsAllowListSpecified = 349869371U,
			MoveMailboxSourceCleanupTypeCreateSourceContact = 2062290861U,
			MRSHealthPassed = 1971406120U,
			ErrorAccessingTransportSettings = 1453329754U,
			PopImapLoggingOff = 1846483964U,
			ConfirmationMessageRemoveProvisioningWebServiceVirtualDirectory = 332094276U,
			MtrtMessageSubmitDetailMessage = 205573600U,
			TheOnlySourceMailboxIsTheTargetMailbox = 3906240272U,
			UnifiedMessagingRoleDisplayName = 126744571U,
			TpdAlreadyImported = 1510867730U,
			SetupProgressStoppingNotificationsBrokerService = 1468831408U,
			CannotBypassDomainNameValidation = 3641402715U,
			InitialOrIncrementalMigrationArgument = 1289162260U,
			VerboseBeginFingerprint = 2183205705U,
			MailboxReplicationServiceNotRunning = 2774892227U,
			AddressBookServiceDescription = 3099642004U,
			MonitoringCorrelationServiceDescription = 2462782643U,
			ErrorCannotRetrieveLocalSite = 1325930305U,
			SetupProgressDiscoveryMailboxes = 1390596538U,
			ErrorApprovalApplicationIdentityUnsupported = 1525201652U,
			CasHealthOwaInternalTrustCertificate = 3997887818U,
			EnableCertificateServiceNotInstalled = 3297360946U,
			SetupProgressCreateOutlookProtectionRulesContainer = 369010750U,
			MailboxReplicationServiceIsRunning = 2836471846U,
			PolicyNeededForAutotagging = 3403924458U,
			CasHealthOwaLogonScenarioName = 2088391844U,
			RemoveSecondaryDomainDescription = 2256240594U,
			SetupProgressSkipResetPasswordOnFirstLogonEnabled = 1225301128U,
			RejectMessageParameterWillBeIgnored = 2799440992U,
			ReplayLagStatusLabelConfigured = 934287899U,
			WarningTooManyLegacyGALsCreated = 3487518861U,
			ErrorLegacyPublicFolderDatabaseExist = 1803359682U,
			UninstallMailboxTransportDeliveryServiceTask = 3014123757U,
			LiveIdAuthenticationResultUndefined = 703660436U,
			AspnetConfigFileNotFound = 2198248626U,
			CannotMoveOabToE15OrLaterServer = 3520531162U,
			ErrorNotSupportedModifyMultivaluedProperties = 2910100378U,
			RuleCollectionInvalid = 2531302401U,
			IsNetlogonRunningScenario = 433694853U,
			TestCNGPrivateKeyNotSupported = 2523315401U,
			Info_MessageItemHasBeenCreated = 3719036545U,
			SetupProgressCleanManagement = 1226169742U,
			ErrorSystemAttendantObjectMissing = 4209927473U,
			InvalidAction = 1466544691U,
			NewServiceConnectionPointInvalidParameters = 2037665150U,
			OauthIsTurnedOff = 1441009660U,
			AutoDiscoverUrlIsBad = 2041792354U,
			ErrorLocalAccountPartitionRequiredForTT = 691468660U,
			InvalidFqdnFromAD = 536922083U,
			VerboseStartAuditLogSearch = 478157661U,
			CasHealthCalendarLongName = 307758658U,
			ErrorWhileFolderSync = 671469622U,
			Pop3ServiceDisplayName = 2976017118U,
			ErrorGetSyncDeletedRecipientRetryFailed = 57133306U,
			ErrorChangingBadwordsTransportRule = 1794509022U,
			DatacenterEnvironmentOnlyOperationException = 3636625232U,
			RemoveOrganizationFailWithExistingMailboxes = 2284358260U,
			ErrorFederationEnabledIsImmutable = 310110990U,
			SetupComponentConfiguringInformationStore = 3043193198U,
			PopImapComponentDescription = 855500179U,
			MoveMailboxSourceCleanupTypeDeleteSourceMailbox = 3924025634U,
			ReplayLagStatusLabelEnabled = 302613486U,
			FileDistributionServiceControlComponentDescription = 1777480851U,
			VerboseVerifyRecipientViewRootSucceed = 2388930131U,
			NewOrganizationDescription = 2499808701U,
			ArchiveConnectivityResultPrimaryFailure = 3347295290U,
			ConfirmationMessageEnableAntiSpamUpdates = 2993783194U,
			WarningUseConfigurationOnly = 3791304781U,
			IsapiExtensionMustHavePhysicalPathException = 2888337457U,
			SetMailboxSearchActivity = 3051861517U,
			SetupProgressCreateFederationContainer = 748775328U,
			ExchangeTracingProviderInstalledSuccess = 204171309U,
			SetupProgressStartingServiceHostService = 3571315384U,
			MigrationStartAfterIncorrectMigrationType = 2383416297U,
			SetupProgressCreateRulesContainer = 531644470U,
			ThrottlingServiceDisplayName = 446352617U,
			CasHealthTestNewUserDataCenterScriptName = 4208434869U,
			MtrtModerateMessageByManager = 1406904313U,
			CasHealthInstructResetCredentials = 1372186092U,
			ErrorInvalidDlpPolicyTemplateIdentity = 3029376667U,
			RoleReviewer = 1140300925U,
			StartSetupProcess = 1700516872U,
			SMSMWIEnabledAllowedOnlyOnE164ConsumerDialplan = 1990198525U,
			NoKeyInformationInImportedTrustedPublishingDomain = 2135255345U,
			ErrorOrganizationIdentityRequired = 418330348U,
			TransportSyncManagerServiceNotInstalled = 1927181059U,
			ErrorMissingWindowsLiveIdHandler = 2827020246U,
			MigrationJobCorrupted = 1363030539U,
			SetupProgressCreateDSNContainerHierarcy = 2950414539U,
			ErrorEndTimeSmallerThanStartTime = 2630227016U,
			StoppingMonitoringService = 3117364089U,
			MtrtAddCopyToRecipient = 3900097179U,
			SetupProgressCreateMailboxContainers = 910877028U,
			SetupComponentCafeGlobalConfig = 230534278U,
			ErrorDatabaseCountInServerExceedLimit = 52273023U,
			NoKeyIDTypeInImportedTrustedPublishingDomain = 3883167156U,
			ErrorChangePartnerApplicationDirectTrust = 3122739895U,
			ProtectedServiceHostDisplayName = 245723146U,
			EcpAuthenticationNotMatchOwaWarning = 2024633455U,
			SetupProgressStartingSystemAttendantService = 712435719U,
			InterceptorErrorEventInvalid = 2862785662U,
			NewPerfCounters = 4219526338U,
			CalendarAnalysisMixedModeNotSupported = 2534963029U,
			MapiSubmitSystemProbeFail = 472758664U,
			FinishedUpdatingMFLFiles = 3414041514U,
			FailedToChangeServiceConfig = 4222707329U,
			JournalNdrMailboxWarning = 1166503263U,
			DeleteOperation = 1777122322U,
			TenantNotificationVerboseNotSendingEmailNoRecipients = 2154198407U,
			InternalJournalRuleScope = 2765375592U,
			TestMigrationServerConnectionFailed = 3649628048U,
			CannotRemoveDefaultSharingPolicy = 3520915432U,
			DatabaseOffline = 3608246202U,
			FileAlreadyExists = 622543112U,
			ErrorCannotLoadFingerprintCreator = 4025218279U,
			VerboseChangeWinrmStartType = 2349505779U,
			ConfiguringMailboxSystemAttendantDependentTasks = 3476101420U,
			StartingMSExchangeFDS = 4251301146U,
			ErrorInvalidExcludedCmdletPattern = 3588458122U,
			CasHealthTaskCasHasNoTopologySite = 353738526U,
			DisasterRecoveryGatewayRoleDescription = 3068214134U,
			GlobalLocatorServiceResultUndefined = 3584192845U,
			SetupProgressCustomScriptsEnabled = 1226048266U,
			MessageTypeCalendaring = 1903193717U,
			InstallRecoveryActionArbiterServiceTask = 4235097279U,
			InvalidNameOrDescriptionForDefaultLocale = 595624881U,
			ErrorRoomPasswordMustBeSetWhenCreatingARoomADAccount = 93941597U,
			ExceptionProductInfoRequired = 3931018787U,
			VerboseSucceedToPrepopulateCache = 3287357166U,
			NotMailboxDatabase = 2662348268U,
			Error_CheckClientInfo = 3572711316U,
			DelegationTokenRequestSuccess = 1236397787U,
			MOWADeviceTypePrefix = 2708098864U,
			FFoDisablePrepareSct = 4184366094U,
			SetupProgressConfiguringOAB = 439240951U,
			ErrorDefaultSpamConfigCannotBeDeleted = 841216837U,
			SetupComponentPreSetupFrontendTransport = 3037105461U,
			SetupComponentPostSetupGateway = 4110715451U,
			ValidatingTestCasConnectivityRunInstance = 2803101125U,
			InstallTranscodingServiceEx = 3558380023U,
			GlobalJournalRuleScope = 1033795742U,
			ActiveManagerCheckDesc = 822308736U,
			SetupComponentConfigurationBridgehead = 358249099U,
			ClassificationRuleCollectionDecryptionFailure = 3141727619U,
			ProgressRestoringDatabaseStatus = 385783597U,
			CasHealthOwaTimeoutExternal = 3789968890U,
			TestSearchCheckMailbox = 3237406418U,
			SendConnectorDashdashAddressSpaceNotUnique = 1194595183U,
			UninstallImap4BeServiceTask = 3826931934U,
			CopyStatusDisconnectedAndHealthy = 3985647980U,
			WarningADServerSettingsUnchanged = 717219190U,
			CreateMailboxSession = 3254817118U,
			ErrorNoNextCertificate = 3130711463U,
			TokenValidationFailed = 1068084403U,
			CannotCreateAuditLogSearchDueToSearchQuota = 3005712405U,
			SavingCalendarLogs = 3470766201U,
			ReplayServiceDescription = 4096720402U,
			ADAttributeNotes = 863112602U,
			SetupProgressLinkOutOfTheBoxMrmTags = 1264026888U,
			InstallPop3ServiceTask = 2720557853U,
			ErrorMailboxSearchStoragePermanent = 3329534613U,
			ErrorCannotSetRecipientContainer = 3137925175U,
			SmimeConfigAmbiguous = 1237939725U,
			CasHealthOwaAuthResponseHeaderMissing = 3930981558U,
			ErrorFailedRmsVersionCheck = 2844363599U,
			ErrorParametersMandatory = 1685032169U,
			ServiceHostServiceControlComponentDescription = 3242409340U,
			ErrorRefreshMetadataOptionNotAllowed = 459738740U,
			ErrorFailedToGetULEnterprise = 2244149146U,
			InfoTpdFromRmsOnlineChecked = 4132471740U,
			CasHealthOwaLogonFailed = 1065601728U,
			DelegateRoleTypeServerAdmin = 408932233U,
			SetupProgressCreateMailboxPlan = 731624525U,
			OwaMetabaseGetPropertiesFailure = 1147746662U,
			ErrorDatabaseOffline = 2582405772U,
			SetupProgressCreatingNewMailboxDatabase = 2413236052U,
			MailboxPrereqCheck = 3672835011U,
			OnPremisesConfigurationObjectNotFound = 3458987765U,
			RoleAuthor = 3892568161U,
			PrepareDomainDescription = 3571909379U,
			OwaNameParameterIgnored = 2749659911U,
			ErrorInvalidPostMasterAddress = 2336909403U,
			SendConnectorDashdashSmarthostNotUnique = 838914092U,
			InvalidDlpPolicyParameter = 3886180752U,
			UninstallBridgeheadRoleDescription = 487743183U,
			OldVersionMailboxSkipped = 3783722197U,
			CannotRemoveUMCertificate = 3731283738U,
			SetupProcessCreateDefaultDataClassificationConfig = 2845114771U,
			PhoneNumberInvalidLength = 2520624322U,
			ErrorPathTooLong = 250472943U,
			CertificateStatusRevocationCheckFailure = 3383748791U,
			MoveMailboxSourceCleanupTypeNone = 3244203554U,
			ConfirmationMessageTestFederationTrustCertificate = 2284227198U,
			ConfirmationMessageRemoveMicrosoftExchangeRecipient = 1401920462U,
			ScenarioAutoDiscoverSoapProvider = 3914981870U,
			CouldNotFindEWSStandardAuthBinding = 3642085168U,
			CasHealthPortnumber = 2303334587U,
			ErrorElcPolicyToPreE12 = 1680424794U,
			CasHealthEasScenarioFolderSync = 2738624741U,
			ErrorMoveOabBetweenTwoTiServers = 3505749236U,
			DiscoveryManagementSecurityGroupNotFound = 2716009035U,
			ReleaseAgentBinaryReference = 2849847834U,
			SetupComponentConfiguringMSARPSService = 4267871022U,
			DisasterRecoveryBridgeheadRoleDescription = 3089160909U,
			SetupComponentConfiguringRpcProxy = 1797920U,
			VerboseFixingDynamicDistributionGroupFilterMetadata = 4141119452U,
			SetupProgressEnableWMIOutbound = 2694277878U,
			EmptySearchQuery = 2374542673U,
			CasHealthOwaReturnedErrorPage = 1029533142U,
			SpecifiedOUNotUnique = 979072870U,
			ErrorNoDefaultMailTipTranslationSpecified = 1294778787U,
			SetupProgressTeamMailboxCountQuota = 4036417902U,
			ErrorPartnerApplicationRealmNotFoundInAuthServer = 1845875730U,
			ExchangeTrustedSubsystemDescription = 2447683441U,
			InstallingLanguages = 364234330U,
			CannotOnlySpecifyCredential = 988376401U,
			FrontendTransportPrereqCheck = 212774136U,
			SettingMoveRequest = 2272693956U,
			TenantGuidNotIdentified = 1996694683U,
			InfoTemplate = 784370740U,
			AllGroupMembers = 4142133581U,
			JournalNdrMailboxInJournalRuleJournalEmailAddress = 3726632542U,
			SetupComponentConfiguringGatewaySettings = 667561628U,
			AuthenticationMethodBasic = 508689909U,
			SetupComponentConfiguringContentIndexing = 404165634U,
			OperationNotAllowed = 808776120U,
			EnableMessageHistory = 3080147272U,
			NoFoldersInMailbox = 3690733839U,
			WarningInternalLicensingDisabled = 3533711711U,
			MapiTransactionDiagnosticTargetDatabaseNotAttached = 3955111949U,
			BridgeheadExchangeCertificateComponentDescription = 2197368288U,
			CatchAllRecipientNotAllowedForNonAuthoritativeAcceptedDomains = 1280818475U,
			UninstallMomConnectorServiceTask = 876326020U,
			ExsetdataOrganizationName = 3230913595U,
			ErrorAccountDisabledForUserMailbox = 2755453831U,
			SetupProgressStoppingUMService = 3362908635U,
			ErrorFailedToGetULTenant = 3964929519U,
			CasHealthOwaAuthFailInternal = 4077893373U,
			InstallMigrationWorkflowServiceTask = 404966124U,
			ActiveDirectorySearchViaADDriverScenario = 2428243352U,
			ADTopologyServiceDescription = 835092827U,
			GetHealthReportProgressFinished = 450527367U,
			DatabaseChecksFailed = 3481422259U,
			CopyStatusDisconnectedAndResynchronizing = 3655046083U,
			ErrorEwsValidatorFailed = 1653552528U,
			IPListEntryTypeMismatch = 1137715195U,
			OrganizationWide = 832308282U,
			ErrorNonExistentDefaultContactsFolder = 2028770649U,
			CustomCannotBeUsedForPermissionGroups = 314238422U,
			MapiTransactionAbortedMsg = 2794545475U,
			ErrorDefaultHostedConnectionFilterPolicyCannotBeDeleted = 1689076287U,
			CertAuthWithoutSSLError = 2484407530U,
			NeedEitherAssemblyPathOrName = 3221965754U,
			CannotFindTestUser = 3874701191U,
			MalboxFolderRightsEditAllItems = 2484130891U,
			CertificateStatusPendingRequest = 2502489235U,
			AddressRewriteExternalAddressExists = 2626534131U,
			ErrorMoveDatabasePathInvalidOnReplicated = 2951010618U,
			CasTransactionResultFailure = 2832128882U,
			RoleOwner = 3816006969U,
			ConfirmationMessageTestIRMConfiguration = 3581069082U,
			RejectMessageActionMustBeTheOnlyAction = 3708149033U,
			VerboseIgnoreDefaultScope = 4050757435U,
			InstallFreeBusyFolderAlreadyExists = 3988131606U,
			ADAttributeUserLogonName = 1452889642U,
			CertificateStatusInvalid = 1662594798U,
			NewDagCompletedSuccessfully = 2375600040U,
			Error_CheckClientIntent = 1848155062U,
			MediumPriorityChecksFailed = 3726385721U,
			ConfirmationMessageSetHybridMailflow = 279800153U,
			BPATestSystemHealthTaskName = 3721169246U,
			ErrorMissingNetIDWhenBypassWLID = 1463063580U,
			InvalidFqdn = 1408328594U,
			ErrorExecutingUserIsNull = 4074802050U,
			MapiTransactionErrorMsgNoMailboxMdbDismounted = 3947810800U,
			NotEnoughPrioritiesAvailable = 132709086U,
			InformationSkippedAsForAutodiscover = 3816781481U,
			ErrorTargetServicePlanHasNoMatchingMailboxPlan = 2123565360U,
			TenantAlreadyHasFinalizedMigration = 3400182072U,
			ErrorCouldNotFindMigrationEndpoint = 2405332414U,
			WillContinueProcessing = 2204523380U,
			ScenarioExchangeWebServices = 4031371403U,
			FDS_GM_PerfCountersComponentDescription = 1123438282U,
			AssistantsServiceDescription = 2589611372U,
			SetupProgressMaxReceiveTransportQuota = 3302502416U,
			FailedToRetrieveAuditLogSearch = 714510073U,
			ADAttributeCountry = 3600528589U,
			MapiTransactionResultFailure = 3698488318U,
			RemoveResubmiRequestMessage = 4171039939U,
			CasHealthOwaPingScenarioDescription = 981821282U,
			DlpPolicyContainsEmptyKeywords = 4188600390U,
			RoleDoesNotSupportExchangeCertificateTasksException = 1653862842U,
			RunningAspNetRegIis = 3457665177U,
			MultipleOnPremisesOrganizationsFoundException = 172756948U,
			SetupProgressStoppingTransportLogSearchService = 4077307460U,
			CopyStatusFailedAndSuspended = 1765158362U,
			ErrorStorageMailboxDatabaseVersionUnsupported = 313226775U,
			ProvisioningRequestAlreadyStarted = 1282955967U,
			CasHealthOwaDoLanguageSelection = 827778289U,
			SetupProgressStartingW3SVCService = 1272200597U,
			NotFederated = 2888966445U,
			ImportDlpPolicyFileDataIsNull = 1645878456U,
			SetupProgressCreateDefaultOWAMailboxPolicy = 300076344U,
			StartPostFileCopyDescription = 1790949389U,
			ErrorNoAccountNamespace = 148851043U,
			Imap4BeServiceDisplayName = 594514822U,
			MessageTypeOof = 2129610537U,
			MtrtAddManagerAsRecipient = 3889527190U,
			ErrorInvalidBase64String = 3952057831U,
			ErrorSuspendCommentWithoutSuspend = 1865584991U,
			CasHealthLatency = 3400784257U,
			BridgeheadRoleDisplayName = 1134594294U,
			ErrorEnterpriseOrgOutOfDate = 2683567092U,
			ErrorElcUserConfigurationServiceCall = 1646161068U,
			ErrorAssociatedUserMailboxExistInDC = 3916272972U,
			ErrorPropertyParameter = 4118882660U,
			ErrorMsnIsNotSupportedInEnterprise = 2865766755U,
			LongAddressesEnabledOnEdge = 1813104937U,
			ComplianceAuditServiceDescription = 950609671U,
			InfoRmsOnlineAuthenticationCertificateChecked = 435421099U,
			ErrorSoftDeletedParmatersConflict = 3054507024U,
			DefaultGlobalAddressList = 3476845520U,
			NoCASE15SP1ServersFoundException = 3267662260U,
			UnableToRetrieveArchivePolicyTag = 813640644U,
			ErrorParametersCannotHaveEmbeddedDot = 2415151346U,
			SetupProgressCreateAcceptedDomainsContainer = 812478835U,
			ContinueMountWhenDBFilesNotExist = 3880512861U,
			ExceptionRetryIntervalInvalid = 2781055473U,
			InvalidRuleName = 2267758972U,
			DetermineSourceMailbox = 261889570U,
			ProgressCopyingEdbFile = 2442798609U,
			MoveStatusSkipped = 3694944833U,
			SetupProgressStartingHygieneUpdateService = 76607383U,
			IsIntegQueueFull = 2022973157U,
			ErrorInvalidEndpointParameterReasonUsedForConnectionTest = 1528176827U,
			StartPostSetupDescription = 4133650633U,
			StatusSpecifiedForProvisionedServer = 447887202U,
			DatabasesReplayKeepingUpCheckDesc = 2444726760U,
			RemoveRuleSyncAcrossDifferentVersionsNeeded = 1050054139U,
			LocalFederatedDomainsAreMissingFromTheRemoteOrganizationRelationsipDomains = 2062802331U,
			DetailsTemplateMailboxAgent = 3186800467U,
			CalendarNotificationConfirmation = 2218121730U,
			InstallComplianceServiceTask = 2638175612U,
			ErrorTpdCheckingFailed = 3829198285U,
			OpenDomainRoutingDisabled = 3919059708U,
			BPALoadingLocalConfiguration = 3326356690U,
			UninstallFfoPrimingServiceTask = 4116327307U,
			SetupProgressStartingNotificationsBrokerService = 1006245152U,
			ErrorCannotHavePrimaryInDatacenterAndArchiveOnPremise = 1449863534U,
			MtrtRequireEncryption = 2829778253U,
			ErrorFailedRmsVersionCheckInitialization = 4083067559U,
			HybridMailflowInboundConnectorComment = 1825525944U,
			CopyStatusMounted = 623586765U,
			CouldNotFindEWSService = 121298733U,
			ErrorNotEnoughInformationToFindUniqueRequest = 1384159399U,
			DomainControllerNotSpecifiedException = 1907503788U,
			ErrorWebSiteNullOrEmpty = 384890306U,
			ProtectedServiceHostServiceControlComponentDescription = 2746111946U,
			RemoveOrganizationFailWithSharedConfigurationBacklinks = 2256278254U,
			InternalTransportCertificateCorruptedInADOnHub = 87194845U,
			ErrorNoDefaultPFDatabaseForTenant = 508070510U,
			ExceptionPerfCounterInvalidDefinitionFile = 312913212U,
			PhoneNumberReachQuota = 4277689054U,
			SetupProgressInitializeExchangeConfigurationContainer = 248449646U,
			ErrorUserNull = 899968010U,
			OrgIsntOptinError = 2681771342U,
			SetupProgressMailPublicFolderCountQuota = 1580103065U,
			CannotRunDeliveryAgentConnectorTaskOnEdge = 177812025U,
			CouldNotGetExecutingUser = 1970632681U,
			NoUpdatesDirectorySpecified = 1941112294U,
			SetupProgressDisableWMIOutbound = 193193577U,
			ValidatingUserObject = 199751719U,
			SetupProgressAddressListsEnabled = 622930654U,
			SetupComponentAllADRolesPrecompileManagementBinaries = 4063229747U,
			NotifySenderAndRejectMessageShouldBeSingletonAction = 2115663408U,
			ServiceNameAs = 4104369074U,
			MultipleWebServicesExternalUrlsFound = 2367546289U,
			ErrorCannotRemoveMigrationUserFromPublicFolderBatch = 895980775U,
			RemoteContinuousReplication = 1397279617U,
			CasHealthOwaAuthMethodSeparator = 6301028U,
			DagNetworkSubnetAssignmentIncomplete = 946664064U,
			GetPop3ConfigurationTask = 3404236667U,
			UninstallTransportSyncManagerServiceTask = 2578482429U,
			RegSvr32NotFound = 4127908197U,
			RPSSvcNotRunning = 2369302933U,
			ConfirmationMessageUnconfigureWSManIISHosting = 790081152U,
			ConfirmationTestAssistantHealth = 3556665161U,
			ErrorPerfcountersInvalid = 1382192131U,
			ReplicationCheckWarningsLabel = 2720600917U,
			ElcUserConfigurationServiceBindingNotAvailable = 438361403U,
			UninstallFrontendTransportRoleDescription = 1249227945U,
			SetupProgressStartingTransportSyncManagerService = 2409098904U,
			ErrorAlsEncounteredUnexpectedException = 404296754U,
			InvalidEventType = 2524982981U,
			ErrorOffboardingDisabled = 2832690601U,
			SetupProgressOwaSmsEnabled = 2462705091U,
			E4eLicensingIsDisabledEnableRule = 621468991U,
			IsNTDSRunningScenario = 3142946342U,
			SetupProgressGenericPerfCounters = 2902028717U,
			MomConnectorServiceDescription = 1301020495U,
			ErrorCannotFindMoveRequestWithStatusNone = 2892001738U,
			SendConnectorDashdashSmarthostNotOffEdge = 1564322603U,
			ProgressCompleting = 1954290077U,
			SetupProgressInstallTransportLogSearchService = 3723147943U,
			GetProtocolLogNeedsRecipients = 951795433U,
			ClusterNetworkCheckDesc = 813491343U,
			SetupComponentConfiguringRpcClientAccessProtocol = 4099222219U,
			ErrorWSManRegistryCorrupted = 3862950059U,
			InvalidTestAccountRequest = 696846567U,
			ErrorCannotFindTargetDeliveryDomain = 1302065573U,
			MailboxRoleDisplayName = 3319509477U,
			SetupComponentConfiguringInfoWorker = 2823472669U,
			ClientAccessIisWebServiceExtensionsDescription = 1290199067U,
			ErrorManageDelegation2ProofDomainOwnership = 2429358254U,
			CasHealthOwaFbaAuthTypeNotExpected = 404014232U,
			ImportCertificateDataInvalid = 3559101633U,
			CannotSpecifyBothAllDomainsAndDomain = 1752382112U,
			RegisterComInteropTlbTask = 740001268U,
			ErrorThrottlingPolicyMustBeSpecified = 1440534643U,
			NotifySenderActionRequiresMcdcPredicate = 2147095286U,
			ErrorCannotDisableFederation = 2997921680U,
			ConfirmationMessageAuthNewInProgress = 3659149162U,
			SyncNowFailedToRunException = 1638365639U,
			CannotRemoveApprovalApplicationWithMailboxes = 141232568U,
			RuleNameAlreadyExists = 3117240671U,
			DefaultAllModernGroups = 2476236185U,
			RejectText = 1178729042U,
			ErrorInvalidWMAFormat = 2481283129U,
			PartialVerisonMatch = 2344272450U,
			CasHealthOwaUriHeader = 2359011225U,
			SetupProgressStartingMailboxAssistantService = 2765443951U,
			VerboseCreatePSFanInProvider = 268688472U,
			JournalingParameterErrorFullReportWithoutGcc = 607657692U,
			MigrationSettingCompeteAfterWithCurrentCompleteAfterInLessThanOneHour = 1469181716U,
			ErrorCannotGenerateSiteMailboxAlias = 1734288143U,
			ResumeSgcTimeout = 2837997609U,
			ProgressActivityNewFederationTrust = 3892071893U,
			ErrorOnboardingDisabled = 268582115U,
			CompletedAceActivity = 1990022743U,
			ErrorSpecifyOrganizatonAndContainerBoth = 2301337168U,
			UnableToRetrieveManagedFolder = 2018204159U,
			AddressRewriteWildcardWarning = 1492863700U,
			ForeignConnectorNullOrEmptyDropDirectory = 2288135166U,
			SetupComponentConfiguringAddressBookService = 1967624551U,
			ErrorTemplatesMayNotContainImmutableIds = 1042788951U,
			AuthenticationMethodWindowsIntegrated = 1724897479U,
			StartOrganizationUpgradeDescription = 3472707977U,
			SetupProgressSyncAccountsMirroredAccountsEnabled = 1422915642U,
			ErrorManagedByCannotBeEmpty = 1980863497U,
			VerifyStoreServiceExists = 3248052869U,
			DefaultUser = 1379659384U,
			ErrorDumpsterTagWrongRetentionAction = 1466854827U,
			ErrorAuthCannotDeleteCurrent = 325513897U,
			ConfirmationMessageNewSearchDocumentFormat = 2357970530U,
			ServerLocatorServiceCheckDesc = 671509911U,
			AuthenticationMethodUnknown = 4027839955U,
			FileDistributionServiceComponentDescription = 3080984634U,
			MtrtMessageDefer = 3004107700U,
			OrganizationNotSpecified = 342374076U,
			ErrorDlpPolicyNameOrTemplateParameterMustBeSpecified = 55296709U,
			NoValidIssuerCertificate = 2813852905U,
			UninstallMigrationWorkflowServiceTask = 2180704617U,
			MustSpecifyEitherAccessOrExtendedRightsException = 2707578357U,
			RpcClientAccessServiceDescription = 4069016795U,
			ConfirmationMessageNewMapiVirtualDirectory = 639127653U,
			VerboseResolvingRecipientOrganizationalUnitScope = 726111090U,
			AutodiscoverySuccess = 2674130276U,
			CentralAdminServiceDescription = 1906118891U,
			ErrorCannotSetDowngradedExchangeServerAuthOnEdge = 3351161488U,
			MigrationCsvStreamParameterInvalid = 722352284U,
			InstallMailSubmissionServiceTask = 4138250312U,
			SetupComponentMalwareFiltering = 3726353961U,
			ProtolcolWarnTrustAllCertificates = 3198793815U,
			ErrorLocalNotForTenantAdmins = 1508593011U,
			AttemptToMakeUserLogon = 967574322U,
			IisTasksWebSiteValidationProperty = 944738592U,
			ErrorIncrementalSyncIntervalCannotBeSetOnNonIncrementalRequests = 1604061446U,
			ErrorCannotRestoreFromPrivateToPublicMailbox = 2930685350U,
			DelegateRoleTypeRecipientAdmin = 3366659407U,
			SharedCacheServiceDisplayName = 2793254613U,
			MtrtNoDetailInformation = 231085887U,
			ErrorLoadCertificateOnEdge = 2046913201U,
			AllPolicyAssignees = 1625001871U,
			ConfirmationTurnOffJournalArchiving = 307488803U,
			ConfirmationMessageSetSenderIdConfig = 2953142896U,
			SetupProgressPrecompilingBinaries = 3904912496U,
			ProgressCompletingSearch = 2177919315U,
			CallerIsInMyDefaultContactsFolder = 977931768U,
			SetupProgressMessageTrackingPermissions = 4078434446U,
			SetupProgressStartingUMService = 449814027U,
			RequestIsMissing = 38404619U,
			ConfirmationMessageSetADServerSettings = 394328647U,
			DeviceOk = 278718718U,
			MountStatusMounted = 2963429141U,
			LeaseExpired = 199062377U,
			ThirdPartyReplCheckDesc = 1585616693U,
			CMCConnectorRequiresTenantScopedInboundConnector = 2741314546U,
			SetupProgressStartingWMIService = 62533178U,
			VerboseCheckRequiredRegistryKeys = 3513112714U,
			VerboseStartResolvingUsers = 63979149U,
			InfoCreatePL = 1913407550U,
			ConfirmationMessageDisableSendConnector = 89007683U,
			UsageTypePartner = 3599602255U,
			ErrorInvalidMailboxAuditLogSearchCriteria = 3121249817U,
			ErrorInvalidGroupTypeForPublicToGroups = 3258178327U,
			SetupProgressCreateArbitrationMailbox = 3971688957U,
			ArchiveDisabledError = 2604883106U,
			SSTFileSizeExceedLimit = 567195498U,
			WarningOABWithoutDistribution = 2830472790U,
			MtrtReportSeverityLevelMed = 2608506884U,
			InvalidDlpRoleAccess = 1373356377U,
			VerboseRestartWSManService = 2772713742U,
			ConfirmationMessageConfigureWSManIISHosting = 1369963769U,
			ErrorAggregatedMailboxGuidNotSpecified = 1235407621U,
			MobileDeviceLogSuccess = 685862647U,
			TestOutboundOauthLog = 2947423393U,
			UninstallMonitoringCorrelationServiceTask = 3586374252U,
			UseDagDefaultOnOffOn = 1297632601U,
			SetupProgressFastSearchSeedingPortRule = 3226135540U,
			RemoveRemoteAccountPolicyFailedWithExistingMailboxes = 2825905091U,
			BPAUpdateCheckCompleted = 3204861685U,
			CasHealthDirectPushAndSyncAggregateScenarioDescription = 2573144003U,
			MalboxFolderRightsFolderOwner = 244505583U,
			ErrorParentIISPathNull = 3015360437U,
			ErrorFailedToGetRacAndClcEnterprise = 597851718U,
			MessageTracingClientServiceDisplayName = 1000659622U,
			ErrorTenantNeedsUpgradeFirst = 95305143U,
			DelegationTokenValidationSuccess = 830584157U,
			WarningNoAuthServerWithDefaultAuthorizationEndpoint = 2245832939U,
			ErrorMapiVirtualDirectoryMustBeLocalServerToReset = 687010727U,
			ExternalAddress = 1739145871U,
			UninstallFBAServiceTask = 750158307U,
			TenantOrganizationMissing = 3689107639U,
			TestTeamMailboxOutboundOauthLog = 1611112302U,
			SetupProgressStoppingEdgeSyncService = 2512251895U,
			MailboxLogonScenario = 3072624127U,
			ConversationsFailedToCreateAllItemsFolder = 820016583U,
			BootstrapAccountExpireTooSoon = 1252200145U,
			NewDagConfigurationCompletedSuccessfully = 3194476650U,
			RetryLaterException = 2432721285U,
			ConfigureSchema = 3193785025U,
			UninstallMessageTracingClientServiceTask = 1994155502U,
			SetupProgressStoppingWMIProviderService = 957004625U,
			FinishedCopyingOwaLPFiles = 2431239667U,
			TenantNotificationTestFirstOrgNotSupported = 1553663172U,
			ErrorTeamMailboxCannotIdentifyTheUser = 2434431800U,
			SetupProgressCreateModeratedRecipientsRetentionPolicyTag = 897711225U,
			GetHealthReportProgressActivity = 46998244U,
			ConfirmationExportAutoDiscoverConfig = 2104106561U,
			ErrorFailedToGetTemplateEnterprise = 532834943U,
			DebugStartCreateMemberRequest = 3454341798U,
			CannotModifyPhotoBecauseMailboxIsInTransit = 3252566213U,
			InfoOrganizationContextChecked = 1543209017U,
			CasHealthWarnCredenditialsPassedInTheClear = 3522024953U,
			ForwardSyncServiceDescription = 2192189891U,
			CasHealthScenarioAutodiscoverCas = 466554668U,
			MigrationCompleteAfterAndAutoCompleteExclusive = 2999804354U,
			ADAttributeCity = 4226527350U,
			CouldNotFindAutodiscoverStandardAuthBinding = 3639987903U,
			ErrorNeedOrgIdentity = 3766651652U,
			UninstallPop3ServiceTask = 2473572750U,
			DlpPolicyXmlMissingElements = 2723129778U,
			CasHealthOwaGetAuthStart = 727073936U,
			CasHealthTestNewUserHostingScriptName = 147207876U,
			ConfirmationMessageTestActiveDirectoryConnectivity = 386650992U,
			ErrorMissingInternalUrlInRemoteScenario = 2301252957U,
			RetrieveFederationMetadataFailed = 2774736401U,
			DataClassificationConfigFirstOrgNotSupported = 1981219267U,
			SetSecondaryDomainDescription = 1244562342U,
			ErrorInvalidLogonType = 3522975510U,
			MtrtSetSpamConfidenceLevel = 2350887172U,
			ErrorInvalidOSPServerRole = 136434832U,
			ErrorModifyTiServerNotAllowed = 1360678989U,
			MediumPriorityChecksWarning = 1824789360U,
			InstallCentralAdminServiceTask = 1169555177U,
			WarningRoleAssignmentWithDatabaseScopeApplicableOnlyInSP = 3264150393U,
			DDGFilterIsNonoptimized = 1932795447U,
			ErrorModifyE12DatabaseNotAllowed = 2358053276U,
			ErrorWebObjOrPropertiesNull = 4019033326U,
			ProgressStopUpdateOtherAD = 2478684369U,
			ContentIndexServiceDisplayName = 3538356643U,
			ErrorEmptyFsmoRoleOwnerAttribute = 3742321691U,
			ErrorSetGroupMailboxAddMembersOtherUser = 2732113732U,
			UninstallOSPRoleDescription = 639504132U,
			ErrorInvalidDlpPolicyIdentity = 3238542439U,
			MtrtApplyClassification = 3076603065U,
			ConfirmationMessageSetRecipientFilterConfig = 2836523615U,
			ADAttributeCustomAttribute13 = 1808276634U,
			ErrorSessionNotFound = 1247715429U,
			CopyStatusDisconnected = 2831161206U,
			CannotSpecifyBothDoNotUpdateAndForceUpdate = 864464091U,
			ErrorsDomainNotReserved = 394967746U,
			PowerShellComponentDescription = 4181924872U,
			Error_SentRepresentingRemoved = 979596793U,
			JournalNdrMailboxCannotBeNull = 561049406U,
			BPADownloadingFailed = 203910820U,
			SkippedUpdatingMFLFiles = 613469788U,
			ErrorBPAOutFileNotFound = 3141042970U,
			ErrorFileTypeIsUnsupported = 1069447725U,
			ClusterRpcCheckDesc = 61834792U,
			SetupProgressOrganizationalQueryBaseDNEnabled = 3869111566U,
			ErrorNoActiveDCForProvisioningReconciliationCookie = 1958782279U,
			UMCallAnsweringRuleCallbackLater = 2688759287U,
			ActiveSyncMetabaseIsapiUninstallFailure = 2179844603U,
			ADAttributeCompany = 2891753468U,
			SetupProgressStartingHTTPFilterService = 4210711027U,
			AttachmentFilterEntryExists = 1723932345U,
			NullServerObject = 1880703947U,
			TooManyFederationTrust = 2146343540U,
			CalendarSave = 2101033087U,
			SetupComponentPreSetupOSP = 1260493142U,
			ErrorUseDatabaseRetentionDefaultsCanOnlySetToFalse = 2999415054U,
			TransportCommonServiceControlComponentDescription = 3229133469U,
			MsiPropertyTooLarge = 1263734293U,
			ArchiveConnectivityResultSuccess = 3574175325U,
			FailedToRegisterContentIndexingBinaries = 8956383U,
			ErrorRmsOnlinePrerequisites = 689745244U,
			ErrorServerNameModified = 1561303831U,
			MailSubmissionServiceDescription = 2874562042U,
			VerboseFixingAddressBookFilterMetadata = 416983059U,
			ErrorMovingToOldExchangeDatabaseUnsupported = 1485895935U,
			ErrorOnlyDefaultTagAllowCustomizedMessageClass = 3494585454U,
			DagFswInternalErrorFswObjectNotInitialized = 2628736153U,
			ChunkingEnabledSettingConflict = 3593430692U,
			CafeLocalPermissionsComponentDescription = 418834457U,
			CasHealthGetFolderScenarioDescription = 3764294661U,
			ConfirmationMessageTestTenantMonitoringPerfCounters = 1822933486U,
			SetupComponentTransportGlobalConfig = 2588683306U,
			UpdateDbcCatalogOnlyAndDatabaseOnlyAreMutuallyExclusiveException = 3225666107U,
			GetHealthReportProgressStarting = 3803388745U,
			Pop3BeServiceDisplayName = 4242555427U,
			SupervisionPolicyAmbiguous = 857660825U,
			ProgressStartUpdateAD = 2498994945U,
			DagMgmtServiceDisplayName = 3529576605U,
			IncludeKeywordStatisticsParameterConflict = 3852766979U,
			MtrtReportSeverityLevelLow = 188799712U,
			ClassificationRuleCollectionIllegalScopedSetOperation = 2326537993U,
			MigrationMustSpecifyEmailOrMailboxDNOrMailboxPermission = 3300531825U,
			WarningMessageNewTPRDag = 1839699905U,
			JournalingParameterErrorGccWithOrganization = 2438278052U,
			SetupProgressDisableMigrationRPCFirewallRule = 3215740127U,
			AlsEmailBodyCriteria = 1647196573U,
			SetServiceInstanceMapReturnedNull = 1094497050U,
			CopyStatusNotConfigured = 1310067130U,
			ClassificationRuleCollectionInvalidObject = 1545448632U,
			CannotResolveSiteRedirectionTemplateMessage = 873295235U,
			SetupComponentConfiguringPublicFolder = 2730604640U,
			CasHealthNoTuplesToTest = 271598664U,
			SetupProgressStoppingProtectedServiceHostService = 3555678614U,
			SetupComponentDomainGlobalConfig = 903687533U,
			DagFswUnableToDetermineFrontendTransportServerException = 3079435902U,
			ErrorCannotCreateRuleWithoutCondition = 1833931616U,
			CopyStatusServiceDown = 729299916U,
			ErrorNoNewSiteFolderDatabaseFound = 1569212399U,
			CasHealthAllTransactionsSucceeded = 2152281250U,
			AdminToolsPrereqCheck = 2530019387U,
			SetupPrereqAnalysisInProgress = 3289631126U,
			UninstallReplayServiceTask = 1308578877U,
			SetupComponentMidFileCopyAdminTools = 1009247039U,
			FailedToAccessIrmConfiguration = 2491313992U,
			CopyStatusUnknown = 1960737953U,
			ErrorBPAOutDirectoryNotFound = 3080450531U,
			OmaVDirNotFound = 2727848737U,
			SetupProgressInstallingHealthManager = 1050709066U,
			ErrorMultipleProvisioningPolicyExist = 1294165706U,
			UninstallAdminToolsRoleDescription = 2926020684U,
			InvalidCertAuthValue = 2419369378U,
			ConfirmImportExchangeCertificateDirect = 2778932812U,
			ErrorUseDatabaseQuotaDefaultsCanOnlySetToFalse = 2445661152U,
			ErrorAuthInvalidNewEffectiveDate = 2215510534U,
			UsageTypeInternal = 1082913928U,
			InvalidParamIdentityHasWildcardException = 2314884551U,
			WarningFixedMissingGALEntry = 3450980076U,
			GlobalLocatorServiceSuccess = 3734111801U,
			ErrorMoveWebDistributionEnabledOabToTiServer = 1063568409U,
			CasHealthEasFolderSyncScenarioDescription = 545033587U,
			ConfirmationMessageSetResourceConfig = 209792268U,
			UMCallAnsweringRuleCheckAutomaticReplies = 2903762331U,
			ErrorCreatePublicFolderTree = 3689959917U,
			TopologyServiceResultUndefined = 1410063427U,
			ErrorSharedConfigurationRequiresServicePlan = 1613686497U,
			SomeMdbsWereMovedWhileRunningPrefix = 4192463412U,
			InstallingPOP3Service = 1690028294U,
			AddressRewriteInternalAddressExists = 347605313U,
			CannotSetDefaultTPD = 1406451776U,
			SetupProgressStartingHealthManagerService = 474554696U,
			SetupProgressRemovingLegacySystemMailboxUsers = 1799234143U,
			StoppingPOP3Service = 596346937U,
			InvalidPredicate = 3627783386U,
			VerboseEnableBasicAuthForWSMan = 1331970650U,
			ErrorSharePointUrlNotWhitelisted = 556563131U,
			InfoOverallFail = 958569967U,
			ErrorArchiveMainCouldNotBeProvisioned = 1413655130U,
			ConfirmationMessageSetServiceInstanceMap = 3950900668U,
			UserWithoutFederatedDomain = 2834370617U,
			CasHealthConfirmTestActiveSyncLocalMachine = 3770893258U,
			TasksRpcListenerCheckDesc = 3118684996U,
			ExcludeDuplicateMessagesParameterConflict = 1920559542U,
			ErrorDomainServicesNotYetImplemented = 3974455509U,
			RequestNameAvailabilityComplete = 3657087972U,
			MigrationMustSpecifyEmailOrMailboxDNOrSkipVerification = 613419658U,
			ErrorInvalidFfoServerRole = 2291096419U,
			ErrorNotEnoughInformationToFindRequestOfCorrectType = 443059279U,
			UninstallCafeIisWebServiceExtensions = 3842763887U,
			ServerNameConflict = 171191748U,
			NewPolicyTipConfigInvalidUrl = 224474141U,
			Free = 3323263744U,
			TpdIsHSMEncrypted = 627463594U,
			ConfirmationMessageSetPerimeterConfig = 2638906221U,
			ErrorRetentionActionNowAllowed = 3770469704U,
			ChangePasswordInvalidCredentials = 866665304U,
			ConfirmationMessageSetAttachmentfilterlistconfig = 3607766719U,
			ConfirmationMessageNewAutodiscoverVirtualDirectory = 1259731166U,
			UnifiedMessagingDatacenterComponentDescription = 1779766570U,
			ConfirmationGetLitigationHoldInformation = 2044072828U,
			FfoPrimingServiceDisplayName = 2021664053U,
			Error_StartDateCheck = 3028030101U,
			WrongSubscriptionIdentity = 3648433740U,
			ConfirmationMessageTestExchangeSearch = 2646427859U,
			RoleEditor = 3727590521U,
			ErrorUnknownPartition = 124266088U,
			ConfirmationMessageImportTransportRuleCollection = 2416344434U,
			RegasmNotFound = 3878533180U,
			SetServiceInstanceMapResultCodeObjectNotFound = 2744256804U,
			FederationTrustValid = 996496831U,
			MoveAlreadyCanceled = 387143530U,
			ADAttributeCustomAttribute7 = 1377545165U,
			ErrorOnlyForestWideBlockIsAllowed = 1649886345U,
			InstallHealthManagerServiceTask = 3240013436U,
			NoComponentInfoFilesException = 1316394624U,
			SetupComponentMTAConfiguration = 2945806020U,
			MountStatusUnknown = 487566617U,
			ErrorVerificationCodeTooManyFailed = 2896321434U,
			CustomerFeedbackEnabledError = 1955637848U,
			MigrationReportNotFound = 549458741U,
			InitializedWithInvalidObjectId = 859003787U,
			DatabaseSeedStatusLabelRead = 1576804522U,
			UnableToDiscoverMailboxPermission = 2856567438U,
			SuppressXAnonymousTlsEnabledWithoutDowngradedExchangeAuth = 987792256U,
			MtrtRouteMessageHighRisk = 821173418U,
			SetupProgressFederationEnabled = 2742380346U,
			CasHealthEasTestTypeAndAutodiscoverArgumentError = 400464704U,
			ErrorCreatedAfterLaterThanToday = 1062718164U,
			FileUploadServiceDescription = 936853662U,
			CasHealthPerformanceCounterName = 3238755484U,
			InstallIisWebServiceExtensionNoChanges = 3676775874U,
			ErrorExceededMaxiumNumberOfDatabasesPerServer = 638769072U,
			UMMailboxPolicySetFaxServerURIError = 3569022346U,
			UninstallCafeRoleDescription = 2680788449U,
			RemoveHuntGroupsLinkedToTenantDialPlans = 3830301655U,
			ErrorCannotCreateFingerprint = 2663637685U,
			InvalidEndDate = 173476074U,
			InstallFreeBusyFolderCannotGetOrganizationContainer = 1372004637U,
			ErrorSetPublicFolderMailMailEnabledFalse = 2472985937U,
			SetupProgressConfigurePerimeterConfig = 2357719805U,
			SetupProgressStartingProtectedServiceHostService = 1766283082U,
			SetupProgressIssueWarningMaiboxQuota = 546863019U,
			InvalidPredicateSequence = 2194177847U,
			InstallAdminToolsRoleDescription = 3514896639U,
			ProgressCopyingCopySystemFiles = 1058454737U,
			ErrorBPAOutFileSave = 1474103016U,
			ErrorInvalidParametersForLocalPublicFolderMailboxMigration = 747339504U,
			HybridIsEnabledOnPremisesButTenantIsNotUpgraded = 2489458996U,
			SetupProgressRemovingDefaultTransportAgents = 810697535U,
			ConfirmationMessageGetSearchDocumentFormat = 3560370784U,
			SendConnectorUpdatingnteropUsgMembership = 3473154256U,
			SetupProgressMailboxCountQuota = 829912647U,
			CreateExchangePrincipalObject = 557019716U,
			ExceptionInvalidUILevel = 25826658U,
			UninstallComplianceAuditServiceTask = 2734851240U,
			ParameterVersionMismatch = 929006655U,
			ErrorAddGroupToItself = 2252143100U,
			SetupProgressSetPermissionsOnAdminGroup = 4151447213U,
			UninstallDagMgmtServiceTask = 3660237507U,
			SendConnectorMixedSourceServerRoles = 2284256781U,
			CasHealthNoteSecureAccess = 3315533230U,
			WarningCleanExistingPipelineTracingContent = 2395829035U,
			CasHealthOwaGetLogoffSucceeded = 269194386U,
			InfoRacAndClc = 3146481U,
			ConfirmationMessageSetAuthConfig = 1293016842U,
			CatalogDoesntExist = 1761523563U,
			ErrorAuthServiceNameNotBlank = 709632357U,
			ConfirmationMessageSetSenderReputationConfig = 4287515218U,
			SetupComponentPreSetupBridgehead = 2708013991U,
			ProcessUtilizationManagerServiceDisplayName = 1322669528U,
			PromptToOverwriteDlpPoliciesOnImport = 2244936124U,
			NewReceiveConnectorAddingPermissionsDoneMsg = 885922192U,
			MessageTraceMinimumCriteriaFieldsInErrorDeliveryStatus = 375841809U,
			UninstallClientAccessRoleDescription = 3194886917U,
			SetupComponentConfiguringDatacenterMailbox = 642572136U,
			UserNotInAd = 2260693300U,
			SendConnectorInvalidSourceIPAddress = 3872838286U,
			WarningDelegatesExceededOutlookLimit = 3135809837U,
			PatternContainsLeadingTrailingWhiteSpace = 161838924U,
			DuplicateInitialDomain = 2131142349U,
			AddressRewriteUnrecognizedAddress = 4188767105U,
			AmbiguousDatabaseAndExchangeServerParameters = 3504853238U,
			ADAttributeOffice = 1927573801U,
			ExportCertificateAs12KeyNotExportable = 1352231058U,
			InvalidParamSpecifyIdentityOrDagException = 2585600455U,
			StartingW3SVC = 2829601938U,
			MigrationWorkflowServiceDisplayName = 1811867995U,
			Imap4ServiceDisplayName = 1988030389U,
			ProvisioningRequestCorrupted = 2882860628U,
			MapiTransactionErrorMsgNoMailbox = 118205473U,
			InPlaceHoldNotAllowedForPublicFolders = 1054930625U,
			SetupProgressGALEnabled = 978499145U,
			CasHealthTestMultipleMailboxServersFound = 2963803423U,
			ErrorTooManyGALsCreated = 1952683340U,
			AddOutlookTenantAcceptedDomains = 3222875934U,
			CannotRemoveSendConnectorCertificate = 816116421U,
			CopyStatusSeedingSource = 2160282563U,
			SetOpenDomainRoutingOnHotmailMigrateDomain = 2266221568U,
			ErrorSystemFolderPathNotUniqueUnderTheSameNode = 3765206323U,
			CannotLocateWebRequestorEndpoint = 2288430532U,
			ErrorSiteNotSpecifiedAndLocalSiteNotFound = 4085511058U,
			TransportSyncManagerServiceNotUninstalled = 1855335654U,
			InstallExchangeStreamingOpticsTask = 10041749U,
			MountStatusDismounted = 853303979U,
			AutoDiscoverIsNotSetInOrgRelationship = 766671470U,
			ExchangeSettingsGuidUsage = 3326397734U,
			ExternalRelayDomainsAreNotAllowedInDatacenterAndFfo = 3910774036U,
			ComplianceSearchInitializingMessage = 1003253425U,
			ServerNotHubOrEdge = 4217102173U,
			ErrorCannotProvideNetIDAndSmtpAddress = 174447511U,
			SetupProgressRemovingAdamInstance = 4159134257U,
			ErrorRpcHttpBasicAuthOverHttpDisallowed = 2414509351U,
			SetupComponentPreSetupAllRoles = 332418900U,
			ProgressCopying = 974762364U,
			ErrorSubscriptionFileMustBeXml = 266823016U,
			CasHealthEcpScenarioTestWebService = 1065704932U,
			ErrorNewTeamMailboxParameter = 3903594392U,
			RmsSharedIdentityLocalComputerNotFound = 4196969280U,
			CalendarVDirDisabledWarning = 968773825U,
			UninstallForwardSyncServiceTask = 2888187612U,
			InstallImap4ServiceTask = 1587845536U,
			ConfirmationMessageExportJournalRuleCollection = 2633433681U,
			MtrtRightsProtectMessage = 949894156U,
			CannotSetBothEhfAndFfoRoutingId = 472135594U,
			InstallCentralAdminFrontEndRoleDescription = 158415293U,
			DebugStartSaveDataObject = 1698201925U,
			RpcClientAccessServiceControlComponentDescription = 1804822115U,
			FfoReportingMessage = 266949762U,
			WarningPromotingSecondaryToPrimary = 1889388206U,
			TestMailflowNoSystemMailbox = 1952429157U,
			FailedToCreateEwsConnection = 3353268175U,
			VerboseWaitingForReplicationInTargetForest = 3512195069U,
			UserCreatedFolder = 3811422379U,
			GetMsoDiagnosticsNewCookieIsBeingUsed = 3104043273U,
			SetupProgressUninstallingContentIndexingMSI = 219970510U,
			MigrationCSVRequired = 1091504803U,
			ErrorNewRoleInvalidValueUnscopedParameter = 1552530836U,
			CallingGetFederationInformation = 3472833669U,
			DagTaskFixingUpIpResources = 2207102733U,
			ApplicationUrisSkipped = 3732896675U,
			ErrorSetPublicFolderMailMailRecipientGuidNull = 3008043280U,
			MultipleSubscriptionSites = 4151922635U,
			ErrorOWAVdirAppPoolNotExist = 1906143331U,
			CasHealthPowerShellShortName = 1329949041U,
			CopyStatusHealthy = 1484668346U,
			SubscriptionPasswordEmptyException = 2810838460U,
			ReportsMPNotInstalled = 185229349U,
			RequestOnInaccessibleDatabase = 2417965290U,
			SetupProgressStartingServices = 1428403360U,
			Busy = 2052801377U,
			DatabaseAvailabilityCheckDesc = 2686627867U,
			ClassificationRuleCollectionStorageFailure = 2021788683U,
			ErrorCannotModifyFolderName = 192027990U,
			JournalingReportNdrToSameAsRecipient = 2873363543U,
			XRopConnectLogon = 3912787342U,
			ErrorRpcHttpMustSpecifyExternalClientsRequireSslParameter = 2864130840U,
			SetupProgressProhibitSendReceiveQuota = 1859742910U,
			ScenarioEwsGetFolder = 4065885103U,
			CalendarLogIdentityNotSpecified = 4181933535U,
			ErrorBypassWLIDAndRemovedMailboxTogether = 3046095919U,
			StartingHealthService = 2204793929U,
			InstallMomConnectorServiceTask = 672436065U,
			ExchangeUpgradeBucketInvalidCapacityValue = 416621071U,
			MapiTransactionResultSuccess = 3620520123U,
			ErrorBPAOutFileLoad = 3866700857U,
			AccessStoreSuccess = 2481943192U,
			ErrorSuspendAndResumeDontSupportFalse = 3531376863U,
			InstallCafeIisWebServiceExtensions = 542947632U,
			VerboseStartWinrm = 3691772373U,
			CasHealthCalendarScenarioTestViewDesc = 4170882099U,
			UpdateAspnetConfigFailed = 2129843125U,
			SingleCopyDatabase = 86137682U,
			ConfirmationMessageSetIPBlockListConfig = 3067181414U,
			InvalidRecipientAddress = 2847533272U,
			AttachmentFilterEntryNotFound = 3423115636U,
			CasHealthEcpScenarioTestWebServiceDescription = 3101272142U,
			WarningUnsupportedEdgeTransportConfigProperty = 698348194U,
			ErrorBPAConfigFileNotFound = 1280404394U,
			TargetDatabasesNotAllowed = 708658832U,
			LocalSiteNotFound = 2593249093U,
			SetupComponentAdam = 1226483017U,
			ErrorApplyRusFailed = 3571093343U,
			MtrtEventReceive = 3812994936U,
			GlobalRoutingEntryVerificationSkipped = 1533614992U,
			MalboxFolderRightsNone = 3528435264U,
			ClassificationRuleCollectionIllegalScopedNewOobOperation = 2664395245U,
			ErrorBPAIisInstalledParameterRequired = 2752094876U,
			InvalidSelectionTarget = 2103885852U,
			VerboseSearchingAssigneeInDomainNC = 3987189255U,
			SetupComponentConfiguringMailboxPermissions = 548988381U,
			ErrorAlsSearchResultLargeAttachmentSize = 1786294530U,
			SetupProgressCreateRBACScopesContainer = 1757744768U,
			SetupProgressHostedContentFilterPolicy = 3873707400U,
			DuplicateDataClassificationSpecified = 1419022259U,
			MailboxTransportDeliveryServiceDisplayName = 4019830635U,
			ErrorSetSendAsOnMailboxPermissionNotAllowed = 1212046423U,
			ErrorAnotherPublicFolderMigrationTypeAlreadyInProgress = 1718119522U,
			ErrorNoDCInLocalSite = 728045039U,
			BridgeheadPrereqCheck = 2684014814U,
			PhoneNumberAlreadyRegistered = 3655557265U,
			ErrorTeamMailboxCanNotLoadPolicy = 1870712198U,
			VerboseResolvingExclusiveRecipientWriteScope = 1510453889U,
			ConfirmationMessageTestOutlookWebServices = 3321247001U,
			AddSecondaryDomainDescription = 3769478445U,
			ErrorImportingTpdFromRmsOnline = 4079789178U,
			DisasterRecoveryCafeRoleDescription = 2430123483U,
			CasHealthConnectionType = 1259030099U,
			SetupProgressOfflineAddressBookEnabled = 341845757U,
			CasHealthOwaVdirNameHeader = 2294357729U,
			AllActiveSyncTransactionsSucceeded = 1151978302U,
			RootDomainNotFoundException = 2444920946U,
			RequestAlreadyCanceled = 245296314U,
			InstallWatchDogServiceTask = 2184875284U,
			ScopeIsInUse = 369727888U,
			CasHealthOwaInvalidCertificate = 2731790600U,
			TestSearchCheckService = 3596291951U,
			ServiceHostDisplayName = 2554964784U,
			SetupProgressInstallGlobalSettingsContainer = 3785964720U,
			TopologyServiceResultSuccess = 813346190U,
			InfoOverallPass = 1288207498U,
			ErrorCannotUpdateGlsDomainFromOrgId = 2868492561U,
			SendConnectorTargetServersNotSet = 3402326851U,
			SetupComponentMonitoring = 2774693296U,
			ImportFileDataIsNull = 3339775592U,
			ErrorDatabaseUnavailableForProvisioning = 1493094573U,
			StartingToCopyOwaLPFiles = 3433387878U,
			AutodiscoverServiceCallFailed = 4222471768U,
			IncompatibleDatabaseSchemaVersionsInDAG = 3141335933U,
			ErrorBPAConfigFileLoad = 587913101U,
			Imap4ServiceDescription = 2931186720U,
			SetupProgressMaxConcurrentMigrations = 318753442U,
			WarningSafetyNetHoldTimeMustBeGreaterThanReplayLagTime = 2019968228U,
			SetupComponentMidFileCopyAllRoles = 403853017U,
			UninstallMonitoringServiceTask = 2199720396U,
			SmartHostsValidationFailedWarningMessage = 604494259U,
			ClassificationRuleCollectionEngineValidationFailure = 1788709803U,
			CasHealthDeleteItemScenarioDescription = 2608560709U,
			ADAttributeMobileNumber = 2411750738U,
			SetupProgressCleanRegistry = 3794422642U,
			VerboseCheckRequiredFiles = 3078877348U,
			BackSyncUrlNeedsToBeAbsolute = 2920861445U,
			FfoWebServicePostConfigComponentDescription = 2803298965U,
			SetupProgressStartingWatchDogService = 2916035674U,
			CasHealthNoMailboxServersToTest = 3333988183U,
			ProvisionServerDescription = 430617656U,
			ErrorChangePasswordForAppPasswordAccount = 3732418497U,
			NoRecipients = 1217883829U,
			ErrorSetGroupMailboxNoOwners = 1589123818U,
			ErrorMovingUnsupportedArchiveUser = 1217557034U,
			MicrosoftExchangeRecipientExists = 633706886U,
			DeletionAndLogOnlyNotPermitted = 3308770896U,
			MtrtMessageDeliverDetailMessage = 807443215U,
			ErrorMustSpecifyEitherAbsoluteOrRelativePath = 2052997646U,
			SetupComponentPostPrepForestGlobalConfig = 1304678551U,
			ErrorCannotSetGlobalThrottlingPolicyWithoutForceSettingGlobalParameter = 3568653834U,
			InformationSkippedEws = 1951423981U,
			SupervisionPolicyCollectionAmbiguous = 1233036147U,
			CopyStatusNonExchangeReplication = 3990056197U,
			ErrorAccountEnabledForNonUserMailbox = 1010297221U,
			ErrorInvalidOperationOnProvisionedMailboxServer = 4150035864U,
			NegativePriority = 2937791153U,
			InstallFfoWebServiceRoleDescription = 1521120953U,
			RemoveOrganizationFailWithoutSharedConfigurationParameter = 376492407U,
			InformationSkippedAsForEWS = 2967394064U,
			ErrorUseDataPropertyNameParameter = 2085825600U,
			DatabaseStatus = 1517655709U,
			InfoGetPublishingUri = 2813353071U,
			MomConnectorServiceDisplayName = 2794053464U,
			InstallMailboxTransportDeliveryServiceTask = 3156748290U,
			PreserveAppSettingsTask = 2215772277U,
			SetupProgressRecreateCannedRBACRoles = 3258683347U,
			SetupComponentPostSetupOSP = 3944568479U,
			SetupProgressUMEnabled = 234821519U,
			NewReceiveConnectorAddingPermissionsMsg = 3380466612U,
			ProgressForceQuorum = 128806629U,
			TestTeamMailboxSharePointResponseDetails = 2527198467U,
			SetupProgressInstallTransportLogSearchSerice = 2764287489U,
			MtrtEventSend = 35249167U,
			EnableAntiSpamUpdatesDeprecated = 394963499U,
			IntegratedVDirNotFound = 2100461993U,
			CopyStatusResynchronizing = 1545501201U,
			SetupProgressConfigureMessageClassificationsContainer = 484901463U,
			ComplianceProgramStateError = 3632680670U,
			DebugEndGeneratingUniqueSamAccountName = 3941719008U,
			SkippingInvalidTypeInGroupExpansion = 631692221U,
			GetMsoDiagnosticsFindingTheCookie = 540991791U,
			ProgressCopyingSystemFiles = 427603828U,
			SendMessage = 3259527179U,
			RoleAvailabilityOnly = 3937861705U,
			CasHealthSecureAccess = 3172987846U,
			MigrationNewBatchUsersShareBatch = 3299454883U,
			SetBothForwardingAddressConfirmationMessage = 3049974650U,
			InstallMonitoringRoleDescription = 3798570991U,
			NotEnoughInformationSupplied = 2761303157U,
			OnPremisesConnectorHasRouteUsingMXId = 3211546685U,
			ErrorLocalServerIsNotMailboxServer = 1622178204U,
			ErrorPatternCannotContainMultiMatchOnGroupOrAssertion = 3841604610U,
			CertificateStatusValid = 2573369783U,
			DlpPolicyVersionUnsupported = 1421470187U,
			ErrorMapiVirtualDirectoryMustSpecifyIISAuthenticationMethods = 415510158U,
			RecoveryActionArbiterServiceDescription = 211700381U,
			SetupProgressUninstallTransportLogSearchSerice = 1933689530U,
			ConfirmationMessageRemoveSearchDocumentFormat = 698026304U,
			ErrorCannotMovePublicFolderIntoNonPublicFolderMailbox = 2715778979U,
			InvalidStoreMailboxIdentity = 2298668180U,
			NewFilterNeitherOptimizedNorImproved = 3308687873U,
			GetMsoDiagnosticsMoreDataIsAvailable = 2625625929U,
			SetupComponentTransportLogSearchService = 3180802142U,
			ErrorTagTypeModified = 2506373819U,
			CatchAllRecipientNotAllowedForArbitrationMailbox = 2236297220U,
			ErrorLegacyOABDoesNotSupportLinkedMailbox = 572655299U,
			ErrorSelectUserCmdletOnlyWorksForTwoUsers = 1767452929U,
			ErrorServicePlanIsNotSet = 201914195U,
			MtrtRemoveHeader = 839645532U,
			JournalingParameterErrorExpiryDateWithoutGcc = 2376119956U,
			ConfirmationMessageSetImap4Config = 4174794989U,
			InCorrectRequiredPOPSetting = 4021969573U,
			WarnAboutSetDatabaseDefaults = 1268368950U,
			ErrorRestrictionWithWrongGroupType = 1288060522U,
			DagMembersUpCheckDesc = 2488760739U,
			ErrorCannotDisablePublicFolderMailboxWithFolders = 127311569U,
			CasHealthScenarioLogon = 2327516238U,
			ADAttributeInitials = 2468414724U,
			NeedIisRestartWarning = 3835641716U,
			ErrorFailedToCreatePL = 6354352U,
			VerifyRoleInstalled = 1230778519U,
			ConfirmationMessageGetFailedContentIndexDocuments = 140153690U,
			FailedToLoadEdgeSyncConfigFile = 1867927292U,
			ClassificationRuleCollectionIneffectiveSharingViolationCheck = 1163910679U,
			VerboseFailedToTestWriteAccessToExchangeServers = 892157639U,
			ErrorInvalidGuidFormat = 410666693U,
			MtrtDecrypt = 1333408282U,
			ErrorNotRunningAsTenantAdmin = 4176097491U,
			InstallMonitoringServiceTask = 3736170493U,
			CreateDumpster20Tag = 1547108334U,
			InstallClientAccessRoleDescription = 3242462262U,
			ConfirmationMessageTestWebServicesConnectivity = 1707855545U,
			ConfigureMailTips = 3312019203U,
			TestMigrationServerConnectionTimeout = 591582552U,
			SetupProgressStartingTransportLogSearchService = 2449914212U,
			ErrorPublicFolderHierarchyAlreadyProvisioned = 3137393342U,
			ErrorInvalidOperationOnProvisionedServer = 3654120958U,
			CasHealthEasScenarioGetItemEstimate = 2556217749U,
			SetupProgressCreateOutOfTheBoxAdditionalMrmTags = 1093843235U,
			AddressRewriteExceptionListDisallowed = 2136017683U,
			InstallIisWebServiceExtensionCommitting = 3528453455U,
			SetupProgressCreateGlobalContainers = 501834753U,
			ErrorSyncProtocolNotSpecified = 3631260574U,
			ArchiveNamePrefix = 3934741745U,
			InvokePreMoveActionDescription = 2085683230U,
			SetupProgressProhibitSendQuota = 1852904459U,
			SetupComponentPerfCountersTransport = 1456068237U,
			WatchDogServiceDisplayName = 29841201U,
			StoppingOnePointService = 2600973645U,
			ProgressCheckingReplayState = 3497830027U,
			CopyStatusDismounted = 3673730471U,
			DebugStartIsDomainReservedCheck = 2442076717U,
			InvalidActionParameter = 3982469894U,
			CasHealthClientAccessServerName = 3084415248U,
			ArchiveDatabaseNotExplicitlyStampedError = 1415129751U,
			ExchangeWindowsPermissionsDescription = 2556724114U,
			CasHealthOwaPingScenarioName = 2806693281U,
			TargetMailboxRequired = 2425687808U,
			ConfirmationMessageSetTransportConfig = 3860792703U,
			MigrationPartitionMailboxNotFound = 3173344529U,
			ClassificationRuleCollectionExportEncyrptedProhibited = 3994004286U,
			UninstallGatewayRoleDescription = 3144908676U,
			HighPriorityChecksFailed = 2985845130U,
			CouldNotRestartExSearch = 3773528322U,
			AdminAuditLogSearchMissingCmdletsWhileParameterProvided = 930222453U,
			RmsOnlineFailedToValidateKeys = 3527197609U,
			VerboseCheckingScopePassed = 2775441772U,
			NotAValidDistributionGroup = 1613874467U,
			ConfirmEnforceRequireSslOnRoot = 894156138U,
			ErrorMessageCopyForSendOnBehalfEnabledCanOnlySetOnSharedMailbox = 1268556399U,
			NoBindingsSet = 1397395049U,
			ErrorAccountPartitionRequired = 1360109098U,
			DebugEndInAcceptedDomainCheck = 3103126396U,
			UninstallingTranscodingService = 3692425173U,
			SetupProgressEnableWMIAsync = 3387886734U,
			MtrtDeleteMessage = 1971301201U,
			ClassificationRuleCollectionTimeoutFailure = 2658797945U,
			ErrorMessageCopyForSentAsEnabledCanOnlySetOnSharedMailbox = 2428787024U,
			ErrorLinkedRoleGroupCannotHaveMembers = 4233755904U,
			UnableToDetermineCreatingUser = 1504344471U,
			ProgressDeletingCatalog = 1817876216U,
			ErrorGlobalThrottlingPolicyNotFound = 3183614673U,
			IncompatibleTenantOrganizationForBulkProvisioning = 2734579474U,
			RuleStateEnabled = 2720144322U,
			DisasterRecoveryMailboxRoleDescription = 1049461168U,
			ManagedAvailabilityServersUSGDescription = 4128527909U,
			ConfirmationMessageTestEdgeSynchronization = 3250669143U,
			ErrorBasicAndLiveIdBasicNotAllowed = 3334485045U,
			ErrorInvalidCharException = 3247824756U,
			CalendarVDirNotFound = 3233886878U,
			ReplicationCheckFailuresLabel = 124793491U,
			CreateAltFswWillAutomaticallyCalculateLater = 1844786054U,
			ProgressDeletingCopySystemFiles = 1855656096U,
			UninstallCentralAdminServiceTask = 460271254U,
			SetupComponentConfiguringDAV = 3306705804U,
			CouldNotFindFirstOrgPerimeterConfigObjectId = 2740942150U,
			MapiSubmitSystemProbeInternetMessageId = 2507815087U,
			ErrorFailedToGetPublishingUri = 2789110641U,
			RequiredStartDateParameter = 4130544628U,
			SetupProgressRemotePowerShellAccessEnabled = 2328331598U,
			SetupProgressOwaLightEnabled = 535310264U,
			InvalidUnicodeCharacterUsage = 3015750530U,
			ErrorRemoteTargetDatabaseNotAllowedForRemotePull = 1310486619U,
			CasHealthEasScenarioSyncZero = 4161302825U,
			SetUMMailboxPolicyDuplicateSourceForestPolicyNames = 2469261993U,
			CatchAllRecipientTypeNotAllowed = 468761160U,
			ErrorFailedToCheckMode = 520563401U,
			ErrorEnableRoomMailboxAccountCanBeUsedWithRoomsOnly = 2047820105U,
			ErrorTaskRunningLocationMailboxOnly = 3824133691U,
			OwaIdentityMustHaveValueException = 4186670836U,
			DebugGettingNetIdFromMemeberName = 1379838521U,
			ExchangeMigrationSidHistoryAuditingDSGDescription = 4185944676U,
			SmtpExternalServerSettings = 3325258591U,
			CannotDisableAdfsEcpWithoutOwaFirst = 4273640756U,
			SetupProgressStoppingIISAdminService = 1926434175U,
			UnableToCommunicate = 1418979799U,
			TenantConfigurationInfoIsNull = 1639545723U,
			ComplianceAuditServiceDisplayName = 1855234972U,
			UmLanguagePathLogFilePathNotSpecified = 3361199071U,
			StartAfterOrCompleteAfterCannotBeSetForOfflineMoves = 1633415838U,
			ReplicationCheckBlankMessage = 4242852735U,
			AdminAuditLogSearchFailed = 3326005479U,
			MigrationCompleteAfterChangedToEarlierTime = 2193132985U,
			ErrorCannotMoveHalfMailboxBetweenTwoNonDatacenterForests = 433212455U,
			StartingToUpdateMFLFiles = 2687116030U,
			CannotSetEdgeTransportServerOnAd = 2411285952U,
			ApplicationUrisMissingOnReturnedInformation = 185298481U,
			DNSRoutingEnabledMustNotBeSpecified = 342525783U,
			CannotLocateFedOrgId = 269884753U,
			ErrorIncompleteSettings = 291218883U,
			ContinueOnRemoveSearchResults = 1213215400U,
			PopImapLoggingOn = 1516838238U,
			PopInternalServerSettings = 2155968014U,
			ConfirmationMessageSetEdgeSyncSendConnectorAddressSpaceOrSmartHosts = 2370208778U,
			ReplayLagPlayDownReasonLagDisabled = 434752309U,
			InstallCentralAdminDatabaseRoleDescription = 1865089306U,
			OwaUrlNotMatchEcpWarning = 1756888518U,
			ErrorPFDistributionNotSpecified = 696161139U,
			VerboseResetPasswordOnNextLogon = 109380891U,
			ErrorAppPoolIdCannotBeEmpty = 1362435159U,
			InformationSkippedOab = 76164030U,
			NoRMSServersFoundException = 3202705274U,
			CasHealthOwaNoExternalUrl = 30958655U,
			ReplayLagStatusLabelPercentage = 3893846751U,
			ErrorCannotUpdateCertificateWhenFederationNotProvisioned = 1018021345U,
			WarningMultiSiteSourceServers = 4081846807U,
			ErrorTeamMailboxSharePointUrl = 556775763U,
			AuthenticationMethodWindows = 3824833340U,
			MountStatusMounting = 1539605370U,
			SetupProgressInstallDefaultAcceptedDomain = 2295231809U,
			ComplianceServiceDescription = 400166206U,
			ContentIndexingExSearchNotFound = 812672951U,
			CasHealthSyncFolderItemsScenarioDescription = 3105051314U,
			ChangeServiceConfigFailure = 97006653U,
			ErrorDisableMailuserWithJournalArchive = 2281255925U,
			ErrorTooManyCertificates = 2313611105U,
			SetupProgressStoppingTransportSyncManagerService = 1799783420U,
			ConfirmationMessageSetSenderFilterConfig = 161394695U,
			SetupProcessCreateDefaultSharingPolicy = 408634319U,
			ActiveDirectorySearchViaADDriverAgainstSpecificDCScenario = 990532542U,
			CasHealthResult = 3299210260U,
			DRMNotAllowedForConsumerDialPlan = 911093058U,
			CafePrereqCheck = 2360538852U,
			DatabaseSeedStatusLabelPercentage = 3829706538U,
			CasHealthCreateItemScenarioDescription = 3236535734U,
			SetupProgressInstallingDefaultTransportAgents = 3547605377U,
			ErrorExpansionServerMustBeTiOrBhServer = 2035571295U,
			ErrorRoomMailboxPasswordCanOnlyBeUsedWithEnableRoomMailboxAccount = 764010493U,
			MailboxParameterMissingException = 3388261540U,
			PromptToOverwriteExistingRuleCollection = 1226596383U,
			AuthenticationMethodLiveIdFba = 4104165981U,
			ErrorIncorrectDefaultTag = 3043034532U,
			ErrorEnableRoomMailboxAccountCannotBeUsedWithLinkedRoomMailbox = 3268676866U,
			MSARPSServiceDisplayName = 2147011188U,
			NotifySenderActionIsBeingOverridded = 4135645967U,
			EitherSenderOrRmsOnlineParametersMustBeSpecified = 137891794U,
			StoppingMomService = 2340528056U,
			HighPriorityChecksWarning = 2455516899U,
			SetupProgressStartingInformationStoreService = 3888635110U,
			OldRmsOnlineImportAfterRmsOnlineForwardSync = 3766269728U,
			InvalidReportEndDate = 1448587360U,
			DisasterRecoveryMonitoringRoleDescription = 766081866U,
			AllWebServicesTransactionsSucceeded = 2214481763U,
			ArchiveConnectivityResultUndefined = 3019121814U,
			Error_MissingSenderEmail = 3252760822U,
			EdgeServerNotSubscribed = 21238159U,
			DelegateRoleTypeOrgAdmin = 1455306500U,
			InfoCheckingOrganizationContext = 1020874888U,
			DagMgmtServiceDescription = 1664700488U,
			WarningRedirectToRecipientsNotSet = 1279214916U,
			IndexEntryIsMissingData = 2391097994U,
			SetupProgressCreateApprovalApplicationsContainer = 1748468167U,
			PublicFolderMailboxNotFound = 2354834546U,
			PopImapNoMessagesToDelete = 8549621U,
			NoJournalingToPublicFolder = 49581212U,
			ProgressStatusRemovingAddressListTree = 283984324U,
			ADAttributeCustomAttribute4 = 1377545162U,
			VerboseRestartDefaultWebSite = 4050256429U,
			ErrorInvalidParametersForOutlookAnywherePublicFolderMailboxMigration = 570475965U,
			ErrorFailedToGetLicensingUri = 3859128598U,
			MicrosoftExchangeRecipientNotFoundOnGatewayServerRole = 4221700743U,
			SetupProgressContactCountQuota = 121474667U,
			ErrorInstallationModeNotSupported = 3995778130U,
			NoSuchRequestInSpecifiedIndex = 3604568438U,
			MigrationAutoStopAlreadySet = 2370162247U,
			UseDagDefaultOnOffOff = 3628539559U,
			ServerUnavailableException = 1995762726U,
			ClientAccessOwaComponentDescription = 325877545U,
			SetupProgressCreateUceContentFilterObject = 233667309U,
			ConversationsMailboxDisabled = 1589222130U,
			SetupComponentUpdateResourcePropertySchema = 1909170865U,
			TransitionStateUnknown = 1612688160U,
			FileDataShouldNotBeSet = 555828727U,
			ParameterErrorForDefaultUsage = 3623760724U,
			SetupProgressStartingDagMgmtService = 4269792004U,
			FinishingFileCopy = 4252228748U,
			MtrtReportSeverityLevelHigh = 143203986U,
			ErrorPatternCannotContainGroupOrAssertionWithMultiMatchWildcard = 2335842547U,
			EnableConversationsTask = 1485878098U,
			NoDeviceFilters = 3039898050U,
			ConfirmationMessageSearchMessageTracking = 2918650372U,
			ConfirmationMessageTestSystemHealth = 533928811U,
			CopyStatusFailed = 4015121608U,
			DlpPolicyStateDisplayName = 4107372202U,
			MailboxSearchDisabled = 1881614050U,
			ErrorManagedByMustBeSpecifiedWIthOrganization = 1613921097U,
			LiveIdAuthenticationResultSuccess = 1886798257U,
			FinishedComponentTasks = 29090731U,
			MountStatusDismounting = 3184703320U,
			UninstallPop3BeServiceTask = 455979009U,
			DisasterRecoveryFrontendTransportRoleDescription = 3215055419U,
			TeamMailboxSharePointUrlMissing = 2361940575U,
			ConfirmationMessageTestEdgeSyncEhf = 2454229449U,
			PhotoMustNotBeBlank = 1631911187U,
			PopExternalServerSettings = 888502160U,
			ConfirmationRemoveAllSupervisionListEntries = 3447968637U,
			InvalidReportingPeriod = 4165998328U,
			FfoWebServicePermissionsComponentDescription = 3472376295U,
			RepairUrgencyNormal = 2726496295U,
			ErrorDefaultMalwareConfigCannotBeDeleted = 3114647655U,
			InvalidAggregateBy = 752989991U,
			SetupProgressCreateRBACRoleAssignmentsContainer = 2099442359U,
			AutoProvisionFailedException = 4240648378U,
			NeedToSpecifyServerObject = 2833582586U,
			HybridMailflowNotYetSet = 875645786U,
			DegubEndConnectingToDomainServices = 3352448229U,
			CallingGetOrganizationRelationshipSettings = 133553638U,
			DagTaskValidatingParameters = 2431610718U,
			NewRuleSyncAcrossDifferentVersionsNeeded = 1191033945U,
			PopImapDeleteOldMsgs = 2167067396U,
			ReloadingRequest = 3174578250U,
			RepairUrgencyCritical = 1880520539U,
			UnpackingFiles = 1935034447U,
			CentralAdminServiceDisplayName = 2464857106U,
			WarnRpcHttpNegotiateCoexistence = 1020674371U,
			SetupProgressCreatingAdamInstance = 688825023U,
			ActiveSyncMetabaseProxyInstallFailure = 422014390U,
			InvalidMessageDataClassificationEmptyName = 1957537238U,
			ErrorFileHasNoTextContent = 1283422781U,
			ErrorTaskRunningLocationHubOnly = 1040938896U,
			ErrorInboxRuleDoesNotExist = 4035449407U,
			CasHealthEasScenarioGetFolder = 4258639914U,
			InstallUnifiedMessagingRoleDescription = 1239032133U,
			DagTaskFormedCluster = 442307290U,
			IisTasksApplicationRootValidationProperty = 653347817U,
			WillIgnoreNoncriticalErrors = 3750163877U,
			ErrorRemoteTargetDatabaseMustBeSpecifiedForRemotePush = 2476064707U,
			ReplayLagPlayDownReasonLogsInRequiredRange = 3162325577U,
			InstallMessageTracingClientServiceTask = 3648320443U,
			FriendlyNameTooLong = 1343133942U,
			ErrorPatternCannotContainSequentialIdenticalMultiMatchPatterns = 1668037270U,
			ErrorConflictCountryOrRegion = 467864039U,
			InvalidSenderAddress = 3500302124U,
			PhoneNumberAllowedOnlyOnE164ConsumerDialplan = 3542711257U,
			ProgressDeletingSystemFiles = 1785523337U,
			ErrorMissingManagedFolder = 3379767095U,
			ConfirmationMessageExportDlpPolicyCollection = 3376852758U,
			InvalidQueryParameters = 4054146957U,
			MtrtMessageExpandDetailMessage = 4187281280U,
			InfoRmsOnlinePrerequisitesChecked = 2971233211U,
			SetupProgressCreateDefaultMessageClassificationsContainer = 2956386236U,
			InfoGetTemplate = 489716232U,
			DlpPolicyModeDisplayName = 2853286652U,
			WarningXHeaderValueNotSet = 3230982409U,
			GetFederationInformationFailed = 711082378U,
			UninstallAssistantsServiceTask = 534171625U,
			ProgressCopyingPST = 1053984119U,
			UninstallComplianceServiceTask = 863270287U,
			ConfirmationMessageSetDataClassificationConfig = 209725232U,
			WarnBasicAuthInClear = 2620423486U,
			DisableContentIndexTask = 4118091956U,
			GatewayRoleDisplayName = 2320733697U,
			RemoveOrganizationFailRelocationInProgress = 4146114679U,
			CafeIisWebServiceExtensionsDescription = 3143233303U,
			NoDefaultTestAccount = 1889514201U,
			UsageTypeClient = 2420149034U,
			SetupProgressRecreateCannedRBACRoleAssignments = 1613721886U,
			AuthenticationMethodNone = 2695169681U,
			SetupProgressStoppingRpcClientAccessService = 2396495091U,
			CasHealthScenario = 3593604775U,
			InstallCafeRoleDescription = 4138813450U,
			InstallMailboxRoleDescription = 1884159739U,
			ErrorInvalidValueForPreventCompletion = 2457049403U,
			AboutToAddLocalEtsUSGToLocalAdminGroup = 283239335U,
			NotificationsBrokerServiceDisplayName = 3910668745U,
			MigrationReportIntervalParameterInvalid = 3846996117U,
			SetupComponentPostSetupFrontendTransport = 1749900570U,
			ErrorFilterParametersForCloneMode = 1058256821U,
			SetupProgressCreatingDefaultOAB = 316441426U,
			DebugEndSetDatabase = 3104098617U,
			Tentative = 1797669216U,
			RolePublishingEditor = 3532057202U,
			NewDagConfigurationPassedChecks = 1916928879U,
			AutodiscoverSvcGetRemoteEndpoint = 3150409675U,
			SetupProgressCalendarSharingEnabled = 4097081969U,
			NoMonitoringErrorsInTestServiceHealthTask = 1224187099U,
			SetupComponentConfiguringMsFte = 3832339474U,
			ReservedString3 = 4054043088U,
			ErrorBPARunFailed = 980249561U,
			UMCallAnsweringRuleDescriptionTakeActions = 363803184U,
			SetupProgressCommonConfiguration = 535010283U,
			DatacenterLiveIdPerfCountersComponentDescription = 4284518091U,
			NewDagPassedChecks = 1642342167U,
			InstallForwardSyncServiceTask = 1627739245U,
			SetupProgressStartingMailSubmissionService = 2839570606U,
			SendConnectorProxyEnabledOnEdge = 642792694U,
			VerboseNoOabVDirOnLocalServer = 1810462903U,
			NotificationsBrokerServiceDescription = 243344748U,
			SetupProgressStoppingMailboxAssistantService = 1877930527U,
			InfoPreL = 2617553441U,
			ErrorMessageClassModified = 750721438U,
			IgnoringSameNextCertificate = 2838173073U,
			ErrorGroupTypeInvalid = 2235134294U,
			HealthManagerServiceDisplayName = 1695373195U,
			DiagnosticsServiceDisplayName = 1050445322U,
			FileDataMissing = 3444014848U,
			InstallPop3BeServiceTask = 3548459082U,
			ServiceHostDescription = 4274815123U,
			SetupProgressConfigureControlPointConfig = 1326571555U,
			ErrorModerationWithWrongGroupType = 599651768U,
			SiteMailboxMembershipSyncEventEnqueued = 4247632026U,
			ErrorTeamMailboxSharePointServerVersionInCompatible = 3389267252U,
			AllowVoiceMailAnalysisWarning = 2147062214U,
			SetupComponentPreSetupClientAccess = 4188748229U,
			SetupProgressUninstallingMsFteMSI = 1384051878U,
			ErrorMovingOldExchangeUsersUnsupported = 1962764795U,
			RemoveADServerMetadataSucceeded = 4100221894U,
			QuarantineMessageTypeTransportRule = 471227616U,
			ErrorAssociatedUserMailboxExist = 3949675526U,
			SetupProgressInstallInternetMessageFormat = 847696334U,
			EditWillUpgradeSearchObject = 247279245U,
			SetupComponentUnifiedMessagingGlobalConfig = 2438747511U,
			NoHubInSubscribedSite = 365229532U,
			ErrorFailedToLoadIRMConfig = 1383341120U,
			ProgressCopyingCatalog = 759230387U,
			MailboxTransportSubmissionServiceDisplayName = 3237430231U,
			ImapInternalServerSettings = 3455360282U,
			DatabaseSeedStatusLabelWrittenPerSec = 4109012977U,
			NullUserError = 2526768594U,
			ConfirmationMessageSetAutodiscoverVirtualDirectory = 2128735504U,
			ErrorAuthSameAsCurrent = 1315910557U,
			VerboseHasWriteAccessToExchangeServers = 407003399U,
			ActiveSyncMetabaseIsapiInstallFailure = 3070362658U,
			NewSendConnectorIncorrectUsageParameters = 3366786089U,
			ConfirmationMessageImportDlpPolicyTemplate = 3473716705U,
			ADAttributeIsWhiteSpaceOrContainsWhiteSpacePrefixOrSuffix = 2747221151U,
			SetupProgressImportingAdamSchema = 1656912255U,
			SupportedToolsCannotReadFile = 2143081262U,
			AuthModuleFilterMetabaseIsapiInstallFailure = 3471145417U,
			HeaderValue = 2163423328U,
			NonE14ServerError = 2834035896U,
			ClientAccessServiceControlComponentDescription = 1655030876U,
			GatewayPrereqCheck = 3033688531U,
			CannotSetHubTransportServerOnAdam = 666293858U,
			MigrationCompleteAfterIncorrectMigrationType = 4207425180U,
			CasHealthOwaReturnedErrorPageForAuth = 3123642639U,
			LocalDomainNotFoundException = 973517949U,
			Info_MessageItemHasBeenUpdated = 1104443180U,
			SetupProgressOwaEnabled = 1949550598U,
			ErrorManageDelegation1ProofDomainOwnership = 1612924637U,
			ValidateSecretFailure = 493674830U,
			VerboseResetADServerSettingsSucceed = 3600064844U,
			SetupProgressSkipToUAndParentalControlCheckEnabled = 2112765551U,
			CountingFilesToCopy = 2062169902U,
			AnonymousSharingEnabledWarning = 1429918150U,
			CalendarLogsNotFound = 3639980884U,
			MSARPSServiceDescription = 3048237641U,
			OwaMetabaseIsapiInstallFailure = 275657530U,
			MtrtMessageBadmail = 4106677824U,
			ProgressDeletingCopyLogFiles = 348002949U,
			MessageTypePermissionControlled = 2872629304U,
			InstallTransportSyncManagerServiceTask = 2479928670U,
			ErrorUnableToIdentifyTheUser = 1686231910U,
			CasHealthEasGetItemEstimate = 2655847911U,
			ErrorFailedExtractTextForFingerprint = 4118655296U,
			ComInteropDllNotFound = 2734769737U,
			SetupProgressCreateActiveSyncMailboxPolicyContainers = 3029203465U,
			Pattern = 1660006804U,
			ErrorRpcHttpMustSpecifyEitherIISAuthenticationMethodsOrDefaultAuthenticationMethod = 3317013550U,
			SetupProgressCreateNewMailboxPlanObject = 3640979510U,
			ReplicationCheckResultWarning = 2346524817U,
			SetupProgressCreateJournalingRuleCollection = 3926581147U,
			ContentIndexingServiceNotInstalled = 3844154567U,
			ErrorMServeConfigurationIsBroken = 3873444299U,
			ConfirmationMessageTestIntraOrganizationConnector = 3678435224U,
			CasHealthOwaLoginWithNoCredentials = 1310542130U,
			MonitoringServiceDisplayName = 1919389628U,
			CannotSpecifyApplyMandatoryPropertiesParameterWithE15OrLaterOab = 3397451545U,
			RegSvr32Failed = 539901569U,
			DeviceWipeSucceeded = 3617746388U,
			ErrorAtleastOneOfCSVInput = 1317139899U,
			QuarantineMessageTypeSpam = 4040564888U,
			SetupProgressStoppingMailSubmissionService = 4143535486U,
			ErrorInvalidOrganization = 3730091040U,
			JournalingReportNdrToNotSet = 1440702907U,
			ProgressStatusInProgress = 204895011U,
			ConfigurationContainerNotFoundException = 1809082251U,
			SmtpInternalServerSettings = 3807329645U,
			MalboxFolderRightsCreateSubfolders = 2691134897U,
			ErrorFailedToManagedFoldersInMailbox = 641425147U,
			OpenServiceFailed = 3675089712U,
			ErrorNameNotFQDN = 396068831U,
			SetupComponentMonitoringCorrelation = 1898390588U,
			SetupProgressCreateDatabaseFolders = 3427352430U,
			CannotRunOnSubscribedEdge = 4175925886U,
			NoOrganizationRelationshipInstancesWereReturnedByTheRemoteParty = 1225987784U,
			StatusMessageUpdatePublicFolderMailboxCompleted = 2550967442U,
			DatabaseSeedStatusLabelReadPerSec = 2800354258U,
			ErrorInvalidDateRangeException = 2123483125U,
			ErrorNoTrustConfigured = 2304297729U,
			ErrorEnableRoleGroup = 4174308722U,
			MapiTransactionFailedAgainstServerPrefix = 1554948996U,
			SetupProgressCreateFederationTrusts = 1046590614U,
			CasHealthOwaPingRequestSucceeded = 2243519812U,
			ConfirmationOnDisablingInternalLicensing = 1705322316U,
			GetDagHealthInfoNoResultsWarning = 1589644643U,
			InvalidTransportRoleOnReceiveConnector = 1232854071U,
			UninstallImap4ServiceTask = 585138347U,
			InstallNotificationsBrokerServiceTask = 2120620876U,
			ErrorDlpPolicyCollectionCannotContainTransportRules = 942070657U,
			DelegateRoleTypePublicFolderAdmin = 4048010479U,
			SetupProgressAutoForwardEnabled = 4078764843U,
			ConfirmationMessageOverrideContentMailbox = 690809061U,
			CreateOwaForEcpWarning = 1521128314U,
			ContinueMountWithDataLoss = 1726782365U,
			SetupComponentConfigPermissionsBridgehead = 61328153U,
			MapiTransactionDiagnosticStoreServiceIsNotRunning = 4164791858U,
			ErrorMoreThanOneDefaultMailTipTranslationSpecified = 124932322U,
			CompleteOrganizationUpgradeDescription = 3396334448U,
			ErrorTenantOrgInUnexpectedState = 359340039U,
			ConversationsMailboxAlreadyEnabled = 2355449289U,
			ImportE14TransportRuleCollectionInDCError = 4136277918U,
			MessageTypeAutoForward = 2041595767U,
			CasHealthOwaHttpUnknownLogoffError = 389917399U,
			CasHealthEasScenarioSyncFolderItems = 2589525087U,
			FrontEndTransportServiceDisplayName = 2148824781U,
			ComponentTaskSection = 1935468563U,
			ErrorIdAndOUSetTogetherUnderIgnoreDefaultScope = 3203686041U,
			ConfirmationMessageExportTransportRuleCollection = 1702097235U,
			ErrorRuleMissingPredicate = 3300374799U,
			ErrorRemoteLegacyWithE15NotAllowed = 972482907U,
			InstallMailboxTransportSubmissionServiceTask = 2764082182U,
			ErrorOrganizationParameterRequired = 3420250947U,
			ErrorDateRangeInvalid = 3608765512U,
			ExchangeStreamingOpticsDescription = 3282443379U,
			ErrorDepartRestrictionInvalid = 2762887375U,
			LocalSiteNameIsEmpty = 2632441174U,
			InvalidIncidentReportContent = 2084274330U,
			CasHealthHttpResponseHeaders = 885090528U,
			SetupProgressLicenseEnforcement = 157257905U,
			TenantNotificationNoNotificationRecipientsSpecified = 3161117751U,
			TestSearchTask = 1552735353U,
			SetupProgressUMFaxEnabled = 4213714110U,
			ErrorMultipleDefaultRetentionPolicy = 3012202611U,
			SetupProgressCreateOutOfTheBoxReducedMrmTags = 2018678440U,
			ComplianceSearchCreateTaskActivity = 2561639227U,
			SupportedToolsCannotFindFile = 3087351795U,
			LegacyRegistryMarkersComponentDescription = 1744727734U,
			NoMailboxAssociationIdentityProvided = 1946909737U,
			VerboseFixingEmailAddressPolicyFilterMetadata = 3215501240U,
			ADAttributeOtherPhoneNumber = 3162495226U,
			AdvertiseClientSettingsWithoutExchangeUsersPermissionGroups = 346749009U,
			NoPrivateKeyInImportedTrustedPublishingDomain = 1230533634U,
			CasHealthCasServerNotFound = 2929278810U,
			CasHealthCalendarShortName = 803789992U,
			ErrorCannotMovePublicFoldersWithNullEntryId = 924598646U,
			ChangePasswordFailed = 2473076826U,
			CasHealthOwaCredentialFailure = 282134995U,
			ErrorNetIDWithoutBypassWLIDInSet = 3365945163U,
			PhoneNumberAllowedOnlyOnE164ConsumerDialplanWithCountryCode = 3228324102U,
			UninstallOldMailSubmissionServiceTask = 1436616364U,
			DefaultAllContacts = 1537384713U,
			UsingMonitoringMailboxAuthenticationCredentials = 323037630U,
			IntegratedVDirNotSupported = 1134431673U,
			SetupProgressCreateRBACPoliciesContainer = 2381551853U,
			ProtectedServiceHostDescription = 1328045433U,
			ErrorTemplateAndTemplateDataCannotBothBeDefined = 476702017U,
			SetupComponentMidFileCopyMonitoring = 3290510799U,
			SetupProgressStartingCredentialService = 195589900U,
			CasHealthEasSyncOne = 2460972809U,
			MachinePingScenario = 2760740739U,
			ProcessUtilizationManagerServiceDescription = 1485407849U,
			TenantAlreadyHasMigrationPending = 912948631U,
			OwaMetabaseStopBinFilteringFailure = 1702242844U,
			CasHealthEasScenarioPing = 878905098U,
			CreateEcpForOwaWarning = 1340013018U,
			ConfirmationMessageTestEdgeSyncMserv = 3690425457U,
			ErrorCannotRemovePublicFolderMailboxWithFolders = 3992993999U,
			UMCallAnsweringRuleLeaveVoiceMessage = 1553189934U,
			MicrosoftExchangeContainerNotFoundException = 2393557138U,
			CannotFindSubscriptionSite = 2953927220U,
			CasHealtRemotePowerShellOpenRunspaceSucceeded = 1143552818U,
			CasHealthEasScenarioDeleteItem = 528083274U,
			ConfirmationMessageInstallSystemMessageClassification = 1564792125U,
			CasHealthWebAppLiveIdStart = 3656239515U,
			SetupProgressMailUserCountQuota = 351759919U,
			PhoneNumberIsNotE164 = 1881041876U,
			AssistantsServiceDisplayName = 724161223U,
			ErrorRmsOnlineAuthenticationCertificateNotFound = 1783998077U,
			WordIsWhiteSpace = 2311491823U,
			ErrorCannotSetJournalingReportNdrTo = 2768218355U,
			SetupProgressOwaDelegateAccessEnabled = 4195978929U,
			RMSServerIsNotConfigured = 1342738960U,
			UMNotAvailableForUserInTargetForest = 2086103397U,
			SetServiceInstanceMapResultCodeUnspecifiedError = 2418812611U,
			SetupComponentProvisioningFeatures = 3321302356U,
			CasHealthOwaTrustAnyCertificate = 4172450099U,
			CasHealthEasScenarioOptions = 886790004U,
			ErrorCannotDeleteGlobalThrottlingPolicy = 677161662U,
			NewMailboxSearchActivity = 853257855U,
			JournalingParameterErrorGccWithScope = 1386608555U,
			CasHealthOwaNoAuthChallenge = 2743468428U,
			InstallMailboxReplicationServiceTask = 3256293617U,
			ExportAutoDiscoverSameForest = 3832614491U,
			JournalRuleCorrupt = 2593828216U,
			CopyStatusSuspended = 2605454650U,
			BestEffortNotAllowedInServerModeException = 3374660851U,
			RemoveProvisionedServerDescription = 2345003377U,
			ErrorAuthSetNewEffectDate = 329310285U,
			VerboseResolvingCustomRecipientWriteScope = 494398490U,
			UninstallTranscodingServiceEx = 1045130098U,
			ConfirmationMessageRemoveReportingVirtualDirectory = 21508778U,
			MtrtMessageSpamAdditional = 934995448U,
			ErrorProvisioningReconciliationCookieNotSet = 1727429145U,
			ErrorCannotMigratePublicFolderIntoNonPublicFolderMailbox = 2069264155U,
			GetCalendarDiagnosticLogNoCleanGoidErrorMessage = 864818849U,
			ADAttributeCustomAttribute8 = 1377545174U,
			ErrorDomainControllerNotSpecifiedWithUsnForReconciliationSearch = 1646617707U,
			SetupComponentConfiguringMDB = 3017732590U,
			ProgressStopUpdateAD = 815548093U,
			Warning = 1861340610U,
			ADAttributeManager = 494686544U,
			PageCookieInterruptedException = 2844240268U,
			DatacenterClientAccessPerfCountersComponentDescription = 3669527025U,
			IndividualRecipient = 210030056U,
			MalboxFolderRightsCreateItems = 4182624490U,
			RuleStateDisabled = 4233384325U,
			MalboxFolderRightsReadItems = 1187378442U,
			SetupProgressSyncAccountsMaxAccountsQuota = 4018390487U,
			DatabaseSeedStatusLabelWritten = 363043027U,
			ErrorSetPasswordForLogonDisabledAccount = 1615913674U,
			MonitoringServiceCheckDesc = 303389116U,
			SiteParameterRequired = 2694075755U,
			IisTasksVirtualDirectoryValidationProperty = 2246430441U,
			NullCurrentOrganizationIdException = 3597664875U,
			ClassificationRuleCollectionIllegalScopedSetOobOperation = 769488995U,
			InvalidSmtpAddress = 3042237373U,
			TestOrganizationRelationshipError = 4148731813U,
			SetupProgressStartingContentIndexingService = 979959660U,
			CasHealthOwaLogonError = 308457205U,
			Error_KnowniPhoneIssues = 1773264523U,
			OwaGzipCannotBeSetToLegacyVirtualDirectoryWhenMailboxRoleInstalled = 2137414559U,
			ClientAccessExchangeCertificateComponentDescription = 2932389186U,
			SenderAndRmsOnlineParametersCannotBeCombined = 1040599336U,
			TopologyServiceDisplayName = 1938975541U,
			ErrorChangeConfigurationNotSupported = 1618002793U,
			InterceptorErrorConditionHeaderValueMissing = 2467206592U,
			VerboseCheckIISConfiguration = 1523783911U,
			SetupComponentADSchema = 3024861528U,
			InstallingIMAP4Service = 4107219633U,
			MSExchangeMGMTDisplayName = 2128405927U,
			AdminAuditLogSearchNegativeResultSize = 2891009079U,
			ConfirmationMessageNewEdgeSyncEhfConnectorOnLocalSite = 999144299U,
			SetupProgressMailTipsEnabled = 2103941010U,
			CopyStatusInitializing = 1373187244U,
			ErrorCannotSetPowerShellMaxTenantRunspaces = 3560770236U,
			StartADTopologyService = 910317825U,
			InvalidRuleSearchFilterMissingElements = 1149547458U,
			SpecifiedOUNotFound = 2563311167U,
			MtrtAddBlindCopyToRecipient = 3938326230U,
			NoSLCCertChainInImportedTrustedPublishingDomain = 67550991U,
			SetupProgressStopHealthManagerService = 529637304U,
			ErrorPowerShellCorrupted = 1612938185U,
			ErrorTextMessageInsufficientPermission = 1619534902U,
			DlpPolicyDescriptionDisplayName = 2287537271U,
			WarningInboxRuleOutlookBlobExists = 514153900U,
			RmsUrlsCannotBeSet = 3587729804U,
			DebugEndSaveDataObject = 247906216U,
			ConfirmationMessageStartEdgeSynchronization = 243743017U,
			VerboseResolvingSecurityPrinciplals = 2031953882U,
			WarningLegacyExchangeServerForMailContact = 2199141127U,
			ErrorTemplatesMayNotContainRulesWithImmutableIds = 3687261608U,
			CertificateStatusRevoked = 1163984313U,
			CasHealthOwaPingError = 4269203724U,
			ReservedString5 = 4054043082U,
			WarningDatabaseScopeCreationApplicableOnlyInSP = 450966693U,
			ServiceNameEws = 3203524443U,
			MailboxAssociationMailboxNotFound = 645544640U,
			SetupComponentMidFileCopyBridgehead = 1343310908U,
			NodePausedCheckDesc = 592390813U,
			AllLinkedGroupMembers = 2811670542U,
			SharedCacheServiceDescription = 1360134828U,
			InstallKeynoteConnectorServiceTask = 3237220889U,
			InvalidIncidentReportOriginalMail = 1604244669U,
			ErrorConflictingMailboxes = 2228796246U,
			RemoveVirtualDirectoryCouldNotAccessWebServicesRootException = 1366760397U,
			ErrorInvalidAuthServerTypeValue = 4051542195U,
			ErrorCorruptRuleAction = 4002590677U,
			ErrorRunspaceServerSettingsNotFound = 1276593436U,
			ClassificationRuleCollectionOffendingListSeparator = 4278888973U,
			ScenarioEwsConvertId = 224359057U,
			ProgressCopyingCopyLogFiles = 25431416U,
			DisasterRecoveryAdminToolsRoleDescription = 799867258U,
			ErrorEnabledPrimarySmtpAndEmailAddressTemplatesSpecified = 3785983711U,
			ErrorBPAMergeFileLoad = 1836636963U,
			IISNotInstalledException = 2431707337U,
			SetupComponentPreSetupAdminTools = 1935215586U,
			ErrorCannotDetermineRequester = 909539378U,
			VerboseFixingEmailAddressPoliciesInNativeMode = 2655838320U,
			DebugEndUpnUniquenessCheck = 937945415U,
			InfoPLCreated = 2687794018U,
			SetupProgressRemoveServerObject = 2580842796U,
			UnknownFailureFromCiRpcServer = 1069636970U,
			WarningActionWillOnlyBeAppliedIfMessageIsNotRejected = 2674744913U,
			CookieNotUpdated = 2996271904U,
			ProcessingAceActivity = 1484844461U,
			CasHealthOwaFbaAuthTypeExpected = 2105969147U,
			ConfirmationMessageSendMapiSubmitSystemProbe = 1356174462U,
			ConfirmationMessageStartELCAssistant = 3985182496U,
			MobileDeviceLogNoLogsExist = 1214391541U,
			ErrorRpcHttpMustSpecifyInternalClientAuthenticationMethodOrDefaultAuthenticationMethod = 2991967653U,
			MtrtEventExpand = 3696548465U,
			EmptyTargetMailbox = 159616798U,
			ErrorDistributionGroupNameTooLong = 1619798746U,
			SetupProgressCreateOutOfTheBoxDefaultMRMTags = 2654720989U,
			ErrorTargetMailboxDatabaseVersionUnsupported = 4249074819U,
			SetupComponentConfigurationFrontendTransport = 1223504853U,
			RepairUrgencyHigh = 2718544146U,
			SetupProgressUpdatingResourcePropertySchema = 2897887400U,
			DefaultAllDistributionLists = 4269635969U,
			SetupProgressCreateGlobalAutoDiscoverContainer = 811249870U,
			MigrationCompleteAfterScheduledBatchesOnly = 2193598558U,
			UMMailboxPolicySetAllowFaxError = 3992939044U,
			AttachmentFilterNoExceptionConnector = 1946128370U,
			ChangePasswordLockedOut = 3115336137U,
			SetupProgressCreateWLMContainer = 4017283327U,
			GlobalLocatorServiceResultFailure = 44339415U,
			CannotRunForeignConnectorTaskOnEdge = 2231509304U,
			CasHealthOwaAuthMethodHeader = 4121265404U,
			TestSearchCheckServer = 3113324051U,
			SetupProgressUpdateTenantMailboxes = 1381834853U,
			ErrorTrustAlreadyDefined = 3755531083U,
			ConfirmationMessageSetOrganizationConfig = 3285185239U,
			RequiredIdentityInformationNotSet = 3332580362U,
			ErrorSetOWAMailboxPolicyToE12User = 3365079287U,
			SetupProgressRemovingPublicFolderDatabase = 1290509263U,
			ProgressCopyingLogFiles = 2642450701U,
			SetupComponentProvisionServer = 1381261690U,
			NeedEitherAssemblyPathOrValidName = 4012071978U,
			ErrorFindCertificateOnServerObject = 2086818621U,
			ErrorProvisioningReconciliationConfigNotFound = 1460008623U,
			SetupProgressStopEdgeTransportService = 3846405471U,
			DebugStartInAcceptedDomainCheck = 3252841297U,
			UninstallMailSubmissionServiceTask = 1036372211U,
			InstallClientAccessIisWebServiceExtensions = 1475578476U,
			CouldNotLocateAnyTeamMailbox = 441773451U,
			CertificateStatusUnknown = 3260271077U,
			VariablesSection = 1318485394U,
			InfoCheckingRmsOnlineAuthenticationCertificate = 3469456862U,
			MtrtNotifySender = 2835213035U,
			TransportSettingsNotFound = 751112921U,
			SetupProgressCreateRBACRoleAssignments = 480800478U,
			GetContentIndexTask = 3662015180U,
			BackSyncFailedToConvertSyncObjectToDirectoryObject = 950974516U,
			ADAttributePagerNumber = 3850073087U,
			SetupProgressEnableSelfManagement = 2398741750U,
			ADAttributePhoneNumber = 4137481806U,
			TenantNotificationVerboseNotSendingEmailDailyCap = 771734573U,
			DagNetworkAllDisabledWarning = 2026505547U,
			ContentIndexServiceDescription = 1120293486U,
			SetupProgressGALSyncEnabled = 3538510592U,
			ErrorNameNotSet = 3240052672U,
			StartingMomService = 2114850440U,
			SetupProgressRecipientMailSubmissionRateQuota = 1987393790U,
			MalboxFolderRightsEditOwnedItems = 2419166909U,
			SetupPerimeterSafelistingUIMode = 3072162476U,
			VerboseSearchingAssigneeInConfigNC = 1993693877U,
			AllForeignAccounts = 2235869021U,
			CasHealthEasSyncZeroScenarioDescription = 1920148531U,
			SetupProgressMaxSendTransportQuota = 4224229383U,
			FfoWebServicePreConfigComponentDescription = 2270748102U,
			DisasterRecoveryUnifiedMessagingRoleDescription = 3381713806U,
			SetupProgressActiveSyncEnabled = 2423295274U,
			ErrorInvalidAuditOwnerOperationType = 1897854438U,
			ActiveDirectoryConnectivityTransactionsAllSucceeded = 4178137973U,
			DefaultPublicFolders = 3378630967U,
			SetupProgressCreateAutoGroupRetentionPolicyTag = 2849913626U,
			MoveStatusUnknown = 1489480989U,
			CasHealthOwaLongName = 2569295017U,
			CasHealthEcpShortName = 2496242404U,
			CopyStatusMounting = 1208301054U,
			CopyOperation = 2846914028U,
			FfoWebServiceProvisionComponentDescription = 3552826330U,
			ErrorConflictResourceCustom = 1984115551U,
			InstallAssistantsServiceTask = 3025732470U,
			SetupProgressCreateOWAMailboxPolicyContainers = 1810706551U,
			KeynoteConnectorServiceDisplayName = 2768464912U,
			ADAttributeCustomAttribute5 = 1377545163U,
			ADAttributeCustomAttribute1 = 1377545167U,
			ErrorFilterParametersIntraOrg = 1549280152U,
			CasHealthWebAppLiveIdEnd = 3721623660U,
			WebServiceRoleEntryNotSupportParametersAndSnapin = 2747907193U,
			MtrtEventFail = 1151252861U,
			WarningMessageSizeRestrictionOutOfSync = 1767955380U,
			MigrationCSVNotAllowed = 1355366283U,
			NeedIisRestartForChangingECPFeatureWarning = 3372077054U,
			ClassificationRuleCollectionUnexpectedContents = 4163377893U,
			BPADownloadingUpdates = 2193176105U,
			FoundMultipleObjectById = 1329891945U,
			CasHealthSpecifyMailboxForResetCredentials = 2783321364U,
			SetupComponentPostSetupCafe = 706028660U,
			ConfirmationMessageSetIPAllowListProvidersConfig = 475854284U,
			SetupComponentConfiguringRpcClientAccessService = 863845264U,
			ErrorAddGroupMemberCrossTenant = 101589004U,
			ErrorBPAOutputConflict = 4151753170U,
			ErrorRemoteMailboxImportNeedRemoteProxy = 1642010523U,
			ServicesComponentDescription = 1209054947U,
			StartingOnePointService = 2393820385U,
			ErrorCannotResumeIfNotSuspended = 2762012249U,
			SetupProgressRemovingMailboxDatabase = 2462309444U,
			MobileDeviceLogNotRetrieved = 531835631U,
			DeletionAndUnsearchableNotPermitted = 3816576111U,
			InboxRuleDescriptionOr = 1467203807U,
			MonitoringCorrelationServiceDisplayName = 1012815040U,
			ProgressEmailAddressPolicyPreparingPriority = 824920009U,
			MtrtApplyHtmlDisclaimer = 2811275637U,
			UnableToConnect = 2654165210U,
			UninstallExchangeOrganizationDescription = 1177180156U,
			CasHealthScenarioDescription = 302716089U,
			DualWriteSaveWarningMessage = 1241635965U,
			ErrorCannotChangeName = 3223564936U,
			SetupComponentPostSetupAdminTools = 2672737351U,
			MtrtAddToRecipient = 1630998932U,
			NeedToSpecifyADSiteObject = 624509981U,
			ErrorConfigurationOnly = 3852698972U,
			DatacenterSetupComponentPerfCountersBridgehead = 1486813282U,
			FBAServiceDisplayName = 915562217U,
			TransitionInfoLabelLastSuccessTransition = 2731341333U,
			ErrorPrimarySmtpAndWindowsAddressDifferent = 1752948545U,
			ErrorWriteOpOnDehydratedTenant = 1221524445U,
			ErrorRmsOnlineAuthenticationCertificateNotYetValid = 3097067489U,
			UninstallWatchDogServiceTask = 4205247815U,
			ErrorSpecifyAutoMappingOnNonFullAccess = 266841953U,
			ClientAccessPrereqCheck = 639692992U,
			ConfirmationMessageAuthSettingOutage = 1253954375U,
			WarningModerationWithWrongGroupType = 846242402U,
			CasHealthOwaMailboxServerHeader = 1495738752U,
			DebugEndEnablingUM = 2361565504U,
			FederatedOrganizationIdNotSet = 332863269U,
			SetupProgressCreateDSNCustomizationContainer = 1066400057U,
			SetupProgressStoppingMailboxReplicationService = 4100727451U,
			MalboxFolderRightsFolderContact = 1323608086U,
			MapiSubmitSystemProbeNoMessageFound = 3961198570U,
			WarningNonemptyManagedFolderNotDeleted = 3923667863U,
			SetupProgressCreateMailboxManagedFolders = 2641950738U,
			InvalidTimeRange = 1628899399U,
			SetupProgressCreateClientAccessContainer = 4259877028U,
			SetupPrereqAnalysisCompleted = 1743121281U,
			RequiredEndDateParameter = 2722004787U,
			RpcClientAccessServiceDisplayName = 978731224U,
			WarningNoCookiesRemovedForRollback = 887526467U,
			SetupMultiEngineAVEnabled = 2334907634U,
			UninstallNotificationsBrokerServiceTask = 1255598415U,
			ADAttributeFirstName = 2986926906U,
			DebugStartRetrievingAuditConfig = 4141971325U,
			EwsNotSupportedException = 1003903261U,
			IncludeAutoDiscoverOnlyApplicableToCAS = 343112327U,
			ReplicationCheckResultUndefined = 863604629U,
			CasHealthOwaLogoffError = 4288698983U,
			DagTaskDone = 2695605747U,
			MustProvideNonEmptyStringForIdentity = 1302133406U,
			WarningDeleteTemplate = 1427317623U,
			SetupProgressStoppingWMIService = 1501174110U,
			ConfirmationMessageStopELCAssistant = 3074556176U,
			MalboxFolderRightsDeleteOwnedItems = 62572758U,
			ErrorAuthNewCertificateNeeded = 2954092362U,
			ContentIndexingServiceStillInstalled = 2724814698U,
			CasHealthOwaConnectionRefused = 3234641110U,
			NoMatchingUMMailboxPolicyInTargetForest = 3697667913U,
			ContentIndexingPHStubNotFound = 1725408952U,
			ConfirmationMessageTestMailflow = 4155200793U,
			ADAttributeOtherFaxNumber = 3689464497U,
			ErrorChildObjectTypeParameter = 2188750956U,
			SetupProgressCreateDag = 3834576904U,
			ReplayLagStatusLabelActual = 3477555365U,
			MtrtPrependSubject = 136993055U,
			CannotRemoveUMCRCertificate = 3630035827U,
			Error_MessageClassFilter = 2224870290U,
			MetabaseGetPropertiesFailure = 1856631791U,
			FolderMoveRequestCheckComplete = 2911430177U,
			ConfirmationMessageNewEdgeSyncServiceConfigOnLocalSite = 106773198U,
			InstallMonitoringCorrelationServiceTask = 983241257U,
			ConfirmationMessageUpdateSyncStatistics = 2196859003U,
			ClientAccessRoleDisplayName = 3229808788U,
			ConfirmationMessageNewMicrosoftExchangeRecipient = 1940704520U,
			GzipCannotBeSetToError = 920948119U,
			ThrottlingServiceDescription = 4130365422U,
			FileLocationNotChanged = 2064866056U,
			ConversationsNoConversationsFound = 873161575U,
			ErrorCannotTurnOnBothAndAndRemove = 3592788208U,
			InfoGetRacAndClc = 3820850055U,
			SetupProgressStoppingHygieneUpdateService = 1644641079U,
			TransportSyncManagerServiceDescription = 91086936U,
			RejectMessageActionIsBeingOverridded = 3134498491U,
			SetServiceInstanceMapResultCodePartitionUnavailable = 4017981356U,
			SetupProgressStoppingContentIndexingService = 3244118776U,
			PhoneNumberInvalidCountryCode = 2854796459U,
			IrmLicensingIsDisabled = 406334368U,
			ErrorDisableMailboxWithJournalArchiveWithDirSync = 4064249999U,
			FederationTrustHasAllStsCertificates = 178490484U,
			SetupComponentPreSetupGateway = 2935896590U,
			ErrorMailTipSetTranslationsWithoutDefault = 2801109101U,
			InstallThrottlingServiceTask = 2060695020U,
			SetupComponentConfiguringMailbox = 2377371197U,
			ArchiveConnectivityResultArchiveNotActive = 1391409413U,
			ReplicationCheckResultFailed = 2302151400U,
			SuspendWRTCPreventCompletionCannotBeSetOnNewRequests = 4085097797U,
			ErrorMultipleJournalArchiveAddress = 221534809U,
			ConfirmationMessageTestFederationTrust = 2808132619U,
			DelegateRoleTypeViewOnlyAdmin = 3020149749U,
			ServiceNameOab = 3983242292U,
			ScenarioOfflineAddressBook = 2378120020U,
			TestSearchStatus = 4198747660U,
			SetupProgressApplicationImpersonationEnabled = 2394040785U,
			SetupProgressStartingIISAdminService = 2315436063U,
			SetupComponentMidFileCopyFrontendTransport = 1036352676U,
			ErrorRoomMailboxPasswordCannotBeSetIfEnableRoomMailboxAccountIsFalse = 993270375U,
			CannotSwitchLinkedInAccount = 2845208078U,
			InfoRmsVersionChecked = 558509551U,
			LogOnlyOperation = 3290100793U,
			CasHealthOwaAuthFailExternal = 303672627U,
			CertificateStatusDateInvalid = 191693082U,
			MustBeUnpacked = 1917741727U,
			ClientAccessEcpComponentDescription = 3480344122U,
			PublishingNotEnabled = 1452889109U,
			EmptyTaskListException = 1027614433U,
			WarningReplicationLatency = 1075761718U,
			NoWebServicesExternalUrlFoundException = 3882871374U,
			MigrationPartitionMailboxAmbiguous = 4174322812U,
			SetupComponentMidFileCopyGateway = 209372995U,
			SetupProgressListOpenFiles = 3317770113U,
			SupportedToolsContainsInconsistentData = 4049833125U,
			CasHealthOwaGetLogonPageSucceeded = 2266049675U,
			SupportedToolsUnableToGetToolData = 1916087801U,
			ProgressStatusFailed = 1190886562U,
			AvailabilityAddressSpaceInvalidTargetAutodiscoverEpr = 2543735748U,
			ErrorStartAfterEarlierThanCompleteAfter = 3180631268U,
			ProvisioningRequestCannotBeCanceled = 2681404045U,
			ErrorModifyE14DatabaseNotAllowed = 3800508562U,
			CasHealthOwaGetAuthEmptyPage = 634215246U,
			FDServiceDescription = 2694743145U,
			InvalidDeliveryStatus = 1481201881U,
			ErrorCannotSetLegacyArchiveJournalingEnabled = 1249578946U,
			WarningJournalArchiveMailboxHasNoMailUser = 2808015702U,
			CasHealthConfirmTestActiveSyncUsingAutodiscovery = 2394697169U,
			InfoCheckingRmsOnlinePrerequisites = 173411374U,
			ErrorChangePasswordRequiresOldPasswordNewPassword = 3495731578U,
			SetupProgressDisableWMIAsync = 2660569143U,
			CannotRemoveInternalTransportCertificate = 765220380U,
			ErrorFailedToGetPreL = 1431279917U,
			ErrorPartnerApplicationUseAuthServerCannotSetUrl = 2419294408U,
			CopyAndDeleteOperation = 576430832U,
			CompleteMigrationBatchNotSupported = 1980396424U,
			StartPreSetupDescription = 402764310U,
			MtrtEventTransportRule = 782748382U,
			PopGettingMessageIDs = 217981904U,
			SetupProgressCreateTransportRuleCollection = 1236740085U,
			AgentLogInvalidTimeRange = 2220152108U,
			ErrorAgentPriorityCannotBeChanged = 906770351U,
			CasHealthCalendarScenarioTestView = 2647704984U,
			SetupComponentPostSetupMailbox = 3902082635U,
			CopyStatusDismounting = 4189810048U,
			ProgressActivityUpdateRecipient = 2177109544U,
			ParameterErrorForInternalUsage = 2710426824U,
			ErrorCannotEnableJournalArchive = 1312047919U,
			ErrorBPAMergeFileNotFound = 1015332134U,
			SclValue = 214463947U,
			PerfCounterDefinitionFileNameDescription = 3294832335U,
			HubParameterNotValidOnEdgeRole = 1704483791U,
			NewDagClusteringInstalledLaterRunningChecksLaterVerbose = 2066445404U,
			CannotRemoveDefaultRmsTpdWithoutSettingAnotherDefault = 2361175376U,
			MailboxExchangeCertificateComponentDescription = 656898367U,
			ADAttributeCustomAttribute12 = 242192693U,
			InvalidSubscriptionFile = 1188336490U,
			ErrorInboxRuleTooBig = 2818510402U,
			OutlookProtectionRuleRmsTemplateNotSet = 317546527U,
			LocalSiteColon = 4162816907U,
			DirectoryPathDoesntExist = 2065442552U,
			MtrtQuarantine = 1746698641U,
			SetupProgressOwaGlobalAddressListEnabled = 2576192317U,
			SameOwaVersionDoNotCopyLPFiles = 4033729879U,
			ErrorDefaultMalwareFilterPolicyCannotBeDeleted = 3808447353U,
			MigrationStartAfterScheduledBatchesOnly = 2327721635U,
			InvalidDlpPolicyConfiguration = 1910163041U,
			ConfirmationMessageSetAvailabilityConfig = 1096493597U,
			BPAScanInProgress = 2308331446U,
			ExportWithPrivateKeyRequiresPassword = 3722370321U,
			CasHealthScenarioResetCredentials = 1404355436U,
			KeynoteConnectorServiceDescription = 3045092087U,
			ConfirmationMessageSetSearchDocumentFormat = 1460043812U,
			ErrorInvalidSizeRangeException = 908067860U,
			ErrorNoDatabaseInfor = 785552508U,
			DebugStartEnablingUM = 123373405U,
			ErrorSettingCertOnTenant = 14776491U,
			ErrorFailedToGetTemplateTenant = 133178266U,
			CannotRunOnNonHubTransport = 1348708874U,
			ErrorRmsOnlineAuthenticationCertificateExpired = 2651520529U,
			ErrorFailedToGetULDueToInvalidSuperUserConfiguration = 1785220801U,
			RemoveOrganizationDescription = 3672610051U,
			CasHealthTestNewUserScriptName = 2844085614U,
			InstallGatewayRoleDescription = 2009348203U,
			InvalidClientCertificateSubjectName = 2594705516U,
			SetupComponentPostSetupClientAccess = 3346850040U,
			ErrorCannotUpdatePublicFolderHierarchyInformation = 2189011080U,
			messageAutodiscoverServiceUnavailableException = 3014289487U,
			InfoIRMConfigLoaded = 1630518161U,
			CasHealthOwaGotLanguageSelectionPage = 3950720433U,
			WarningMustInvokeUpdateOABToStartScheduledGeneration = 3598927792U,
			HaltingExecution = 36668747U,
			CasHealthPowerShellLongName = 673284277U,
			AppIdElementIsEmpty = 1079115709U,
			InPlaceHoldNotAllowedForAllSourceMailboxes = 2849670203U,
			NoMdbWasMovedWhileRunning = 78736594U,
			MtrtDeleteAttachment = 2768242287U,
			IncomingUserNameEmpty = 2584381281U,
			AddressRewriteSessionNull = 4202582373U,
			ErrorAccessRightsEmpty = 3131090706U,
			SetupComponentMailboxGlobalConfig = 3623667921U,
			MtrtEventDeliver = 3868619324U,
			EcpUrlNotMatchOwaWarning = 2503320550U,
			CasHealthEasPing = 1356551856U,
			ErrorCompleteOrgUpgradeCannotRunForSharedConfigurationOrgs = 561948288U,
			WSManIISHostingConfigurationComponentDescription = 4113539864U,
			DiagnosticsHeader = 367058863U,
			UnknownMigrationUserStatusSummaryValue = 4243684796U,
			OwaMetabaseIsapiUninstallFailure = 1535975937U,
			MoreThanOneTeamMailboxes = 3935454309U,
			CasHealthOwaIsaFbaFormdirParseFailed = 681503665U,
			EventLogText = 3910386293U,
			ManageDelegation2ProvisioningInDNS = 749715156U,
			SetupPrereqAnalysis = 4236823146U,
			UninstallContentIndexingServiceTask = 3855792877U,
			SetupProgressSyncAccountsPollingInterval = 2547584967U,
			ExternalJournalRuleScope = 2583888766U,
			TestMigrationServerAvailabilityPasswordException = 12898892U,
			CasHealthEasOptionsScenarioDescription = 2190311546U,
			ProgressStatusRemovingWorkloadManagementPolicyTree = 2067178212U,
			ConfirmationMessageInitializeExchangeLegacyPermissions = 1927518978U,
			CopyStatusSeeding = 448862132U,
			ConfirmationMessageTestOrganizationRelationship = 2783924553U,
			UninstallOldAssistantsServiceTask = 2472730642U,
			ReservedString4 = 4054043081U,
			DeviceWipePending = 3728408622U,
			InfoEnterpriseMode = 2405285278U,
			ServiceNameAutoDiscover = 1486748686U,
			RemoveRemoteAccountSyncCache = 1275658866U,
			DualWriteDeleteWarningMessage = 1709945553U,
			ConfirmSetProvisioningReconciliationConfig = 1296902656U,
			UninstallThrottlingServiceTask = 3875057279U,
			SetupProgressPublicFoldersEnabled = 4218353751U,
			NotificationEmailsParameterMissing = 2028616171U,
			CasHealthWebAppNoCasArgumentError = 2428804411U,
			SetupProgressCreateExchangeMimeTypes = 1991303282U,
			ShouldContinueToExpandGroupsForHold = 3091771729U,
			HybridMailflowGetFfoDCPublicIPAddressesFailed = 377177216U,
			MigrationAutoStopForInProgressOnly = 167572150U,
			ErrorLogFolderPathNotAvailable = 547522671U,
			ErrorPublicFolderReferralHasWrittenToServer = 3890878117U,
			SetupProgressInstallingFreeBusyFolder = 1122989846U,
			MigrationStartAfterAndAutoStartExclusive = 1280796226U,
			UninstallFfoWebServiceRoleDescription = 8058994U,
			LanguagePackDescription = 1798622353U,
			InfoImportingTpdFromRmsOnlineCheckedNoTemplates = 1041587867U,
			ConfirmationExportMailboxDiagnosticLogs = 1211829139U,
			ErrorModifyE12ServerNotAllowed = 494607782U,
			ErrorRemoveMailboxWithJournalArchive = 3397377515U,
			InvalidProductKey = 805841165U,
			CannotLocateCurrentCertificate = 3250408681U,
			MtrtRouteMessageUsingConnector = 1700206738U,
			SetupProgressInstallingContentIndexingMSI = 2044663579U,
			ErrorSettingRealmOnFirstOrg = 2274442006U,
			FirstRoleAssignmentPolicyMustBeDefault = 3036936652U,
			SetupProgressStoppingW3SVCService = 2114394121U,
			DistributionGroup = 2537873109U,
			CannotEditManuallyModifiedRule = 1488045589U,
			MalboxFolderRightsDeleteAllItems = 2270964732U,
			ProtocolSettings = 3040964019U,
			TestOrganizationRelationshipWarning = 2022479947U,
			WarningReportNotAvailable = 3889143264U,
			ExceptionHeader = 1679500402U,
			SetupProgressSyncAccountsTimeBeforeInactive = 3539375720U,
			TestSearchTaskBaseError = 823932952U,
			NoNameArgument = 841037861U,
			CannotLocateFederationInfo = 4116718674U,
			GetFederationInformationProgress = 310671256U,
			SetupProgressInstallingMsFteMSI = 1467822517U,
			ErrorCannotSpecifyAccountNamespaceWithoutTrust = 1139041786U,
			ExchangeInteropUSGDescription = 254334823U,
			ADAttributeCustomAttribute9 = 1377545175U,
			PromptToRemoveLogEventAction = 1691025395U,
			ConfirmationMessageNewMailFlowPartnerConfig = 1949680079U,
			ErrorAlsFailedToProcessRequest = 1678323524U,
			ExchangeStreamingOpticsDisplayName = 470745396U,
			RemoveContentIndexTask = 1223062556U,
			ErrorMapiVirtualDirectoryMustSpecifyEitherInternalOrExternalUrl = 3234625944U,
			SetupComponentMidFileCopyClientAccess = 414183510U,
			UmLanguagePackPackagePathNotSpecified = 3235153535U,
			SetupProgressStartingAddressBookService = 2428723312U,
			InstallComplianceAuditServiceTask = 838814397U,
			InternalTransportCertificateUpdatedOnEdge = 1184910862U,
			ErrorCleanUpAndRemoveAlternateServiceAccountsAreMutuallyExclusive = 262546359U,
			ErrorSetGroupMailboxAddMembersPrivate = 1041208934U,
			MailboxReplicationServiceNotInstalled = 3031418490U,
			ConfirmationMessageNewReportingVirtualDirectory = 4059699036U,
			WarningReplayLagTimeMustBeLessThanSafetyNetHoldTime = 2810951265U,
			TowsMissingAutoDiscoverElement = 2449344145U,
			SetupProgressHideAdminAccessWarning = 2922053695U,
			SetupProgressStartEdgeTransportService = 2350123123U,
			WipePendingNote = 1877416004U,
			ComplianceAuditServiceNotInstalled = 3768894518U,
			MissingDataClassificationsName = 3557021932U,
			UninstallMailboxTransportSubmissionServiceTask = 4016212985U,
			OpenSCMFailed = 3855115154U,
			SetupProgressStoppingServices = 4009609004U,
			StartAfterOrCompleteAfterCannotBeSetWhenJobCompleting = 2354473495U,
			DatabaseChecksWarning = 273291066U,
			SetupProgressSyncAccountsSyncNowEnabled = 2621242427U,
			CannotResetDefaultOAB = 2522664611U,
			FfoPrimingServiceDescription = 828523090U,
			RoleLimitedDetails = 3060667906U,
			ExceptionVirtualServerNotExists = 3080406678U,
			ProgressActivityCreateAppId = 3080326154U,
			OwaMetabaseSetPropertiesFailure = 26237954U,
			MultipleOrganizationRelationshipInstancesReturnedByTheRemoteParty = 3330303460U,
			TokenRequestFailed = 649628065U,
			OneOrMoreTasksFailed = 1314188949U,
			E4eLicensingIsDisabledSetRule = 1507204552U,
			ConfirmationDisableJournalArchiving = 2654587277U,
			SetupComponentPostSetupMonitoringCorrelation = 2990267815U,
			MailboxReplicationServiceDisplayName = 235473832U,
			ConfirmationMessageTestMigrationServerAvailability = 3253730210U,
			InvalidAvailabilityAccessMethod = 3842833603U,
			MigrationPleaseUseStartForReenablingIncremental = 84116853U,
			ErrorMailTipRemoveDefaultAndTranslationsExist = 944597893U,
			TestSearchOperationAborted = 2120607910U,
			ComplianceServiceDisplayName = 1012278329U,
			ErrorDefaultRoleAssignmentPolicyNotUnique = 2072089536U,
			SetupProgressWsbPlugin = 3068649109U,
			UsageTypeCustom = 4140458166U,
			InvalidDomain = 3403459873U,
			ConfirmationMessageSetTransportProcessingConfig = 1996536374U,
			MsiProgressStatus = 1734429948U,
			VerboseClearAllPreferredDC = 922137960U,
			CannotMoveE15OrLaterOab = 2826824284U,
			DebugEndIsDomainReservedCheck = 368391118U,
			IisTasksNameValidationProperty = 1500370212U,
			FDS_OAD_PerfCountersComponentDescription = 3323623818U,
			ServerObjectIsNullWarning = 3496199763U,
			ProgressStatusCompleted = 3361139520U,
			ReplayLagPlayDownReasonNotEnoughFreeSpace = 4206530938U,
			ErrorSetRecipientViewRootAndViewEntireForestToTrue = 2299824885U,
			NewImap4ConfigurationTask = 2597902056U,
			ScenarioAvailabilityService = 1395708426U,
			MigrationValidateNotSupported = 2749826425U,
			ErrorGenericAllCannotbeUsedWithOtherAccessRights = 2903077230U,
			ErrorInvalidSizeRangeCondition = 70447300U,
			MigrationCsvParameterInvalid = 3474126328U,
			ADAttributeName = 3050431750U,
			ValidatingUserObjectDescription = 2678936089U,
			RmsOnline = 1319233567U,
			SetupProgressDisplaySpecifiers = 2671381439U,
			UnableToDetermineExecutingUser = 499504696U,
			ComAdminInstallOleConverter = 3923056437U,
			BPACheckingForUpdates = 605575496U,
			SendConnectorValidSourceServerNotFound = 2920595890U,
			AboutToAddLocalOrgUSGToLocalAdminGroup = 3947119703U,
			DatabaseRedundancyCheckDesc = 2615723947U,
			MarkingMoveJobAsCanceled = 3047692628U,
			InstallFrontendTransportRoleDescription = 2732176076U,
			RmsSharedIdentityFailedToRemoveLink = 3257900905U,
			SetupProgressCreateMessageHygieneContainer = 1177356111U,
			ErrorInvalidResponseFormat = 1811296721U,
			NewPolicyTipConfigDuplicate = 1448572638U,
			VerboseUnlockingModulesSection = 481130440U,
			SetupProgressAllowRemotePowerShellForAdmins = 2798232721U,
			SetupProgressHostedConnectorFilterPolicy = 3660257130U,
			NoSmtpAddress = 3069929753U,
			ErrorBPAConfigDataSave = 3847601718U,
			OfficeDataLoaderServiceDescription = 2926722674U,
			IISNotInstalled = 1780428476U,
			GetPolicyTipConfigUrlUsedAsActionFilter = 3183807969U,
			ErrorSetGroupMailboxRemoveMembersOtherUser = 2627276457U,
			CasHealthCalendarVDirSuccess = 2569719605U,
			IgnoredAuthenticationWarning = 1164934596U,
			AutoGroupJoinMessageSubject = 3957453737U,
			MigrationOperationFailed = 418863002U,
			OwaAuthenticationNotMatchEcpWarning = 3566266091U,
			ErrorCannotMovePublicFolderIntoSameMailbox = 3203832541U,
			SetupProgressStartingEdgeSyncService = 1524386503U,
			MailSubmissionServiceDisplayName = 44103597U,
			AutodiscoverFailure = 1796170360U,
			ConflictedPolicyUpdateNotAllowed = 1366093647U,
			InvalidCategory = 3497616869U,
			JournalingToExternalOnly = 344390835U,
			ErrorTenantIsPiloting = 3204473306U,
			SetupProgressStoppingAddressBookService = 51564260U,
			SetupComponentConfiguringADTopologyService = 4084620468U,
			FailedToCreateAuditLogSearch = 3039439991U,
			WarningPropertySetIgnored = 3995145683U,
			MigrationPleaseUseStopForDisablingIncremental = 3963066099U,
			StatusMessageSynchronizerRunningInBackground = 1465827073U,
			ErrorBothCustomAndPrecannedFilterSpecified = 1505488867U,
			ErrorTaskRunningLocationFrontendOnly = 3863634433U,
			CasHealthOwaErrorPageHeader = 213191494U
		}

		private enum ParamIDs
		{
			VerboseWsrmNotConfigured,
			ErrorCannotDeleteRoleWithAssignment,
			WarningMisconfiguredElcMailboxPolicy,
			ErrorNonMailboxDirectoryUser,
			ConversationsFailedToOpenMailbox,
			ConfirmationMessageNewMailboxResource,
			InvalidLogIdentityFormat,
			VerboseDeleteMailboxInStore,
			RestoreMailboxDuplicates,
			E12DomainServersGroupNotFoundException,
			DagTaskCheckingDagServersAreClustered,
			ConfirmationMessageSetAddressrewriteentry,
			WarnExtendedProtectionIsNotEnabled,
			SharedConfigurationInfoExists,
			RecipientDomainNotManaged,
			ErrorWLCDPartnerAccessException,
			InconsistentServerNotInDag,
			ErrorAuthServerIssuerNameNotFound,
			InterceptorErrorRootedPathNotAllowed,
			HybridMailflowConnectorNameAndTypeWarning,
			COMDetailException,
			ErrorCannotCancelRequestBeingCompleted,
			VerboseADOperationSucceeded,
			ConfirmationMessageSetAuthServer,
			DagTaskCreatingFsw,
			ConfirmOrphanCannotConnectToMailboxDatabase,
			ErrorMailboxAuditLogSearchTimeout,
			ErrorSetOlderVirtualDirectory,
			FoundTasksToExecute,
			WarningUpgradeIsNotComplete,
			ErrorMailboxDatabaseToRecoverHasAssociatedRecoveryMailboxDatabaseAlready,
			ConfirmationMessageSetIntraOrganizationConnector,
			WarningOabGenFailed,
			InvalidForwardSyncConfigurationError,
			ErrorWildcardNotSupportedInRelocationIdentity,
			ConfirmationMessageRemoveHostedContentFilterPolicy,
			WarningPrimaryExchangeRecipientNotSet,
			VerboseCreatingMonitoringMailbox,
			OABVdirBasicAuthWithoutSSL,
			ClassificationRuleCollectionReservedRulePackIdViolation,
			NamespaceServiceUrl,
			ConfirmationMessageEnableMalwareFilterRule,
			DagTaskNoNetworksRunningDhcp,
			ErrorLiveIdAuthentication,
			FormsAuthenticationDeleteUnknownErrorException,
			FailedProbeResultDetails,
			ErrorNoMatchedUserTypeFound,
			ConfirmationMessageTestServiceHealth,
			ExchangeSettingsExpirationDateIsInThePastWarning,
			VerboseFailedToDeleteEapWhileRollingBack,
			ErrorSetMailPublicFolderEntryIdWrongFormat,
			VerboseTestUserAddress,
			SetServerAttributePermissionDeniedException,
			VerboseFailedToRollbackPriority,
			DetailRpcError,
			AboutToAddServerAdminToLocalAdminGroup,
			ServiceHasNoProcessId,
			ErrorNotExchange12Server,
			ErrorPolicyNotFound,
			ServiceDisabled,
			MultipleDialplansWithSameId,
			CasHealthWebAppStartTest,
			ConfirmationMessageSetMailboxCrossVersionRehoming,
			DagNetworkSubnetMoving,
			SenderIPAddressOverlapsFfoDCIPAddressesId,
			ExchangePrincipalNotFoundException,
			OutputFileExists,
			messageTopologyDiscoverException,
			NewFederationTrustProvisioningService,
			ErrorSetGroupMailboxInvalidYammerEmailAddress,
			ErrorTeamMailboxSharePointSiteAlreadyLinkedWithOtherTM,
			FailToCreateOrUpdateSubscriptionPrincipalOnEdge,
			ClassificationRuleCollectionInvalidProcessorReferenceViolation,
			WritableDatabaseNotFound,
			WritableRecipientNotFound,
			ErrorFailedToGetDatabaseLastBackupTimes,
			AddAccessRuleArgument,
			ErrorEdbFileDirectoryNotExist,
			DeviceFilterRuleAlreadyExists,
			ErrorConflictSaving,
			NoAuthenticationWarning,
			MapiTransactionDiagnosticTargetDatabaseNotOnTargetServer,
			CertificateInvalidFQDNValue,
			ErrorGroupNotUniqueOnDomainController,
			ConfirmationMessageRemoveResourcePolicy,
			WKGuidNotFoundRetrying,
			GeneratingDelegationToken,
			PerfCounterProcessingFile,
			OabVirtualDirectoryAdOrphanFound,
			FailedToCreateAdminAuditLogItem,
			SuspendSgcUseRpc,
			UmLanguagePackProductCode,
			messageNSPIOperationException,
			DomainNotReachableWarning,
			InvalidPushNotificationSubscriptionExpirationTime,
			ConfirmationMessageResumeMalwareFilterRecoveryItem,
			SeederProgressMsgOverSpecifiedNetwork,
			ErrorAssigneeSecurityGroupNotUnique,
			SpecifiedRecipientNotDistributionGroup,
			DuplicateIntraOrganizationConnectorDomain,
			NoRemoteFederatedDomainInLocalOrganizationRelationship,
			SuspendSgcFallbackToState,
			ErrorInvalidNameCharacter,
			ImportCertificateAlreadyExists,
			FederationCertificateNotFound,
			WarningSearchAdminAuditLogOnPreE15,
			ErrorPSFanInProviderAssemblyNotFound,
			ServerDoesNotHaveADomain,
			ErrorMailboxDatabaseNotOnE14Server,
			ConfirmationMessageUpdateStoreMailboxStateMailboxIdentity,
			ErrorFederationTrustNotUnique,
			ErrorMailboxPlanNotUnique,
			ErrorTenantAdminsCanOnlyAddSubdomains,
			DagTaskServerIsNotInDagException,
			ErrorOfflineAddressBookNotUnique,
			ConfirmationMessageNewMailboxRepairRequestDatabase,
			VerboseVerifyingServer,
			CasHealthStorageError,
			InvalidWKObjectException,
			ErrorArchiveAlreadyPresent,
			SendConnectorComputerNotFound,
			FormsAuthenticationMarkPathCloseError,
			WarningCouldNotCreateRoleAssignment,
			ErrorAddressListNotUnique,
			WarningInvalidRoleAfterUpgrade,
			IPListEntryExists,
			WarningSiteFolderCheckTaskNotAvailableOnTiServer,
			ConfirmationMessageNewMailboxArbitration,
			MultipleDefaultFoldersInPolicyException,
			ValidationDivergenceMustBeNonHalting,
			FailureToGetDelegationToken,
			ErrorDlpTemplateDuplicateParameter,
			NoDeviceFilterByName,
			ToomanyDatabasesForServer,
			MigrationJobNotFound,
			AdTopologyServiceWithOldNameInstalled,
			ErrorExceededMaxClassificationsLimit,
			LogSourceServerRusReferral,
			NoDCsAvailableException,
			ErrorMailboxCalendarConfigurationNotAllowedParameterValue,
			DagTaskProblemChangingQuorumException,
			WarningSetMailboxLitigationHoldDelay,
			ConfirmationMessageSetInboxRule,
			ErrorTeamMailboxContactSharePointSiteWithCorrelationId,
			ErrorRoleAssignmentConstraintViolationOnScopes,
			MigrationMissingParameterException,
			ErrorFailedToFindFolderInMailbox,
			ErrorOpeningCertificateStore,
			ConfirmationRemoveSupervisionListEntry,
			ErrorDeprovisionedTargetPassedWithoutComplete,
			PropertiesDiffer,
			ConfirmationMessageStartOrganizationPilot,
			CertificateValid,
			DagFswUnableToRemoveWitnessDirectoryException,
			ErrorSCTsCannotBeMigrated,
			VerboseCheckingScopeFailed,
			ConfirmationMessageSetServiceInstanceInfo,
			ConfirmationMessageRemoveAddressList,
			ConfirmationMessageSetTextMessagingAccount,
			ErrorTeamMailboxSetShowInMyClient,
			UmLanguagePackDescription,
			VerboseServiceValidatorUrl,
			NoDeviceFilterRuleByNameAndCharacteristic,
			ErrorCannotFindDomainController,
			WarningUnableToResolveUser,
			WaitingForClusterServiceToStop,
			ConfirmationMessageNewActiveSyncDeviceAccessRule,
			CouldNotUpdateServiceInstanceMap,
			UnableToMoveUCSMigratedMailboxToDownlevelError,
			ErrorUserWithMatchingNetIdAndDifferentWindowsLiveIdExists,
			CookieExpiredException,
			MapiTransactionShortErrorMsgFromException,
			ServerNotInDagError,
			ConfirmationMessageNewOutlookProtectionRule,
			ErrorInvalidFilterProperty,
			ErrorUnableToDetermineMdbQueue,
			ConfirmationMessageNewMobileMailboxDefaultPolicy,
			ErrorServicePlanHasNoMatchingMailboxPlan,
			ErrorCannotMoveDiscoveryMailboxesDownlevel,
			ErrorFailedToUpdateStoreMailboxInformationException,
			MailboxAdminDisplayVersionCouldNotBeDisplayed,
			ErrorCompleteFlagRequired,
			AcceptedDomainsCannotBeRoutedByOutboundConnector,
			ConfirmationMessageNewMailboxExportRequest,
			CasHealthPowerShellAppPoolNotRunning,
			ErrorArbitrationMailboxNotSet,
			CannotSetProxy,
			ConfirmationMessageUpdatePublicFolderMailbox,
			ErrorExistingRecipientInActionsCannotBeDistributionGroup,
			WarningNoMyBaseOptionsRole,
			SecurityDescriptorAccessDeniedException,
			ConfirmEnableCertForUMCR,
			ErrorDCIsNotGC,
			ErrorCannotMoveMailboxesWithInPlaceHoldDownlevel,
			OwaAuthenticationMethodCouldNotFindExtensionException,
			messageFatalAutodiscoverException,
			Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceCopyLocation,
			GetDbcsDetectReplayServiceDown,
			ExchangeUpgradeBucketSourceVersionBiggerThanTarget,
			RpcHttpE2k3Servers,
			NoRecipientsForRecipientId,
			ErrorCannotCreateARoleFromADeprecatedRole,
			ServerNotUnique,
			ResumeSgcFallbackToState,
			LogProcessExitCode,
			RootNodeDoesNotMatch,
			TSProcessNotFound,
			VerboseDefaultOABNameFound,
			DkmContainerAlreadyExists,
			ErrorCleanupRequestedAtWrongRequestedState,
			ErrorFailedToConnectToStore,
			GetCopyStatusRpcException,
			ConfirmationMessageEnableHostedConnectionFilterRule,
			ErrorUnableToDetermineContentMailbox,
			CheckPointProgressed,
			ErrorEnableMailPublicFolderNotAllowed,
			DlpPolicyMissingEnString,
			ErrorCompleteAfter,
			InstallingGlobalThrottlingPolicy,
			ErrorGroupNameContainBlockedWords,
			ExchangeSettingsExistingSettingNotUpdated,
			WarningSetMailboxRetentionHoldDataFAI,
			ExceptionRegistryKeyNotFound,
			ConfirmationMessageSetELCFolder,
			ErrorNoMatchingSmtpProxy,
			ErrorSetPolicyRoleAssignment,
			ConfirmationMessageRemoveRemoteDomain,
			ProtocolTransactionsSucceeded,
			AlsEmailBodyAdminCmdlets,
			ExchangeSettingsUpdateScopeForest,
			OwaAuthenticationMethodFoundMoreThanOneExtensionException,
			ConfirmationMessageSetEdgeSyncServiceConfig,
			ConfirmationMessageNewMailboxWithArchive,
			ExSGroupNotFoundException,
			VerboseFixingObject,
			ErrorRetentionIdConflictsWithRetentionPolicy,
			ReplicationCheckFatalException,
			EdgeSyncServiceConfigMissing,
			FileShareWitnessPathNotSet,
			ConfirmationMessageResumeDatabaseCopyReplicationIdentity,
			InvalidMessageDataClassificationParameterMinGreaterThanMax,
			MigrationInvalidBatchIdForUser,
			NoReceiveConnectors,
			ConfirmationMessageNewMailboxRelocation,
			VerboseLogFolderPathUniqueUnderDAGCondition,
			ErrorMemberNameUnavailableUsedAlternateAlias,
			RemoveDefaultOAB,
			ErrorNoAdministratorKeyFound,
			messageGlobalLocatorServiceWCFExceptionThrown,
			ErrorRemoveModeratorMailbox,
			ConfirmationMessageNewELCFolder,
			WarningMailboxNeverBeenLoggedOn,
			CasHealthOwaUserColon,
			CannotFindXPath,
			WarningManagementWebServiceVDirCreated,
			ELCFolderAlreadyUpgraded,
			ErrorCanNotAddMailboxToWellKnownHostedMailboxSG,
			ExportMailboxDuplicates,
			ConfirmationMessageTestReplicationHealth,
			TransportRpcNotRegistered,
			CasHealthWebAppLogonScenarioDescription,
			ErrorMbxPlanReleaseTransition,
			AdminSDHolderNotFoundException,
			TiE12Warning,
			InfoFoundPreE12Server,
			ConfirmationMessageNewHostedEncryptionVirtualDirectory,
			DagMemberString,
			ErrorDatabaseExcludedFromProvisioning,
			ErrorInvalidParameterForAuditLog,
			ClassificationRuleCollectionSchemaNonConformance,
			MoveRequestNotFoundOrUnsupported,
			SearchingForCertificate,
			ErrorNoRemoteHostNameSettingForLocalMove,
			MsiRebootRequiredToFinish,
			ConfirmationMessageSetSendConnector,
			ErrorMessageNotFound,
			SelfMemberNotFoundException,
			VerboseCopyFile,
			RestoreMailboxShouldRestore,
			ErrorPropertyTypeNotFound,
			OabVirtualDirectoryNotExisting,
			ConfirmationMessageRemoveAdminAuditLogConfig,
			ConfirmationMessageSuspendDatabaseCopyActivationIdentity,
			ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequestedSourceServer,
			AmMoveRpcCompletedAnyServerSourceServer,
			ProgressDismountingDatabase,
			NeedRemoveCopyFileManuallyAfterCopyDisabledRcr,
			ErrorAssemblyIsPath,
			CasHealthWebAppAllTransactionsSucceeded,
			CasHealthPowerShellRemoteConnectionScenario,
			ConfirmationMessageRemoveDefaultMobileMailboxPolicy,
			MailboxIsNotLocked,
			ErrorCertificateHasExpired,
			RegistryAccessSecurityExceptionRead,
			ErrorCasServerNotRpcEnabled,
			RmsSharedIdentityUserNotFoundInGC,
			ConfirmationMessageSetAddressList,
			InfoGetPreL,
			CatchAllRecipientNotExists,
			ConfirmationMessageRemoveOrgELCFolder,
			RecipientFilterMustBeValid,
			ConfirmationMessageSetRetentionTagOnMailbox,
			ConfirmationMessageSetDatabaseAvailabilityGroupConfiguration,
			ConfirmationMessageSetMailboxWithDatabase,
			ConfirmationMessageAddDatabaseAvailabilityGroupServer,
			ExchangeSettingsPriorityIsNotUnique,
			VerboseMailboxDelegateAlreadyExists,
			RmsSharedIdentityTooManyUsers,
			ProcessingDependentService,
			ConfirmationMessageMoveDatabasePath,
			ErrorRemoteAccountPolicyNotFound,
			ConfirmSearchAdminAuditLogConfigTask,
			ErrorAcceptedDomainExists,
			RecipientNotFoundException,
			ErrorUnableToAccessMessageCategoriesGenericMessage,
			FoundGlobalThrottlingPolicy,
			FederatedIdentityTypeMismatch,
			ErrorStoreMailboxNotFound,
			BadEnabledParameterException,
			ConfirmationMessageSetMailboxDatabase,
			CasHealthCouldNotBuildTestUserName,
			CalculatedNameRequiredForTT,
			SmtpConnectivityNotTested,
			InconsistentADError,
			ErrorTrustAlreadyInUse,
			CannotAcquireSTSClientForUser,
			ErrorParameterNotSupportedForMigrationType,
			WarningMetadataNotOverHttps,
			MdbServerNotFoundException,
			ErrorCannotImportPstToPublicFolderMailbox,
			ErrorUserAlreadyInTargetDatabase,
			VerboseOpenFirewallPort,
			ConfirmationMessageClearAutoTags,
			messageHttpRequestTimeoutException,
			ConfirmationMessageRemoveEdgeSyncEhfConnector,
			ErrorFailedToMountDatabase,
			InformationQueryExpression,
			DagTaskRemovingServerFromDag,
			DatabaseException,
			InvalidCharacterInDisplayName,
			MtrtMessageSpam,
			WarningFailedToSetPolicy,
			ErrorELCFolderExist,
			ReplayServiceNotRunning,
			OwaAttachmentTypeInvalidCharacter,
			FederatedDomainofUserNotOrgFederated,
			DagTaskUpdatedAdDagStartedStoppedMembership,
			ErrorSingleDatabaseCopyRemove,
			TestSearchMapiError,
			ErrorSetScopeNeedHierarchicalRoleAssignment,
			ErrorInvalidOperationOnLowestEap,
			ErrorTooManyRegexCharsInRuleCollection,
			FailedToDkmProtectPrivateKey,
			ErrorUnsupportedAuthMethodForMerges,
			NotValidSecurityPrincipal,
			ErrorRoleEntryParametersNotExistOnParent,
			ConfirmEnableExchangeCertificate,
			ConfirmationMessageRemoveMigrationBatch,
			WritableRecipientNotUnique,
			AddedTasksForComponent,
			SuccessAddGlobalMonitoringOverride,
			GetCopyStatusRpcQuery,
			RcrDatabaseFailoverMountNotAllowed,
			ErrorInvalidParameterForPublicFolderRestore,
			DagTaskSleepAfterClusterFormation,
			ConfirmationMessageRemoveExchangeUpgradeBucket,
			IncompatibleGetTransportRuleParameters,
			FormsAuthenticationIsEnabledAccessDeniedException,
			ConfirmationMessageSetForeignConnector,
			ComplianceBindingNoError,
			ConfirmationMessageSetGls,
			ErrorUserNotHaveMailboxPlan,
			ConfirmationMessageNewManagementRoleAssignment,
			ConfirmationMessageUpdateSystemAddressList,
			ErrorWMIException,
			VerboseFailedCreateDirectory,
			ReadDeletedObjectsPermissionDeniedException,
			ConfirmationMessageRemoveMalwareFilterPolicy,
			ConfirmationMessageRemoveOutlookProtectionRule,
			SeederCancelDbSeedRpcBegin,
			ConfirmationMessageRemoveCountryList,
			ConfirmationMessageRemoveIPBlockListEntry,
			SetLiveFedUriReserveResponse,
			InvalidMacroName,
			ErrorRemoveGlobalAddressListWithAssociatedAddressBookPolicies,
			WarningMultiSiteReplicationFailed,
			OutlookProtectionRuleRmsTemplateNotFound,
			WarnAdministratorToRestartService,
			Error_SentRepresentingChanged,
			DatabasesAvailabilityCheckFailed,
			LegacyPermissionsDomainNotReachableWarning,
			ClassificationRuleCollectionDistinctFunctionsExceedLimit,
			FaildToCreateFolder,
			MismatchedSTS,
			ConfirmationMessageNewMservEntry,
			ErrorPortalTextBig,
			ConfirmationMessageRemoveCompletedMoveRequest,
			ErrorCannotMovePublicFolderMailboxesCrossForestOrCrossPremise,
			ServerVersionNull,
			ExchangeUpgradeBucketTargetIncludedInSource,
			DagTaskClusteringMustBeInstalledAndRunningException,
			ErrorCannotModifyRequestAlreadyCompleting,
			ErrorBadItemLimitAlreadyExceededNew,
			ErrorLiveDomainServicesAccess,
			VerboseSyncMailboxesWithDS,
			ErrorTeamMailboxUserNotResolved,
			ApplyingHoldSettings,
			AdminGroupCouldNotBeRead,
			ChangeMFLFile,
			ErrorSuspendWhenReadyToCompleteNotSupported,
			RequestedVersionIsLowerThanCurrentVersion,
			VerboseTestEwsFromAutoDiscover,
			ErrorFailedOnMemberHasMailbox,
			ErrorCannotUnsetDowngradedExchangeServerAuthIfReceiveConnectorHasSuppressXAnonmyousTlsSet,
			ErrorFullSyncInProgress,
			CasHealthTransactionWarnings,
			ConfirmationMessageRemoveRemoteMailbox,
			InterceptorErrorConditionInvalidFormat,
			UMCallAnsweringRuleTimeOfDayComplex,
			ProtocolTransactionWarnings,
			RestoreOrExportSourceAndTargetTheSame,
			AlsEmailBodyAdminParamters,
			ConfirmationMessageSetAdSite,
			TestSearchCurrentServer,
			ErrorInvalidCharactersInParameterValue,
			DuplicateX400Domain,
			ServerNamesMustBeUnique,
			CasHealthOwaUnsupportedLogonAuthenticationMethod,
			ReceiveConnectorAclOverflow,
			FailedToLoadSubscriptionFile,
			DagTaskProblemChangingQuorumExceptionPathNotFound,
			ConfirmationMessageNewMailboxFolder,
			ErrorTargetUserAlreadyHasPrimaryMailbox,
			TestMailflowSucceededNoDatabaseOnSourceServer,
			DagTaskProblemChangingQuorumExceptionBadNetName,
			ErrorDefaultDomainNotUnique,
			OnPremisesOrganizationOutboundConnectorNotUnique,
			ParameterAllowedOnlyForTopLevelRoleManipulation,
			UserFederatedDomainInLocalOrgRelationship,
			ErrorUMInvalidSipNameOrExtensionAddressFormat,
			ConfirmationMessageNewEcpVirtualDirectory,
			ConfirmationMessageSetUMMailboxPlan,
			ErrorAutoDiscoverValidatorEwsNotFound,
			ConfirmationMessageRemoveIPAllowListProvider,
			ErrorFingerprintRulePackTemplateCorrupted,
			ServiceDependencies,
			NoSubscription,
			ExceptionPerfCounterUnlodctrFailed,
			BPAConfigurationWarningFound,
			ExceptionExsetdataGenericError,
			ErrorRemovingPolicyInUse,
			ErrorMailboxBeingMoved,
			ErrorPolicyRuleExists,
			ErrorConvertNonUniversalDistributionGroup,
			ErrorUserAlreadyDelegate,
			DatabaseCopyQueueNotKeepingUp,
			EnumerateRightsFailedException,
			ErrorOrgsStillUsingThisMailFlowPartner,
			ReadingComponents,
			WarningCustomizationsAreAlreadyEnabled,
			CasHealthOwaAuthTypesSupported4,
			InvalidFqdnUnderExchangeServerAuth,
			MultipleCertsFoundBySubject,
			ValueTooSmallException,
			TestSearchServerIsNull,
			MonitoringServiceRequestFailed,
			MailboxSearchInPlaceHoldFormatError,
			ConfirmationMessageSetExchangeObjectVersion,
			ConfirmationMessageNewHostedContentFilterPolicy,
			ErrorMoreThanOneValue,
			ConfirmationMessageNewSyncServiceInstance,
			ErrorTenantAlreadyBeingRelocated,
			ErrorAddedRecipientCannotBeDistributionGroup,
			ConfirmationMessageNewResourcePolicy,
			ErrorNotPublicFolderMailbox,
			ExchangeSettingsScopeAlreadyExists,
			GetDbcsRpcNotSupported,
			AlsEmailBodyAdminObjectIds,
			WarningCustomRoleCreatedDuringUpgradeForSplittingRole,
			NullOrEmptyStringNotAllowed,
			CallingLineIdNotUnique,
			ErrorFailedToEvictMember,
			MapiTransactionDiagnosticFailedToGetMdbLocation,
			CasHealthOwaMailboxServerColon,
			CasHealthPowerShellConnectionVirtualDirectory,
			ConfirmationMessageRemoveForeignConnector,
			OptionalRetentionPolicyTagsMustBePersonalTags,
			WarningPasswordIgnored,
			ErrorSynchronizationTypeNotRecognized,
			AllSourceMailboxesParameterOverride,
			ErrorCmdletNotSupportedForGroupMailbox,
			AlgorithmFailedForTraining,
			NotTransportServer,
			WarningIssuerCertificateExpired,
			AlsEmailBodyAdminUserIds,
			ExceptionServiceIsNotRunning,
			ConfirmationMessageMoveMailboxDatabaseMasterAnyServer,
			ExRBACFailedToUpdateCustomRole,
			ErrorImageFileBig,
			ErrorUsedByOrganization,
			DagNetworkUnknownSubnetWarning,
			ManageIsapiExtensionCouldNotFindExtensionException,
			DomainUsersGroupNotFoundException,
			ErrorLinkedUserAccountIsAlreadyUsed,
			ConfirmationMessageSetDetailsTemplate,
			AgentAlreadyRegistered,
			ProgressActivityRemovingAddressListTree,
			ErrorProvisioningDomainNotMatchAcceptedDomain,
			ErrorLargeDataLossNotAccepted,
			ErrorAmbiguousPolicyIdentity,
			ErrorOabGenFailed,
			WarningDuplicatedPropertyModifiedEntry,
			CasTransactionResultCaseNotHandled,
			ProbeResult,
			ConfirmationMessageAddSecondaryDomain,
			ConfirmationMessageAddMailboxDatabaseCopy,
			WarningMustRunEnableAddressListPagingWithForceSwitch,
			ConfirmationMessageRemoveDatabaseAvailabilityGroup,
			ErrorNonExistentContact,
			VerboseClearPreferredServer,
			ErrorStoreMailboxNotUnique,
			ConfirmationMessageSetRemoteAccountPolicy,
			ErrorSourceHoldNotTimedOut,
			SubscriptionInvalidEmailAddress,
			ErrorObjectNotFound,
			ErrorCertificateSKINotUnique,
			ConfirmationMessageRemoveRecipientTemplateProvisioningPolicy,
			CasHealthOwaErrorPageErrorMessage,
			ErrorNotEnoughConfigPermissions,
			ErrorRequestJobAlreadyOnProperQueue,
			ExchangeConfigContainerDataValidationException,
			ErrorSearchUserNotUnique,
			ErrorMailboxDatabaseNotOnE15Server,
			ConfirmationMessageConfigureWSRMPolicy,
			ErrorOrganizationThrottlingPolicyAlreadyExists,
			ErrorThrottlingPolicyNotFound,
			ProtocolLogAttachmentNote,
			ClassificationRuleCollectionOobRulesRemoved,
			ErrorInvalidExternalUserId,
			SetLiveFedUriReserveRequest,
			DlpPolicyOptionalParameterNotSupplied,
			ErrorFaildToWriteRegistry,
			ErrorDistributionListJoinClosed,
			EBDInvalidBundle,
			CasHealthAutodiscoverServer,
			ConfirmationMessageRemovePartnerApplication,
			ErrorManagedFolderMailboxPolicyNotUnique,
			GetDbcsRpcQuery,
			ErrorWindowsLiveIdAssociatedWithAnotherRecipient,
			MoveMailboxNullOrEmptyStringInParameter,
			ErrorLiveDomainServicesUnexpectedResult,
			RequiredReportingParameter,
			OutOfRangeSlaTaget,
			MailboxSearchTaskException,
			RecipientNotFoundInOrganization,
			ErrorCannotModifyContentSettingsLinkedToTag,
			DbCopyAlreadyHostedOnServerException,
			ConfirmationMessageEnableCmdletExtensionAgent,
			ExTrustedSubsystemGroupNotFoundException,
			CannotDeleteAssociatedMailboxPolicyException,
			ResumeSuccessInformationalMessage,
			ErrorFailedToCreateMember,
			DatabaseCopyStateCheckDesc,
			CouldNotRemoveRequest,
			ConfirmationMessageSetOwaVirtualDirectory,
			ErrorAssigneeUserNotFound,
			ErrorSetScopeToBlockSelf,
			ErrorInvalidMemberName,
			VerboseMountDatabaseDataLoss,
			MailboxSearchObjectWithHoldIdentityNotFound,
			InvalidUMPilotIdentifierListEntry,
			SeedingErrorFileIsDirectory,
			ConfirmationMessageRemoveClassificationRuleCollection,
			VerboseCopyDatabaseLogFiles,
			ConfirmationMessageSetPolicyTipConfig,
			InstallIisWebServiceExtensionExists,
			ErrorPfDatabaseAlreadyExists,
			StatusMessageUpdatePublicFolderMailboxUnderProgress,
			ConfirmationMessageRemoveSystemMessage,
			ErrorCannotParseUsefulHostnameFrom,
			ErrorInvalidFingerprint,
			SeederEndDbSeedRpcFailedException,
			ErrorGroupNotFound,
			ErrorSetPublicFolderMailRecipientGuidNotFoundInAd,
			MaximumAllowedNumberOfGatewayIPAddressesExceededId,
			OutlookConnectivityErrorUserNotUnique,
			InfoCreatedWKGuid,
			ErrorDbCopyNotHostedOnServer,
			ErrorAddressListOrGlobalAddressListNotUnique,
			RecipientNotUniqueException,
			ErrorAuditLogMailboxShouldBeDeletedWithAuditLogSpecified,
			ParameterConflict,
			WarningSetAdminAuditLogOnPreR5,
			AmInvalidRoleDagServer,
			CasHealthPowerShellConnectionUri,
			CouldNotFindExchangeServerDirectoryEntryException,
			ErrorMailboxCreationFailure,
			ErrorStampSecondaryAddress,
			ExchangeSettingsCannotChangeScopeFilterOnDownlevelGroup,
			ErrorConflictingMailboxFolder,
			NotSupportedForPre14Mailbox,
			ErrorCanNotApplyMailboxSettingOnlyPolicy,
			ConfirmationMessageRemoveManagementRoleRecursive,
			ConfirmationMessageDisableRemoteMailbox,
			ExchangeSettingsGroupNotFound,
			CasHealthCalendarCheckSuccess,
			FailedToEvictNode,
			ErrorArchiveTargetIsNotAnMEU,
			InfoTakeOwnership,
			FailedToDecryptImportedTrustedPublishingDomain,
			TestMessageSent,
			ConfirmationMessageRemoveDeliveryAgentConnector,
			ConfirmationMessageRemoveMoveRequestDebug,
			SourceAndTargetDialPlanURITypeMismatch,
			ErrorRemovedMailboxDoesNotHaveMailboxGuid,
			ErrorCannotRetrieveSyncDaemonArbitrationConfigContainer,
			ErrorFailedToPrepopulateCache,
			InvalidIntegerConfiguration,
			ErrorClientAccessArrayNotUnique,
			MoveMailboxToE14,
			ErrorUnableToAccessInboxRulesGenericMessage,
			ConfirmationMessageUpdateOfflineAddressBook,
			ErrorLogFolderPathNotUniqueUnderSameDAG,
			ErrorRelocationConstraintsPresent,
			VerboseCheckingRecipientWriteScope,
			ConfirmationMessageRemoveTransportRuleThatBelongsToDLpPolicy,
			ProvisioningRequestNotFound,
			ProgressStatusUpdateRecipient,
			ErrorTeamMailboxSetShowInMyClientForClosedMailbox,
			CertificateInvalidFileName,
			UnableToGrantFullControlOnEOA,
			TenantAlreadyHasMigrationActive,
			ExceptionStorageOther,
			ErrorServerIsNotInCasRole,
			MsiInstallFailed,
			ConfirmationMessageRemoveMailboxRepairRequestDatabase,
			CasHealthOwaHttpCode,
			VerboseFixingVersionAndMinAdmin,
			ReservedIPv4AddressesAreNotAllowedInGatewayIPAddressesId,
			ConfirmationMessageNewOutboundConnector,
			ClassificationRuleCollectionDistinctRegexesExceedLimit,
			CannotRunMonitoringTaskRemotelyException,
			ErrorInvalidMailboxPlanTransition,
			ConfirmationMessageNewPswsVirtualDirectory,
			EstimateOnlyLogLevelParameterConflict,
			DagNetworkEmptyDagException,
			VerboseMailboxDistinguishedName,
			ErrorEdbFileLocationNotOnFixedDrive,
			IISNotReachableException,
			AppIDServiceUrl,
			ErrorUnableToReserveUri,
			ErrorFailedToDetermineExchangeModeException,
			ConfirmationMessageNewTagELCContentSettings,
			ConfirmationMessageNewMailMessage,
			CouldNotParseRemoteValue,
			TenantNotificationDebugEventResourceFileNotFound,
			DatabaseNotMovedInServerModeException,
			TestSearchCreateFolder,
			InterceptorWarningConditionInvalidCharacters,
			ConfirmationMessageRemoveRoleGroupMember,
			MissingMapping,
			InfoLicensingUri,
			ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithCustomFilter,
			VerboseSyncTaskHighestCommittedUSN,
			ConfirmationMessageNewMailboxWithWindowsLiveId,
			ExceptionPerfCounterDefinitionFileNotFound,
			DagNetworkEnumerationFailed,
			ErrorGroupOrIndividualRecipientNeeded,
			VerboseResetMdb,
			CertificateNotValidForExchange,
			ProvisioningTenantAlreadyHasMigrationPending,
			ErrorRetentionTagNotFound,
			ConfirmationMessageTestMRSHealth,
			VerboseExecuteCmd,
			BadProtocolSettingsException,
			ConfirmationMessageSetRemoteMailbox,
			ErrorRoleNameMustBeUnique,
			ConfirmationMessageNewOabVirtualDirectory,
			ConfirmRemovalOfRequestForInaccessibleDatabase,
			Error_DatabaseAttributesMismatch,
			ErrorOldTenantsCannotBeMigrated,
			ConfirmationMessageEnableFederatedOrgId,
			ChangingGlobalPolicy,
			GetQueueDigestFromMtrtFailed,
			ConfirmationMessageSetContact,
			TestSearchCatalogBacklog,
			UnableToRetrieveFolderName,
			messageExternalUrlNotFoundException,
			DagTaskJoinedNodeToCluster,
			ErrorPidRealmIssuerDifferentFromMetadata,
			ErrorLiveIdServiceDown,
			IisUtilityInvalidApplicationRootPathException,
			NeedNonrestrictedScopeAssignment,
			CollectionConflictionError,
			ConfirmationMessageRemoveMSOFullSyncRequest,
			ErrorNoArchiveWithManagedFolder,
			FailedToGetPropertyFromPF,
			BackSyncObjectExcluded,
			RestoreMailboxDuplicateRecoveryMailbox,
			ErrorBPAScanTypeNotFound,
			VerboseInvokingRUS,
			VerboseEvictMember,
			ErrorWSManConfigFileNotFound,
			RuleIsCorrupt,
			MailboxReplicationServiceIsScanningForJobs,
			VerboseCheckingConfigWriteScope,
			CasHealthMailboxNotFound,
			ErrorRemoveNonExistentParameters,
			DagTaskServerMailboxServerIsInDifferentDagException,
			DagTaskClusterWithDagNameIsSquattingException,
			MsiInstallFailedDetailed,
			ErrorConnectorNotEnabled,
			ConfirmationMessageRemoveFederatedDomain,
			ConfirmationMessageSetCallAnsweringRule,
			CannotInstallWithNonCurrentRoles,
			InterceptorErrorInvalidXml,
			ErrorMserveException,
			ErrorReceiveConnectorNotFound,
			IISErrorReadingWritingException,
			ErrorRemoveClassificationUsedByTransportRule,
			VerboseMailboxDelegateSkip,
			ErrorAccessingFederationMetadata,
			ComplianceSearchTasksCreated,
			ExceptionDirectoryNotFound,
			ComplianceSearchNameIsNotUnique,
			ConfirmationMessageNewMailboxPublicFolder,
			ErrorCompletedMoveMustBeCleared,
			ConfirmationMessageNewMailboxPlan,
			ConfirmationMessageRemoveRMSTPD,
			ClassificationRuleCollectionReservedProcessorIdViolation,
			ConfirmationMessageSetMailboxTransportService,
			ErrorDatabaseVersionUnsupported,
			ErrorCannotChangeObjectOutOfWriteScope,
			InstallingMSIFor,
			CannotMakeAcceptedDomainExternalRelaySinceItIsReferencedByAddressTemplate,
			EmptyStringConfiguration,
			ConfirmationMessageEnableMailboxShared,
			ExceptionSourceMailboxNotFound,
			ErrorReferenceParameter,
			ImportCertificateDataIsNull,
			ErrorCannotDetermineEndpointForNewTenant,
			LogMigrationProgress,
			GetHealthReportProgressProcessing,
			ErrorFailedToRunSiteFolderCheckTask,
			ErrorOnlyOnePartitionCanBeLocalForest,
			ErrorMoveDatabasePathAsSourceFileNotExist,
			InvalidObjectIdForTenantWideDivergence,
			RuleStateParameterValueIsInconsistentWithDlpPolicyState,
			ErrorApplicationNotDefined,
			OwaAttachmentTypeCharacterOutOfAsciiRange,
			ConfirmationMessageNewSendConnectorAddressSpaces,
			RemovingDefaultPolicyIsNotSupported,
			ErrorChangeWinrmStartType,
			CasHealthEcpServiceResponse,
			ResumeSgcOnHostServer,
			GetQueueDigestServerIsNotHubTransport,
			VerboseGenerateAliasBySiteDisplayName,
			WarningCannotGetLocalSite,
			AlsSubjectMailbox,
			ErrorMailboxAddressNotUnique,
			ConfirmationMessageHostCannotBeResolved,
			ConfirmationMessageNewMailboxDatabaseRecovery,
			WarningFswNotValidPath,
			ErrorNonExchangeUserError,
			AboutToInstallCertificateToMachineStore,
			BadRtfParameterException,
			WarningReuseExistingFingerprints,
			AppSettingKeyNotFound,
			ErrorOutboundConnectorAlreadyExists,
			ErrorRBACPolicyNotUnique,
			VerboseFixingObjectsUnderRootId,
			ConfirmationMessageEnableMailboxPublicFolder,
			ErrorValidationException,
			ConfirmationMessageMoveMailboxDatabaseMaster,
			ErrorImportLiveIdManagedMemberExists,
			LogExsetdataUninstallingAtom,
			ClassificationRuleCollectionFingerprintValidationFailure,
			ClassificationRuleCollectionInvalidLangCodesInRuleName,
			ConfirmationMessageNewHostedContentFilterRule,
			MoveMailboxStartDateEarlierThanEndDate,
			ErrorUnableToReserveDomain,
			ConfirmationMessageSetTenantRelocationRequest,
			RemoveDagDestroyingCluster,
			MapiTranscationErrorMsgNoTimeLeft,
			MoveMailboxExclusiveParameters,
			GlobalRoutingEntryNotFound,
			ConfirmationMessageSetRetentionTag,
			ConfirmationMessageEnableDatbaseCopy,
			VerboseMemberNameToNetId,
			RmsUrlIsInvalidException,
			ConfirmationMessageRemoveContentFilterPhrase,
			WarningMovingTeamMailboxesCrossForestOrCrossPremise,
			ReportUpdateMovedMailboxFailureAfterADSwitchover,
			WarningArchiveMailboxNotReachable,
			ErrorCannotBeFfoWithoutDatacenter,
			VerboseGenerateDefaultScopeByExistingAssignments,
			ErrorNoRemoteCredentialSettingForLocalMove,
			UMCallAnsweringRuleExtension,
			ErrorLogFolderPathMissed,
			TestSearchGetMDBCatalogState,
			ConfirmationMessageRemoveMailboxFolderPermission,
			InvalidOutlookProbeIdentity,
			SkipWriteEmptyTemplateGuid,
			NewDagErrorDuplicateName,
			ErrorFailedToMoveDatabaseLogFiles,
			CannotChangeStandardUserCredentials,
			TraceCannotGetWindowsIdentity,
			VerboseApprovalApplicationObjectExists,
			ErrorLocatingLocalServerObject,
			InvalidSiteForOrganizationMessage,
			LoadedComponentWithTasks,
			ConfirmationMessageTestTopologyServiceIdentity,
			ErrorAuxHasChildren,
			ConfirmationMessageSetTransportProcessingQuotaOverride,
			ErrorRecipientDoesNotHavePicture,
			AdminAuditLogSearchStartDateIsLaterThanEndDate,
			WebServicesTestErrorEventDetail,
			ConfirmationMessageAdminAuditLogAgeLimitSmaller,
			AllEssentialServicesForTheRoleRunning,
			GetCalendarDiagnosticLog,
			UMCallAnsweringRuleTransferToVoiceMailWithContext,
			ErrorMailboxNotEnabled,
			ClientAccessRoleAbsent,
			ErrorAuxUnsupportedParent,
			ErrorInvalidOperationOnRecoveryMailboxDatabase,
			ConfirmationMessageInstallProvisioningAgent,
			MultipleAdminAuditLogConfig,
			InfoAlreadyIsMemberOfGroup,
			ErrorMinorPartnerIdIsNotUnique,
			InvalidStartDate,
			SeederAlreadyInProgressPrompt,
			AppcmdExecutionFailed,
			ClassificationRuleCollectionInconsistentDefaultInRuleResource,
			UMCallAnsweringRuleTransferToWithoutContext,
			FailedToDeletePublicFolderTree,
			FactoryIdentityInUse,
			ImapSelectingFolder,
			ErrorTeamMailboxContactSharePointSite,
			FailedToGenerateSharedKey,
			messageTopologyServiceMissingDCExceptionThrown,
			ConfirmationMessageRemoveMalwareFilterRecoveryItem,
			MailboxAssistantsServiceStarted,
			ComplianceJobTaskException,
			CannotFindRPSServerFile,
			InsufficientEmailsForCrossValidation,
			AutodiscoverUrlsDiffer,
			ErrorPublicFolderDatabaseNotFound,
			ConfirmationMessageSuspendDatabaseCopyIdentity,
			ErrorUnableToResolveOwner,
			VerboseWillUpgradeServicePlan,
			ConfirmationMessageSetLinkedUser,
			VerboseNoAccessControlSpecified,
			ErrorAutoDiscoverValidatorOabNotFound,
			VerboseSyncTaskCookieOriginatingDCNotAvailable,
			ErrorStartAfter,
			VerboseE12AdminGroupNotFound,
			ConfirmationMessageNewSystemMessageQuota,
			FailedToRunGlobalMonitoringOverride,
			MsoObjectNotFound,
			TestMailflowError,
			DownloadingFilesTasksRemaining,
			AgentHandlesNoCmdlets,
			RemoveLiveFedUriReserveResponse,
			ConfirmationMessageSetCASMailbox,
			DomainNotFoundException,
			MsiPackageAlreadyInstalled,
			ErrorDatabaseInNonMailboxServer,
			CannotCreateJunkEmailRule,
			ProtocolTransactionsDetails,
			VerboseTargetDcIsUpToDate,
			ExchangeSettingsAssemblyNotFound,
			ConfirmationMessageRemoveDistributionGroup,
			ErrorDisconnectedMailboxNotPrimary,
			TestOAuthResponseDetails,
			BadNameParameterException,
			RestoreUsingExistingFile,
			ErrorSystemFolderPathMissed,
			VerboseDGOwnershipDeepSearch,
			ParsingTokenIssuerPreviousCertificate,
			ReplicationCheckPassed,
			ErrorCleanupRequestedAtWrongStage,
			DagTaskRemovedServerFromDag,
			ErrorDlpPolicyTemplateIsNotInstalled,
			AboutToUpdateCongigFile,
			ConfirmationMessageMailboxAuditBypassAssociation,
			TaskTimeout,
			DagTaskRemoveDagServerRunningChecks,
			MigrationNotFound,
			ErrorArchiveNotSupport,
			ExchangeSettingsGroupFoundMultipleTimes,
			RemoveADServerMetadataServerNotFound,
			ErrorWSManConfigSchemaFileNotFound,
			FailedToDeserializeDagConfigurationXMLString,
			CasHealthUserNotFound,
			ConfirmationMessageCancelUserPhoto,
			InconsistentADDbMasterServerNotADag,
			DagFswAndAlternateFswOnSameWitnessServerButPointToDifferentDirectoriesException,
			AmMoveRpcCompletedAnyServer,
			MailboxReplicationServiceIsRespondingToRPCPing,
			UmLanguagePackLogFile,
			DagTaskSkippingFormCluster,
			ErrorUsedByMbDb,
			FailedToWriteAirSyncDebugLogging,
			ServerAlreadyLicensed,
			NewDagConfigurationErrorDuplicateName,
			ConfirmationMessageEnableHostedContentFilterRule,
			ErrorMailboxLegacyDNInUse,
			PopImapTransactionWarning,
			ErrorDomainAlreadyFederated,
			ErrorFaildToSavePubllicFolderReferral,
			InvalidMailboxFolderIdentity,
			ErrorInGlsLookup,
			AirSyncReportingProgressParsing,
			DiscoveryEndpointWasConstructed,
			ClassificationRuleCollectionOrphanedResourceViolation,
			ConfirmationMessageAddIPAllowListEntryIPAddress,
			EmailAddressNotInAcceptedDomain,
			ConfirmationMessageSetPowerShellVirtualDirectory,
			CrossPremiseMapMdbToServerFailure,
			SetLiveFedDomainReserveRequest,
			ErrorMoveRequestAlreadyExistsInMDBQueue,
			VerboseRemovePSFanInProvider,
			ErrorUnableToFindFqdnForHost,
			ConfirmationMessageNewOrganizationRelationship,
			ErrorUserWithMatchingWindowsLiveIdExists,
			TestSearchMdbMonitorMbxIsNull,
			ConfirmationMessageAddMonitoringOverride,
			ErrorTargetDatabaseIsRecovery,
			ProcessStart,
			WarningShouldReadFromRidMaster,
			TestRHGetAmRoleRpc,
			ServiceNotRunning,
			CannotResolvePartitionFromInstanceId,
			ErrorDisconnectedMailboxNotArchive,
			InvalidDateValueException,
			ErrorDomainIsNotReservedWithWLCD,
			SiteMailboxDiagnosticsEmailSubject,
			IisTasksValidationStringLengthOutOfRangeException,
			ConfirmationMessageRemoveDefaultActiveSyncMailboxPolicy,
			ErrorMoveMailboxFindDomain,
			ConfirmationMessageSetEmailAddressPolicy,
			ReplicationCheckHighPriorityFailedException,
			CouldNotFindServerDirectoryEntryException,
			ErrorManagedByInCoManagedByList,
			VerboseConnectionMapiRpcInterface,
			CouldNotFindElementWithTwoAttributes,
			ConfirmationMessageNewAddressrewriteentry,
			AddDatabaseCopyAllCopiesMustBeInSameDagException,
			ConfirmationMessageNewDataClassification,
			ContinueUpgradeObjectVersion,
			ConfirmationMessageMoveOfflineAddressBook,
			ClassificationRuleCollectionIncorrectDocumentNamespaceViolation,
			ErrorDisableMailboxIsJournalReportNdrTo,
			ReplServiceNotRunningOnNodeException,
			MissingPilotTargetOffer,
			ErrorInvalidParameterValue,
			ProtocolConfrimationMessage,
			InfoSetAces,
			NoBindings,
			ConfirmationMessageNewForeignConnectorAddressSpaces,
			EventOtherActionFailed,
			MobileDeviceLogNotFound,
			CopyConfigurationErrorException,
			GlobalRoutingEntryNotFoundRetry,
			ConfirmationMessageUpdateTeamMailbox,
			ErrorGeneratingMailboxInvalid,
			ErrorResolveFqdnForDomainController,
			RemovedDuplicateRecipients,
			ErrorUsedByOab,
			UmLanguagePackMsiFileNotFound,
			ErrorSuspendWhenReadyToCompleteCannotBeUsedOnAutoResumeJobs,
			ConditionIncompatibleWithNotifySenderAction,
			ErrorUserCannotChangePasswordAtNextLogon,
			Error_DatabaseLocationDoesNotMatchHighestActivationPreferenceServerLocation,
			InvalidTlsAuthLevel,
			ConfirmationMessageRemoveOutlookProvider,
			VerboseGenerateAliasByRandomString,
			ErrorMemberNameUnavailable,
			ConfirmationMessageTestIPAllowListProvider,
			VerboseDeletingChildVDir,
			ErrorInvalidObjectMissingCriticalProperty,
			ConfirmationMessageAddContentFilterPhrase,
			ErrorRecoveryDatabase,
			ErrorCannotRetargetPrimaryForArchiveOnlyMoves,
			InvalidDataException,
			ConfirmationMessageRemoveTenantRelocationRequest,
			ErrorInvalidEapNewPriority,
			TenantNotificationDebugFormatMessageFailedSystemLang,
			UnparseableParameter,
			ConfirmationMessageRemoveDatabaseAvailabilityGroupConfiguration,
			CasHealthAutodiscoveryServerNotFound,
			ErrorReadMatchingRecipients,
			UMCallAnsweringRuleTransferToVoiceMailWithoutContext,
			ErrorFederationTrustNotFound,
			ErrorDisallowMergeRequestForPublicFolderMailbox,
			ConfirmationMessageStartMailboxSearch,
			ConfirmationMessageDisableInboxRule,
			LanguagePackPerfCounterMergeStatus,
			ImportCertificateFileInvalid,
			PublicFolderDatabaseDoesNotBelongToTenant,
			VerboseDeleteSystemAttendantObject,
			ConfirmationMessageRemoveMonitoringOverride,
			NoOwnProcessService,
			ConfirmationMessageSetMailPublicFolder,
			ErrorArgumentIsOfWrongType,
			ErrorFolderIsNotOrganizational,
			ConfirmationMessageConnectMailboxLinked,
			ConfirmationMessageNewMailboxRepairRequestMailbox,
			InvalidReportingDateRange,
			ParsingTokenIssuerEndPoint,
			DagFswUnableToCreateWitnessShareException,
			RunCmdletOnDomain,
			CantAddDeviceFilterRuleSinceApplyForAllDevicesSetToTrue,
			DlpPolicyMissingRequiredParameter,
			ReportMovedMailUserMorphedToMailbox,
			TowsFoundScpBySite,
			ErrorCannotRemoveLastArbitrationMailboxInOrganization,
			ConfirmationMessageRemoveMessageClassification,
			ErrorUserAlreadyExistsInPermissionEntry,
			WarningInboxRuleInError,
			ErrorCertificateNotExportable,
			ValidationOrgCurrentOrgNotMatchException,
			FormsAuthenticationDeleteMarkErrorUnknownOpenError,
			ErrorActivationPreferenceInvalid,
			ConfirmationMessageAddDelegate,
			ErrorCannotRestoreIntoSelf,
			LogExsetdataInstallingAtom,
			ErrorMismatchedMailboxRelease,
			SupportedToolsDataInvalidTenantVersionRange,
			ConfirmationMessageRemoveMailboxIdentityAndNotLiveId,
			MailboxNotUmEnabled,
			ErrorInvalidServerRole,
			QuorumGroupNotOnline,
			EmptyToken,
			ErrorTargetPartitionSctMissing,
			ErrorOccuredInFixingObject,
			EventManifestNotUpdated,
			CasHealthOwaVdirColon,
			MigrationEndpointIdentityAmbiguous,
			FormsAuthenticationDeleteCloseException,
			InvalidServiceInstanceMapXmlFormat,
			ErrorCmdExecutionFailed,
			WarningPushFailed,
			ExchangeUpgradeBucketInvalidOrganizationVersion,
			ConfirmationMessageNewRemoteMailbox,
			TestSearchCurrentMailbox,
			ConfirmationMessageRemoveOrganizationRelationship,
			TestSearchFindMessage,
			KeyNoMatch,
			SchemaValidationError,
			ServiceDidNotReachStatusDuringWait,
			ErrorRpcHttpNotUnique,
			InvalidIPRangeFormatId,
			ExportCertificateFileInvalid,
			ErrorExchangeUpgradeBucketNotFound,
			MoveAlreadySuspended,
			PrimaryAndArchiveNotOnSameVersionPostMove,
			ExchangeSettingsNonExistingSettingNotRemoved,
			ConfirmationMessageSwitchRBACPolicy,
			CannotFindSchemaClassException,
			OabVirtualDirectoryAmbiguous,
			CasHealthResetCredentialsScenario,
			FailedToResetMdb,
			OAuthRequestEndPoint,
			HybridMailflowUnexpectedType,
			DagNetworkSingleDNSNicViolation,
			ConfirmationMessageResumeRequest,
			ExchVirtualDirectoryTooManyRpcsToIisMetabase,
			AlsEmailBodyExternalAccess,
			MoveMailboxUnexpectedAfterMove,
			ErrorRemoveAddressListWithAssociatedAddressBookPolicies,
			NonRoomMailboxAddToRoomListException,
			FailedToSetPfdbAsFirstInstance,
			ErrorWellKnownHostedMailboxSGNotFound,
			InconsistentAFSettingsError,
			ConfirmationMessageNewProvisioningRequest,
			ErrorExternalDirectoryObjectIdNotUnique,
			EnableDBCSuspendReplayNoDbComment,
			ErrorEdbFileLocationNotUniqueUnderSameNode,
			MoreThanOneRecipientForRecipientId,
			ErrorArchiveRecoveryArchiveDatabaseDeleted,
			ConfirmationMessageStopComplianceSearch,
			ErrorRemovedMailboxNotFound,
			FailedToReadPefCounter,
			GetQueueDigestUnexpectedError,
			CannotRemoveMailboxCatchAllRecipient,
			AutodiscoverUsingDomain,
			ProcessStandardError,
			ErrorTeamMailboxFeatureNotInstalled,
			ConfirmationMessageEnableMailboxArbitration,
			PublicFolderSourcesFolderDoesnotExist,
			CasHealthOwaIncorrectAuthTypes,
			InvalidTPRTask,
			VerboseMailboxDelegateRemoved,
			ErrorRemoteTeamMailboxIsNotChangeable,
			ErrorOwaMailboxPolicyNotUnique,
			ConfirmationMessageRemoveOwaMailboxPolicy,
			CannotSubscribeToMultipleSites,
			TestSearchCurrentMDB,
			UpdatingLegDnForDatabaseToServer,
			ErrorUserNotFoundOnDomainController,
			ErrorInvalidNameOrDescriptionParameters,
			ErrorSecondaryDomainNotUnique,
			InvalidNumberOfSegments,
			ErrorExtendedProtectionSPNHasToStartWithHTTP,
			ConfirmationMessageRemoveDataClassification,
			ErrorCannotMoveArbitrationMailboxesDownlevel,
			LastConfigLoadTime,
			UmLanguagePackException,
			VerboseTestOabFromAutoDiscover,
			OwaAdminObjectNotFoundException,
			NewPolicyTipConfigInvalidName,
			ErrorArchiveNotEnabled,
			ErrorRemovePolicyRoleAssignment,
			TowsAutodiscoverUrl,
			BadCharSetParameterException,
			SeedingPathWarningException,
			AggregationTaskMailboxNotFound,
			ConfirmationMessageSetOWAMailboxPolicy,
			ErrorRpcHttpAlreadyEnabled,
			CasHealthFailedToPopulateFromMetabase,
			ConfirmationMessageRemoveDynamicDistributionGroup,
			ErrorRemoteSourceArchiveMailboxDoesNotExist,
			ErrorLegacyPublicFolder,
			ConfirmationMessageNewHostedConnectionFilterRule,
			ErrorTooManyAddedRecipientsInRuleCollection,
			ComplianceBindingUnknownError,
			RemoteCertificateExchangeVersionNotSupported,
			ErrorArbitrationMbxNotSetForApproval,
			FailedToDeleteDatabaseCopy,
			ConfirmationMessageEnableReplayLag,
			ErrorCannotDetermineEndpointForTenant,
			CasHealthOwaErrorPageExceptionType,
			DsnCodeNotADefault,
			ErrorUnableToCheckMountedStatusNoResult,
			RemoveEstimateMailboxSearchConfirmation,
			InitializingFileCopy,
			BadNumberOfProcessesForService,
			WarningRemoveApprovalRequiredGroupOwners,
			FailedToDeleteOldEdbFile,
			MapiTransactionDiagnosticStoreServiceCheckFailure,
			ConfirmNewMailboxSearchTask,
			UmLanguagePackTempFilesNotDeleted,
			ErrorGroupCannotBeEmptyRoleAssignmentConstraint,
			ErrorSharePointSiteHasNoValidUrl,
			ScriptDontExist,
			ErrorArchiveAlreadyInTargetArchiveDatabase,
			MsiProperty,
			ErrorSendNotificationForSiteMailbox,
			ErrorUpdatingVDir,
			ConfirmationResetProvisioningCache,
			RemoveVirtualDirectoryGetApplicationPoolUnknownError,
			TraceCannotGetExchangeVersion,
			RpcHttpTiSp1FeatureDisabled,
			ConfirmationMessageSwitchActiveSyncDefaultPolicy,
			ConfirmationMessageSetTeamMailboxProvisioningPolicy,
			ConfirmationMessageSetMailUser,
			StatusMessageStartUpdatePublicFolderMailbox,
			ConfirmationMessageRemoveCmdletExtensionAgent,
			MailboxAssociationReplicationRpcRequest,
			InstallIisWebServiceExtensionAdding,
			ForeignForestRootDomainNotFoundException,
			RemoveVirtualDirectoryApplicationPoolSearchError,
			ErrorCannotUpdateRecipient,
			VerbosePendingServicePlanUpgradeDetected,
			UnableToUnlockMailboxDueToOutstandingMoveRequest,
			ConfirmationMessageRemoveProvisioningRequest,
			ErrorRoleEntryNotUnique,
			ErrorMultipleSystemFolderTagConfliction,
			ConfirmationMessageNewWebServicesVirtualDirectory,
			MaximumWaitTimeSetTo,
			ConfirmationMessageSetDatabaseAvailabilityGroup,
			DagNetworkHasMultiNicForNode,
			RemainingTimeForServiceWait,
			ConfirmationMessageNewUMMailboxPolicy,
			GetOwaVersionException,
			ErrorTargetServicePlanDifferent,
			DagTaskUpdatingMasterServerOnDatabase,
			ConfirmationMessageNewRecipientEnforcementProvisioningPolicy,
			ErrorUnableToDetermineTargetDatabase,
			ErrorLinkedGroupInTheCurrentForest,
			ConfirmationMessageUpdateSafeList,
			SeederCancelCalled,
			CannotOperateOnAcceptedDomainPendingRemoval,
			VerboseSyncMailboxWithDS,
			ErrorDisableMailboxWithDiscoveryHold,
			CouldNotUpgradeAllContentSettings,
			ConfirmationMessageEnableMailUser,
			MissingPropertyInFederationTrust,
			CookieAndParameterServiceInstanceIdMismatch,
			FormsAuthenticationMarkPathErrorUnknownOpenError,
			ErrorUserMissingADData,
			ErrorExecutingUserOutOfTargetOrg,
			ErrorUMPolicyNotFound,
			ErrorCannotRemoveLastOrgAdmin,
			ConfirmSearchMailboxAuditLogTask,
			WarningUMCallAnsweringRuleInError,
			WarningInitLegacyAlreadyDone,
			ConfirmationMessageRemoveMailboxPermanent,
			ConfirmationMessageEnableOutlookProtectionRule,
			ReadingE14ServerRoles,
			RpcHttpOldOSServers,
			ConfirmationMessageUpdateDatabaseCopy,
			ErrorAggregatedMailboxNotFound,
			ConfirmationMessageSetRecipientEnforcementProvisioningPolicy,
			TenantNotificationDebugLoadLibraryFailed,
			ErrorWorkloadManagementPolicyNotFound,
			ConfirmationMessageNewMailboxAuditLogSearch,
			CannotRemoveMailContactCatchAllRecipient,
			DagFswUnableToBindWitnessDirectoryException,
			InterceptorErrorCustomTextInvalid,
			VerboseDeleteDatabaseCatalogFiles,
			ErrorRequestQueueIsTooLong,
			ConfirmationMessageNewTransportRule,
			ConfirmationMessageRemoveMigrationBatchWithPendingItems,
			ErrorPrimaryDatabaseLocationNotFound,
			TestSearchSucceeded,
			ClassificationRuleCollectionInvalidLangCodesInRulePackDescriptor,
			ErrorTransportRuleLimitTooSmall,
			NoMdbForOperation,
			ConfirmationRemoveAccountPartitionWithTenants,
			ConfirmationMessageNewOWAMailboxPolicy,
			ErrorServerNotUnique,
			ErrorRemovedMailboxDoesNotHaveDatabase,
			ErrorGrantingEraFullAccessOnMailbox,
			CanceledMoveHistoryEntry,
			DagTaskAddClusterNodeUnexpectedlyFailedException,
			OnlineIsIntegRemoveJobException,
			DurationShouldBeGreaterThanZero,
			TopologyServiceSuccess,
			CasHealthOwaExtraAuthType,
			NonExistantDialPlan,
			CertificateNotFound,
			StagedMigrationRequiresValidTargetDomain,
			WarningClusterGroupNotFormed,
			WaveDirectoryNotFoundException,
			CasHealthSpecifiedMailboxServerVersionNotMatched,
			ErrorOabVirtualDirectoryIISObjectAlreadyExists,
			RunConfigUpdaterRpcFailedWarning,
			CasHealthCouldNotLogUser,
			DagTaskAddedServerToDag,
			ErrorInvalidAuthenticationTypeValue,
			ConfirmationMessageStartMigrationBatch,
			IisTasksReadRegistryValueSecurityException,
			MsiRebootRequiredToContinue,
			CannotRemoveNonProvisionedServerException,
			ErrorCannotOverrideConflictingRedirectionEntry,
			ConfirmationMessageNewEdgeReSubscriptionExpirationWarning,
			ErrorCannotMoveRoleAssignmentOfDeprecatedRole,
			ConfirmationMessageRemoveEdgeSyncMservConnector,
			ErrorMoveAlreadyCanceled,
			DagTaskCouldNotFindAnyMatchingNetworkException,
			UserCanNotBeEnabledForUM,
			LiveIdConnectivityExceptionThrown,
			CertificateInvalidRequestFile,
			MailboxCouldNotBeUmDisabled,
			FailedDocumentsNoResultsMailbox,
			RoleNotConfigured,
			TopologyServiceExceptionThrown,
			ErrorEapObjectTooNew,
			DagTaskJoiningNodeToCluster,
			ErrorOabGenFailedSinceNoOrgMbxFound,
			GetFedDomainStatusInfo,
			DebugResolvingUserSid,
			FailedToReadAdamPortFromRegistry,
			RemoveOwaVirtualDirectoryCannotFindVirtualDirectoryException,
			ExceptionValidatingConditionFailed,
			ConfirmationMessageNewPublicFolderDatabase,
			MissingNonAuthoritativeDomain,
			ConfirmationMessageSetOutlookProtectionRule,
			CasHealthWebAppTestStepFinished,
			ErrorMessageMoveMailboxFailed,
			SetupLogHeader,
			ErrorMoreThanOneMailTipTranslationForThisCulture,
			PAMOtherError,
			ErrorOabVirtualDirctoryPathNotOnFixedDrive,
			ErrorCannotLocalizeDefaultFolders,
			ConfirmationMessageSetMailFlowPartnerConfigWithName,
			AlsEmailBodyMailboxIds,
			DlpPolicyParsingError,
			ErrorPublicFolderNotUnique,
			MailboxAssistantsServiceCouldNotBeKilled,
			ErrorMailboxAddressNotFound,
			ConfirmationMessageSetIPBlockListProvider,
			ConfirmationMessageNewInboxRule,
			UnpackedRoles,
			ErrorOnlyAllowChangeMembersOnUniversalGroup,
			MailboxSearchInPlaceHoldIdentityExists,
			SeedingLogFileExists,
			ErrorMemberNameBlocked,
			ProgressForceCleanupNode,
			ReplicationCheckFatalError,
			ServerComponentStateInvalidComponentName,
			CasHealthTransactionFailedSummary,
			TowsFoundScpByDomain,
			WarningSetAdminAuditLogConfigDelay,
			DatabaseMustBeInDagException,
			DidntCompleteInHours,
			ErrorBackupInProgress,
			ConfirmationMessageRemoveGroup,
			MigrationUserSubscriptionInaccessible,
			ErrorFoundInvalidADObject,
			VerboseVerifyServerSucceed,
			VerboseVerifyingRecipientViewRoot,
			BlockedSendersNotUpdated,
			FailedDocumentsResultsServer,
			VerboseIgnoreFixingOneDynamicDistributionGroupFilterMetadata,
			WarningMessageExistsInReplayQueue,
			ErrorDomainIsNotFederated,
			ConfirmationMessageRemoveWorkloadPolicy,
			ErrorAllRoomListNotFound,
			CasHealthWebAppAddingTestInstance,
			ClassificationRuleCollectionNestedAnyDepthExceedLimit,
			InterceptorErrorConditionInvalidProperty,
			ConfirmationMessageTestConversations,
			ErrorSiteNameIsLongerThanLimit,
			UserCreateFailed,
			ConfirmationMessageRemoveMigrationEndpoint,
			ErrorInvalidMailboxTypeConversion,
			ErrorFailedToSwitchBackToEarlierPermissionModel,
			ErrorSetMailboxPlanRoleAssignment,
			GetFederationInformationProxy,
			ErrorDomainNameNotAcceptedDomain,
			VerboseTaskParameters,
			messageRFROperationException,
			InfoAclNotCanonical,
			ConfirmationMessageSetActiveSyncDeviceAutoblockThreshold,
			MailboxSearchNameIsNotUnique,
			FailedToEvictNodeException,
			ConfirmationMessageRemoveDistributionGroupMember,
			VerboseSkipCreatingRoleAssignment,
			SeedingEdbFileExists,
			ErrorUserWithMatchingWindowsLiveIdAndDifferentNetIdExists,
			MailboxSearchRpcCallFailed,
			ErrorFailedToRemoveMonitoringMailbox,
			VerboseEndTextExtraction,
			FindingServer,
			InternalTransportCertificateMustBeCAPICertificate,
			IllegalVoipPlatformException,
			ErrorPhoneNumberIsNotValid,
			ErrorRecordReport,
			ErrorCasArrayOrServerAlreadyExists,
			DirectoryObjectNotFoundException,
			ConfirmationMessageRemoveMigrationUser,
			ErrorTeamMailboxResolveUser,
			WarningNonZeroItemLimitMerge,
			TestApiCallUnderOauthTask,
			DatabaseCopyFailedCheck,
			ErrorAddressListNotFound,
			VerboseEatUpException,
			NoActiveSyncOrganizationSettingsException,
			ErrorCannotCalculateDefaultScope,
			ConfirmationMessageNewClientAccessArray,
			ErrorRBACPolicyLinkNotFound,
			ConfirmationMessageNewTeamMailboxProvisioningPolicy,
			InterceptorErrorPathInvalidCharacters,
			ErrorIisConfigurationWillRetry,
			VerbosePfdbIsSetAsFirstInstance,
			ErrorOrgUserBeAssignedToParentOrg,
			VerboseWillSkipUpdateServicePlan,
			ErrorExcludedDCConflict,
			ErrorCouldNotLocateMailboxPlanForMailUser,
			SendConnectorNonSmtpAddressSpaceOnDNSConnector,
			UnableToConnectToEdge,
			ErrorUnexpectedAccountForestValueInGls,
			ReportUpdateMovedMailboxError,
			CasHealthWebAppBuildVdirList,
			ErrorBadItemLimitOutOfRange,
			ComAdminPropertyException,
			OwaIsapiFilterException,
			ErrorCommandExecutionException,
			LogExecutingCommand,
			WarningMaxCmdletsRatioNotSupported,
			ConfirmationMessageNewOwaVirtualDirectory,
			TestSearchNoMailbox,
			ErrorNoArchiveForPublicMailbox,
			ConfirmationMessageSetHostedContentFilterPolicy,
			ErrorTargetMailboxDnNotFound,
			DagTaskUpdatingAdDagStartedStoppedMembership,
			SetMailForestContactNotAllowed,
			ConfirmationMessageTestMAPIConnectivityIdentity,
			InvalidMessageDataClassificationParameterLessThanOne,
			VerboseRecipientTypeDetailsIgnored,
			ConfirmationMessageRemoveManagementRoleAssignment,
			ErrorOabGenFailedForAllOrgMailboxes,
			ErrorWillNotPerformOnInheritedAce,
			CasHealthWebAppBadVdirConfig,
			TestSearchStoreServiceNotRunning,
			CurrentExternalDirectoryOrganizationId,
			ContentFilterUsedVerbose,
			ErrorTargetUserAlreadyHasArchiveMailbox,
			ConfirmationMessageMailboxJunkEmailConfiguration,
			SenderIPAddressOverlapsExistingTenantInboundConnectors,
			ConfirmationMessageSaveUserPhoto,
			FormsAuthenticationMarkPathErrorPathNotFoundException,
			CasHealthWebAppResponseReceived,
			WarningRetentionPolicyTagCorrupted,
			ClassificationRuleCollectionRegexValidationFailure,
			ConfirmationMessageUninstallDlpPolicy,
			VerboseSettingDisableGls,
			CannotLicenseServer,
			ConfirmationMessageSetMigrationEndpoint,
			InvalidSmtpAddressOrAlias,
			ErrorNoNeedApplyMandatoryProperties,
			ParameterDoesNotExist,
			E4eRuleRmsTemplateNotFound,
			ErrorScopeNotExclusive,
			NewDagServerIsAlreadyInDifferentDagException,
			ErrorCertificateNoSKI,
			ErrorFailedToUnmountDatabase,
			ErrorUnsupportedConfigScopeType,
			ErrorRetentionIdConflictsWithRetentionTag,
			NewDagServerIsAlreadyManuallyConfiguredForClusteringButIsNotInDagException,
			ConfirmationMessageConnectMailboxUser,
			ConfirmationMessageNewPublicFolderMigrationRequest,
			VerboseDefaultOABIsNewerThanVersionE12,
			ErrorActiveManagerIsNotReachable,
			VerboseExtractedTextStreams,
			ErrorInstallDlpPolicyRuleWithThisNameAlreadyExists,
			MsiCouldNotOpenPackage,
			ErrorWorkloadManagementPolicyName,
			ConfirmationMessageSetAuthRedirect,
			ErrorRelocationStateRequestedIsMandatory,
			LiveIdAuthenticationSuccess,
			ErrorCannotSaveBecauseTooNew,
			ErrorMailboxVersionTooOld,
			WarningCannotResolveUser,
			ConfirmationMessageUpdateAddressBookPolicy,
			ConfirmationMessageNewManagementRoleEntry,
			ErrorAssigneeUserNotUnique,
			ErrorFailedToGetDatabaseSize,
			ErrorManagedConentSettinsNonUnique,
			ErrorChildFolderNotExistsOnServer,
			ErrorIncompatbileManagementSiteLink,
			SystemMailboxTarget,
			ConfirmationMessageTestTeamMailbox,
			ErrorPidRealmDifferentFromMetadata,
			RemovedDeviceFilterRuleByNameAndCharacteristic,
			VerboseMountDatabase,
			SmtpConnectivityFailures,
			ConfirmationMessageRemoveSecondaryDomain,
			WarningNoActiveDatabasesFoundOnServer,
			ErrorMailboxDatabaseNotOnCurrentCmdletVersion2,
			InfoProcessRemoveMember,
			ConfirmationMessageSetMalwareFilterPolicy,
			DatabaseLogonSuccessful,
			ErrorCertificateNotValid,
			ErrorArbitrationMbxNotSetForModeration,
			ErrorMaxConcurrentMigrationsExceeded,
			PasscodeInformation,
			DataClassificationAmbiguousName,
			ChangedMessageClass,
			ConfirmationMessageRemoveTeamMailbox,
			ClassificationRuleCollectionPayloadSizeExceededLimitFailure,
			OpeningClusterDatabase,
			ErrorPasswordIncludesInvalidChars,
			ErrorRoleAssignmentPolicyNotFound,
			ConfirmationMessageNewMailuserWithWindowsLiveId,
			ConfirmationMessageRemoveAttachmentfilterentry,
			NoLocalDomainIsFederatedRemotely,
			ResumeSgcUseState,
			ErrorCompilingMFL,
			CmdletHandlerAlreadyDefined,
			ErrorNameNotAvailable,
			ErrorPilotServicePlanCanBeUsedToCreateSharedOrgsOnly,
			InstallDefaultSharingPolicy,
			ErrorMovePublicFolderDistributionDisabledOabToTiServer,
			InfoRemovingAce,
			RemoveDefaultTPD,
			AlsEmailBodyMailboxLogonTypes,
			ErrorNewRoleNeedHierarchicalRoleAssignmentWithoutScopeRestriction,
			AlreadyConfiguredComponent,
			UMCallAnsweringRuleFindMeWithContext,
			WarningChangeDefaultTPD,
			CutoverMigrationNotSupportedForProtocol,
			ErrorInvalidArbitrationMbxTypeForModerationAndAutogroup,
			SendConnectorNonSmtpAddressSpaceOnEdge,
			OtherDatabaseCopyHasHighestPreference,
			CouldNotRemoveCompletedRequest,
			ErrorOneManagementOrgMailboxIsRequired,
			ErrorCannotModifyCrossVersionObject,
			GetDagHealthInfoRequestException,
			TestTeamMailboxConstraintError,
			ConfirmationMessageDisableMailPublicFolder,
			DebugResolvingUserCN,
			ConfirmationMessageRemoveGls,
			ErrorCannotCreateFolderUnderNonIpmSubtree,
			ElcServerNotFound,
			ConnectionFailedException,
			ConfirmationMessageNewExchangeSettings,
			OnPremisesOrganizationConfirmationMessageRemove,
			ErrorCannotMovePrimaryAndArchiveInDifferentDirections,
			ErrorMoveUnableToGetCopyStatusException,
			ApplicationUrisDiffer,
			WarnRpcHttpAdOrphanFound,
			OnPremisesOrganizationInboundConnectorNotExists,
			VerboseTestSourceSite,
			BackupFileNotCreated,
			ErrorCanNotFindWebObject,
			ErrorUnknownAssignmentMethod,
			VerboseDomainControllerUsedOutOfSiteDatabase,
			NoMailboxRoleInstalledException,
			MalwareFilterActionDescription,
			ConfirmationMessageRemoveManagementScope,
			ConfirmationMessageRemoveMessageClassificationExtended,
			ErrorAddressListOrGlobalAddressListNotFound,
			DagTaskProblemChangingQuorumExceptionAccessDenied,
			SupportedToolsDataOverlappingTenantVersionRanges,
			ErrorRollbackGlsExpectsSynchronizationFinishedFullSync,
			ErrorFailedToNetIdToMemberName,
			RetentionPolicyTagTaskException,
			TenantAlreadyHasRequestPending,
			verboseNetIdToMemberName,
			SendConnectorSourceAndTargetServersInOneRg,
			ErrorDiscoveryMailboxDatabase,
			ClassificationRuleCollectionKeywordTooLong,
			PopImapDeleteMsg,
			GetEcpVersionException,
			InvalidAuditSeverityLevel,
			ErrorExtendedRightNotFound,
			ReadDeletedObjectsAclPermissionDeniedException,
			ErrorSetMailboxLitigationHoldDurationNotReadError,
			EcpAdOrphanFound,
			CouldNotConnectToClusterError,
			ErrorWSManModuleFileNotFound,
			AuditLogSearchArbitrationMailboxNotFound,
			UnableToAddE12DStoExSReplicationException,
			FailedDocumentsResultsMailbox,
			TopologyServiceADServerInfo,
			ErrorDCNotFound,
			messageTopologyServiceWCFExceptionThrown,
			DagTaskServersInClusterNotInAd,
			VerboseSyncTaskDomainControllerToUse,
			MoveMailboxConfigurationOnlyShouldMoveE14ToLowerVersion,
			WarningCertificateSameAsPrevious,
			ErrorMovingCatalogs,
			ConfirmationClearingChainedProperties,
			RootNodeCannotBeRemoved,
			ErrorNoPublicFolderDatabaseOnServer,
			SeederProgressMsgNoNetwork,
			AmMoveRpcCompleted,
			LookingForTask,
			ConfirmationMessageMoveMailboxDatabaseMasterToDisabledServer,
			CannotValidateIfVOAdmin,
			ErrorSpecifiedPropertyCannotBeSet,
			ErrorInvalidMetadataUrl,
			FailedToGetServiceStatusForNodeException,
			ConfirmationMessageRemoveMailboxAssociation,
			ExceptionIncomparableType,
			RequestFailedValidation,
			VerboseLogLocationAvailableCondition,
			CannotResolveObjectTypeDefined,
			ConfirmationMessageMountDatabase,
			WarningSuspendSupportedOnlyDuringSync,
			ErrorCannotRemovePrimaryPublicFolderMailbox,
			ErrorManagedByWrongRecipientTypeDetails,
			VerboseOabLinkedToPfdb,
			GetFederationInformationTokenIssuerMatches,
			ErrorRoleAssignmentConstraintViolation,
			SetFedAcceptedDomainCleanup,
			CasHealthMailboxServerNotFound,
			ErrorDatabaseNotFound,
			AIDatabaseStatusPollThreadHung,
			ManageDelegationProvisioningInDNS,
			CertificateRequestMissingForArgument,
			ErrorPasswordTooLong,
			VerboseTestEwsFromParameter,
			InstallingPackage,
			RunFromServer,
			GetFederationInformationShouldUseInvalidCertificate,
			ErrorConnectToApplicationTimeout,
			ErrorPathIsNotOnFixedDrive,
			MsiFullPackagePath,
			DagMemberPausedFailed,
			ErrorFailedToMoveEdbFile,
			InfoAddGroupToGroup,
			ConfirmationMessageCompareTextMessagingVerificationCode,
			ConfirmationMessageNewPartnerApplication,
			ErrorUnexpectedResults,
			ConfirmationMessageDisableHostedConnectionFilterRule,
			ConfirmationMessageSetUMMailboxPolicy,
			FailedToDecryptPrivateKey,
			ErrorCannotExportPstFromPublicFolderMailbox,
			ProgressEmailAddressPolicyRollingBackPriority,
			ErrorArchiveLegacyDNDoesNotMatchUser,
			ErrorCannotChangeResourceMailboxToUserMailbox,
			ConfirmationMessageEnableMailUserArchive,
			CannotLicenseRemoteServerWith32BitAdmin,
			ConfirmationMessageRemoveIPBlockListProvider,
			CertificateExpired,
			ConfirmationMessageDisableCallAnsweringRule,
			ErrorCannotConvertBuiltInGroup,
			CannotModifyRuleDueToVersion,
			ConfirmationMessageNewSharingPolicy,
			TenantCannotChangeIsDataMigrationRequested,
			ConfirmOverwriteInternalTransportCertificate,
			LiveDomainServicesRequestFailed,
			DuplicateCapabilityMapping,
			JournalingParameterErrorGccTenantNotFound,
			FailedMoveHistoryEntry,
			DagUnableToFindCnoError,
			CantFindCertByThumbprint,
			ErrorAccessingRegistryRaisesException,
			ReportMovedMailboxUpdated,
			InvalidTrafficType,
			ErrorCannotRestoreFromConnectedMailbox,
			ErrorFailedToAddCrossDomainGroupMember,
			ErrorUserNotBeingMoved,
			NoExecutableForService,
			ErrorInvalidDomainInSmtpAddressTemplate,
			PatchFileFound,
			ErrorRemoteAccountPolicyNotUnique,
			ConfirmationMessageCompleteMigrationBatchWithFailedItems,
			ErrorMemberNameInUse,
			InfoProcessAction,
			ErrorExistingAuthServerWithSameRealm,
			CasHealthNoHttpResponseRecieved,
			ErrorAddExistentParameters,
			DatabaseNotFoundException,
			WarningFswFailed,
			LookupAccountNameFailedException,
			RecipientNotValidException,
			FoundComponents,
			RemoveADServerMetadataDomainControllerNotFound,
			ErrorLinkedAccountInTheCurrentForest,
			ErrorServerNotFound,
			ErrorCannotDeletePrecannedRole,
			ConfirmationMessageRemoveAvailabilityConfig,
			RemovingFile,
			NeedRemoveDatabaseFileManually,
			DiscoveringDomain,
			ConfirmationMessageUpdateDatabaseCopyServerBegin,
			GlobalLocatorServiceFailed,
			DlpPolicyDuplicateLocalizedString,
			ErrorRetentionPolicyNotFound,
			PerfCounterCategoryDefinition,
			MaSGroupNotFoundException,
			ConfirmationMessageSetFederationTrust3,
			ConfirmationMessageNewEmailAddressPolicySMTPTemplateWithPrecannedFilter,
			ServiceInstanceNotMatchMessage,
			ConfirmationMessageEnableRpcHttpInternalOnly,
			UnableToGeneratedWatsonReportForHungService,
			ErrorOabVDirAlreadyAssigned,
			WarningRetentionPolicyIdChange,
			ErrorUMInvalidE164OrExtensionAddressFormat,
			ErrorCannotSetTransportServerPropertyOnSubscribedEdge,
			MigrationMaxConcurrentIncrementalSyncsVerificationFailed,
			SmartHostsIPValidationFailedId,
			CasHealthCalendarVDirWarning,
			ConstraintError,
			VerboseMailboxNotExistInStore,
			CannotAssignCertificateToUM,
			ErrorMissingDependentParameter,
			ConfirmationMessageSetPublicFolderDatabase,
			DivergenceAlreadyExists,
			ConfirmationMessageEnableConversations,
			ErrorCannotChangeBecauseTooOld,
			InvalidCspForCryptoModeInImportedTrustedPublishingDomain,
			AddAccountRightsFailedException,
			CasHealthWebAppVdirNotFoundError,
			FailedToLocatePublicFolder,
			UmLanguagePackDirectory,
			RmsSharedIdentityComputerNotFound,
			LogMigrationOpenRegistryKey,
			ErrorDisableMailboxWithAssociatedApprovalRecipents,
			TestSearchCreateSearchFolderError,
			ProcessingComponent,
			ConfirmationMessageSetRMSTemplate,
			ErrorDbMountedOnServer,
			ConfirmationMessageNewDistributionGroup,
			DatabaseCopySuspendedCheck,
			ConfirmationMessageMoveActiveMailboxDatabasePrefToServer,
			AddAccessRuleCOM,
			WarnCertificateWillNotBeUsedBestIsPKI,
			InstallFreeBusyFolderGeneralFailure,
			ErrorUserNotUniqueOnDomainController,
			ErrorUnableToReleaseUri,
			HybridMailflowNullConnector,
			ClassificationRuleCollectionVersionViolation,
			ErrorCannotDetermineInitialDomain,
			ErrorObjectIsNotLiveIDEnabled,
			ErrorInvalidRegistryHive,
			WarnAboutDeprecatedParameter,
			ErrorDisableMailuserWithLitigationHold,
			ErrorSchemaVersionDoesntApply,
			ErrorOperationOnOldServer,
			InvalidExpression,
			ErrorCannotRemoveMigrationUserOnCurrentState,
			ErrorConnectSystemAttendantMailbox,
			ErrorPublicFolderDatabaseNotUnique,
			ConfirmationMessageSetWebServicesVirtualDirectory,
			ConfirmationMessageNewMalwareFilterRule,
			ConfirmationMessageNewAddressBookPolicy,
			ErrorInvalidContentMailbox,
			ConfirmationMessageNewAvailabilityConfig,
			ElementNotFound,
			AdminAuditLogSearchCriteria,
			ErrorMailboxDatabaseNotFound,
			OfferIdMatchError,
			NoGCsAvailableException,
			VerboseSyncTaskCookieHasPageData,
			ErrorVerificationCodeNeverSent,
			CouldNotFindHostDirectoryEntryException,
			TestMigrationServerAvailabilityException,
			WarningEESandEDSNotFound,
			UnableToResolveValidDomainExchangeCertificateTasksException,
			RestoreFailedDagUp,
			ConfirmationMessageNewMessageClassificationName,
			PopImapSettingsPortMismatch,
			GlobalRoutingEntryFound,
			VerboseDeleteSystemMailbox,
			ConfirmationMessageRemovePublicFolderDatabase,
			ConfirmationMessageEnableMailboxUser,
			WarningDiscoveryHoldDelay,
			ErrorInvalidExpansionServer,
			MailboxSearchServiceUnavailable,
			WarningPushCertificate,
			TestMigrationServerAvailabilitySuccess,
			ConfirmationMessageRemoveOutboundConnector,
			ErrorRoleNotFound,
			ProgressActivityPushFederationCertificate,
			ConfirmationMessageNewMobileSyncVirtualDirectory,
			CallingDomainServicesEndPoint,
			ConfirmationMessageNewMailboxImportRequest,
			ErrorCannotModifyDeprecatedRole,
			ErrorOperationOnlyOnMailboxServer,
			ErrorUnsupportedMailboxShapeFeatureVersionException,
			ErrorCannotParseFsmoRoleOwnerVersion,
			CannotStartRunningJob,
			ConfirmationMessageNewRecipientTemplateProvisioningPolicy,
			ErrorPolicyValidationFailed,
			DagMemberStopped,
			ConfirmationMessageRemoveWebServicesVirtualDirectory,
			ConfirmationMessageSetMalwareFilterConfig,
			ConfirmationMessageEnableMailboxWithArchive,
			DagFswInsufficientPermissionsToAccessFswException,
			EmptyDeviceFilterRemoved,
			SmtpConnectivityServerNotConfigured,
			ErrorDlpPolicyAlreadyInstalled,
			WarningDuplicatedPropertyOriginalEntry,
			MaxDeviceDeletesPerMonthReached,
			VerboseSavePublicFolderReferral,
			MissingPilotOffer,
			ConfirmationMessageInvokePreMoveAction,
			ErrorUnableToCheckMountedStatus,
			ErrorServerDacedAndNotStarted,
			VerboseBumpOrganizationExchangeVersion,
			ExceptionStorageAccessDenied,
			EnableConversationsProcessingItems,
			FailedToRemoveDatabaseSection,
			FailToValidateSubscripionPrincipalOnEdge,
			FailedToGetElcUserConfigurationFromService,
			WarningRoleEntryAlreadyExists,
			VerboseMailboxDelegateAdded,
			ConfirmationMessageRemoveEmailAddressPolicy,
			ConfirmationMessageRemoveLinkedUser,
			VerboseRemoveWSManGlobalModule,
			WarningCouldNotCreateDefaultRoleAssignment,
			ConfirmationMessageSetTransportServer,
			NoRemoteInstallPath,
			AccessStoreError,
			ErrorMRSIsDownlevel,
			AgentDoesNotExist,
			ErrorPSTFileNotExist,
			ErrorServerIsNotCasServer,
			CannotReadRolesFromRegistry,
			InvalidMessageDataClassificationParameterConfidenceExceedsMaxAllowed,
			FormsAuthenticationErrorPathBusyException,
			ErrorUserIsAlreadyBeingMoved,
			DatabasesRedundancyCheckFailed,
			VerboseSetSystemAttendantObject,
			InfoPrivilegeAlreadyPresent,
			ErrorOfflineAddressBookNotFound,
			ConfigFileNotFoundException,
			VerboseParsingOPathFilterFailed,
			MigrationMaxConcurrentConnectionsVerificationFailed,
			ConfirmationMessageRemoveTransportProcessingQuotaOverride,
			ErrorMinVersionGreaterThanMaxVersion,
			SiteMailboxLanguageSet,
			MailboxAssistantsServiceStopped,
			WarningMessageSetWebServicesVirtualDirectoryWindowsAuthentication,
			ErrorInvalidIso3166Alpha2Code,
			ErrorCannotConnectToMailboxDatabase,
			CasHealthWebAppLiveIdError,
			InvalidMailboxContainerGuid,
			ComplianceSearchSendStartMessageError,
			TestSearchDatabaseIsNull,
			ErrorLogFolderPathNotUniqueUnderTheSameNode,
			DebugResolvingDomainAccount,
			VerboseMRSRequestDistinguishedName,
			DagTaskClusterServiceNotRunningOnNodeException,
			ConfirmCreatingExclusiveScope,
			GeneratedWatsonReportForHungService,
			ErrorSourcePrimaryMailboxDoesNotExist,
			ErrorArchiveDumpsterExceedsTargetQuota,
			ErrorNoAvailableDefaultFilePath,
			InterceptorErrorInvalidEventActionPair,
			UnableToMoveMailboxWithSubscriptions,
			ErrorPathNotExistsOnServer,
			RuleCollectionAlreadyExists,
			CouldNotUpgradeRetentionTrigger,
			ClassificationRuleCollectionNonUniqueLangCodesInRulePackDescriptor,
			ErrorUniversalGroupCannotHaveForeignSP,
			ConfirmationMessageAutoTagCrossValidate,
			InvalidCidrRangeId,
			TargetMailboxInSourceIsSkipped,
			ProcessingAceStatus,
			messageADServerNotFoundException,
			messageSystemMailboxNotFoundException,
			ErrorUnableToResolvePublicToGroup,
			InterceptorErrorInvalidBehavior,
			ErrorRemoveGroupRoleAssignment,
			CrossPremiseNoEgressTargets,
			RemoveDagDestroyedCluster,
			ErrorCannotAssignPartnerAppRole,
			ConfirmationMessageEnableTransportRule,
			UnableToAddE12DStoExSPermissionsException,
			WarningCouldNotRemoveRoleAssignment,
			OpenPolicyFailedException,
			PatchAttributeValue,
			MoveMailboxParameterError,
			ErrorCouldNotFindRequest,
			ErrorPowerShellVdirAppPoolNotExist,
			InterceptorConfirmModifyingOlderVersion,
			FormsAuthenticationDeleteAccessDeniedException,
			ExServerSGroupNotFoundException,
			ErrorCannotUpdateReplicationLatency,
			ErrorDefaultTagHasConflictedMessageClasses,
			ConfirmationMessageSetRoutingGroupConnector,
			SeederAsyncBeginCalled,
			ErrorParsingScript,
			ErrorSingleDbCopyMove,
			ErrorFailedToMountDatabaseMissingLogFile,
			ErrorClientAccessArrayNotFound,
			CasHealthTransactionFailures,
			VerboseSearchCompleted,
			CannotCancelWipe,
			InfoPublishingUri,
			ErrorDlpPolicyTemplateNotFound,
			FailedToResetRecoveryDatabase,
			VerboseBackupIISConfig,
			ConfirmationMessageNewPolicyTipConfig,
			FailedToStartNodeException,
			CantFindCertBySubject,
			RecipientWithTenantServiceInstanceNotSet,
			ConfirmationMessageNewPublicFolderMoveRequest,
			VerboseSaveStoreMailboxSecurityDescriptor,
			ConnectionToIPListRPCEndpointFailed,
			VerboseDeleteDatabaseLogFiles,
			ErrorNonZeroValueForShadowRetry,
			ErrorOutlook2010OrLaterRequired,
			PropertyAlreadyHasAnOverride,
			DagTaskRemovedNodeToCluster,
			WarningRenamingRole,
			ErrorRetentionTagNotUnique,
			ConfirmGenerateExchangeCertificate,
			ConfirmationMessageStartOrganizationUpgrade,
			UserNotFoundException,
			ConfirmationMessageSetExchangeServer,
			RecipientHasNoExternalId,
			WarningFailedToDeleteSourceMailbox,
			ErrorSchemaVersionOutOfRange,
			SubscriptionCacheOperationFailed,
			SourceMailboxMustBeE15OrLater,
			ErrorFailedToReplicateMailbox,
			ConversationsADUserIsNull,
			ErrorUserNotHaveRoleAssignmentPolicy,
			ErrorCannotAutoSuspendMoveAlreadyCompleting,
			ErrorCannotDeletePrecannedRoleAssignmentToRoleGroup,
			DagTaskUpdatedAdDagMembership,
			ErrorGroupNotUniqueOnGlobalCatalog,
			ErrorCannotRemoveNonActiveOrganization,
			RemoveDagConfigurationNeedsZeroDagsException,
			DagFswUnableToParseWitnessServerNameException,
			AmMoveRpcRequested,
			MoveMailboxCrossOrgToPt,
			CasHealthSyntaxErrorInResponse,
			ConfirmationMessageRemoveIntraOrganizationConnector,
			SuccessDisableMailboxQuarantine,
			ConfirmationMessageTestLiveIdAuthenticationIdentity,
			ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithCustomFilter,
			ConfirmationMessageSuspendOnlineMoveRequest,
			ConfirmationMessageSetSecondaryDomain,
			AddDatabaseCopyAllCopiesMustBeInTheDagException,
			CasHealthOwaCasColon,
			ResourceOnly,
			MultipleOrgMbxesWithCapability,
			ErrorMailboxDumpsterExceedsTargetQuota,
			ErrorAuxToAuxAttachment,
			ConfirmationMessageUninstallDlpPolicyTemplate,
			ErrorRedirectionEntryFailedToAdd,
			ErrorTeamMailboxGetByNonMember,
			ErrorDlpPolicyIsNotInstalled,
			WarningCloseGroupMemberJoinForNoArbitrationMbx,
			ErrorOfProtocolCommand,
			DagTaskDagNameMustBeComputerNameExceptionM1,
			ErrorNoRetentionPolicyForTeamMailbox,
			ErrorRemoveMailboxWithAssociatedApprovalRecipents,
			ConfirmationMessageAddMailboxPermissionAccessRights,
			ConfirmationMessageSetMailboxPlan,
			ServiceReachedStatus,
			ErrorLiveDomainInaccessibleEpr,
			ConfirmationMessageSetInterceptorRule,
			WarningPreferredServerReplaced,
			CasHealthCouldNotLogUserNoDetailedInfo,
			ConnectorIPRangeContainsInvalidIPv4AddressId,
			ProgressActivityPushFederationServer,
			IPv6AddressesRangesAreNotAllowedInConnectorId,
			AvailabilityConfigReadException,
			ErrorCannotDisableLastArbitrationMailboxInOrganization,
			WarningNoNeedToConvertMailboxType,
			GetQueueDigestServerNoServerFoundInDag,
			VerboseFindAutoDiscoverUrl,
			WarningFailedToMailEnableSourceAccount,
			UserHasNoFederatedIdentity,
			ErrorInvalidOperationOnAddDBCopyForRecoveryDB,
			ErrorInheritedObjectTypeNotFound,
			MigrationPortVerificationFailed,
			ConfirmationMessageMailboxCalendarConfiguration,
			ConfirmationMessageSetExchangeUpgradeBucket,
			ErrorBadItemLimitAlreadyExceeded,
			FailedDeleteTempDatabaseLogFiles,
			ActiveDirectoryConnectivityExceptionThrown,
			AdminAuditLogSearchTimeout,
			ConfirmationMessageNewManagementScope,
			CommentsTooLong,
			CrossPremiseProbesPending,
			DlpPolicyScriptExecutionError,
			WarningRemoveRoleAssignmentToBlockSelf,
			CasHealthOwaPingStart,
			AddResubmitRequestFailed,
			ConfirmationMessageSetFailedMSOSyncObject,
			ErrorInvalidRecipientType,
			ErrorWorkloadManagementPolicyNotUnique,
			UsingAuthenticationCredentials,
			VerboseUpdatingVersion,
			MailboxUserNotFoundException,
			ConfirmationMessageRemoveEdgeSubscription,
			ConfirmationMessageSetRetentionPolicy,
			ErrorUpdateManagementVDirForRemoteServer,
			FailedToResetOabPublicFolderDistribution,
			ErrorMailboxDatabaseToRecoverIsRecoveryMailboxDatabase,
			ErrorCannotRetrieveRidManagerContainer,
			RequestIndexEntryIsMissingLocalUserData,
			ErrorParameterRequired,
			ConfirmationMessageNewMailboxShared,
			ConfirmationMessageRemoveMailuserAndLiveId,
			CannotSetTargetDeliveryDomainOnWildCardDomains,
			SiteMailboxLinkedToSharePointSite,
			VerboseSettingDisableAggregation,
			CannotSetWebServiceRoleEntry,
			AdminAuditLogSearchOutOfRangeResultSize,
			ErrorAuthenticationFailed,
			ImportNodeNameDoesNotMatch,
			CasHealthOwaHttpGetNonOkayForLogoff,
			ErrorExchangeAdministrativeGroupNotFoundDueToAdReplicationLatent,
			MoveMailboxUnexpectedReportingProgress,
			ConfirmationMessageGetDatabaseAvailabilityGroupConfiguration,
			ErrorServicePlanIsDeprecated,
			InfoGroupAlreadyPresent,
			VerboseCheckPFDatabaseLocalReplicas,
			RunConfigUpdaterRpcVerbose,
			ConfirmationMessageAddIPBlockListEntryIPRange,
			ErrorRetiredOrganizationFound,
			VerboseUnmountDatabase,
			MailboxReplicationServiceNotResponding,
			DatabaseFilterMustBeValid,
			UsingTargetMailbox,
			VerboseUninstallWSManModule,
			ConfirmationMessageSetClientAccessArray,
			DomainControllerServerNotFound,
			TenantNotificationDebugFormatMessageFailed,
			ConfirmationMessageSetMobileSyncVirtualDirectory,
			MigrationMailboxLimitExceeded,
			WarningDedicatedMailboxPlanNotFound,
			ConfirmationMessageNewEdgeSyncEhfConnectorWithSiteSpecified,
			ErrorUnableToRenameEndUserRoleNameAlreadyExist,
			ErrorSharePointSiteHasNoValidWebCollectionUrl,
			FailedToValidateTemplate,
			VerbosePathOnFixedOrNetworkDriveCondition,
			ErrorGrantSendOnBehalfToRecipientTypeError,
			ErrorCannedRoleGroupCannotBeEmpty,
			MonitoringItemAlreadyHasLocalOverride,
			MismatchedFederation,
			ProvideSnapinNameForCmdletEntryForRole,
			ErrorUserOrSecurityGroupNotFound,
			ConfirmationMessageMoveMailboxDatabaseMasterSourceServer,
			ProgressActivityRemovingManagementRoleTree,
			ServiceDidNotReachStatus,
			TestMailflowInvalidTargetEmailAddress,
			ErrorOrganizationNotUnique,
			ConfirmationMessageRemovePhoto,
			ErrorCannotGenerateExternalDirectoryObjectIdOnInternalRecipientType,
			TotalFolderSize,
			InterceptorErrorInvalidConditionMatchTypePair,
			ErrorExistingAuthServerWithDefaultAuthorizationEndpoint,
			ConfirmationResettingPartitionTrust,
			ErrorFailedToGenerateRandomPassword,
			DagNodeNotFound,
			ConfirmationMessageUpdateGlobalAddressList,
			OrganizationHasNoFederatedDomains,
			ErrorRequestCompletedDuringCancellation,
			ErrorInvalidMailboxAssociationIdentity,
			CasHealthPowerShellConnectionAuthenticationType,
			ErrorRetentionPolicyNotUnique,
			CasHealthEcpServiceRequestResult,
			ErrorLargeItemLimitAlreadyExceeded,
			ErrorELCFolderNotUnique,
			CasHealthWebAppNoSession,
			ConfirmationMessageAutoTagTrain,
			ConfirmationMessageRemoveInboxRule,
			CasHealthOwaTestUrlSpecified,
			ParsingTokenIssuerCertificate,
			ErrorMailboxServerNotFound,
			ErrorDirectoryManagementWebServiceNotFound,
			SafeSendersNotUpdated,
			ConfirmationMessageSetMailboxAuditLogAgeLimitZero,
			ConfirmationMessageEnableMailboxWithRemoteArchive,
			ErrorRoleNotUnique,
			ConfirmationMessageRemoveMobileDeviceWhileRemoteWipeIsPending,
			ConfirmationMessageCompleteMigrationBatchWithPendingItems,
			ConfirmationMessageEnableMailContact,
			ErrorSingleDatabaseCopy,
			ErrorGlobalAddressListNotFound,
			VerboseTestSourceServer,
			ErrorArchiveGuidsDontMatch,
			ErrorMailboxHasNoArchive,
			UsersContainerNotFound,
			ErrorTeamMailboxRemoveByNonOwner,
			ErrorArchiveRecoveryArchiveInUse,
			DataClassificationAmbiguousIdentifier,
			ConfirmationMessageSetMalwareFilterRule,
			ErrorSettingTeamMailboxUserPermissions,
			ConfirmationMessageSetAdminAuditLogConfig,
			PhoneNumberNotANumber,
			RmsSharedIdentityInconsistentState,
			ConfirmationMessageSetHostedConnectorFilterPolicy,
			WarningNoDatabasesWereMovedBackToServer,
			DagTaskCheckingClusterMembershipOfServer,
			ErrorInvalidApplicationUri,
			ErrorWindowsLiveIdNotExist,
			SendConnectorRgcNotFound,
			ErrorWhileFolderSyncForDeletion,
			OutboundConnectorIdNotFound,
			CasHealthWebAppConfirmTestWithServer,
			RestoreMailboxNotE14OrLater,
			ErrorGroupAlreadyMailEnabled,
			ErrorCertificateHasNoPrivateKey,
			InfoAddingAce,
			ConfirmationMessageNewMigrationBatch,
			CrossValidationIncorrectFolds,
			AddedDeviceFilterRule,
			CurrentQueryTime,
			NodeNotElement,
			ErrorMailboxIsNotAudit,
			DCWithGivenNameCouldNotBeFound,
			invalidFipsCryptoModeInImportedTrustedPublishingDomain,
			DagTaskServerFswServerNotAccessibleWithWmi,
			WarningDuplicateProxyAddressIsFiltered,
			ExWindowsPermissionsGroupNotFoundException,
			ErrorInvalidParameterForPublicFolderTasks,
			DatabaseNamesMustBeUnique,
			CouldNotUpgradeDisabledContentSettings,
			ExchangeServerNotFoundException,
			WarningRmsOnlineAuthenticationCertificateExpiryApproaching,
			ConfirmationMessageSetServerMonitor,
			VerboseSaveADSecurityDescriptor,
			ErrorLeadingTrailingWhitespaces,
			RemoveDlpPolicyCorruptRule,
			ExportMailboxShouldExport,
			FoundProcessesForService,
			ErrorGroupNotFoundOnGlobalCatalog,
			CannotCreateRuleDueToVersion,
			ConfirmationMessageSetDlpPolicy,
			ConfirmationMessageEnableOrganizationRelationship,
			CannotFindLocalAdminGroupException,
			InvalidSmtpBanner,
			RemoveMailboxSearchConfirmation,
			ConfirmationMessageSetGlobalAddressList,
			ConfirmationMessageSetSyncServiceInstance,
			ErrorCannotMoveTeamMailboxesDownlevel,
			ErrorMemberNameUnavailableUsedForDL,
			UmLanguagePackFullPath,
			UpdateRecipientNotSupportedInRemoteForestWarning,
			ErrorInboxRuleUserInvalid,
			NullOrgIdException,
			ErrorResponseContainsError,
			FailedToSystemProbeCmdlet,
			ErrorCannotModifyPrecannedRole,
			ErrorPropertiesInvalid,
			ComplianceBindingAmbiguous,
			ClassificationRuleCollectionAnyBlocksExceedLimit,
			EventManifestActionFailed,
			ErrorPublicFolderUserNotUnique,
			ConfirmationMessageRemoveRequestDebug,
			ConfirmationMessageNewMailUser,
			RawRequestJobDump,
			CouldNotConnectToCluster,
			ErrorServerOutOfScope,
			ConfirmationMessageMailboxAutoReplyConfiguration,
			UpdatingDatabaseCopyObject,
			ErrorRemoveAddressBookPolicyWithAssociatedUsers,
			CustomizedDsnNotConfigured,
			StringResourceNotFound,
			ConfirmationMessageRemoveAvailabilityAddressSpace,
			ErrorReceiveConnectorNotUnique,
			VerboseReadStoreMailboxSecurityDescriptor,
			TowsSslError,
			ConfirmationMessageRemoveInterceptorRule,
			TestSearchCatalogState,
			CorruptRule,
			VerboseDefaultOABServerIsNotE12,
			ConfirmationMessageRemoveOfflineAddressBook,
			ConfirmationMessageNewManagedFolderMailboxPolicy,
			ParameterNotApplicableToInstalledServerRoles,
			ConfirmationMessageAddIPBlockListProvider,
			VerboseLoadingAssignmentsByScope,
			ParsingTokenIssuerUri,
			RpcHttpE2kServers,
			ErrorUserNotUniqueOnGlobalCatalog,
			VerboseInstallKerberosAuthenticationModule,
			ConfirmationMessageNewDeliveryAgentConnector,
			VerboseConnectingIISVDir,
			CasHealthPowerShellCmdletExecutionSummary,
			ErrorPolicyOutOfRoleScope,
			CasHealthOwaHttpGetOkay,
			ErrorGroupRecipientNeeded,
			ConfirmationMessageImportRMSTPD,
			GetMsoDiagnosticsExclusiveParameters,
			ErrorDeleteActiveSourceNTAccount,
			ErrorCannotDeletePrecannedRoleGroup,
			InsufficientEmailsForTraining,
			ErrorTargetDatabaseIsNotE2K7OrLater,
			ConfirmationMessageRemoveMservEntry,
			ElcNoLocalMbxOrArchive,
			ErrorFailedToRemoveSystemMailbox,
			ExInvalidArgumentForServerRoleException,
			ErrorParameterNotSupportedForMigration,
			ErrorCouldNotReadDatabaseCopy,
			ErrorCannotMoveArchiveMailboxesDownlevel,
			VerboseResetOab,
			DlpPolicyModeIsOverridenByModeParameter,
			ErrorMailboxAuditLogSearchFailed,
			CasHealthOwaHttpGetNonOkayForLogon,
			ConfirmationMessageSetAdSiteLink,
			IncorrectlyFormattedColumn,
			WarningFailedToCreateSourceContact,
			VerboseGrantingEoaFullAccessOnMailbox,
			ErrorExistingAuthServerWithEmptyRealm,
			AlsEmailBodyMailboxOperations,
			InvalidParameterForFilter,
			ErrorAtLeastOneSideMustBeCurrentProductVersion,
			ErrorClassificationAlreadyDefined,
			ConfigurationNotSynchronized,
			ErrorNoOfflineSuspendWhenReadyToComplete,
			ConfirmationMessageRemoveAccountPartition,
			TransportRpcUnavailable,
			ErrorRuleStateInconsistentWithComplianceProgram,
			ExchangeCmdletsNotAllowedInRole,
			RcrExceedDbLimitException,
			ErrorExceededMaximumCollectionCount,
			UnexpectedNonAuthoritativeDomain,
			ErrorScopeNotUnique,
			ErrorPublicFolderStatisticsNotFoundInDatacenter,
			ErrorOabVirtualDirectoryAlreadyExists,
			ErrorDatabaseWrongVersion,
			ConfirmationMessageNewUser,
			NoMonitoringErrorsInTestReplicationHealth,
			SelfMemberAlreadyExistsException,
			ConfirmationMessageSetFederatedOrganizationIdentifier2,
			InterceptorErrorCustomTextNonAscii,
			ErrorFailedToRemoveWinRMSchemaFile,
			ConfirmationMessageMoveOfflineAddressBookE14ToLowerVersion,
			ConfirmationMessageRemoveIPAllowListEntry,
			ConfirmationMessageMailboxMessageConfiguration,
			MoveMailboxDuplicates,
			VerboseUpdateStoreMailboxState,
			SomeWebServicesTransactionsFailed,
			ErrorRpcHttpNotEnabled,
			ConfirmationMessageAdminAuditLogAgeLimitZero,
			CasHealthPowerShellSkipCertVDir,
			VerboseEdbFileLocationUniqueUnderServerCondition,
			AccessMismatchLocalRemote,
			WarningFailedToCreateAssignmentForNewRole,
			ErrorContentFilterInvalid,
			ConfirmationMessageRemoveMailboxStoreMailboxIdentity,
			ConfirmationMessageSetGroup,
			MessageClassIsNotValid,
			ErrorTrustedPublishingDomainNotUnique,
			ExchangeTenantNotFound,
			ExchangeSettingsScopeNotFound,
			ErrorTargetRecipientIsNotAnMEU,
			VerboseWillSkipOrganizationUpgrade,
			NodeNotUnique,
			InfoAddedGroupToGroup,
			ErrorTeamMailboxEnqueueMembershipSyncEvent,
			DagNetworkSubnetIdConflictError,
			ReplicationCheckResultToStringCaseNotHandled,
			ConfirmationMessageNewPublicFolderDatabaseRepairRequest,
			ServerLocatorServiceRequestFailed,
			ErrorFailedToGenerateFileNameFromAlias,
			ErrorMaxCmdletsNotSupported,
			ConfirmationMessageRemoveThrottlingPolicy,
			UpdateMovedMailboxFailureAfterADSwitchover,
			ConfirmationMessageRemoveDatabaseAvailabilityGroupServer,
			NotValidEmailAddress,
			ErrorUnableToGetUserSid,
			RmsSharedIdentityBeingUnlinkedFromComputer,
			UMCallAnsweringRuleTimeOfDaySimple,
			OrganizationHasNoFederation,
			RemoveNonEmptyOabVirtualDirectory,
			ReadNetworkAdapterInfo,
			RemoveMailForestContactNotAllowed,
			ConfirmationMessageSetHostedContentFilterConfig,
			TooFewMailboxServersToStart,
			ConfirmationMessageSetThrottlingPolicyAssociation,
			ErrorSynchronizationTypeTokenNotRecognized,
			ErrorInvalidServicePlanTransition,
			VerboseDeleteDirectory,
			ErrorMoveActiveCopyIsSeedingSourceException,
			ErrorEsnIncompatibleRule,
			ConfirmationMessageNewRoutingGroupConnectorTwoWays,
			ErrorRedirectionEntryForDomainNotFound,
			AssemblyPathIsNotRegistered,
			ErrorCredentialRequiredForIdentity,
			TestSearchGetNonIpmSubTreeFolderError,
			CmdletExecutionError,
			ProtocolSettingsDetails,
			CouldNotUpgradeJournaling,
			ConfirmationMessageDisableOrganizationRelationship,
			ManageIsapiExtensionFoundMoreThanOneExtensionException,
			ErrorAuxHasParent,
			ConfirmationMessageEnableDistributionGroup,
			ConfirmationMessageUpdateRecipient,
			ErrorMetabasePathNotFound,
			ErrorFolderLocationUnknown,
			WarningRemoveInvalidRoleAssignment,
			ConfirmationMessageSetResourcePolicy,
			BatchValidationWarningsAutoStart,
			ErrorAppHostOrWindowsAuthenticationNotFound,
			GetIISVersionException,
			DatabaseListMustBeValid,
			InvalidIdentity,
			ErrorLinkOpOnDehydratedTenant,
			ErrorConvertGroupContainsNonRoomMailbox,
			ErrorInvalidArbitrationMbxType,
			DagTaskServersInAdNotInCluster,
			WarningMessageRemoveWebServicesVirtualDirectory,
			CrossPremiseSessionFailure,
			UninstallOldMSIFor,
			ErrorCallingNetSh,
			SuccessRemoveGlobalMonitoringOverride,
			TSMDBperformanceCounterNotLoaded,
			VerboseCheckIfTopLevelRoleThatSelfDelegatorRemovalCheckCanBeWaivedFor,
			ErrorInvalidOperationOnEapObject,
			InvalidUMFaxServerURIValue,
			ErrorMultipleDatabaseCopies,
			ConfirmationMessageAddADPermissionAccessRights,
			InvalidDataSourceException,
			VerboseGetSyncDeletedRecipientNeedsRetry,
			TestRHCheckTPRListener,
			ConfirmationMessageRemoveRetentionPolicy,
			AutodiscoverServiceCallSucceeded,
			ErrorUnexpectedRemoveStoreMailboxState,
			GroupsIsNotAllowedForHold,
			DagConfigVersionConflictException,
			ConfirmationMessageNewTenantRelocationRequest,
			CannotRemoveServiceInstanceError,
			FailureAndReason,
			DatabaseReplayQueueNotKeepingUp,
			ValidPatch,
			BackupFileCreated,
			InfoCertificationUri,
			XmlDeserializationException,
			ExportMultipleMailboxToOnePST,
			CannotFindGlobalCatalogsInForest,
			TestSearchCreateSearchFolder,
			CouldNotSaveContentSetting,
			ErrorSubmitCommandFailed,
			GetFederationInformationResults,
			RemovingMoveJobFromAd,
			EntryNoAllowedInRoleType,
			ErrorElcFolderNotFound,
			ConfirmationMessageRemoveUMMailboxPolicy,
			ConfirmationMessageSetDynamicDistributionGroup,
			InvalidPropertyOverrideValue,
			ErrorClassificationNameCannotBeBlank,
			CannotStopNonRunningJob,
			WebServicesTestOutcomeToString,
			WarningActivationDateBeforeCurrentDate,
			ConfirmationMessageSetManagementRoleAssignment,
			WaitForServiceStatusChange,
			VerboseCreatedRoleAssignment,
			CannotParseRuleDueToVersion,
			ExchVirtualDirectoryCannotFindWebSite,
			ErrorInvalidParentExtendedFolderFlags,
			NewPolicyTipConfigInvalidLocale,
			ConfirmationMessageDisableAddressListPaging,
			ErrorUserNotInRoleGroups,
			UsingProxy,
			ErrorAppCmdNotExist,
			DagServerCantBeRemovedInDatacenterActivationMode,
			VerboseCopyDirectory,
			ServerFilterMustBeValid,
			ConfirmationMessageNewMailboxLinked,
			VerboseCopyDatabaseCatalogFiles,
			RmsVersionMismatchException,
			RemoveADServerMetadataRemovingServerDN,
			InvalidTypeOfExpression,
			ErrorMultipleMatchedUser,
			AgentAlreadyExists,
			AmMoveRpcRequestedAnyServer,
			ErrorPrimaryOnlyCrossForestMovesWithoutArchive,
			VerboseConnectionAdminRpcInterface,
			ErrorOabNotFoundForUser,
			ErrorSyncMailboxWithMasterAccountSid,
			ExchangeSettingsGroupAlreadyExists,
			messageLiveIdConnectivityWCFExceptionThrown,
			ConfirmationMessageSetNotification,
			ErrorStringContainsLeadingSpace,
			SyncstateupgradeFailedWarning,
			CouldNotFindElementWithAttribute,
			InvalidDisclaimerMacroName,
			ErrorRemoveOfflineAddressBookWithAssociatedAddressBookPolicies,
			ReplicationCheckWarningException,
			RemovingAceFromDkmContainerAcl,
			VerboseSkipObject,
			SubscriptionConnectionError,
			ErrorEdbFilePathOccupiedByFile,
			VerboseParsingOPathFilterSucceed,
			ErrorProvisioningFederatedExchange,
			DataClassificationNonUniqueQuery,
			ComAdminUnableToInstallComponentsException,
			VerboseGetStoreConfigDCName,
			ErrorUserNotFoundOnGlobalCatalog,
			DagFswUnableToCreateWitnessDirectoryException,
			RestoreOrExportTargetFolderIsSpecial,
			TraceCannotCreateXmlReportFolder,
			ExAllHostedOrganizationsGroupNotFoundException,
			DataClassificationNonUniqueNameViolation,
			ErrorTooManyRemoteDomains,
			ErrorUserNotFound,
			CasHealthWarnUserCredentials,
			ConfirmationMessageSetMailboxWithNewWindowsLiveID,
			ConfirmationMessageNewMalwareFilterConfig,
			ElcServiceCallFailed,
			ProgressFixIPAddr,
			CannotFindCmdletInSnapin,
			IsNotMemberOfVOAdmin,
			CmdletRunnerSciptIsInvalid,
			ConfirmationMessageRemoveAuthServer,
			ErrorDagNotFound,
			ConfirmationMessageGetDatabaseAvailabilityGroup,
			ConfirmationMessageSetSharingPolicy,
			RemoveLiveFedDomainReserveResponse,
			ErrorUpdateRecipient,
			CannotRemoveFederatedAcceptedDomain,
			AlsEmailBodyMailboxShowDetails,
			ErrorTeamMailboxMaxShowInMyClientReached,
			HubServerVersionNotFound,
			MobileDeviceLogNoPermissionsException,
			ErrorRoleEntryNotFound,
			OwaGzipEnabledOnLegacyVirtualDirectoryWhenMailboxRoleInstalledWarning,
			StandaloneMailboxNoReplication,
			WarningChangingUserPrincipalName,
			OperationExceedsPerServiceInstanceFullSyncObjectRequestLimit,
			ConfirmationMessageEnableServiceEmailChannel,
			ConfirmationMessageRemoveActiveSyncDeviceAccessRule,
			ConfirmationMessageSetJournalrule,
			ErrorDeprovisionedTargetNotPassed,
			CannotRemoveTenantWideDivergence,
			MigrationJobAlreadyExists,
			UpdatesDirectoryNotFound,
			ErrorDlpTemplateRequiresParameter,
			ErrorOWAEnabledStatusNotConsistent,
			ConfirmationMessageNewMailboxDiscovery,
			ErrorSamePublicFolderMRSJobInstancesNotAllowed,
			ResettingIsDefaultIsNotSupported,
			ErrorProxyAddressAlreadyExists,
			ErrorMailboxRelocationSplitSourceNotInContainer,
			ConfirmationMessageDisableJournalrule,
			CasHealthTestUserOnWrongSite,
			FailedToMatchTemplateDistributionPointToLicensingUri,
			ConditionIncompatibleWithTheSubtype,
			EtrHasE4eAction,
			ProgressCreateAltFsw,
			ErrorAddressBookPolicyNotFound,
			ErrorDeviceIdInBothLists,
			SuccessEnableMailboxQuarantine,
			ErrorKerbauthModuleFileNotFound,
			CasHealthOwaConfirmTestUrl,
			DatabaseCopyRpcResultNotFound,
			DagSubnetDown,
			ErrorFilePathMustBeUNC,
			ConfirmationMessageSetRecipientTemplateProvisioningPolicy,
			UpdatingAdminToolsConfiguredVersion,
			RemoveDagFailedToDestroyClusterException,
			ConfirmationMessageSetClientAccessServer,
			ErrorMailboxRelocationJoinTargetNotContainer,
			MaxDevicesReachedSingular,
			ExceptionMandatoryParameter,
			GetQueueDigestAmbiguosSite,
			WarningNTSecurityDescriptorNotUpdated,
			ExportSkippedE15Rules,
			ErrorDisclaimerTextBig,
			WarningBackgroundDatabaseMaintenanceChangeRequiresRemount,
			MailboxAuditLogSearchFailed,
			ErrorMoveAddressListAcrossOrganization,
			ErrorRemoveMailuserWithLitigationHold,
			ClassificationRuleCollectionInternalFailure,
			WarningSetMailboxLitigationOwnerIdentity,
			ErrorNoDeletionNoTarget,
			InvalidComplianceBindingWarning,
			ConfirmationMessageUninstallProvisioningAgent,
			ConfirmationMessageEnableMailboxLinked,
			NoEntityLinkedToTenantInReportingDB,
			ErrorCompleteFlagNotAllowed,
			ErrorSourceServerNotInDag,
			CasHealthSpecifiedCASServerVersionNotMatched,
			RegistryInsufficientPermissionException,
			ErrorAssigneeComputerNotUnique,
			ErrorRecipientIdParamElementsNotUnique,
			DagCantBeSetIntoDatacenterActivationMode,
			SharedConfigurationNotEnabled,
			DagTaskNodeNotUpExceptionTryConfigOnlyException,
			OptInNotSupportedForPre14Mailbox,
			DagTaskMultipleDefaultGatewaysFound,
			WarningRulesWillNotBeCopied,
			ErrorUnknownMailboxFolderAccessRights,
			DagTaskRemoveNodeCleanupFailed,
			ErrorCreatedUserNotExist,
			CasHealthPowerShellLogonFailed,
			DatabaseNamesMustBeValid,
			ErrorRBACPolicyNotFound,
			VerboseFailedDoubleWriteOperation,
			NeedToConfigOABForWeb,
			MtrtMessageSend,
			OnlineIsIntegException,
			CasHealthOwaMissingAuthType,
			ProtocolTransactionShortErrorMsgFromException,
			ErrorAddressBookMailboxPolicyNotUnique,
			SuspendSuccessInformationalMessage,
			ServiceFailedToStart,
			ErrorTenantNotBeingRelocated,
			ErrorCannotCreateRoleAssignmentToADeprecatedRole,
			MFLFileNotFound,
			ConfirmationMessageSetComponentState,
			VerboseAdministrativeGroupLinkedToPfdb,
			ConfirmationMessageConnectMailboxValidateOnly,
			ServerAdminLinkEmptyException,
			ConfirmationMessageDisableFederatedOrgId,
			ErrorServerNotE14OrLater,
			ErrorInvalidAuthServerRealm,
			DisableMailForestContactNotAllowed,
			NoSystemProbesFound,
			ErrorRoleAssignmentPolicyNotUnique,
			LogSourceMailboxRemoved,
			FailToAddServerAdminToLocalAdminGroup,
			UMCallAnsweringRuleTransferToWithContext,
			ErrorMailboxFolderNotUnique,
			ReplicationCheckGeneralFail,
			ConfirmationMessageExportRecipientDataProperty,
			ErrorFileIsTooLargeForFingerprint,
			ProgressEmailAddressPolicyAdjustingPriority,
			ConfirmationMessageSetTransportRule,
			VerboseMultiSiteDCContact,
			ErrorUsersNotInSameOrganization,
			TestSearchActiveManager,
			ErrorSimilarResourcePolicyExist,
			VerboseDeletePFProxy,
			FailedToJoinNode,
			VerboseOfflineDatabaseResource,
			MonitoringServiceRequestTimedout,
			ConfirmationMessageSetCalendarNotification,
			ErrorNoAvailableDefaultName,
			MigrationEndpointNotFound,
			GetDbcsRpcQueryAllDone,
			ConfirmationMessageNewGroupMailbox,
			AmInvalidRoleStandaloneServer,
			VerboseRollbackPublicFolderReferralChange,
			ErrorFailToParseLocalLongFullPath,
			ErrorArchiveDatabaseDoesNotMatchUser,
			ErrorNotMsoOrganization,
			WarningSourceServersSkipped,
			SupervisionPoliciesNotFound,
			ErrorArchiveCanNotBeDownVersion,
			ConfirmationMessageRemoveRecipientEnforcementProvisioningPolicy,
			CrossPremiseProbeResponseMatch,
			ServiceReachedStatusDuringWait,
			ErrorNoValidPhones,
			InvalidThumbprintFormat,
			LogSourceRecipient,
			DataClassificationFingerprintsDuplicated,
			EMailAddressNotFound,
			DagNetTaskIsManualOnly,
			DiscoveringAdditionalDomain,
			ISIntegCorruptionFormat,
			ErrorWhileFolderSyncForUpdation,
			IisTasksReadRegistryKeySecurityException,
			WarningInvalidDedicatedMailboxPlanData,
			ErrorOrganizationNotUpgradable,
			ExistingProductConfiguration,
			ErrorPublicFolderReferralServerIsNotMailboxServer,
			ErrorRecoveryItemNotFoundByIdentity,
			DagNetworkDistinctSubnetListError,
			ErrorNewRemoveRoleAssignmentNeedHierarchicalRoleAssignment,
			ErrorResultSizeOutOfRange,
			ErrorVerifyLinkedForest,
			VerboseSelectedTextStream,
			SeederPrepareDbSeedRpcBegin,
			ErrorFolderNotExist,
			TestSearchServerNoMdbs,
			ErrorPropertyTypeNotUnique,
			UnableToGetProcessIdOfService,
			FailedToSaveCorruptServerException,
			CatchAllRecipientNotUnique,
			ErrorDuplicateActiveOrganizationExists,
			InvalidRegex,
			SiteMailboxCreatorSet,
			ErrorReadDatabaseSecurityDescriptor,
			ErrorTeamMailboxCanNotUnLinkSharePointByNonSiteOwner,
			ErrorNotificationPhoneNumberAbsent,
			ErrorFailToCreateExchangeAdministratorsGroup,
			SeedingErrorDirectoryIsFile,
			ErrorFailedToCleanupDatabase,
			InfoCreateE12DSGroup,
			ErrorSetVersion4OabToTiServerWithoutSP3,
			ConfirmationMessageSetThrottlingPolicy,
			VerboseADReferral,
			ErrorCannotChangeLocaleProperty,
			SendConnectorDuplicateSourceServerException,
			InvalidIPAddress,
			UnableToReadDlpPolicy,
			ExceptionCannotDelegateEdgeServerAdmin,
			ConfirmationMessageSetTeamMailbox,
			InitializeServerResponse,
			DagMemberNoDatabases,
			VerboseFailedSetAccessControl,
			ErrorWhileUpdatingBadWordsRules,
			ConfirmationMessageNewMSOFullSyncRequest,
			ErrorTeamMailboxCanNotLinkSharePointByNonSiteOwner,
			ParsingWebRequestorRedirectEndPoint,
			ReportMovedMailboxMorphedToMailUser,
			ErrorCannotAssignRoleToPartnerApp,
			DuplicateTriplet,
			ConfirmRemovalOfCorruptMoveRequest,
			ErrorScopeNotFound,
			ErrorLiveDomainUriNotUnique,
			WarningDistributionListJoinApprovalRequired,
			CasHealthEasCommandFailedWithError,
			VerboseTestUserOrganization,
			ConfirmationMessageResumeDatabaseCopyIdentity,
			CouldNotRemoveMoveRequest,
			ErrorGivingUpWaitingOnMRS,
			DagTaskFixedUpIpResources,
			ErrorRemoveMailboxWithDiscoveryHold,
			SeederAlreadyFailedPrompt,
			CannotFindSchemaAttributeException,
			ConfirmationMessageRemoveRequest,
			DuplicateContentFilterPhrase,
			CasHealthOwaBadHttpResponseStream,
			SearchDuplicateSource,
			ExceptionWebObjectAlreadyExists,
			UserFederatedDomainNotInRemoteOrgRelationship,
			ConfirmationMessageStartComplianceSearch,
			TopologyServiceFailed,
			WarningCannotUpgradeInvalidRoleAssignment,
			VerboseCheckingAgainstPartnerApplicationMetadataUrl,
			ErrorCertificateNotCAPI,
			PopImapErrorUnexpectedValue,
			RcrConfigString,
			CasHealthOwaAuthTypesSupported2,
			ConfirmExportExchangeCertificate,
			InfoCheckRmsVersion,
			ErrorTryingToReadPfx,
			ConfirmationMessageNewMailFlowPartnerConfigWithName,
			TestMailflowServerWithoutMdbs,
			ConfirmationMessageMoveMailboxDatabaseMasterAnyServerSourceServer,
			VerboseDeleteMonitoringMailbox,
			ErrorMoveVersion4OabToTiServerWithoutSP3,
			SmtpConnectivityFailureEvent,
			HeaderValues,
			MailboxSearchIdentityMustBeFullyQualified,
			WritingInformationScript,
			ErrorAddressBookPolicyNotUnique,
			CafeRoleNotInstalled,
			CapabilityDoesNotMatchOthers,
			NewFederationTrustAddAppUri,
			UMCallAnsweringRuleCallerIdCondition,
			ComfirmConnectToMatchingUser,
			ConfirmationMessageAddAttachmentfilterentry,
			ErrorTeamMailboxSendNotifications,
			CertFileNotFound,
			ConfirmationMessageRemoveClientAccessArray,
			ExceptionUserObjectNotFound,
			ErrorThumbprintNotFound,
			InvalidAggregateByType,
			ClientRequestId,
			CreateWkGuidPermissionDeniedException,
			MailboxQuotaValues,
			SetArchivePermissionException,
			VerboseNoAssociatedMRSRequestOnDatabaseCondition,
			WarningOABSourceServerDoesNotExist,
			ErrorChildObjectTypeNotFound,
			CannotSpecifyParameterWithE15OrLaterOab,
			VerboseTestOabFromParameter,
			ErrorIisVersionIsInvalid,
			ConfirmationMessageSuspendRequest,
			FailedDeleteOldDatabaseLogFiles,
			BackSyncObjectExcludedExtended,
			ConfirmationMessageTestSenderId,
			ConfirmationMessageRemoveGlobalAddressList,
			ImportFromPSTShouldImport,
			PAMRPCError,
			FileShareWitnessPathDown,
			ErrorIncorrectInputDag,
			ErrorRedirectionDuplicateDomainName,
			MissingHydratedOffer,
			ReceiveConnectorMappingConflict,
			VerboseUpdatedServiceEndpoint,
			ErrorCouldNotRemoveRoleAssignments,
			TenantNotificationDebugHelpProviderReturnedEmptyUrl,
			ConfirmationMessageTestMAPIConnectivityServer,
			UMRoleNotInstalled,
			ChangesTakeEffectAfterRestartingPopImapService,
			ResponseMessage,
			InfoWarning,
			ConfirmationMessageStartDatabaseAvailabilityGroupADSite,
			ErrorVerifyLinkedGroupForest,
			ConfirmationMessageRemoveManagementRole,
			VerboseRestartWSManAppPool,
			SendConnectorWrongTargetServerRg,
			CasHealthEcpServiceRequestException,
			VerboseSucceededReplicatingObject,
			AmUnknownRole,
			ProvisioningAgentTasksOnlyRunOnCas,
			SetLiveFedDomainReserveResponse,
			AlsSubjectAdminFailure,
			FailedToDeleteE14SearchObjectWhenUpgrade,
			ErrorCertificateNotRSA,
			AppConfigIOException,
			CasHealthErrorPopulatingMailbox,
			WarningOperationOnDBWithJetCircularLogging,
			RcrDatabaseFailoverOfflineLoss,
			ErrorCanNotUpgradePolicyWithMailboxSetting,
			FailedToSortPatches,
			ConfirmationMessageSetClassificationRuleCollection,
			ErrorInvalidArchiveRecipientType,
			WarningChangeOfFederatedIdentitySourceADAttribute,
			ErrorCannotRetrieveServer,
			ErrorServicePlanMailboxPlanInvalidSkuCapability,
			ErrorNonEndUserRoleCannoBeAssignedToPolicy,
			LoadedParameters,
			ElcMdbNotFound,
			ErrorMaxNumberOfCallerIds,
			ConfirmationMessageRemoveManagedFolderMailboxPolicy,
			IllegalResumptionException,
			AdminAuditLogSearchOutOfRangeStartIndex,
			SeederAlreadyCancelledPrompt,
			SchemaVersionDataValidationException,
			ExceptionRunProcessFailed,
			MRSProxyIsRespondingtoPing,
			CannotFindPKConfigFile,
			UMCallAnsweringRuleFindMeWithContextAndWithSecondNumber,
			ConfirmationMessageRemoveELCContentSettings,
			MRSExpectedDiagnosticsElementMissing,
			ConfirmationMessageGetTeamMailboxDiagnostics,
			ErrorFailedToGetDatabaseProcessInfo,
			ErrorMoveRequestIsProtected,
			RemoveDagNeedsZeroServersException,
			ErrorInvalidAuthScheme,
			VerboseIgnoringAssignment,
			WarningLPDirectoryNotFound,
			ErrorCannotMoveLitigationHoldToPreE14,
			ConfirmEnableCertForUM,
			ConfirmationMessageUpdateDistributionGroupMember,
			ErrorAmbiguousRetentionPolicyTagId,
			ErrorInvalidRecipientTypeDetails,
			ErrorRelocationStateRequestedIsNotAllowed,
			WarningSystemAddressListNotFound,
			ErrorServicePlanDoesntAllowHydration,
			VerboseCreatePublicFolderTree,
			NoDomainInTheRemoteOrganizationRelationshipIsFederatedLocally,
			TestSearchErrorEvent,
			VerboseRemovingRoleGroup,
			ServerNotFound,
			ErrorRemoveUserFailed,
			ErrorCouldNotAddGroupMember,
			WarningFailedCreateDirectory,
			ConfirmationMessageRemoveMailboxDatabase,
			MaxDevicesReached,
			ConfirmationMessageRemoveEdgeSyncSendConnector,
			ConfirmationMessageRemoveInboundConnector,
			ConfirmationMessageNewRetentionPolicy,
			DagFswServerNotAccessibleException,
			ErrorParameterInvalidForFederatedTenant,
			RemoveDagServerDatabaseIsReplicatedException,
			WarningSetAdminAuditLogOnPreE15,
			EnableConversationsPreProcessing,
			SetDatabaseRequestedSchemaVersion,
			ConfirmationMessageNewMailboxLinkedWithSyncMailbox,
			ErrorMailboxExceedsTargetQuota,
			UnknownFederationDomainAuthenticationType,
			InformationSqlStatement,
			InvalidLicenseName,
			MailForestContactFound,
			RunCmdletOnSite,
			DeleteVirtualDirectoryFail,
			MobileDeviceLogException,
			ConfirmationMessageSetWorkloadManagementPolicy,
			ConfirmationMessageRemoveAddressBookPolicy,
			CasHealthConfirmTestActiveSyncWithServer,
			TraceCannotCreateXmlReportFile,
			ConfirmationMessageRemoveSyncServiceInstance,
			OutlookProtectionRuleNameIsNotUnique,
			ErrorCanRetargetOnlyQueuedMoves,
			ConfirmationResettingLocalForestAccountPartition,
			WarningClusterNodeNotFoundInDag,
			SetServiceInstanceMapResultFormat,
			ErrorCannotGetDomainStatusFromPartnerSTS,
			CommentsHaveInvalidChars,
			ConfirmationMessageNewManagementRole,
			ConfirmationMessageNewEdgeSyncServiceConfigWithSiteSpecified,
			LogMigrationBeforeApplyRUS,
			ConfirmationMessageSetMalwareFilteringServer,
			NoExchangeRoleInstalled,
			CalendarLogFileDoesNotExist,
			ErrorEmptyForestUrl,
			WarningPossibleDataLossWithGlsRollback,
			VerboseFailedToMemberNameToNetId,
			TPDWithoutPrivateKey,
			ResubmitRequestGenericRpcError,
			CouldNotCreateMSOOnboardingService,
			ConfirmationMessageNewPowerShellVirtualDirectory,
			RegistryKeyDoesNotExist,
			ConfirmationMessageNewSyncGroup,
			ErrorIncompatibleParameters,
			ConfirmationMessageCompleteMigrationBatch,
			BadPublicFoldersParameterException,
			ErrorTenantInLockdown,
			CheckPointNotProgressed,
			ConfirmationMessageRemoveFederationTrust,
			InfoAceNotPresent,
			ConfirmationMessageAuthNewInProgressReplace,
			ErrorArbitrationMbxCrossOrg,
			FailedLoadRegistryKey,
			WarningDismountDatabaseToContinue,
			ConfirmationMessageReleaseQuarantineMessage,
			InfoAceAlreadyPresent,
			MissingMailboxId,
			ConfirmationMessageSetMailboxServer,
			VerboseUpdateDatabaseResource,
			ParameterValueIsAlreadySet,
			FailureToCallAutodiscoverService,
			ClassificationRuleCollectionPatternTooLong,
			VerboseServiceValidatorRequestTrace,
			WarningFailedToDeleteSourceNTAccount,
			ConfirmationMessageEnableInboxRule,
			ConfirmationMessageDisableReplayLag,
			SearchStoppedCannotBeResumed,
			ErrorSecondaryDomainNotFound,
			ConfirmationMonitoringItemNotFound,
			CertFileIsNotPfx,
			ErrorCannotRemoveAllCookies,
			SendConnectorWrongTargetServerRole,
			ErrorRulesSizeOverLimit,
			ErrorTooManyItems,
			ErrorMailboxNotFound,
			ErrorCannotRemoveAccountNamespace,
			ErrorUnableToLogonGroupMailbox,
			AOGroupNotFoundException,
			ConfirmationMessageSetRpcHttp,
			ErrorVerificationCodeSentTooManyTimes,
			ErrorPatternIsTooLong,
			ExchangeSettingsWarningMaximumSize,
			WarningRemovePolicyWithAssociatedUsers,
			FoundConflictingWKObjectException,
			ExForeignForestSGroupNotFoundException,
			ErrorResourceSearchPropertyInvalid,
			MigrationTypeDoesntSupportConnectionSettings,
			CasHealthOwaTestFailed,
			ConfirmationMessageNewWorkloadPolicy,
			ErrorArchiveExceedsTargetQuota,
			VerboseSetAccessControl,
			ErrorWKObjectExists,
			WarningCancelSourceCleanupDueToApplyingPolicyFailed,
			InvalidQueryException,
			DuplicateOrganizationRelationshipDomain,
			ErrorAssigneeSecurityGroupNotFound,
			PartnerFilterMustBeValid,
			GetDbcsOverridingServer,
			MailboxAssistantsServiceNotRunning,
			MigrationMaxConcurrentMigrationsVerificationFailed,
			ConfirmationMessageDisableCmdletExtensionAgent,
			ErrorZeroOrLessValueForShadowRetry,
			ErrorCannotMovePublicFolderMailboxesDownlevel,
			ContainerNotFoundException,
			AceTypeHasUnsupportedValueException,
			MobileDeviceNotExistException,
			CouldNotSelectArchiveDatabase,
			DuplicateAcceptedDomain,
			ErrorPublicFolderUserNotFound,
			ConfirmationMessageNewGls,
			MapiTransactionShortErrorMsgFromExceptionWithInnerException,
			ConfirmationMessageRemoveActiveSyncMailboxPolicy,
			DagFswSharePointsToWrongDirectoryException,
			DataClassificationRequiresHigherServerVersion,
			WarningRetentionPolicyTagNotFoundForApproval,
			ErrorRollbackGlsExpectsPostGlsState,
			ConfirmationMessageSetPartnerApplication,
			InterceptorErrorTimeIntervalInvalid,
			SetServerComponentStateServerUnreachable,
			CalendarDiagnosticLogsNotFound,
			CasHealthPowerShellConnectionUserCredential,
			OwaAttachmentInvalidStringLengthException,
			ClassificationRuleCollectionResourceNotFoundViolation,
			LogSourceAccountRemoved,
			ErrorRemoveArbitrationMailboxWithOABsAssigned,
			InstalledRoles,
			WarningCustomRoleCreatedDuringUpgrade,
			VerboseFoundValidAlternateServiceAccountCredential,
			MigrationRemoteServerTooLongException,
			ErrorEvictLiveIdMemberNotExists,
			SeedingPathErrorException,
			TestMailflowFailed,
			InvalidMonitorIdentity,
			BadDefaultsParameterException,
			ErrorMaxKeyMappings,
			ErrorCertificateAlreadyinPublish,
			ConfirmationMessageCleanMailboxDatabase,
			UnpackedDatacenterRoles,
			CasHealthCalendarCheckError,
			ConfirmationMessageCompleteMoveRequest,
			ConfirmationMessageSetCmdletExtensionAgent,
			ErrorCannotContactServerForCert,
			FormsAuthenticationDeleteMarksIfUnusedCheckMarkAccessDeniedException,
			ErrorChildObjectTypeNotUnique,
			ErrorRoleEntryParameterExistOnChildren,
			ConfirmationMessageNewHostedContentFilterConfig,
			ErrorNotMailboxServer,
			CasHealthShortErrorMsgFromExceptionWithInnerException,
			RecipientFromFirstOrganization,
			VerboseInstallWSManModule,
			ErrorLiveIdDoesNotExist,
			FailedToCheckDiscoveryHoldStatusException,
			ConfirmationMessageEnableMailboxDiscovery,
			VerboseFailedReadObjectFromDC,
			ErrorRemoveOlderVirtualDirectory,
			WarningCloseGroupMemberDepartForNoArbitrationMbx,
			SaveChangesFailedForTraining,
			ConfirmationMessageSetDatabaseAvailabilityGroupNetwork,
			ConfirmationMessageRemoveWorkloadManagementPolicy,
			ConfirmationMessageSetFederatedOrganizationIdentifier1,
			MoveMailboxShouldMove,
			ClassificationRuleCollectionSharingViolationSetOperationVerbose,
			VerboseCreateDirectory,
			ErrorCorruptedPartition,
			IISGeneralCOMException,
			ConfirmationMessageDisableArchive,
			FormsAuthenticationIsEnabledPathNotFoundException,
			ConfirmationMessageNewOfflineAddressBook,
			ErrorMapiHttpAlreadyEnabled,
			InvalidParameterForE12TargetDatabase,
			ErrorInvalidMandatoryParameterForPublicFolderTasks,
			LogMigrationRegistryKeyDefaultValue,
			FailedToDeleteMailboxDatabase,
			ConfirmationMessageRemoveMailuserAndNotLiveId,
			InfoCreatedGroup,
			ErrorInvalidInternalUserId,
			ErrorWebSiteNotExists,
			CopyingFile,
			AutoGroupDepartMessageSubject,
			ErrorInvalidOperationOnAddDBCopyForPublicFolder,
			NewDagServerIsNotMailboxServerException,
			InfoSetObjectVersion,
			VerboseCannotReadObject,
			ErrorParameterValueNotAllowed,
			VerboseUnableToCreateAdminAuditFolder,
			VerboseDoubleWriteADChangeOnDC,
			WarningSharedConfigurationAlreadyExists,
			ServerComponentStateInvalidRequester,
			ErrorParameterRequiredButNotProvisioned,
			ExportDestinationInvalid,
			RegistryAccessServicesKeyDoesNotExistException,
			ConfirmationMessageEnableConfigCustomizations,
			ConfirmationMessageEnableCallAnsweringRule,
			ConfirmationMessageRemoveMailboxIdentityAndLiveId,
			ErrorModifyRoleNeedHierarchicalParentRoleWithoutScopeRestriction,
			PAMCouldNotBeDeterminedException,
			TestSearchGetMapiStore,
			FailedToStartClusSvc,
			DagFswUnableToUpdateWitnessShareException,
			ConfirmationMessageRemoveAuthRedirect,
			ErrorDefaultWebSiteNotExist,
			ConfirmationMessageNewOrganizationNoPath,
			FormsAuthenticationDeleteMarksIfUnusedUnknownCheckErrorException,
			ErrorPasswordIncludesMemberName,
			ErrorVirtualDirectoryADObjectAlreadyExists,
			WarnCertificateWillNotBeUsed,
			ConfirmRemovalOfCorruptRequest,
			ErrorLiveIdDomainTemporarilyUnavailable,
			MsiIsNotInstalled,
			ConfirmationMessageRemoveDefaultELCFolder,
			ConfirmationMessageDisableDistributionGroup,
			ErrorTooManyMailboxesInSingleHold,
			FailedToFindTPDForRefresh,
			ErrorUserIsNotMailBoxEnabled,
			ErrorMailboxInNonMailboxServer,
			ExceptionWhileReadingInputFile,
			ConfirmSharedConfiguration,
			VerboseFindClosestPublicFolderDatabaseFromServer,
			ConfirmationMessageNewFederationTrust,
			ConfirmationMessageNewReceiveConnector,
			TestSearchMapiStoreError,
			GetQueueDigestInvalidFilter,
			ExchangeSettingsInvalidSchema,
			ClassificationRuleCollectionReservedFingerprintRulePackIdViolation,
			ProgressStartClussvc,
			ImportMultiplePSTToOneMailbox,
			OnPremisesOrganizationOutboundConnectorNotExists,
			AccessMismatchRemoteLocal,
			WarningFixTheInvalidRecipientFilterMetadata,
			MsiCouldNotRemoveProduct,
			ErrorServerNotCAS,
			DataClassificationAmbiguousIdentity,
			WarningFswNotPrimaryOrAlternate,
			WarningGeneratingMissingAlias,
			InvalidIdentityTypeForRemoveCmdletException,
			CasHealthAutoDiscoveryBadUri,
			RuleNotFound,
			ServerComponentStateNoLocalOnly,
			IPv6AddressesAreNotAllowedInGatewayIPAddressesId,
			ServerVersionNotSupportedException,
			ErrorMailboxResidesInRDB,
			ErrorInvalidRecipientPreviewFilter,
			ErrorIsUniversalGroupAlready,
			ConfirmationMessageSetEcpVirtualDirectory,
			ErrorRootFolderInvalid,
			WarningServerIsNotInCasRole,
			WarnInvalidCertificateForProtocol,
			ConfirmationMessageSetAddressBookPolicy,
			ErrorCannotBeExOWithoutDatacenter,
			ErrorInvalidPartnerId,
			InterceptorErrorInvalidConditionTypeValue,
			ExceptionLogFileInvalid,
			SmtpConnectivitySuccesses,
			ErrorUserNotInSecurityGroups,
			WarningCmdletIsDeprecated,
			GenericRpcError,
			UnexpectedRoleTypeException,
			DoNotMoveImmediately,
			ErrorDistributionListDepartClosed,
			ConfirmationMessageEnableMailPublicFolder,
			OutlookProviderAlreadyExists,
			InvalidMessageDataClassification,
			LogRunningCommand,
			DagTaskRevertingFsw,
			CustomizedDsnLanguageNotAvailable,
			ConfirmationMessageSetOutlookProvider,
			NodeEvictedAlready,
			CouldNotCreateMsoSyncService,
			MapiTransactionFailedSummary,
			LogMigrationOutlookVersion,
			SuspendSgcUseState,
			ErrorDataClassificationIsInUse,
			ErrorRecipientViewRootDuplicatedUnderScope,
			RpcUnavailable,
			ConfirmationMessageSetMigrationBatch,
			FormsAuthenticationIsEnabledUnknownErrorException,
			ErrorLinkedSidParameterNotAllowed,
			ErrorRemoveNotDisconnectedStoreMailbox,
			TSNotAMailboxServer,
			ErrorMultipleSCTsLinked,
			InvalidVersion,
			CasHealthAutodiscoverIncorrectResult,
			ErrorCannotRemoveMailboxSearchWithMailboxOnHold,
			TransportServerCmdletDeprecated,
			CasHealthWebAppNoVirtualDirectories,
			ErrorInvalidOperationOnDefaultGAL,
			FederationCertificateExpired,
			InvalidIPv4AddressesAreNotAllowedInGatewayIPAddressesId,
			ConfirmationMessageSetMailuserWithWindowsLiveID,
			ConfirmationMessageDisableMailContact,
			ExRBACSaveAddRoleEntry,
			TenantNotificationTestConfirmationPrompt,
			AmMoveRpcRequestedSourceServer,
			ErrorFailedToSetMemberPassword,
			ConfirmationMessageRemoveCompletedRequest,
			RunCmdletOnUser,
			NoSmtpAddressForRecipientId,
			ErrorLastPublicFolderDatabaseWithPreE12,
			CouldNotRemoveCompletedMoveRequest,
			VerboseMailboxDelegateNotExits,
			ConfirmationMessageRemoveTransportRule,
			ErrorCouldNotAddCrossDomainGroupMember,
			ErrorFailedToValidateCertificate,
			ErrorWAAGNotExists,
			UserFederatedDomainDoesNotMatchAccountNamespace,
			ErrorInvalidOperationOnContainer,
			CasHealthOwaAuthFailDetails,
			DagTaskServerWrongOsVersionException,
			ErrorHydrationDisabled,
			VerboseVerifyingRootObject,
			GetFederationInformationTokenIssuerDoesntMatchAny,
			CasHealthDataValidationError,
			FailedToDeletePublicFolderProxy,
			ReportArchiveUpdated,
			DlpPolicyNotSupportedCmdlet,
			ErrorSetPublicFolderMailRecipientGuidLongTermIdNotMatch,
			MtrtMessageSpamNonProvisionedDomain,
			DagTaskCnoNotOnline,
			ErrorSetScopeAddPermission,
			PrintPatchOrderInfo,
			ConfirmationMessageSetSystemMessage,
			ErrorThrottlingPolicyNotUnique,
			DisableWindowsLiveIdSpecifiedWithoutLiveID,
			FailedDocumentsNoResultsServer,
			ErrorMoreThanOneMailboxPlanWithSKUCapability,
			SupportedToolsDataMultipleToolEntries,
			ErrorIncrementalSyncIntervalRange,
			TopologyServiceNoServersReturned,
			AutoTaggingDisabled,
			ErrorElcPolicyNotFound,
			ConfirmationMessageSetMailbox,
			MobileDeviceLogPathInvalid,
			CasHealthWebAppTestStepStarted,
			DagFswNotInitializedException,
			AmMoveRpcRequestedAnyServerSourceServer,
			UsingProbeIdentity,
			ConfirmationMessageNewThrottlingPolicy,
			ConfirmationMessageSetFederationTrust5,
			ClassificationRuleCollectionInvalidCompressedData,
			OutlookProbeIdentityNotFound,
			ErrorDefaultLocaleClassificationDoesNotExist,
			ConfirmationMessageDisableOutlookProtectionRule,
			ErrorRemoveMailboxPlanWithAssociatedRecipents,
			ConfirmationMessageSetFrontendTransportServer,
			GetQueueDigestQuotaExceeded,
			NeedManuallyRemoveEOA,
			ErrorParametersThatMustBeDefinedIfNeitherTemplateNorTemplateDataAreDefined,
			MigrationStartAfterIncorrectState,
			RemoveComplianceSearchConfirmation,
			SeederEndDbSeedRpcBegin,
			LocalFederationConfigurationError,
			ExternalScopeInvalidInDc,
			ErrorApproversNotSet,
			TestProtocolConnectivity,
			FailedToStopClusSvc,
			SendConnectorWrongSourceServerRg,
			MesoContainerNotFoundException,
			VerbosePropertyProblem,
			VerboseValidateScopeAgainstExistingAssignments,
			ErrorServicePlanInconsistent2,
			RemovedDeviceFilter,
			ErrorOrganizationalUnitNotFound,
			GetMsoDiagnosticsLastCommittedCookieBeingUsed,
			ExceptionServiceDoesNotExist,
			ErrorInvalidSortProperty,
			ErrorDagNotUnique,
			RecoveryMailboxDatabaseNotMonitored,
			ErrorConnectorNotTransportRuleScoped,
			ComplianceSearchIsInProgress,
			ErrorRemoveNewerObject,
			InterceptorErrorModifyingNewerVersion,
			ErrorFailedToRetrieveMailboxDatabase,
			WarningForStillSuspended,
			ValueTooLargeException,
			VerboseValidatingAlternateServiceAccountCredential,
			CasHealthPowerShellServiceNotRunning,
			VerboseFixingRecipient,
			SearchSourceTargetTheSame,
			ErrorInvalidModerator,
			DiscoveryMailboxQuotaLimitExceeded,
			ConfirmationMessageSetManagementScope,
			ConfirmationMessageSetUser,
			SetComplianceSearchConfirmation,
			ServerListMustBeValid,
			ErrorSetMailPublicFolderEntryIdNotExist,
			InvalidIdentityException,
			ConfirmationMessageSetPublicFolderIdentity,
			RecipientTypeNotValid,
			WarningChangingUserSuppliedName,
			ErrorMovingOabAlreadyThere,
			ComplianceBindingInvalidRecipientType,
			VerboseDeprecatingRoleBecauseNoEntriesLeft,
			ConfirmationMessageStartProvisioningRequest,
			VerboseRPCConnectionCreated,
			VerboseAllPropertiesAreRead,
			LiveIdAuthenticationFailed,
			NoDomainsDefinedOnOrgRelationship,
			CasActiveSyncServiceProblemMessage,
			ErrorTooManyJournalRules,
			ErrorInvalidFilterForAddressBook,
			ErrorLiveIdAlreadyExists,
			WillSaveResourcePropertySchemaValue,
			SiteRedirectionTemplateVerbose,
			ErrorRemoteArchiveNoStats,
			MtrtMessageMalware,
			VerboseSettingPreferredServer,
			ConfirmationMessageTestMAPIConnectivityDatabase,
			ConfigurationSynchronized,
			BadwordsLengthTooLongId,
			CasHealthTestUserNotAccessible,
			IPv6AddressesAreNotAllowedInInternalServerIPAddressesId,
			DagTaskSleepAfterNodeRemoval,
			TestTeamMailboxSharepointCallUnderOauthSuccess,
			ErrorRemoveNonLinkededUser,
			ConfirmationMessageDisableConversations,
			ConfirmationMessageSetOrganizationRelationship,
			ComponentSection,
			ExceptionRunProcessExitIgnored,
			CasHealthIncorrectHttpResponseCode,
			AuditLogSearchInvalidSearchType,
			messagePassiveCopyUnexpectedSuccessException,
			RegistryAccessSecurityExceptionDelete,
			ErrorAddressBookMailboxPolicyNotFound,
			MissingMandatoryFieldException,
			WarningEnableEnabledRoleAssignment,
			VerboseCheckDatabaseStatus,
			NoLogsFound,
			CutoverMigrationNotAllowed,
			SupervisionListEntryAdded,
			ErrorMaxMembershipLimit,
			ToplogyserviceTopologyVersion,
			TSResolutionFailed,
			ConfirmationMessageNewMailboxWithRemoteArchive,
			DkmProvisioningException,
			MigrationSkipStepNotSupported,
			ConfirmationMessageNewRemoteDomain,
			ConfirmationMessageNewIntraOrganizationConnector,
			TestSearchGetCatalogStatusError,
			ErrorDatabaseHasLocalReplicas,
			ConfirmationMessageNewCountryList,
			VerboseWillStartOrganizationUpgrade,
			ErrorTeamMailboxRemoveWhenActive,
			ErrorGetServerNameFromMailbox,
			ConfirmationMessageDismountDatabase,
			InformationSqlConnection,
			ErrorMailboxFolderNotFound,
			ConfirmationMessageNewWorkloadManagementPolicy,
			ConfirmationMessageNewActiveSyncMailboxDefaultPolicy,
			ParsingFederationMetadata,
			FormsAuthenticationDeleteMarksIfUnusedPathNotFoundException,
			ComAdminComponentInstallFailedException,
			ExceptionCannotGetServiceHandle,
			ErrorRuleXmlTooBig,
			ConfirmationMessageRemoveMobileSyncVirtualDirectory,
			CopyDirectoriesException,
			ErrorOrganizationNotFound,
			ErrorSpecifiedPropertyOfRecoveryMailboxDatabaseCannotChange,
			CasHealthCouldNotLogUserDataCenter,
			ConfirmationMessageSetOabVirtualDirectory,
			ErrorObjectNotUnique,
			ConfirmationMessageAddIPAllowListEntryIPRange,
			ConfirmationMessageNewJournalrule,
			DomainIgnoredBecauseUnableToDiscover,
			CertificateRequestMissingGenerateRequest,
			ConfirmationMessageNewOutlookProvider,
			ScomMayNotBeInstalled,
			VerboseRemovingManagementWebServiceVDir,
			ErrorExchangeConfigurationContainerNotFound,
			AddingUniqueComponent,
			ErrorInvalidMailboxStatisticsFilter,
			ErrorBPARoleNotFound,
			ConfirmationMessageRemoveSharingPolicy,
			DagTaskServerDifferentExchangeVersion,
			TSMinServerVersion,
			VerboseDeleteMDB,
			TaskCanOnlyRunOnDac,
			IgnoringExpiredCertificate,
			ExchangeRecipientNotFound,
			TlsSenderCertificateNameMatchesServiceProviderCertificateId,
			ConfirmationMessageRemoveRetentionPolicyTag,
			ErrorPreferredServerUnavailable,
			ErrorTrustedPublishingDomainNotFound,
			ResettingPolicyIsNotSupported,
			ErrorFailedToQueryActiveServerForDatabase,
			WarningDistributionListDepartApprovalRequired,
			ErrorFailedToConnectToServer,
			ConfirmationMessageSetExchangeSettings,
			OwaInvalidIntegerFieldException,
			AgentNameTooLong,
			ErrorMustWriteToRidMaster,
			RemovedDeviceFilterRule,
			ErrorStringContainsTrailingSpace,
			ReceiveConnectorRoleConflict,
			VerboseServiceValidatorCredential,
			RuleCollectionNotFoundDuringExport,
			GetQueueDigestFailedToConnectTo,
			MailFlowPartnerNotExists,
			MoveMailboxDatabaseOffline,
			AlsEmailBodyEndDate,
			ConfirmationMessageTestArchiveConnectivityIdentity,
			ExtensionNotPST,
			CasHealthWebAppSendingRequest,
			ErrorMoveOabToNoMailboxServer,
			MoveMailboxUnexpectedReportingError,
			TransportServiceProblemMessage,
			ErrorMobileMailboxPolicyNotFound,
			ErrorSipUriInNonSipDialPlan,
			RecipientTypeInvalidException,
			ErrorInvalidExtension,
			SetCurrentOrganizationConfirmation,
			ErrorUserOrphaned,
			ErrorAcceptedDomainsWithSubdomains,
			ErrorAdminAuditLogConfig,
			ErrorOabVirtualDirectoryADObjectAlreadyExists,
			ExceptionWebObjectNotFound,
			ErrorRemoveArbitrationMailbox,
			ProtocolTransactionsFailed,
			ConfirmationMessageDisableMailboxQuarantine,
			RegistryAccessCouldNotCreateKeyException,
			InstallFreeBusyFolderAlreadyExistsInDatabase,
			ExServerSGroupLinkNotSetException,
			ErrorNoE12AttributeFound,
			MailboxSearchScopeException,
			ConfirmationMessageUpdateDatabaseCopyCancel,
			FailedMailboxQuarantine,
			ConfirmationMessageRemovePowerShellVirtualDirectory,
			NoneValidationDivergenceMustBeRetriable,
			ErrorCleanupRequestedNoRollback,
			ComplianceBindingNotFound,
			ErrorSupervisionTagNotValid,
			CreateMailboxSessionDetail,
			InvalidDlpPolicy,
			SharedConfigurationInfoNotPresent,
			ExchVirtualDirectoryCannotFindIdentity,
			WarningDisableDisabledRoleAssignment,
			ResumeSgcRpcRequest,
			USGContainerNotFoundException,
			WarningClientAccessArrayFqdnChanged,
			ErrorUnknownRole,
			DagTaskUpdatingAdDagMembership,
			ErrorInboundConnectorAlreadyExists,
			ErrorReadingServiceState,
			AIMDBWatermarksAreTooLow,
			CreateVirtualDirectoryADObjectFailure,
			ErrorTenantRelocationInProgress,
			ErrorPasswordBlank,
			NeedRemoveCopyLogFileManuallyAfterCopyDisabledRcr,
			AtatchmentExtensionMatchesWordsParameterContainsWordsThatStartWithDot,
			ConfirmationMessageDisableRemoteArchive,
			ConfirmSearchMailboxTask,
			CasHealthWebAppLiveIdResponseReceived,
			LogExsetdataReinstallingAtom,
			MemberAlreadyExistsException,
			ErrorAlsTooManyLogResults,
			SmtpConnectivityIncompleteEvent,
			ProtocolLogSubject,
			MtrtMessageRecieve,
			CannotBeBothValidationDivergenceAndTenantWideDivergence,
			ExchangeUpgradeBucketVersionsAreEqual,
			ErrorArchiveUserVersionTooOld,
			RestoreNeedsWitnessServer,
			ErrorSiteNotUnique,
			ConfirmationMessageRemoveOrganization,
			CasHealthCalendarResponseError,
			ConfirmationMessageRemoveFailedMSOSyncObject,
			CasHealthOwaTestPassed,
			ClassificationRuleCollectionIncorrectNumberOfDefaultInRuleResources,
			VerboseBuildAutoDiscoverUrl,
			ErrorCloudArchiveNeedsTargetIsArchiveSwitchForRestore,
			ErrorInvalidArbitrationMailbox,
			ErrorCannotMoveToTargetDatabaseAsConstraintsAreNotMet,
			ErrorRecipientViewRootNotFound,
			AppcmdNotFoundInPath,
			CrossPremiseProbeNdred,
			OutputDirectoryNotExist,
			TenantServiceInstanceNotSet,
			ConfirmationMessageNewMoveRequest,
			WarningNonZeroItemLimitMove,
			VerboseSettingViewEntireForest,
			AddDatabaseCopyNewCopyMustBeInDagException,
			ErrorBasicAndLiveIdBasicNotAllowedVDir,
			Error_InvalidLegacyRegionCode,
			CasHealthOwaErrorPageExceptionMessage,
			ConfirmationMessageRemoveCallAnsweringRule,
			AIMDBLastEventPollingThreadHung,
			ServiceHealthWmiFailure,
			ExchangeSettingsNotFoundForGroup,
			VerboseFoundAssigneeInConfigNC,
			ErrorDuplicatePartnerApplication,
			ADDUMInvalidLanguagePack,
			ErrorCannotRemoveUnorphanedMoveRequest,
			SetArbitrationMailboxConfirmationMessage,
			ConfirmationMessageStopDatabaseAvailabilityGroupServer,
			AssemblyFileNotExist,
			LanguagePackPerfCounterDeleteError,
			FailedBecauseofDefaultAdministrativeGroupNotFoundException,
			VerboseDeleteDBCopy,
			WebProxy,
			ServerNamesMustBeValid,
			ErrorCannotMoveDiscoveryMailboxesCrossForest,
			ErrorNotE14Server,
			MobileDevicePolicyApplicationListTooLong,
			ErrorManagedByAlreadyExisted,
			SeederAlreadyCompletedPrompt,
			InvalidCharacterInScriptFileName,
			ServerSchemaVersionRange,
			ErrorRemovedMailboxNotUnique,
			ErrorWillNotPerformOnInheritedAccessRight,
			MailboxSearchIsInProgress,
			RemoveLiveFedUriReserveRequest,
			MsiCouldNotGetProdcutProperty,
			VerboseCreatingRoleAssignment,
			ConfirmationMessageNewDatabaseAvailabilityGroupNetwork,
			WarningInvalidParameterOrModifiedPropertyInAdminAuditLog,
			ConfirmationMessageUploadUserPhoto,
			ConfirmationMessageRemovePublicFolderClientPermission,
			SendConnectorUndefinedServerRg,
			ExportMigrationBatchStartingRowIndexOutOfBoundException,
			FailedDocumentsResultsDatabase,
			ConfirmationMessageNewSyncRequest,
			messageDataCorruptionException,
			OnPremisesOrganizationInboundConnectorNotUnique,
			IisTasksCouldNotFindSetupRegistryValue,
			ConfirmationMessageSetRMSTPD,
			AlsEmailBodySubmitted,
			DagMemberNoDatabasesString,
			ErrorArchiveRecoveryArchiveNotFoundInStore,
			InterceptorErrorExpireTimePassed,
			ErrorExchangeUpgradeBucketNotUnique,
			ErrorTargetMailboxNotFound,
			ConfirmationMessageRecoveringSoftDeletedObject,
			FailedToReEnrollTPD,
			ErrorMailboxPlanNotFound,
			ServerDatabaseAndPartnerScopesAreOnlyAllowedInTopOrg,
			ErrorWMIException2,
			ConfirmationMessageNewAddressList,
			ExportNothingDeleteOnlyShouldExport,
			ADInitializationException,
			ErrorRecipientDoesNotHaveSpokenName,
			VerboseAddWSManConfigSection,
			WarningInvalidRuleCollectionADObject,
			PreviousQueryTime,
			ComAdminUnableToCreateApplicationException,
			EdgeSubscriptionRequiresCAPICert,
			ErrorDefaultPolicyCannotHaveRule,
			VerboseTestUserIdentity,
			ScopeIsNotAllowedForRole,
			ConfirmationMessageSetIPAllowListProvider,
			ResumeSgcUseRpc,
			HostedSGContainerNotFoundException,
			VerboseRestoreIISConfig,
			ErrorTeamMailFailedUnlinkSharePointSite,
			CasHealthWebAppSomeTransactionsFailed,
			ErrorFailedToMountReplicatedDbWithMissingEdbFile,
			ConfirmationMessageUpdateServicePlan,
			TowsDomainNotSsl,
			ErrorConnectSystemMailbox,
			VerboseNoAssociatedUserMailboxOnDatabaseCondition,
			ErrorInvalidEndpointParameter,
			FederationCertificateHasNoPrivateKey,
			InterceptorErrorCustomResponseCodeInvalid,
			VerboseFixingVersion,
			StopDagFailedException,
			CannotLocateServer,
			MailboxServerNotHostingMdbException,
			InternalErrorException,
			WarningJobIsPoisoned,
			VerboseOABVdirFound,
			TargetSharingEprNotSet,
			MtrtMessageTransportRule,
			ConfirmationMessageRemoveMalwareFilterConfig,
			RemoveADServerMetadataServerNotFoundNative,
			RemovingPackageByProductCode,
			TestRHUseCopyStatusRpc,
			DisableConversationsRunning,
			DuplicateTPDKeyId,
			ConfirmationMessageNewEdgeSubscriptionWarnConfigObjectsWillBeDeleted,
			ConfirmationMessageNewInterceptorRule,
			ErrorE14TenantRulesNeedUpdateBeforeMigratingToE15,
			ConfirmationMessageSetMailboxFolderPermission,
			VerboseSetScopeValidateNewScopedAssignment,
			ErrorDlpPolicyTemplateAlreadyInstalled,
			ConfirmationMessageUpdateEmailAddressPolicy,
			ConfirmationMessageRemoveDatabaseAvailabilityGroupNetwork,
			MRSDiagnosticXmlParsingError,
			InvalidOrganizationGuid,
			VerboseMailboxDelegateSkipNotADUser,
			ErrorRecipientNotUnique,
			InPlaceHoldScopeException,
			ConfirmationMessageSetEdgeSyncEhfConnector,
			ConfirmationMessageAddAdminAuditLog,
			DurationShouldBeLessThan1Year,
			WarningSetMailboxSingleItemRecoveryDelay,
			MailboxReplicationServiceNotScanningForJobs,
			ErrorInvalidTenantGlsRecord,
			ErrorRecipientInSentToConditionCannotBeDistributionGroup,
			RestoreMailboxNotRecoveryDatabase,
			SchemaImportProcessFailure,
			GetFederationInformationShouldUseUnsecureRedirect,
			InvalidKeySize,
			VerboseDomainControllerIsNotGlobalCatelog,
			ConfirmationMessageRestoreDatabaseAvailabilityGroupADSite,
			VerboseDefaultOABIsOlderThanVersionE12,
			ErrorCannotDeleteGroupRoleAssignmentConstraint,
			ConfirmationMessageRemovePolicyTipConfig,
			VerboseCreatingChildVDir,
			ErrorObjectAlreadyExists,
			InvalidWKObjectTargetException,
			RegistryKeyNotFound,
			GlobalLocatorServiceExceptionThrown,
			ErrorNoGlobalGatalogFound,
			ClassificationRuleCollectionNonUniqueLangCodesInRuleDescription,
			ErrorMaxParameterLengthExceeded,
			ConfirmationChangePartitionTrust,
			ErrorADTopologyServiceNotAvailable,
			DagFswServerNotAccessibleToDeleteFswException,
			ErrorPermissionCheckFailure,
			ErrorUnknownAccessRights,
			FolderNameInvalidPathChars,
			InvalidAgentName,
			ConfirmationMessageEnableMailboxQuarantine,
			ConfirmationMessageRemoveJournalrule,
			TowsXForest,
			OwaAttachmentFileTypeInvalidCharacterException,
			FailedToRetrieveFederationMetadata,
			ConfirmationMessageRemoveActiveSyncDeviceClass,
			ConfirmationMessageRemoveADPermissionAccessRights,
			ErrorVdirNotExisted,
			ErrorUserOrSecurityGroupNotUnique,
			MailboxNotJunkRuleCapable,
			ServiceFailedToStop,
			ErrorVerificationCodeUnmatch,
			AgentLogNoLogsAtLocation,
			CasHealthOwaGetLogonPageStart,
			DagTaskNodeNotFoundTryConfigOnlyException,
			RunningAlwaysToRunComponent,
			NoPermissionToReadFile,
			ExchangeUpgradeBucketNotEnoughCapacity,
			VerboseRemovingRoleAssignment,
			ConfirmationMessageSetCountryList,
			ErrorDisableArbitrationMailboxWithOABsAssigned,
			VerboseResetAdministrativeGroup,
			ErrorMailboxDatabaseNotOnE14Sp1Server,
			AllAlternateServiceAccountCredentialsAreInvalidOnCleanup,
			TestSearchRunning,
			EnableConversationsProcessingConversations,
			ErrorMailboxNotUnique,
			ErrorCannotUpdateLegacyMailbox,
			RegistryValueMissingOrInvalidException,
			FailedToDeSerializeImportedTrustedPublishingDomain,
			TenantAlreadyHasMigrationDifferentProtocol,
			ErrorMailuserWithMultipleJournalArchive,
			ErrorUserOrContactNotFound,
			ConfirmationMessageNewDatabaseAvailabilityGroupConfiguration,
			CheckReportingServerDatabaseParameters,
			ErrorNoAutoGroupApprovalApplicationInOrg,
			WaitingForClusterServiceToStart,
			WarningApplyingTransitionWhileRelocationStatusNotReachedStateRequested,
			SeederCancelDbSeedRpcFailedException,
			ConfirmationMessageSetManagementRoleEntry,
			MailboxIsDownlevel,
			ConfirmationMessageNewGlobalAddressList,
			MoveFailedValidation,
			ErrorMoveActiveCopyNotFoundException,
			ExpirationTimeTooSoon,
			ConfirmationMessageNewRBACDefaultPolicy,
			RoleTaskCount,
			ErrorCannotFindDCForDomain,
			VerboseCheckLogFileExistingInPath,
			AlsEmailBodyStartDate,
			SearchCompletedCannotBeResumed,
			ErrorNoRemoteGlobalCatalogSettingForLocalMove,
			VerboseDefaultOABFound,
			InfoPreLIndividual,
			OnPremisesOrganizationOrganizationRelationshipNotExists,
			InvalidIntegrityCheckJobIdentity,
			ErrorAutomaticProvisioningFailedToFindDatabase,
			ErrorPartitionNotEnabledForProvisioning,
			RequiredDecryptionCertificate,
			ConfirmationMessageRemoveUser,
			InvalidReportingStartDate,
			ErrorReHomeTargetDatabaseLocationNotFound,
			GetQueueDigestSiteNotFound,
			ConfirmationMessageNewTopLevelManagementRole,
			PopImapSearchForTestMsg,
			ErrorDlpPolicyNotFound,
			ConfirmationMessageDisableTransportRule,
			LookupExtendedRightFailedException,
			ErrorRecipientViewRootNotFoundUnderScope,
			ErrorCannotChangeMailboxOutOfWriteScope,
			ConfirmationMessageRemoveDelegate,
			ErrorMailboxServerNotUnique,
			LogMigrationAfterApplyRUS,
			ErrorCannotCreateRoleAcrossOrganizations,
			ErrorAuthNewCertificateExpire,
			ExchangeCertificateUpdatedForUM,
			UnableToRemoveUserPhotoException,
			ErrorUnsupportedAssignmentMethod,
			ErrorGroupMembersCannotContainItself,
			ErrorPasswordTooShort,
			ErrorRequestIsProtected,
			ConfirmationMessageSetFederationTrust1,
			UserFederatedDomainInMultipleRemoteOrgRelationship,
			ConfirmationMessageAddMailboxFolderPermission,
			InfoWroteObjectToDC,
			ErrorOwaMailboxPolicyNotFound,
			NewFederationTrustSuccessAppId,
			ErrorCannotUpdateRecipientOfDomain,
			MapiTransactionDiagnosticStoreStateCheckFailure,
			ErrorDbCopyHostServerInvalid,
			ErrorInvalidMoveRequest,
			ConfirmationMessageRemoveMailContact,
			ConfirmationMessageStartMsoFullSync,
			ExceptionParameterSourceForestGlobalCatalog,
			ConfirmationMessageSetExchangeAssistanceId,
			OverrideNotFound,
			CreateUsgPermissionDeniedException,
			VerboseSettingWriteShadowProperties,
			ConfirmationMessageUpdateFDS,
			ErrorIISPathInvalid,
			CasHealthWebAppOrphanVirtualDirectory,
			ErrorOriginalEdbFilePathMissed,
			ErrorCannotCleanupSecondaryDomain,
			ErrorRemoveMailboxWithLitigationHold,
			ErrorCannotSetToOldClientAccessArray,
			ErrorUnableToUpdateGroupMailbox,
			ErrorNotActiveOrganization,
			ExceptionOccured,
			ErrorAssigneeComputerNotFound,
			ExportingMailbox,
			ConfirmationMessageAddRoleGroupMember,
			ErrorServicePlanDoesNotSupportPilot,
			ConfirmationMessageRemoveHostedContentFilterRule,
			ArchiveDatabaseDifferentFromRawValueError,
			ExportMailboxDiagnosticLogsComponentNotFound,
			TestMailflowSucceededNoDatabaseOnTargetServer,
			DirectoryMustBeEmpty,
			MailboxDatabaseCasImap4CasPop3CasWebServicesServiceProblemMessage,
			ConfirmationMessageNewSyncUser,
			SuspendSgcRpcRequest,
			ConfirmationMessageRemoveRBACPolicy,
			ErrorArrayRemovalMembership,
			AceIsUnsupportedTypeException,
			InvalidDateParameterException,
			ErrorSupervisionEntryNotPresent,
			DomainNotReachableException,
			ErrorNoArchiveForTeamMailbox,
			UnSupportedUMLanguageException,
			ErrorUnableToReleaseDomain,
			ErrorActivateOnServerMustbeSpecifiedIfSkipChecksRequested,
			ConfirmationMessageRemoveOwaVirtualDirectory,
			WarningMailboxFolderPermissionUnchanged,
			SetPublicFolderMailboxRehomeDatabaseConfirmationMessage,
			AmbiguousOutlookProbeIdentity,
			ProtocolConnectivityScenario,
			RuleVersionIncompatible,
			GetQueueDigestFailedToRetrieveADTopology,
			ConfirmationMessageSetMservEntry,
			ExchangeTracingProviderInstallFailed,
			ExceptionLogEntryLineInvalidFile,
			GetDagHealthInfoRequestTimedOut,
			VerboseUsingAssignmentAsTemplate,
			ErrorCreateRoomListSecurityGroup,
			ErrorCannotForceRusResetConfiguration,
			ErrorSpecifiedMailboxShouldBeAuditLogMailbox,
			SendConnectorDuplicateTargetServerException,
			ErrorFailedToRestoreDatabaseStatus,
			WarningTooManyDefaultGALs,
			InvalidSubscription,
			InvalidRuleSearchFilter,
			ConfirmationMessageAddIPBlockListEntryIPAddress,
			OutlookProtectionRuleRmsTemplateNotUnique,
			ConfirmationMessageNewRetentionTag,
			ConfirmationMessageDisableMailbox,
			ConfirmationMessageRemoveMailboxIdentity,
			ErrorUnsupportedRecipientScopeType,
			ConfirmRemoveIndexEntryMissingADData,
			ErrorTeamMailboxChangeByNonMember,
			FailedToGetLogs,
			WarningMultipleStreamForFingerprint,
			WarningNoMonitoringTenant,
			ConfirmationMessageSetAutoTagging,
			ErrorTenantRetentionTagLimitReached,
			ConfirmationMessageMailboxSpellingConfiguration,
			ErrorScopeExclusive,
			VerboseSetScopeValidateRemoveOriginalScopedAssignment,
			VerboseRemoveWorkloadManagementPolicy,
			ErrorSimilarWorkloadPolicyExist,
			DagFswInsufficientPermissionsToDeleteFswException,
			ConfirmationMessageSetRoleGroup,
			ConfirmationTurnOffLitigationHold,
			ConfirmationMessageSetHostedConnectionFilterRule,
			CasHealthEcpTestWebService,
			MigrationUserLimitExceeded,
			CasHealthOwaHttpGetNonOkayForPing,
			ConfirmationMessageDisableRpcHttp,
			ErrorIncrementalMergesRequireSuspendWhenReadyToComplete,
			ErrorFailedToMoveDatabaseSystemFiles,
			WritableServerNotFound,
			AddAccessRuleCryptographic,
			ErrorCannotRetargetArchiveForPrimaryOnlyMoves,
			ErrorCannotDeleteReplayState,
			InvalidRecipientForModerationAction,
			ErrorFolderFilterInvalid,
			TestSearchADError,
			SeederServerLevelBeginCalled,
			ErrorEdbFilePathOccupiedByDirectory,
			ErrorAcceptedDomainsInvalidType,
			messageMailboxNotFoundException,
			EdgeAndHubSharingSameDirectTrustCertNotAllowed,
			FailedToReadDatabaseSchemaVersionInformationForServer,
			IncompleteParameterGroup,
			ConfirmationMessageRemoveHostedConnectionFilterPolicy,
			ErrorInvalidEapSetPriority,
			ConfirmationMessageDisableMalwareFilterRule,
			CookieVersionUnsupportedException,
			DagTaskClusteringShouldBeEnabledException,
			InfoGetUL,
			UMCallAnsweringRuleScheduleStatus,
			ErrorNotSupportedFolderClass,
			MoreThanOneObjects,
			ErrorTestMailboxPasswordNotFound,
			IisUtilityWebObjectNotCreatedException,
			ClassificationRuleCollectionSharingViolationRemoveOperationVerbose,
			ConstraintUpgrade,
			ConfirmationMessageEnableRemoteMailbox,
			OwaFbaConfigurationPublicTimeoutMustBeLessThanOrEqualToPrivateTimeoutException,
			ErrorOrgsStillUsingThisTrust,
			ErrorWinRMCmdNotFound,
			WarningFswNotFound,
			ErrorSecondaryPartitionNotEnabledForProvisioning,
			ErrorLiveIdError,
			ConversationsItemWithoutConversationId,
			ErrorSetTeamMailboxUserPermissions,
			ErrorAuthSchemeExists,
			ProcessStandardOutput,
			ErrorCannotRetargetOutboundMoves,
			SmtpConnectivitySuccessEvent,
			DagTaskClusterNameIsNotDagNameException,
			ConfirmationMessageNewRemoteAccountPolicy,
			AdminAuditLogsLocationNotFound,
			ErrorMailboxIsConnected,
			ErrorDefaultDomainNotFound,
			VerboseReadADSecurityDescriptor,
			InvalidIntegerFieldException,
			ConfirmationMessageSetSyncConfig,
			ErrorEntryNotInRecipientOrg,
			MemberNotFoundException,
			VerboseResetRecoveryDatabase,
			ErrorExchangeAdministratorsGroupNotFound,
			ConfirmationMessageConnectMailboxResource,
			DomainIsParameterInvalid,
			InvalidUMProxyAddressException,
			ConfirmationMessageSetOrganization,
			ErrorTenantRetentionPolicyLimitReached,
			ConfirmationMessageRemoveMobileMailboxPolicy,
			ErrorUserNotUnique,
			ErrorEmptyManagementSiteLink,
			InvalidArgumentForServerRoleException,
			ConfirmationMessageEnableJournalrule,
			ConfirmationMessageRemoveRoleGroup,
			ConfirmationMessageSetThrottlingPolicyAssociationToNull,
			WarningMonitoringTenantNotActive,
			SmtpConnectivityEndPointResult,
			ClassificationRuleCollectionNumberExceedLimit,
			ExRBACSaveRemoveRoleEntry,
			UMCallAnsweringRuleFindMeWithoutContext,
			VerboseFailedRemoveGalDNInExchangeContainer,
			ClassificationRuleCollectionNonUniqueLangCodesInRuleName,
			ConfirmationMessageRestoreDatabaseAvailabilityGroup,
			RemoveOwaVirtualDirectoryCannotDisambiguateException,
			ConfirmationMessageClearMobileDevice,
			ErrorScopeOutOfRoleScope,
			CannotEditLegacySearchObjectWithoutUpgrade,
			WarningNewAdminAuditLogSearchOnPreR5,
			ConfirmationMessageRemoveHostedContentFilterConfig,
			ErrorNullParameter,
			AlsSubjectAdmin,
			ConfirmationMessageNewEmailAddressPolicyAllTemplatesWithPrecannedFilter,
			ErrorFailedToCreateExchangeOabFolder,
			ErrorEmailTextBig,
			ExceptionLogEntryLineInvalid,
			ConfirmationMessageSetFederatedDomain,
			WarningShouldWriteToRidMaster,
			ConflictingAcceptedDomain,
			InterceptorConfirmEntireForestRule,
			GenericError,
			ConfirmationMessageRemoveMailboxDatabaseCopy,
			TaskNotSupportedOnVersionException,
			ConfirmationMessageNewSystemMessageDsn,
			EnableConversationsRunning,
			InfoIsNotMemberOfGroup,
			ErrorNoCASServersInSite,
			ExceptionWhileWritingOutputFile,
			StandaloneMailboxString,
			ErrorDuringTaskExecution,
			ErrorOnlyOneProvisioningPolicyAllowed,
			ErrorSetGroupRoleAssignment,
			ConfirmationMessageEnableLiveId,
			ErrorPublicFolderReferralServerHasNoPublicFolderDatabase,
			ErrorConflictingRestrictionParameters,
			VerboseRemovingRoleAssignmentPolicy,
			ErrorIndividualRecipientNeeded,
			ErrorWrongRoleAssignmentUserType,
			MsiCouldNotRemoveProductDetailed,
			TenantScopedInboundConnectorRequiredForCMCConnector,
			CorruptRuleCollection,
			RequestAlreadySuspended,
			ErrorTargetPartitionHasTenantWithSameId,
			ConfirmationMessageMailboxCalendarFolder,
			InvalidAdSite,
			ErrorTenantRelocationNotAllowed,
			CasHealthShortErrorMsgFromException,
			ConfirmationMessageSetMailContact,
			ConfirmRetentionPolicyAllowed,
			FailedToDeleteTempEdbFile,
			UnableToAddCertificateToRootStore,
			ExceptionExsetdataGetMessageError,
			WarningOabSiteFolderCheckNotRun,
			ConfirmationMessageAddDistributionGroupMember,
			ErrorResourceRoomOrEquipmentOnly,
			OnlineIsIntegQueryJobException,
			ConfirmationMessageSetRequest,
			WarningParametersIgnored,
			RemovingIndexEntry,
			ProtocolSettingsFullDetails,
			WarningCannotUpgradeRole,
			CasConnectivityTaskTimeout,
			ErrorInvalidAddOperationOnDBCopyForCircularLoggingEnabledDB,
			ConfirmationMessageNewMailboxRestoreRequest,
			ErrorInvalidOperationOnMoveMasterForPublicFolder,
			WarningLinkingWLMPolicyToLocalServerFailed,
			ErrorCannotStartPilotFOrOrgBeingUpgraded,
			SearchingForCertificateBySubject,
			ConfirmationMessageRestoreDetailsTemplate,
			ErrorCannotUpdateInvalidRecipient,
			VerificationOfRemoteOrganizationRelationshipFailed,
			CasHealthTestUserInDataCenterNotAccessible,
			ConfirmationMessageSetMessageClassification,
			ErrorFileNotFound,
			ErrorRemoveMailboxIsJournalReportNdrTo,
			ErrorInvalidFilterForLowestEap,
			IPListProviderNameExists,
			ErrorRoleEntryNotExistOnParent,
			ConfirmationMessageStopMailboxSearch,
			WarningSearchAdminAuditLogOnPreR5,
			WarningRetentionTagIdChange,
			TestSearchCreateMessage,
			SgcFailedToSuspendRpc,
			ErrorSupervisionEntryAlreadyPresent,
			WrongNumberOfTokens,
			TTNameWithNonTTServiceplan,
			WritableDatabaseNotUnique,
			ErrorInvalidFilterForDefaultGlobalAddressList,
			ConfirmationMessageSetOfflineAddressBook,
			ErrorNoMailboxPlanWithSKUCapability,
			MobileDeviceLogPath,
			PerfCounterDefinition,
			CasHealthWebServicesException,
			OnPremisesOrganizationOrganizationRelationshipNotUnique,
			CasHealthCouldNotLogUserDataCenterNoDetailedInfo,
			ConfirmationMessageStopMigrationBatch,
			OriginalUriVerbose,
			PromptFileNotFoundException,
			ExceptionTargetMailboxNotFound,
			IdentityWasNotInValidFormat,
			CannotStartRunningSearch,
			ErrorManagedMemberNotExists,
			MonitoringItemAlreadyHasGlobalOverride,
			ErrorReadingUpdatedUserFromAD,
			CasHealthTestUserOnIncorrectServer,
			CrossPremiseServerNotSelected,
			ErrorRemovedMailboxCannotBeUsedWithDatabaseParameter,
			ConfirmationMessageNewDynamicDistributionGroupCustomFilter,
			ServiceNotInstalled,
			MultipleDefaultPoliciesExist,
			ConfirmationMessageNewPublicFolderMailboxMigrationRequest,
			TestSearchCIIsDisabled,
			SafeRecipientsNotUpdated,
			InstructResetCredentials,
			ErrorExchangeConfigurationContainerNotUnique,
			VerboseArchiveNotExistInStore,
			ErrorAmbiguousElcFolderId,
			SendConnectorWrongSourceServerRole,
			ClassificationRuleCollectionFingerprintsExceedLimit,
			ErrorInvalidAddOperationDatabaseIsNotMounted,
			ConfirmationMessageRemoveTeamMailboxProvisioningPolicy,
			RequestingFederationMetadataFromEndPoint,
			VerboseDeleteFile,
			MRSProxyPingSkipped,
			StampExistingResponsePassThroughOnVirtualDirectoryFailure,
			ConfirmationMessageNewPublicFolder,
			ConfirmationMessageImportRecipientDataProperty,
			ErrorPreE12TargetConfigurationOnly,
			ConfirmationMessageAddRecipientPermission,
			RegistryAccessSecurityExceptionWrite,
			CasHealthWebAppRequestException,
			MoveMailboxShouldMoveE14ToLowerVersion,
			TlsSenderCertificateNameMatchesFfoFDSmtpCertificateId,
			PerfCounterFileInUse,
			ErrorFailToDeleteDueToSubFolders,
			ErrorPrimaryTargetIsNotAnMEU,
			EtrHasRmsAction,
			ErrorSubmitCommandInvalid,
			ConfirmationMessageNewRoleGroup,
			DagTaskRemovingNodeToCluster,
			WarningEdbFileLocationNotExists,
			RequestNotSuspended,
			InvalidForeignForestGroupException,
			VerboseServiceValidatorResponseTrace,
			ElcUserConfigurationException,
			ErrorTenantNotInActiveOrgState,
			MoveMailboxConfigurationOnlyShouldMove,
			ConfirmationMessageEnableMailboxLinkedAndResource,
			ErrorFailedToGetDatabaseStatus,
			ErrorCannotModifyCompletedRequest,
			ErrorMobileMailboxPolicyNotUnique,
			VerboseCheckDirectoryExistenceCondition,
			ErrorBadEmailAddressTemplate,
			MismatchedUser,
			AuditLogSearchNonUniqueArbitrationMailbox,
			RemoveLiveFedDomainReserveRequest,
			ConfirmationMessageNewRoutingGroupConnector,
			ErrorSiteNotFound,
			ErrorUniversalGroupCannotHaveLocalGroup,
			ErrorExternalEmailAddressNotSmtpAddress,
			ErrorTeamMailboxTooManyOwnersAndMembers,
			DataClassificationFingerprintsDescriptionMissing,
			ErrorPSTFileIsDirectory,
			ConfirmManagedFolderMailboxPolicyAllowed,
			MailFlowPartnerNotUnique,
			FailedToForceCleanupNode,
			ClassificationRuleCollectionCustomTermsCountExceedLimit,
			ErrorInvalidServerLegacyDistinguishName,
			ConfirmationMessageRemoveReceiveConnector,
			GetFederationInformationTokenIssuerDoesntMatch,
			InterceptorWarningArchivedItemsLifeTime,
			ConfirmationMessageRemoveAcceptedDomain,
			ParameterNotAllowedWithTopLevelRole,
			CasHealthWebAppLiveIdSendingRequest,
			VerboseFixingObjectsUnderRootIdFilter,
			IisUtilityCannotDisambiguateWebSiteException,
			GetMsoDiagnosticsProgressBatch,
			ErrorTooManyTransportRules,
			ConfirmationMessageEnableMailboxResource,
			ErrorRelocationStateRequestedIsTooLow,
			ExchangeSettingsDefaultScopeNotFound,
			ErrorWindowsLiveIdRequired,
			MesoVersionInvalidException,
			ErrorAutoDiscoverValidatorRequiresRedirection,
			ExecutingScriptNonFatal,
			PSTExportComplete,
			ErrorNameMustBeUniquePerMailbox,
			WritableServerNotUnique,
			ErrorCannotFindFingerprintDataClassification,
			WarningCannotGetGlsTenantFromOrgId,
			ServerConfigurationException,
			UMCallAnsweringRuleFindMeWithoutContextWithSecondNumber,
			TestSearchCreateTestFolderError,
			ConfirmationMessageRemoveMoveRequest,
			ErrorInvalidBatchParameter,
			ConfirmationMessageRemoveMailboxPermanentAndLiveId,
			ConfirmationMessageExportMigrationReport,
			ConfirmationMessageStopDatabaseAvailabilityGroupADSite,
			ConfirmationMessageAuthNewDateTooShort,
			ErrorPathNotUniqueAmongExistingDbCopies,
			ErrorSharingPolicyNotFound,
			RmsSharedIdentityBeingLinkedToComputer,
			ConfirmationMessageAddMailboxPermissionOwner,
			ErrorNoAuditLogForArchive,
			ConfirmationMessageRemoveManagementRoleEntry,
			SupportedToolsDataInvalidToolVersionRange,
			ErrorWebsiteAmbiguousInIIS,
			ErrorCannotSeparatePrimaryFromArchiveBecauseServerIsDownlevel,
			ConfirmationMessageSetEdgeSyncMservConnector,
			NewPolicyMustBeInTheSameDialPlanAsOldPolicy,
			VerboseEdbFileLocationUniqueUnderDAGCondition,
			ConfirmGenerateExchangeCertificateRequest,
			ProgressJoinNode,
			FormsAuthenticationMarkPathUnknownSetError,
			VerboseCheckFileExistenceCondition,
			MigrationNotEnabledForTenant,
			ErrorReHomeOriginalDatabaseLocationNotFound,
			WarningCannedRoleGroupCreateWithoutManager,
			ErrorUnknownRequestIndex,
			WebServicesTestEventDetail,
			RmsTemplateNotFound,
			VerboseSyncTaskDomainControllerMismatch,
			ErrorParsingCSV,
			ErrorStartWinrm,
			ErrorOabVirtualDirectoryAlreadyExistsWithRecovery,
			CasHealthWebAppTransactionWarnings,
			CreatedJunkEmailRule,
			ConfirmationMessageInstallDlpPolicy,
			ErrorCanNotRemoveMailboxToWellKnownHostedMailboxSG,
			SuccessAddServerMonitoringOverride,
			VerboseRemovedRoleAssignment,
			VerboseMdbLinkedToPfdb,
			ConfirmationMessageNewMailboxUser,
			MoveMailboxNotOnDomainController,
			ErrorInvalidFederationMetadata,
			CasHealthAirSyncHeaderNotFound,
			ErrorCasArrayNotFound,
			SendConnectorCreatingOppositeConnector,
			LogonUserIsNotAValidADRecipient,
			ErrorPatternIsTooExpensive,
			ErrorMailboxLacksDatabase,
			ConfirmDisableLastSharedConfiguration,
			ErrorCannotOpenLegacyMailbox,
			InfoImportingTpdFromRmsOnlineCheckedWithTemplates,
			ErrorInvalidCharacterInVirtualDirectoryName,
			ConfirmationMessageNewMailboxAuditLog,
			InvalidMsoSyncServiceResponse,
			ErrorNonActiveOrganizationFound,
			InstallFreeBusyFolderCreatedFolder,
			ErrorServicePlanDoesntAllowSharedConfiguration,
			ErrorObjectNotManagableFromCurrentConsole,
			ErrorSystemFileNotFound,
			ConfirmationMessageRemoveMalwareFilterRule,
			WarningChangeTemplateState,
			VerboseApplyingAuthenticationSettingForVDir,
			ErrorUserOrContactNotUnique,
			ConfirmationMessageRemoveMobileDevice,
			ErrorDCNotAvailable,
			ErrorGetSiteMailboxDiagnostics,
			ConfirmationMessageCompleteOrganizationUpgrade,
			ConfirmationMessageNewMailContact,
			ConfirmationMessageEnableRpcHttpExternalAndInternal,
			InvalidMobileDeviceIdentity,
			ProgressStatusReadingManagementRoleTree,
			ErrorCannotMoveArbitrationMailboxesCrossForest,
			ErrorNoAvailablePublicFolderDatabaseInDatacenter,
			FailedDocumentsNoResultsDatabase,
			SuccessRemoveServerMonitoringOverride,
			ProgressActivityRemovingWorkloadManagementPolicyTree,
			ErrorCannotRetrieveCASServer,
			CasHealthCouldNotLogUserForAutodiscover,
			AcceptedDomainIsReferencedByAddressTemplate,
			ErrorManagedFolderMailboxPolicyNotFound,
			AddAccessRuleUnauthorizedAccess,
			SiteMailboxPolicySet,
			DataClassificationFingerprintsMissing,
			CorruptionTypeParameterIncompatible,
			ConfirmationMessageTestIPBlockListProvider,
			ClassificationRuleCollectionOobRulePackIdViolation,
			ErrorCertificateNotFound,
			WarningScheduledTimeIsUnchanged,
			DagTaskCouldNotFindMatchingNetwork,
			TemplateTypeNotValid,
			InfoChangingGroupType,
			VerboseMountDatabaseStillOnlined,
			ConfirmationMessageNewCallAnsweringRule,
			ConfirmationAddSupervisionListEntry,
			DomainNameIsNotValidForCertificate,
			ConfirmationMessageDisableServiceEmailChannel,
			CasHealthLogon,
			ExRbacRoleGroupInMultiTenantException,
			ErrorNonExistentDirectoryUser,
			ErrorDuplicateNonActiveOrganizationExists,
			TowsException,
			ExportDestinationIsReadonly,
			TcpListenerRequestFailed,
			ErrorSetGroupMailboxUserPermissions,
			ConfirmationMessageSuspendOfflineMoveRequest,
			FailedBecauseofADDataValidationException,
			ErrorDisableMailboxWithLitigationHold,
			TestSearchGetNonIpmSubTreeFolder,
			FolderNotExistsOnRemoteServer,
			ConfirmationMessageNewAccountPartition,
			VerboseNoAssociatedMoveRequestOnDatabaseCondition,
			ConfirmationMessageMailboxRegionalConfiguration,
			InfoSuccess,
			FailedToGetCopyEdbFileStatus,
			InvalidMobileDeviceIdType,
			ConfirmationMessageNewHostedConnectionFilterPolicy,
			DlpPolicyMultipleCommandsNotSupported,
			VerboseFoundAssigneeInDomainNC,
			TooManyEmbeddedExpressions,
			ErrorDuplicateAuthServer,
			TestSearchCatalogErrorMessage,
			VerboseInSiteOABVdirFound,
			ErrorMailboxRelocationJoinTargetNotContainerOwner,
			NoSystemProbeEventFound,
			ConfirmationMessageSetPublicFolderLocalReplicaAgeLimit,
			SomeEssentialServicesForTheRoleNotRunning,
			ConfirmationMessageSetUMMailbox,
			ConfirmationMessageNewELCContentSettings,
			ErrorCasArrayAlreadyExistsInSite,
			ErrorCannotUpdateInvalidMailbox,
			ConfirmationMessageNewEdgeSyncMservConnectorWithSiteSpecified,
			ErrorCannotScopeEsnPolicy,
			ConfirmationMessageSetActiveSyncDeviceAccessRule,
			ErrorSuspendWhenReadyToCompleteCannotBeUsedDuringCompletion,
			ServerToContactMustBeInSameDagException,
			CouldNotFindLocalAdministratorGroup,
			ConfirmationMessageRemoveAddressListRecursively,
			EADCInsufficientRights,
			ErrorNonMatchingLegacyDNs,
			FailedBecauseofADTransientException,
			ErrorExceededTextScanLimit,
			CreateVirtualDirectoryMetabaseFailure,
			ErrorCertificateNotYetValid,
			NewFederationTrustSuccess,
			ErrorInvalidRequest,
			AboutToExportCertificateToFile,
			IisTasksValidationInvalidVirtualDirectoryCharException,
			VerboseCreatingManagementWebServiceVDir,
			DagTaskErrorServerWrongVersion,
			TestSearchDeleteFolders,
			ErrorPSTFolderPathNotExist,
			CasHealthOwaUnsecureAccess,
			FailedToRunServerMonitoringOverride,
			CannotChangeServiceInstanceNameError,
			HttpWebRequestFailure,
			DagTaskNoServersAreStartedException,
			MtrtMessageFailureReason,
			ErrorPublicFolderStatisticsNotFound,
			UnifiedMessagingMailboxPolicyHasProtectUnauthenticatedVoiceMailSetTo,
			ErrorFailedToReadRecipientForUpdate,
			ErrorRecipientViewRootDuplicated,
			ErrorTooManyModerators,
			ConfirmationMessageSetAcceptedDomain,
			InfoAttributeAceNotPresent,
			NoDeviceFilterRuleByName,
			VerboseApprovalRequestSubmitted,
			LogMigrationRegistryKeyNotExist,
			ConfirmationMessageRemovePublicFolder,
			VerbosePublicFolderAdminsUsgCreationRollingbackFailed,
			SearchWorkerError,
			InvalidLegacyExchangeDnParameterValue,
			ErrorInvalidRoleRenaming,
			BadEncodingParameterException,
			GetOwaAdminTaskInvalidExpressionComponentCharacterException,
			ClassificationRuleCollectionRegexPerformanceValidationFailure,
			ConfirmationMessageAddIPAllowListProvider,
			ConfirmationMessageSetMailboxDatabaseCopy,
			DagTaskErrorTooManyServers,
			TotalFolderCount,
			ErrorOrgStillUsingThisMailFlowPartner,
			PopImapErrorIOTimeout,
			ErrorCredentialNotSupportedForEndpointType,
			LogLocationError,
			ClassificationRuleCollectionInvalidLangCodesInRuleDescription,
			TenantNotificationBody,
			ErrorMailboxDatabaseNotOnCurrentCmdletVersion,
			DagTaskServerIPAddressSameAsStaticIPAddress,
			DagTaskCheckingClusterNodesForDagMembership,
			ErrorInvalidRemoveOperationOnDBCopyForCircularLoggingEnabledDB,
			CompletedWithWarningMoveHistoryEntry,
			ConfirmationMessageAddADPermissionOwner,
			InvalidIdentityTypeForClearCmdletException,
			ConfirmationMessageRemovePswsVirtualDirectory,
			ActiveSyncPolicyApplicationListTooLong,
			ErrorCannotRetargetToDifferentVersionArchiveServerThanOriginal,
			CannotLoadScript,
			TestSearchMailboxNotArchived,
			CurrentRoles,
			DisableMailboxQuarantineWarningMessage,
			CasHealthOwaAuthTypesSupported3,
			ExtractingLang,
			InterceptorErrorInvalidEventConditionPair,
			ConstraintFallback,
			RpsFileCreated,
			ConfirmationMessageSetReceiveConnector,
			ErrorArbitrationMailboxDatabase,
			VerboseMountDatabaseForcely,
			VerboseRemoveWSManConfigSection,
			CasHealthWebAppAuthenticationVerificationError,
			InsufficientEmailsForAutoTagging,
			ErrorChangeWindowsLiveID,
			DlpPolicyMissingLocaleAttribute,
			DagTaskComputerAccountExistsAndIsEnabledException,
			VerboseNoAssociatedUserMailboxOrMoveRequestOnDatabaseCondition,
			MsiProductCode,
			ErrorOrganizationalUnitNotUnique,
			ProgressMoveDatabasePath,
			InvalidPKConfigFormat,
			BadFastMessageRetrievalParameterException,
			ErrorTeamMailboxUserTypeUnqualified,
			ConfirmationDisablingPartitionFromProvisioning,
			ConfirmationMessageRemoveRemoteAccountPolicy,
			InterceptorErrorConditionInvalidRegex,
			SiteIdMustBePositive,
			SuspendSgcOnHostServer,
			RequestQueueIdentified,
			ConfirmationMessageRemoveHostedConnectionFilterRule,
			ErrorSourceArchiveMailboxDoesNotExist,
			CopyingOABFiles,
			ErrorMailPublicFolderNotFoundInDirectory,
			AgentLogInvalidSmtpResponse,
			TestSearchGetServerFromActiveManager,
			InfoError,
			FormsAuthenticationMarkPathCannotMarkSecureAttributeException,
			ServerMustBeInDagException,
			MailboxFolderStatisticsException,
			ErrorUnmanagedMemberExists,
			ErrorUnmanagedMemberNotExists,
			ErrorUnsupportedBlockLanguage,
			ConfirmationMessageRemoveMailboxPermanentAndNotLiveId,
			TenantNotificationSubject,
			ErrorLiveIdDomainNameInvalid,
			VerboseSettingPreferredServerForDomain,
			ErrorRequestAlreadyCanceled,
			FormsAuthenticationMarkPathAccessDeniedException,
			ErrorUMInvalidAddressFormat,
			ErrorParameterInvalidForManagedTenant,
			DagTaskProblemChangingQuorumExceptionBadNetPath,
			VerbosePropertiesRead,
			CannotRemoveMailUserCatchAllRecipient,
			TSNoProblemsDetected,
			ConfirmationMessageUpdateDatabaseCopyBegin,
			ErrorUserHasAlternateMailboxes,
			UnexpectedError,
			ErrorServicePlanInconsistent,
			InvalidDuration,
			OwaAdOrphanFound,
			ErrorDirectoryNotExist,
			FailedToSetRequestedDatabaseSchemaVersion,
			ConfirmationMessageNewDynamicDistributionGroupPrecannedFilter,
			AlsSubjectMailboxFailure,
			FailedToValidateSLCCertChain,
			CouldNotUpgradeSpecificContentSetting,
			GetMsoDiagnosticsProgressIteration,
			TestRHRpcQueryAllDone,
			ConfirmationMessageRemoveMailboxPermissionAccessRights,
			VerboseSyncTaskCookieCurrentWatermarksMissingCurrentDC,
			ResetAutoBlockedDevicesException,
			ErrorReadMailboxSecurityDescriptor,
			TopologyServiceOperation,
			ProtocolTransactionShortErrorMsgFromExceptionWithInnerException,
			ConfirmationMessageOutlookProtectionRuleWithEmptyCondition,
			VerboseSettingWriteOriginatingChangeTimestamp,
			ErrorCannotDetermineIisVersion,
			ConfirmationMessageDisableMailUser,
			UpdatingLegDnForDatabaseCopy,
			DatabaseCopyDisconnectedCheck,
			MigrationUserNotFound,
			TestSearchFailed,
			IgnoringException,
			ConfirmRemoveExchangeCertificate,
			VerboseCannedAddressListAlreadyExists,
			DagTaskErrorEncounteredMoreDetailsInLog,
			ExceptionRunProcessFailedRetry,
			ErrorUnableToFindFqdnForHostADErrorException,
			WarningSearchUserNotFound,
			ErrorAllRoomListNotUnique,
			NewProductInstallation,
			ConfirmationMessageNewInboundConnector,
			OutlookConnectivityErrorUserNotFound,
			ErrorGroupNotFoundOnDomainController,
			ConfirmationDumpProvisioningCache,
			ConversationsFailedToProcessMailbox,
			WarningArbitrationRetentionPolicyNotAvailable,
			ExchangeSettingsCannotChangeScopeOnScopeFilteredGroup,
			CertificateInformation,
			ConfirmationMessageSetMailboxAuditLogAgeLimitSmaller,
			CannotFindRPSInstallLocation,
			ErrorParameterValueRequired,
			ProgressStatusReadingAddressListTree,
			ConfirmationMessageSetRemoteDomain,
			VerboseStartToSubmitApprovalRequest,
			ErrorELCFolderIsDestination,
			VerboseTryingToParseOPathFilter,
			CasHealthCalendarWebRequestException,
			ConfirmOrphanUserMissingADData,
			ErrorInvalidResponseXml,
			ConfirmationMessageNewMergeRequest,
			DagNicDown,
			CannotOpenRegistryKey,
			WarningNewAdminAuditLogSearchOnPreE15,
			ConfirmationMessageAddAvailabilityAddressSpace,
			ConfirmationMessageSetManagedFolderMailboxPolicy,
			ErrorOabGenFailedE14,
			ErrorAdUserNotFound,
			FailedToResetAdministrativeGroupLinkedToPfdb,
			ConfirmationMessageSetFederationTrust4,
			TestSearchRecoveryMdb,
			MailboxSearchObjectExist,
			VerboseCreateMember,
			DagTaskCouldNotDisableAccountName,
			ConfirmationMessageNewDatabaseAvailabilityGroup,
			ErrorNameValueStringTooLong,
			ErrorApplicationNotExist,
			AgentLogInvalidLocation,
			ErrorAddCertificateOnEdge,
			ErrorMountPreventedByRecordedErr,
			ErrorCheckHasLocalReplicas,
			SomeActiveSyncTransactionsFailed,
			CheckDatabaseStatus,
			SystemContainerNotFoundException,
			E2k3InteropGroupNotFoundException,
			DlpPolicyFieldLengthsExceedsLimit,
			ConfirmationMessageNewMailboxDatabaseNonRecovery,
			ErrorVirtualDirectoryAlreadyExists,
			ConfirmationMessageSetELCContentSettings,
			CannotConvertAqsToKql,
			MoveMailboxErrorFromCom,
			GetFederationInformationTrustedHostnames,
			RegistryAccessSecurityExceptionReadValue,
			AddDagServerMailboxServerIsInDifferentClusterException,
			ConfirmationMessageNewAuthRedirect,
			WarningDedicatedMailboxPlanDataNotFound,
			IsapiFilterNotRemovedException,
			CannotAssignCertificateToUMCR,
			SenderIPAddressOverlapsServiceProviderIPAddressesId,
			VoiceMessageOriginatorAlreadyExists,
			ConfirmationMessageRemoveMailFlowPartnerConfigWithName,
			ErrorInvalidEndpointType,
			UceContentFilterAlreadyExists,
			ErrorInheritedObjectTypeNotUnique,
			LaunchSubTask,
			AdminGroupNotFoundException,
			ConfirmationMessageSetOutboundConnector,
			SearchMaxResultCountWarning,
			RpcHttpAvailability,
			LogSourceServerRusUnavaliable,
			ErrorLiveDomainReservationError,
			OabFilesLeft,
			ErrorMoveAddressListToChildOrSelf,
			BPAConfigurationErrorFound,
			MacroNameNotSpecified,
			MRSCorruptDataInDiagnostics,
			ClassificationRuleCollectionNonUniqueRuleIdViolation,
			ConfirmationMessageNewAdminAuditLogSearch,
			ErrorOOBUpgradeInProgress,
			ShouldContinueMoreMailboxesThanMaxSearch,
			ErrorCannotDisableRemotePowershelForLastDelegatingOrgAdmin,
			ImplicitPartitionIdSupplied,
			AddResubmitRequestConfirmation,
			RemoveADServerMetadataUsingDC,
			ConfirmationMessageSetEventLogLevel,
			WarningDeprovisioningCoexistenceDomain,
			ConfirmationMessageNewEdgeSubscriptionWarnEdgeFQDNMustbeResolvable,
			ConfirmationMessageRemoveEcpVirtualDirectory,
			ConfirmationMessageDisableHostedContentFilterRule,
			ConfirmationMessageSwitchMobileMailboxDefaultPolicy,
			ErrorSharingPolicyNotUnique,
			ErrorNotAuthorizedForParameter,
			ConfirmationMessageNewCmdletExtensionAgent,
			ConfirmationMessageSetAutoAcceptMailboxSettings,
			ConfirmationMessageEnableAddressListPaging,
			ExecutingScript,
			ConfirmationMessageRemoveMailUser,
			DagTaskClusteringShouldBeDisabledException,
			ComponentEmpty,
			ErrorInvalidConfigScopeOnNonHosterRoleAssignment,
			VerboseDeletePFTree,
			ConfirmationMessageNewMigrationEndpoint,
			WarningMarkNewTemplatesAsDistributedForCreatingProtectionRules,
			ConfirmationMessageSetPswsVirtualDirectory,
			ErrorLogDirectoryNotExist,
			WarningTemplateNotModified,
			ConfirmationMessageSetFederationTrust2,
			VerboseSettingPassword,
			CasHealthOwaAuthTypesSupported1,
			CompletedMoveHistoryEntry,
			DagNetworkHasNoNicForNode,
			MigrationBatchIsCorrupt,
			ConfirmationProcessInputLog,
			MailboxAssistantsServiceCouldNotBeStarted,
			ConfirmationMessageSetExchangeRpcClientAccessServer,
			VerboseDefaultOABWebDistributionEnabled,
			SmtpAddressMissingForAutocopy,
			AmMoveRpcCompletedSourceServer,
			EnabledEhfConnectorAlreadyExists,
			InfoCouldNotFindMAPITLHInAdminGroup,
			ExchangeUpgradeBucketSourceIncludedInTarget,
			ErrorPublicFolderNotFound,
			ConfirmationMessageClearTextMessagingAccount,
			ErrorCannotRemoveAssociatedThrottlingPolicy,
			ConfirmationMessageNewMalwareFilterPolicy,
			OrganizationDataValidationException,
			ExchangeSettingsBadFormatOfConfigPair,
			ErrorHttpsBindingNotExist,
			ExceptionPerfCounterLodctrFailed,
			ConfirmationMessageSetAccountPartition,
			ConfirmSearchMailboxDeleteContent,
			ErrorRollbackGlsExpected,
			WarningSetMailboxLitigationOwnerSMTP,
			ActiveDirectoryConnectivityTestFailed,
			ConfirmationMessageSetMailboxWithWindowsLiveID,
			ErrorSharedConfigurationNotFound,
			ProgressEvictNode,
			DatabaseCopyInitializingCheck,
			RmsSharedIdentityUserNotFound,
			InterceptorErrorConditionConjunctionNotSupported,
			MtrtMessageDLPRule,
			ConfirmationMessageSendTextMessagingVerificationCode,
			ErrorNoAuditLogForNonUserMailbox,
			ErrorRequiredMigrationFeatureNotEnabled,
			FoundDefaultSharingPolicy,
			CmdletValidatorParseErrors,
			ErrorDatabaseNotUnique,
			ConfirmationMessageRemoveAddressrewriteentry,
			StartingToRunChecks,
			ErrorEdbFileLocationNotUniqueUnderSameDAG,
			UnknownEntityLinkedToTenantInReportingDB,
			ErrorAutoDiscoverEndpointNotFound,
			ErrorOuOutOfOrganization,
			ConfirmationMessageSetHostedEncryptionVirtualDirectory,
			ErrorLogFileCannotOpen,
			ErrorCouldNotFindMoveRequest,
			InstallFreeBusyFolderUnableToCheckDatabase,
			SimilarScopeFound,
			HeaderNameNotAllowed,
			ConfirmationMessageNewAcceptedDomain,
			TooManyServicesContainers,
			AuditLogSearchStartDateIsLaterThanEndDate,
			ErrorUserNotFoundInPermissionEntry,
			ConfirmationMessageSetMigrationConfig,
			ExchangeCertificateUpdatedForUMCR,
			ConfirmationMessageMoveAddressList,
			MoveNotSuspended,
			ConfirmationMessageNewExchangeUpgradeBucket,
			ConfirmationMessageRemoveExchangeRpcClientAccess,
			ErrorUnknown,
			FoundAppId,
			ConfirmationMessageSetHostedOutboundSpamFilterPolicy,
			FailedToDeleteSystemMailbox,
			DagTaskStoreMustBeRunningOnMachineException,
			ErrorInvalidAsyncNotificationProcessType,
			messageAutodiscoverTaskException,
			ComAdminOtherOwnerException,
			TargetSharingEprDoesNotMatchAnyExternalURI,
			ErrorCannotRetargetToDifferentVersionServerThanOriginal,
			AutodiscoverUsingUrl,
			ConfirmationMessageUpdateRoleGroupMember,
			ExchangePartnerDoesntOwnDomain,
			MapiTransactionResultCaseNotHandled,
			ErrorMultiReferenceParameter,
			ErrorSourceFileNotFound,
			ConfirmationMessageStartDatabaseAvailabilityGroupServer,
			ConfirmationMessageAuthEffectiveDateNotReached,
			SkipReadEmptyTemplateGuid,
			CrossValidationAlgorithmError,
			DirectoryDoesNotExist,
			ConfirmationMessageNewLinkedUser,
			DagTaskServerMailboxServerAlsoServesAsFswNodeException,
			ErrorCouldNotFindIndexEntriesForRequest,
			RestoreNeedsAlternateWitnessServer,
			ValueIsEmptyException,
			ErrorCheckingTPRListener,
			messageMissingParameterException,
			ErrorTooManyDatabaseCopies,
			ConfirmationMessageNewFederationTrustWithMetadata,
			OwaPropertySetableOnlyOnOwaVirtualDirectory,
			WillNotRemoveFromLocalAdministratorGroup,
			ServerSiteInformationAlreadySet,
			ConfirmationMessageUpdateAddressList,
			CannotManipulateAlternateServiceAccountsRemotely,
			ErrorPSTFileNameIncorrect,
			ConfirmationMessageNewRpcClientAccess,
			VerboseSyncTaskPopulateCookie,
			ErrorRecipientNotFound,
			ErrorReadingAMRole,
			ErrorDuplicateCertificateSubject,
			WarningInvalidRoleAssignmentNotCloned,
			ConfirmationMessageRemoveRecipientPermission,
			MapiTransactionErrorMsgTimeout,
			ConfirmationMessageNewFolderMoveRequest,
			InfoProcessAddMember,
			ErrorInvalidNetId,
			ErrorRoleEntryExistOnChildren,
			ErrorDlpInconsistentStateAndEnabledParameters,
			ErrorMailboxDatabaseNotUnique,
			RecipientTenantNotFound,
			ErrorNetIDValuesDoNotMatch,
			IisTasksValidationInvalidUnicodeException,
			InterceptorErrorCustomResponseCodeMustMatchRejectAction,
			ConfirmationMessageAddPublicFolderClientPermission,
			SelectedConnectionType,
			FormsAuthenticationDeleteMarksIfUnusedUnknownErrorException,
			RpcNotRegistered,
			ExportDestinationAccessDenied,
			ErrorCannotFindComputerObjectByServerFqdnNeedManualAdd,
			RequestCertificateFileInvalid,
			ConfirmationMessageRemoveSendConnector,
			ErrorRusServiceUnavaliable,
			ErrorEdbFilePathMissed,
			ErrorMailboxAuditLogSearchStartDateIsLaterThanEndDate,
			MapiTransactionServerWithoutMdbs,
			InfoCreatePasswordSettings,
			TryingCertificate,
			ConfirmationMessageRemoveOabVirtualDirectory,
			CannotContinue,
			NotEnoughFreePrioritiesAvailable,
			ElcExpirationServiceUnavailable,
			MoveMailboxOnlineShouldMove,
			InfoProcessAddRight,
			CasHealthOwaLogonAuthenticationMethod,
			InvalidMessageClassification,
			ConfirmationMessageSetOrganizationFlags,
			ConfirmationMessageSetWorkloadPolicy,
			DuplicateItemInGatewayIpAddressListId,
			ErrorAdUserNotUnique,
			ConfirmationMessageNewClassificationRuleCollection,
			ClearingHostServerForDatabaseCopy,
			ConfirmationMessageSetHostedContentFilterRule,
			WarningProvisionedServerAlreadyAssigned,
			ExportToPSTShouldExport,
			VerboseWillBeLookingForAssignee,
			SetMailboxSearchConfirmation,
			FailedToReadAirSyncDebugLogging,
			ErrorCannotSetVirtualDirectoryOutOfWriteScope,
			ExportMigrationBatchRowCountOutOfBoundsException,
			VerboseDefaultGALFound,
			ConfirmationMessageRemoveExchangeSettings,
			InfoReadObjectFromDC,
			TasksRpcListenerRpcFailed,
			ErrorRemoteEndpointsCannotBeUsedOnLocalBatches,
			ExportIOFailure,
			DeleteClusterDBKey,
			ConfirmationMessageSetDeliveryAgentConnector,
			MRSProxyNotResponding,
			CorruptedRoleNeedsCleanupException,
			ErrorManagedMemberExists,
			InfoMovedGroup,
			VerboseFoundInvalidAlternateServiceAccountCredential,
			CannotProvisionNonCoexistenceDomain,
			VerboseRereadRecipient,
			ConfirmationMessageSetInboundConnector,
			TestMailflowSucceeded,
			ErrorAdministratorNotInDomainError,
			ErrorOabALAlreadyAssigned,
			CommitMetabaseChangesException,
			ErrorAssociatedMRSRequestExists,
			ClassificationRuleCollectionExistingRuleIdViolation,
			ConfirmationMessageRemoveRoutingGroupConnector,
			ErrorOriginalLogFolderPathIsMissed,
			VerboseFailedToPrepopulateCache,
			ConfirmationMessageEnableRpcHttpExternalOnly,
			messageClientAccessArrayNotFoundException,
			UnwillingToPerformException,
			ErrorTestMailboxNotFound,
			RequiredColumnEmpty,
			ErrorCannotDisablePrimaryPublicFolderMailbox,
			ErrorRootContainerNotExist,
			DagTaskServerCanNotContactClusterException,
			ErrorCannotUpgradeManagedFolder,
			WriteScopeGreaterThanRoleScope,
			RemoveADServerMetadataConfirmationMessage,
			ConfirmationMessageEnableMailboxAuditLog,
			Error_InvalidAddress,
			UnifiedMessagingMailboxPolicyHasProtectAuthenticatedVoiceMailSetTo,
			ErrorManagedByCrossTenant,
			MigrationPartitionMailboxInvalid,
			AttemptingToManageRole,
			RmsOnlineFailedToGetTpd,
			ErrorCannotModifyRehomingRequest,
			VerboseBeginTextExtraction,
			CasHealthOwaErrorPageRequestUrl,
			ConfirmationMessageNewTeamMailbox,
			DagMemberUpCheckFailed,
			MailboxAssistantsServiceCouldNotBeStopped,
			ConfirmationMessageRemoveHostedEncryptionVirtualDirectory,
			UnableToGetProcessForService,
			ConfirmationMessageConnectMailboxShared,
			CasHealthOwaUrlColon,
			ErrorDuplicateKey,
			ConfirmationMessageSwitchMailboxPolicy,
			InfoCreateMESOContainer,
			ErrorNoDefaultAcceptedDomainFound,
			IPRangeInConnectorContainsReservedIPAddressesId,
			HostedContentFilterActionDescription,
			DomainIgnoredBecauseApplicationUriInconsitent,
			TestSearchServiceNotRunning,
			Error_NoDatabaseAttributesMatchingMailboxProvisioningConstraint,
			ConfirmationMessageNewAuthServer,
			ErrorCannotUMEnableInTarget,
			TPRListenerNotHealthy,
			ErrorNoTenantGlsRecord,
			ConfirmationMessageSetDistributionGroup,
			ErrorDBOwningServerNotFound,
			WarningDismountDatabaseToDoConfigurationOnly,
			DuplicateRemoteDomain,
			ConfirmationMessageInterceptorRuleForestWide,
			ErrorRemoveMailboxPlanRoleAssignment
		}
	}
}
