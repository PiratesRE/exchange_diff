using System;
using System.Management.Automation;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Management.FfoReporting.Common;
using Microsoft.Exchange.Management.Tasks;

namespace Microsoft.Exchange.Management.FfoReporting
{
	[Cmdlet("Get", "MailDetailMalwareReport")]
	[OutputType(new Type[]
	{
		typeof(MailDetailMalwareReport)
	})]
	public sealed class GetMailDetailMalwareReport : DetailTask<MailDetailMalwareReport>
	{
		public GetMailDetailMalwareReport() : base("Microsoft.Exchange.Hygiene.Data.MessageTrace.Reports.MalwareMessageDetail, Microsoft.Exchange.Hygiene.Data")
		{
			this.MalwareName = new MultiValuedProperty<string>();
			this.EventType = new MultiValuedProperty<string>();
			this.EventType.Add(Schema.EventTypes.Malware.ToString());
		}

		[QueryParameter("MalwareListQueryDefinition", new string[]
		{

		})]
		[Parameter(Mandatory = false)]
		public MultiValuedProperty<string> MalwareName { get; set; }

		[QueryParameter("EventTypeListQueryDefinition", new string[]
		{

		})]
		[Parameter(Mandatory = false)]
		[CmdletValidator("ValidateEnum", new object[]
		{
			typeof(Schema.EventTypes),
			Schema.EventTypes.Malware
		}, ErrorMessage = Strings.IDs.InvalidEventType)]
		public MultiValuedProperty<string> EventType { get; set; }
	}
}
