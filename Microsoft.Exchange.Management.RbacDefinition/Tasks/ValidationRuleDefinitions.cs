using System;
using System.Collections.Generic;
using System.Linq;
using Microsoft.Exchange.Common;
using Microsoft.Exchange.Data;
using Microsoft.Exchange.Data.Directory;
using Microsoft.Exchange.Data.Directory.Recipient;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;
using Microsoft.Exchange.Data.Directory.ValidationRules;

namespace Microsoft.Exchange.Management.Tasks
{
	internal static class ValidationRuleDefinitions
	{
		public static List<ValidationRuleDefinition> GetRBACValidationRulesList()
		{
			switch (Datacenter.GetExchangeSku())
			{
			case Datacenter.ExchangeSku.Enterprise:
				return ValidationRuleDefinitions.Enterprise_RulesDefinition.ToList<ValidationRuleDefinition>();
			case Datacenter.ExchangeSku.ExchangeDatacenter:
			case Datacenter.ExchangeSku.DatacenterDedicated:
				return ValidationRuleDefinitions.Datacenter_RulesDefinition.ToList<ValidationRuleDefinition>();
			case Datacenter.ExchangeSku.PartnerHosted:
				return ValidationRuleDefinitions.Hosted_RulesDefinition.ToList<ValidationRuleDefinition>();
			}
			return ValidationRuleDefinitions.emptyList;
		}

		private static readonly List<ValidationRuleDefinition> emptyList = new List<ValidationRuleDefinition>(0);

		private static readonly List<RoleEntry> EmptyRoleEntryList = new List<RoleEntry>(0);

		private static readonly ADUserSchema aduserschema = ObjectSchema.GetInstance<ADUserSchema>();

		private static readonly ExchangeConfigurationUnitSchema exchangeconfigurationunitschema = ObjectSchema.GetInstance<ExchangeConfigurationUnitSchema>();

		internal static ValidationRuleDefinition[] Enterprise_RulesDefinition = new ValidationRuleDefinition[]
		{
			new ValidationRuleDefinition("ActiveSyncDeviceDataAccessPermissions_ResourceMailbox", "ActiveSyncDeviceDataAccessPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ActiveSyncDeviceDataAccessPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ActiveSyncPermissions_ResourceMailbox", "ActiveSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ActiveSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("BEVDirRestrictions", "BEVDirRestrictions", ValidationRuleSkus.Enterprise, ValidationRuleDefinitions.BEVDirRestrictions.RulesList, new List<Capability>
			{
				Capability.BEVDirLockdown
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BEVDirLockdown_Violation)),
			new ValidationRuleDefinition("HotmailSyncPermissions_ResourceMailbox", "HotmailSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.HotmailSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ImapSyncPermissions_ResourceMailbox", "ImapSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ImapSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("PopSyncPermissions_ResourceMailbox", "PopSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.PopSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ResourceMailboxRestrictions", "ResourceMailboxRestrictions", ValidationRuleSkus.All, ValidationRuleDefinitions.ResourceMailboxRestrictions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("SMSPermissions_ResourceMailbox", "SMSPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.SMSPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation))
		};

		internal static ValidationRuleDefinition[] Datacenter_RulesDefinition = new ValidationRuleDefinition[]
		{
			new ValidationRuleDefinition("ActiveSyncDeviceDataAccessPermissions_ResourceMailbox", "ActiveSyncDeviceDataAccessPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ActiveSyncDeviceDataAccessPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ActiveSyncPermissions_ResourceMailbox", "ActiveSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ActiveSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ArchivePermissions", "ArchivePermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.ArchivePermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless
			}, new List<Capability>
			{
				Capability.BPOS_S_ArchiveAddOn
			}, new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("EwsPermissions", "EwsPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EwsPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("HotmailSyncPermissions_ResourceMailbox", "HotmailSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.HotmailSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ImapPermissions", "ImapPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.ImapPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("ImapSyncPermissions_ResourceMailbox", "ImapSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ImapSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("InboxRuleCreationRestrictions", "InboxRuleCreationRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.InboxRuleCreationRestrictions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("LitigationHoldPermissions", "LitigationHoldPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.LitigationHoldPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_S_Standard
			}, new List<Capability>
			{
				Capability.BPOS_S_ArchiveAddOn
			}, new ValidationErrorStringProvider(DirectoryStrings.LitigationHold_License_Violation)),
			new ValidationRuleDefinition("MailboxQuotaPermissions_CustomDomain", "MailboxQuotaPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.MailboxQuotaPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_License_NumericLimitViolation), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("IssueWarningQuota -lt '1Gb' -and ProhibitSendQuota -lt '1Gb' -and ProhibitSendReceiveQuota -le '1Gb'", ValidationRuleDefinitions.aduserschema, null)
			}),
			new ValidationRuleDefinition("MailboxQuotaPermissions_Deskless", "MailboxQuotaPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.MailboxQuotaPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_License_NumericLimitViolation), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("IssueWarningQuota -lt '2Gb' -and ProhibitSendQuota -lt '2Gb' -and ProhibitSendReceiveQuota -le '2Gb'", ValidationRuleDefinitions.aduserschema, null)
			}),
			new ValidationRuleDefinition("MailboxQuotaPermissions_StandardAndEnterprise", "MailboxQuotaPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.MailboxQuotaPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Standard,
				Capability.BPOS_S_Enterprise,
				Capability.BPOS_L_Standard,
				Capability.BPOS_S_MidSize
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_License_NumericLimitViolation), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("IssueWarningQuota -lt '50Gb' -and ProhibitSendQuota -lt '50Gb' -and ProhibitSendReceiveQuota -le '50Gb'", ValidationRuleDefinitions.aduserschema, null)
			}),
			new ValidationRuleDefinition("MailboxSIRPermissions_DesklessAndStandard", "MailboxSIRPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.MailboxSIRPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_S_Standard,
				Capability.BPOS_S_Enterprise,
				Capability.BPOS_S_MidSize
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_License_NumericLimitViolation), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("RetainDeletedItemsFor -le '30'", ValidationRuleDefinitions.aduserschema, null)
			}),
			new ValidationRuleDefinition("MailboxSIRPermissions_Standard", "MailboxSIRPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.MailboxSIRPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_L_Standard
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_License_NumericLimitViolation), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("RetainDeletedItemsFor -le '14'", ValidationRuleDefinitions.aduserschema, null)
			}),
			new ValidationRuleDefinition("OutlookAnywherePermissions", "OutlookAnywherePermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.OutlookAnywherePermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("OwaDelegateAccessRestrictions", "OwaDelegateAccessRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EmptyRoleEntryList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("OwaEasMobileOptionsRestrictions", "OwaEasMobileOptionsRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EmptyRoleEntryList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("OwaExplicitLogonRestrictions", "OwaExplicitLogonRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EmptyRoleEntryList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("OwaGlobalAddressListRestrictions", "OwaGlobalAddressListRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EmptyRoleEntryList, new List<Capability>
			{
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("OwaInstantMessageRestrictions", "OwaInstantMessageRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EmptyRoleEntryList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("OwaRulesRestrictions", "OwaRulesRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EmptyRoleEntryList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("OwaTextMessageRestrictions", "OwaTextMessageRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EmptyRoleEntryList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_B_Standard,
				Capability.BPOS_B_CustomDomain
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("PopSyncPermissions_ResourceMailbox", "PopSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.PopSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("PropertiesMasteredOnPremiseRestrictions", "PropertiesMasteredOnPremiseRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.PropertiesMasteredOnPremiseRestrictions.RulesList, new List<Capability>
			{
				Capability.MasteredOnPremise
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.PropertiesMasteredOnPremise_Violation)),
			new ValidationRuleDefinition("ResetUserPasswordManagementPermissions", "ResetUserPasswordManagementPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.ResetUserPasswordManagementPermissions.RulesList, new List<Capability>
			{
				Capability.FederatedUser
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.FederatedUser_Violation)),
			new ValidationRuleDefinition("ResetUserPasswordManagementPermissions_ResourceMailbox", "ResetUserPasswordManagementPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.ResetUserPasswordManagementPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ResourceMailboxRestrictions", "ResourceMailboxRestrictions", ValidationRuleSkus.All, ValidationRuleDefinitions.ResourceMailboxRestrictions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("RichCoexistenceRestrictions", "RichCoexistenceRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.RichCoexistenceRestrictions.RulesList, new List<Capability>
			{
				Capability.RichCoexistence
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.PropertiesMasteredOnPremise_Violation)),
			new ValidationRuleDefinition("RoleGroupMembershipRestrictions", "RoleGroupMembershipRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.RoleGroupMembershipRestrictions.RulesList, new List<Capability>
			{
				Capability.Partner_Managed
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.PartnerManaged_Violation)),
			new ValidationRuleDefinition("SMSPermissions", "SMSPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.SMSPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("SMSPermissions_ResourceMailbox", "SMSPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.SMSPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("UMCloudServicePermissions", "UMCloudServicePermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMCloudServicePermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_S_Standard
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("UMCloudServicePermissions_CountryOrRegionRestriction", "UMCloudServicePermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMCloudServicePermissions.RulesList, new List<Capability>
			{
				Capability.UMFeatureRestricted
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_Feature_UsageLocation_Violation)),
			new ValidationRuleDefinition("UMOutDialingPermissions", "UMOutDialingPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMOutDialingPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_S_Standard
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("UMOutDialingPermissions_CountryOrRegionRestriction", "UMOutDialingPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMOutDialingPermissions.RulesList, new List<Capability>
			{
				Capability.UMFeatureRestricted
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_Feature_UsageLocation_Violation)),
			new ValidationRuleDefinition("UMPBXPermissions", "UMPBXPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMPBXPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_S_Standard
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("UMPBXPermissions_CountryOrRegionRestriction", "UMPBXPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMPBXPermissions.RulesList, new List<Capability>
			{
				Capability.UMFeatureRestricted
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_Feature_UsageLocation_Violation)),
			new ValidationRuleDefinition("UMPermissions", "UMPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_S_Standard
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("UMPermissions_CountryOrRegionRestriction", "UMPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMPermissions.RulesList, new List<Capability>
			{
				Capability.UMFeatureRestricted
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_Feature_UsageLocation_Violation)),
			new ValidationRuleDefinition("UMPersonalAutoAttendantPermissions", "UMPersonalAutoAttendantPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMPersonalAutoAttendantPermissions.RulesList, new List<Capability>
			{
				Capability.BPOS_S_Deskless,
				Capability.BPOS_S_Standard
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_S_Property_License_Violation)),
			new ValidationRuleDefinition("UMPersonalAutoAttendantPermissions_CountryOrRegionRestriction", "UMPersonalAutoAttendantPermissions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.UMPersonalAutoAttendantPermissions.RulesList, new List<Capability>
			{
				Capability.UMFeatureRestricted
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.BPOS_Feature_UsageLocation_Violation)),
			new OrganizationValidationRuleDefinition("EOPPremiumRestrictions", "EOPPremiumRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EOPPremiumRestrictions.RulesList, new ValidationErrorStringProvider(DirectoryStrings.EOPPremiumRestrictions_Error), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("PersistedCapabilities -eq 'BPOS_S_EopPremiumAddOn'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}, new List<ValidationRuleExpression>
			{
				new OverridingAllowExpression("PersistedCapabilities -eq 'BPOS_S_Standard'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new OverridingAllowExpression("PersistedCapabilities -eq 'BPOS_S_Enterprise'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}),
			new OrganizationValidationRuleDefinition("EOPStandardRestrictions", "EOPPremiumRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EOPPremiumRestrictions.RulesList, new ValidationErrorStringProvider(DirectoryStrings.EOPPremiumRestrictions_Error), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("PersistedCapabilities -eq 'BPOS_S_EopStandardAddOn'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}, new List<ValidationRuleExpression>
			{
				new OverridingAllowExpression("PersistedCapabilities -eq 'BPOS_S_Standard'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new OverridingAllowExpression("PersistedCapabilities -eq 'BPOS_S_Enterprise'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}),
			new OrganizationValidationRuleDefinition("EXOStandardRestrictions", "EXOStandardRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.EXOStandardRestrictions.RulesList, new ValidationErrorStringProvider(DirectoryStrings.EXOStandardRestrictions_Error), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("PersistedCapabilities -gt 'None'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}, new List<ValidationRuleExpression>
			{
				new OverridingAllowExpression("PersistedCapabilities -eq 'BPOS_S_EopPremiumAddOn'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new OverridingAllowExpression("PersistedCapabilities -eq 'BPOS_S_Enterprise'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}),
			new OrganizationValidationRuleDefinition("FFOMigrationInProgress_Restrictions", "FFOMigrationInProgress_Restrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.FFOMigrationInProgress_Restrictions.RulesList, new ValidationErrorStringProvider(DirectoryStrings.FFOMigration_Error), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("IsFfoMigrationInProgress -eq 'true'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}, new List<ValidationRuleExpression>()),
			new OrganizationValidationRuleDefinition("OwaFacebookEnabledRestrictions", "OwaFacebookEnabledRestrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.OwaFacebookEnabledRestrictions.RulesList, new ValidationErrorStringProvider(DirectoryStrings.FacebookEnabled_Error), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("-not (PersistedCapabilities -eq 'BPOS_L_Standard') -and CompanyTags -notlike '*/edu=approved*'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new RestrictedExpression("Location -ne '*' -or Location -eq 'AR' -or Location -eq 'IS' -or Location -eq 'LI' -or Location -eq 'NO' -or Location -eq 'CH' -or Location -eq 'AT'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new RestrictedExpression("Location -eq 'BE' -or Location -eq 'CY' -or Location -eq 'CZ' -or Location -eq 'DK' -or Location -eq 'EE' -or Location -eq 'FI' -or Location -eq 'FR'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new RestrictedExpression("Location -eq 'DE' -or Location -eq 'GR' -or Location -eq 'HU' -or Location -eq 'IE' -or Location -eq 'IT' -or Location -eq 'LV' -or Location -eq 'LT'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new RestrictedExpression("Location -eq 'LU' -or Location -eq 'MT' -or Location -eq 'NL' -or Location -eq 'PL' -or Location -eq 'PT' -or Location -eq 'RO' -or Location -eq 'SK'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new RestrictedExpression("Location -eq 'SI' -or Location -eq 'ES' -or Location -eq 'SE' -or Location -eq 'GB' -or Location -eq 'CN' -or Location -eq 'VN' -or Location -eq 'IR'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new RestrictedExpression("Location -eq 'PK' -or Location -eq 'UZ' -or Location -eq 'BD' -or Location -eq 'BG'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null),
				new RestrictedExpression("CompanyTags -like '*/gov=approved*'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}, new List<ValidationRuleExpression>()),
			new OrganizationValidationRuleDefinition("PilotingOrganization_Restrictions", "PilotingOrganization_Restrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.PilotingOrganization_Restrictions.RulesList, new ValidationErrorStringProvider(DirectoryStrings.PilotingOrganization_Error), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("IsPilotingOrganization -eq 'true'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}, new List<ValidationRuleExpression>()),
			new OrganizationValidationRuleDefinition("RuleMigration_Restrictions", "RuleMigration_Restrictions", ValidationRuleSkus.DatacenterTenant, ValidationRuleDefinitions.RuleMigration_Restrictions.RulesList, new ValidationErrorStringProvider(DirectoryStrings.RuleMigration_Error), new List<ValidationRuleExpression>
			{
				new RestrictedExpression("IsFfoMigrationInProgress -eq 'true' -and IsUpgradingOrganization -eq 'true'", ValidationRuleDefinitions.exchangeconfigurationunitschema, null)
			}, new List<ValidationRuleExpression>())
		};

		internal static ValidationRuleDefinition[] Hosted_RulesDefinition = new ValidationRuleDefinition[]
		{
			new ValidationRuleDefinition("ActiveSyncDeviceDataAccessPermissions_ResourceMailbox", "ActiveSyncDeviceDataAccessPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ActiveSyncDeviceDataAccessPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ActiveSyncPermissions_ResourceMailbox", "ActiveSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ActiveSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("HotmailSyncPermissions_ResourceMailbox", "HotmailSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.HotmailSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ImapSyncPermissions_ResourceMailbox", "ImapSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.ImapSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("PopSyncPermissions_ResourceMailbox", "PopSyncPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.PopSyncPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("ResourceMailboxRestrictions", "ResourceMailboxRestrictions", ValidationRuleSkus.All, ValidationRuleDefinitions.ResourceMailboxRestrictions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation)),
			new ValidationRuleDefinition("SMSPermissions_ResourceMailbox", "SMSPermissions", ValidationRuleSkus.All, ValidationRuleDefinitions.SMSPermissions.RulesList, new List<Capability>
			{
				Capability.ResourceMailbox
			}, new List<Capability>(), new ValidationErrorStringProvider(DirectoryStrings.ResourceMailbox_Violation))
		};

		private class ActiveSyncDeviceDataAccessPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(8)
			{
				new CmdletRoleEntry("Clear-ActiveSyncDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cancel",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Clear-MobileDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cancel",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Mailbox",
					"Monitoring",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SortBy",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDeviceStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"GetMailboxLog",
					"Identity",
					"Mailbox",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"ShowRecoveryPassword",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-MobileDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSync",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Mailbox",
					"Monitoring",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SortBy",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-MobileDeviceStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSync",
					"ErrorAction",
					"ErrorVariable",
					"GetMailboxLog",
					"Identity",
					"Mailbox",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"ShowRecoveryPassword",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-MobileDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				})
			};
		}

		private class ActiveSyncPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(18)
			{
				new CmdletRoleEntry("Enable-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSyncMailboxPolicy"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDeviceClass", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"SortBy",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-ActiveSyncOrganizationSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("New-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessLevel",
					"Characteristic",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"QueryString",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimpleDevicePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericDevicePasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"DeviceEncryptionEnabled",
					"DevicePasswordEnabled",
					"DevicePasswordExpiration",
					"DevicePasswordHistory",
					"DevicePolicyRefreshInterval",
					"ErrorAction",
					"ErrorVariable",
					"IrmEnabled",
					"IsDefault",
					"IsDefaultPolicy",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxDevicePasswordFailedAttempts",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeDeviceLock",
					"MinDevicePasswordComplexCharacters",
					"MinDevicePasswordLength",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled"
				}),
				new CmdletRoleEntry("New-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSyncMailboxPolicy"
				}),
				new CmdletRoleEntry("New-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowGooglePushNotifications",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMicrosoftPushNotifications",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimplePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericPasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"DeviceEncryptionEnabled",
					"DevicePolicyRefreshInterval",
					"ErrorAction",
					"ErrorVariable",
					"IrmEnabled",
					"IsDefault",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeLock",
					"MaxPasswordFailedAttempts",
					"MinPasswordComplexCharacters",
					"MinPasswordLength",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PasswordEnabled",
					"PasswordExpiration",
					"PasswordHistory",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessLevel",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimpleDevicePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericDevicePasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"DeviceEncryptionEnabled",
					"DevicePasswordEnabled",
					"DevicePasswordExpiration",
					"DevicePasswordHistory",
					"DevicePolicyRefreshInterval",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IrmEnabled",
					"IsDefault",
					"IsDefaultPolicy",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxDevicePasswordFailedAttempts",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeDeviceLock",
					"MinDevicePasswordComplexCharacters",
					"MinDevicePasswordLength",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled"
				}),
				new CmdletRoleEntry("Set-ActiveSyncOrganizationSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddDeviceFilterRule",
					"AddDeviceFilterRuleForAllDevices",
					"AdminMailRecipients",
					"AllowAccessForUnSupportedPlatform",
					"Confirm",
					"DefaultAccessLevel",
					"DeviceFilterCharacteristic",
					"DeviceFilterName",
					"DeviceFilterOperator",
					"DeviceFilterRuleName",
					"DeviceFilterValue",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OtaNotificationMailInsert",
					"OutBuffer",
					"OutVariable",
					"RemoveDeviceFilter",
					"RemoveDeviceFilterRule",
					"UserMailInsert",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSyncAllowedDeviceIDs",
					"ActiveSyncBlockedDeviceIDs",
					"ActiveSyncDebugLogging",
					"ActiveSyncEnabled",
					"ActiveSyncMailboxPolicy",
					"OWAforDevicesEnabled"
				}),
				new CmdletRoleEntry("Set-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowGooglePushNotifications",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMicrosoftPushNotifications",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimplePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericPasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"DeviceEncryptionEnabled",
					"DevicePolicyRefreshInterval",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IrmEnabled",
					"IsDefault",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeLock",
					"MaxPasswordFailedAttempts",
					"MinPasswordComplexCharacters",
					"MinPasswordLength",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PasswordEnabled",
					"PasswordExpiration",
					"PasswordHistory",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled"
				})
			};
		}

		private class ArchivePermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(8)
			{
				new CmdletRoleEntry("Add-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuxArchive",
					"AuxPrimary",
					"Identity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive"
				}),
				new CmdletRoleEntry("Enable-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"ArchiveName"
				}),
				new CmdletRoleEntry("Get-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"AuxMailbox"
				}),
				new CmdletRoleEntry("Get-MailboxFolderStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"AuditLog"
				}),
				new CmdletRoleEntry("Get-MailboxStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"AuditLog"
				}),
				new CmdletRoleEntry("New-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"AuxMailbox"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ArchiveName"
				})
			};
		}

		private class BEVDirRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(6)
			{
				new CmdletRoleEntry("Set-AutodiscoverVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"Identity",
					"InternalUrl",
					"LiveIdBasicAuthentication",
					"LiveIdNegotiateAuthentication",
					"LiveIdSpNegoAuthentication",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication",
					"WSSecurityAuthentication"
				}),
				new CmdletRoleEntry("Set-EcpVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdfsAuthentication",
					"AdminEnabled",
					"BasicAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"FormsAuthentication",
					"GzipLevel",
					"Identity",
					"InternalUrl",
					"LiveIdAuthentication",
					"OutBuffer",
					"OutVariable",
					"OwaOptionsEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedEncryptionVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowedFileTypes",
					"AllowedMimeTypes",
					"AlwaysShowBcc",
					"BlockedFileTypes",
					"BlockedMimeTypes",
					"CheckForForgottenAttachments",
					"ComposeFontColor",
					"ComposeFontName",
					"ComposeFontSize",
					"Confirm",
					"Debug",
					"DomainController",
					"E4EConfigurationXML",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"ForceSaveFileTypes",
					"ForceSaveMimeTypes",
					"GzipLevel",
					"HideMailTipsByDefault",
					"Identity",
					"InternalUrl",
					"MailTipsLargeAudienceThreshold",
					"MaxAttachmentSizeKB",
					"MaxEmailStringSize",
					"MaxEncryptedContentSizeKB",
					"MaxFwdAllowed",
					"MaxImageSizeKB",
					"MaxMessageSizeInKb",
					"MaxPortalStringSize",
					"MaxRecipientsPerMessage",
					"OutBuffer",
					"OutVariable",
					"PortalInactivityTimeout",
					"TDSTimeOut",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MapiVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-PowerShellVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"CertificateAuthentication",
					"Confirm",
					"Debug",
					"DomainController",
					"EnableCertificateHeaderAuthModule",
					"EnableDelegatedAuthModule",
					"EnableSessionKeyRedirectionModule",
					"ErrorAction",
					"ErrorVariable",
					"ExternalUrl",
					"Identity",
					"InternalUrl",
					"LiveIdBasicAuthentication",
					"LiveIdSpNegoAuthentication",
					"OutBuffer",
					"OutVariable",
					"RequireSSL",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication"
				}),
				new CmdletRoleEntry("Set-WebServicesVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"CertificateAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"Force",
					"GzipLevel",
					"Identity",
					"InternalNLBBypassUrl",
					"InternalUrl",
					"LiveIdBasicAuthentication",
					"LiveIdNegotiateAuthentication",
					"LiveIdSpNegoAuthentication",
					"MRSProxyEnabled",
					"OAuthAuthentication",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication",
					"WSSecurityAuthentication",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class EwsPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(2)
			{
				new CmdletRoleEntry("Set-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"EwsAllowEntourage",
					"EwsAllowList",
					"EwsAllowMacOutlook",
					"EwsAllowOutlook",
					"EwsApplicationAccessPolicy",
					"EwsBlockList",
					"EwsEnabled"
				}),
				new CmdletRoleEntry("Set-OrganizationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"EwsAllowEntourage",
					"EwsAllowList",
					"EwsAllowMacOutlook",
					"EwsAllowOutlook",
					"EwsApplicationAccessPolicy",
					"EwsBlockList",
					"EwsEnabled"
				})
			};
		}

		private class HotmailSyncPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(15)
			{
				new CmdletRoleEntry("Get-HotmailSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SendAddress", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SubscriptionType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HotmailSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Hotmail",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregatedMailboxGuid",
					"Authentication",
					"Confirm",
					"Debug",
					"DGroup",
					"DomainController",
					"Eas",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IncrementalSyncInterval",
					"InternalFlags",
					"Mailbox",
					"Name",
					"Olc",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Puid",
					"RemoteEmailAddress",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"TargetRootFolder",
					"UserName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HotmailSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableAsPoison",
					"DisplayName",
					"DomainController",
					"Enabled",
					"EnablePoisonSubscription",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MailboxMessageConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SendAddressDefault"
				}),
				new CmdletRoleEntry("Set-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncrementalSyncInterval",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Password",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Suspend-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class ImapPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(2)
			{
				new CmdletRoleEntry("Get-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"GetImapProtocolLog"
				}),
				new CmdletRoleEntry("Set-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ImapEnabled",
					"ImapForceICalForCalendarRetrievalOption",
					"ImapMessagesRetrievalMimeFormat",
					"ImapSuppressReadReceipt",
					"ImapUseProtocolDefaults"
				})
			};
		}

		private class ImapSyncPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(15)
			{
				new CmdletRoleEntry("Get-ImapSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SendAddress", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SubscriptionType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ImapSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUsername",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Imap",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregatedMailboxGuid",
					"Authentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Imap",
					"IncrementalSyncInterval",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"RemoteEmailAddress",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"TargetRootFolder",
					"UserName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ImapSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableAsPoison",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"Enabled",
					"EnablePoisonSubscription",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUserName",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResendVerification",
					"ValidateSecret",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MailboxMessageConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SendAddressDefault"
				}),
				new CmdletRoleEntry("Set-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncrementalSyncInterval",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Password",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Suspend-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class InboxRuleCreationRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(2)
			{
				new CmdletRoleEntry("New-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlwaysDeleteOutlookRulesBlob",
					"ApplyCategory",
					"BodyContainsWords",
					"Confirm",
					"CopyToFolder",
					"Debug",
					"DeleteMessage",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfBodyContainsWords",
					"ExceptIfFlaggedForAction",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromSubscription",
					"ExceptIfHasAttachment",
					"ExceptIfHasClassification",
					"ExceptIfHeaderContainsWords",
					"ExceptIfMessageTypeMatches",
					"ExceptIfMyNameInCcBox",
					"ExceptIfMyNameInToBox",
					"ExceptIfMyNameInToOrCcBox",
					"ExceptIfMyNameNotInToBox",
					"ExceptIfReceivedAfterDate",
					"ExceptIfReceivedBeforeDate",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfSentOnlyToMe",
					"ExceptIfSentTo",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfWithImportance",
					"ExceptIfWithinSizeRangeMaximum",
					"ExceptIfWithinSizeRangeMinimum",
					"ExceptIfWithSensitivity",
					"FlaggedForAction",
					"Force",
					"ForwardAsAttachmentTo",
					"ForwardTo",
					"From",
					"FromAddressContainsWords",
					"FromMessageId",
					"FromSubscription",
					"HasAttachment",
					"HasClassification",
					"HeaderContainsWords",
					"Mailbox",
					"MarkAsRead",
					"MarkImportance",
					"MessageTypeMatches",
					"MoveToFolder",
					"MyNameInCcBox",
					"MyNameInToBox",
					"MyNameInToOrCcBox",
					"MyNameNotInToBox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ReceivedAfterDate",
					"ReceivedBeforeDate",
					"RecipientAddressContainsWords",
					"RedirectTo",
					"SendTextMessageNotificationTo",
					"SentOnlyToMe",
					"SentTo",
					"StopProcessingRules",
					"SubjectContainsWords",
					"SubjectOrBodyContainsWords",
					"ValidateOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"WithinSizeRangeMaximum",
					"WithinSizeRangeMinimum",
					"WithSensitivity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlwaysDeleteOutlookRulesBlob",
					"ApplyCategory",
					"BodyContainsWords",
					"Confirm",
					"CopyToFolder",
					"Debug",
					"DeleteMessage",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfBodyContainsWords",
					"ExceptIfFlaggedForAction",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromSubscription",
					"ExceptIfHasAttachment",
					"ExceptIfHasClassification",
					"ExceptIfHeaderContainsWords",
					"ExceptIfMessageTypeMatches",
					"ExceptIfMyNameInCcBox",
					"ExceptIfMyNameInToBox",
					"ExceptIfMyNameInToOrCcBox",
					"ExceptIfMyNameNotInToBox",
					"ExceptIfReceivedAfterDate",
					"ExceptIfReceivedBeforeDate",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfSentOnlyToMe",
					"ExceptIfSentTo",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfWithImportance",
					"ExceptIfWithinSizeRangeMaximum",
					"ExceptIfWithinSizeRangeMinimum",
					"ExceptIfWithSensitivity",
					"FlaggedForAction",
					"Force",
					"ForwardAsAttachmentTo",
					"ForwardTo",
					"From",
					"FromAddressContainsWords",
					"FromSubscription",
					"HasAttachment",
					"HasClassification",
					"HeaderContainsWords",
					"Identity",
					"Mailbox",
					"MarkAsRead",
					"MarkImportance",
					"MessageTypeMatches",
					"MoveToFolder",
					"MyNameInCcBox",
					"MyNameInToBox",
					"MyNameInToOrCcBox",
					"MyNameNotInToBox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ReceivedAfterDate",
					"ReceivedBeforeDate",
					"RecipientAddressContainsWords",
					"RedirectTo",
					"SendTextMessageNotificationTo",
					"SentOnlyToMe",
					"SentTo",
					"StopProcessingRules",
					"SubjectContainsWords",
					"SubjectOrBodyContainsWords",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"WithinSizeRangeMaximum",
					"WithinSizeRangeMinimum",
					"WithSensitivity",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class LitigationHoldPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(6)
			{
				new CmdletRoleEntry("Get-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"InPlaceHoldIdentity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"ShowDeletionInProgressSearches",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"InPlaceHoldEnabled",
					"InPlaceHoldIdentity",
					"ItemHoldPeriod",
					"Name",
					"OutBuffer",
					"OutVariable",
					"SourceMailboxes",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"LitigationHoldDate",
					"LitigationHoldDuration",
					"LitigationHoldOwner",
					"RetentionComment",
					"RetentionUrl"
				}),
				new CmdletRoleEntry("Set-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"InPlaceHoldEnabled",
					"ItemHoldPeriod",
					"Name",
					"OutBuffer",
					"OutVariable",
					"SourceMailboxes",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"LitigationHoldDate",
					"LitigationHoldEnabled",
					"LitigationHoldOwner",
					"RetentionComment",
					"RetentionUrl"
				})
			};
		}

		private class MailboxQuotaPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(2)
			{
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"IssueWarningQuota",
					"ProhibitSendQuota",
					"ProhibitSendReceiveQuota"
				}),
				new CmdletRoleEntry("Set-MailboxPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"IssueWarningQuota",
					"ProhibitSendQuota",
					"ProhibitSendReceiveQuota"
				})
			};
		}

		private class MailboxSIRPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(2)
			{
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"RetainDeletedItemsFor"
				}),
				new CmdletRoleEntry("Set-MailboxPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"RetainDeletedItemsFor"
				})
			};
		}

		private class OutlookAnywherePermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(1)
			{
				new CmdletRoleEntry("Set-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"MAPIEnabled"
				})
			};
		}

		private class PopSyncPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(15)
			{
				new CmdletRoleEntry("Get-PopSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SendAddress", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SubscriptionType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PopSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUsername",
					"LeaveOnServer",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Pop",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregatedMailboxGuid",
					"Authentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IncrementalSyncInterval",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Pop",
					"RemoteEmailAddress",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"TargetRootFolder",
					"UserName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MailboxMessageConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SendAddressDefault"
				}),
				new CmdletRoleEntry("Set-PopSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableAsPoison",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"Enabled",
					"EnablePoisonSubscription",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUserName",
					"LeaveOnServer",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResendVerification",
					"ValidateSecret",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncrementalSyncInterval",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Password",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Suspend-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class PropertiesMasteredOnPremiseRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(25)
			{
				new CmdletRoleEntry("Add-DistributionGroupMember", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Member",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-JournalArchiving", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Identity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DistributionGroupMember", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Member",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Arbitration",
					"Confirm",
					"Database",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"OutBuffer",
					"OutVariable",
					"Permanent",
					"PublicFolder",
					"RemoveArbitrationMailboxWithOABsAllowed",
					"RemoveLastArbitrationMailboxAllowed",
					"StoreMailboxIdentity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-MailContact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-RoleGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ForReconciliation"
				}),
				new CmdletRoleEntry("Remove-SyncGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ForReconciliation"
				}),
				new CmdletRoleEntry("Remove-SyncUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ForReconciliation"
				}),
				new CmdletRoleEntry("Set-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PrimarySmtpAddress"
				}),
				new CmdletRoleEntry("Set-Contact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssistantName",
					"City",
					"Company",
					"CountryOrRegion",
					"Department",
					"DisplayName",
					"Fax",
					"FirstName",
					"GeoCoordinates",
					"HomePhone",
					"Initials",
					"LastName",
					"Manager",
					"MobilePhone",
					"Name",
					"Notes",
					"Office",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"Pager",
					"Phone",
					"PhoneticDisplayName",
					"PostalCode",
					"SeniorityIndex",
					"StateOrProvince",
					"StreetAddress",
					"TelephoneAssistant",
					"Title",
					"WebPage"
				}),
				new CmdletRoleEntry("Set-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"Alias",
					"BypassNestedModerationEnabled",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"DisplayName",
					"EmailAddresses",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"MailTip",
					"MailTipTranslations",
					"ManagedBy",
					"MemberDepartRestriction",
					"MemberJoinRestriction",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"PrimarySmtpAddress",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"ReportToManagerEnabled",
					"ReportToOriginatorEnabled",
					"RequireSenderAuthenticationEnabled",
					"RoomList",
					"SendModerationNotifications",
					"SendOofMessageToOriginatorEnabled"
				}),
				new CmdletRoleEntry("Set-DynamicDistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PrimarySmtpAddress"
				}),
				new CmdletRoleEntry("Set-Group", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DisplayName",
					"IsHierarchicalGroup",
					"ManagedBy",
					"Name",
					"Notes",
					"PhoneticDisplayName",
					"SeniorityIndex"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Alias",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"DisplayName",
					"EmailAddresses",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"HiddenFromAddressListsEnabled",
					"ImmutableId",
					"Name",
					"NetID",
					"Office",
					"PrimarySmtpAddress",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("Set-MailContact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"Alias",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"DisplayName",
					"EmailAddresses",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalEmailAddress",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"MailTip",
					"MailTipTranslations",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"PrimarySmtpAddress",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"RequireSenderAuthenticationEnabled"
				}),
				new CmdletRoleEntry("Set-MailPublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PrimarySmtpAddress"
				}),
				new CmdletRoleEntry("Set-MailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"Alias",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"DisplayName",
					"EmailAddresses",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalEmailAddress",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"ImmutableId",
					"MailTip",
					"MailTipTranslations",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"PrimarySmtpAddress",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"RequireSenderAuthenticationEnabled",
					"SendModerationNotifications"
				}),
				new CmdletRoleEntry("Set-SyncDistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PrimarySmtpAddress"
				}),
				new CmdletRoleEntry("Set-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PrimarySmtpAddress"
				}),
				new CmdletRoleEntry("Set-SyncMailContact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PrimarySmtpAddress"
				}),
				new CmdletRoleEntry("Set-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PrimarySmtpAddress"
				}),
				new CmdletRoleEntry("Set-User", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssistantName",
					"City",
					"Company",
					"CountryOrRegion",
					"Department",
					"DisplayName",
					"Fax",
					"FirstName",
					"GeoCoordinates",
					"HomePhone",
					"Initials",
					"LastName",
					"Manager",
					"MobilePhone",
					"Name",
					"NetID",
					"Notes",
					"Office",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"Pager",
					"Phone",
					"PhoneticDisplayName",
					"PostalCode",
					"SeniorityIndex",
					"StateOrProvince",
					"StreetAddress",
					"TelephoneAssistant",
					"Title",
					"WebPage",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("Update-DistributionGroupMember", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Members",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class ResetUserPasswordManagementPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(8)
			{
				new CmdletRoleEntry("New-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ResetPasswordOnNextLogon"
				}),
				new CmdletRoleEntry("New-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ResetPasswordOnNextLogon"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"FederatedIdentity",
					"NewPassword",
					"OldPassword",
					"Password",
					"ResetPasswordOnNextLogon",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("Set-MailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Password",
					"ResetPasswordOnNextLogon"
				}),
				new CmdletRoleEntry("Set-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Password",
					"ResetPasswordOnNextLogon"
				}),
				new CmdletRoleEntry("Set-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Password",
					"ResetPasswordOnNextLogon"
				}),
				new CmdletRoleEntry("Set-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Password",
					"ResetPasswordOnNextLogon"
				}),
				new CmdletRoleEntry("Set-SyncUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ResetPasswordOnNextLogon"
				})
			};
		}

		private class ResourceMailboxRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(8)
			{
				new CmdletRoleEntry("Get-AcceptedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Identity"
				}),
				new CmdletRoleEntry("Get-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSyncDebugLogging",
					"ProtocolSettings",
					"RecalculateHasActiveSyncDevicePartnership"
				}),
				new CmdletRoleEntry("Get-Group", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Anr",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RecipientTypeDetails",
					"ResultSize",
					"SortBy",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("New-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Alias",
					"Confirm",
					"CopyOwnerToMember",
					"DisplayName",
					"ErrorAction",
					"ErrorVariable",
					"ManagedBy",
					"MemberJoinRestriction",
					"Members",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"Notes",
					"OutBuffer",
					"OutVariable",
					"PrimarySmtpAddress",
					"SamAccountName",
					"SendModerationNotifications",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable"
				}),
				new CmdletRoleEntry("Set-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"Alias",
					"ArbitrationMailbox",
					"BypassModerationFromSendersOrMembers",
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"CreateDTMFMap",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddresses",
					"EmailAddressPolicyEnabled",
					"ErrorAction",
					"ErrorVariable",
					"ExpansionServer",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"GrantSendOnBehalfTo",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreNamingPolicy",
					"MailTip",
					"MailTipTranslations",
					"ManagedBy",
					"MaxReceiveSize",
					"MaxSendSize",
					"MemberDepartRestriction",
					"MemberJoinRestriction",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PrimarySmtpAddress",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"ReportToManagerEnabled",
					"ReportToOriginatorEnabled",
					"RoomList",
					"SamAccountName",
					"SendModerationNotifications",
					"SendOofMessageToOriginatorEnabled",
					"SimpleDisplayName",
					"UMDtmfMap",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsEmailAddress"
				}),
				new CmdletRoleEntry("Set-DynamicDistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailTip",
					"MailTipTranslations",
					"OutBuffer",
					"OutVariable"
				}),
				new CmdletRoleEntry("Set-Group", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DisplayName",
					"ManagedBy",
					"Name",
					"Notes",
					"OutBuffer",
					"OutVariable",
					"PhoneticDisplayName",
					"SeniorityIndex",
					"SimpleDisplayName",
					"Universal",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsEmailAddress"
				})
			};
		}

		private class RichCoexistenceRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(3)
			{
				new CmdletRoleEntry("Disable-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive"
				}),
				new CmdletRoleEntry("Enable-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"ArchiveName"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ArchiveName"
				})
			};
		}

		private class RoleGroupMembershipRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(5)
			{
				new CmdletRoleEntry("Add-RoleGroupMember", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeSoftDeletedObjects",
					"Member",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RoleGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Members"
				}),
				new CmdletRoleEntry("Remove-RoleGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RemoveWellKnownObjectGuid",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-RoleGroupMember", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeSoftDeletedObjects",
					"Member",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-RoleGroupMember", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeSoftDeletedObjects",
					"Members",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class SMSPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(9)
			{
				new CmdletRoleEntry("Clear-TextMessagingAccount", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Compare-TextMessagingVerificationCode", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"VerificationCode",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CalendarNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TextMessagingAccount", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SendTextMessageNotificationTo"
				}),
				new CmdletRoleEntry("Send-TextMessagingVerificationCode", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-CalendarNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CalendarUpdateNotification",
					"CalendarUpdateSendDuringWorkHour",
					"Confirm",
					"DailyAgendaNotification",
					"DailyAgendaNotificationSendTime",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"MeetingReminderNotification",
					"MeetingReminderSendDuringWorkHour",
					"NextDays",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SendTextMessageNotificationTo"
				}),
				new CmdletRoleEntry("Set-TextMessagingAccount", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CountryRegionId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"MobileOperatorId",
					"NotificationPhoneNumber",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class UMCloudServicePermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(1)
			{
				new CmdletRoleEntry("Set-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PhoneNumber",
					"PhoneProviderId",
					"VerifyGlobalRoutingEntry"
				})
			};
		}

		private class UMOutDialingPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(2)
			{
				new CmdletRoleEntry("Set-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PlayOnPhoneEnabled"
				}),
				new CmdletRoleEntry("Set-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowDialPlanSubscribers",
					"AllowedInCountryOrRegionGroups",
					"AllowedInternationalGroups",
					"AllowExtensions"
				})
			};
		}

		private class UMPBXPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(27)
			{
				new CmdletRoleEntry("Disable-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Immediate",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Disable-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"KeepProperties",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Enable-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Enable-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutomaticSpeechRecognitionEnabled",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Extensions",
					"Identity",
					"NotifyEmail",
					"OutBuffer",
					"OutVariable",
					"PilotNumber",
					"Pin",
					"PinExpired",
					"SIPResourceIdentifier",
					"UMMailboxPolicy",
					"ValidateOnly",
					"VoiceMailAnalysisEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Export-UMCallDataRecord", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientStream",
					"Confirm",
					"Date",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"UMIPGateway",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-UMPrompt", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"PromptFileName",
					"UMAutoAttendant",
					"UMDialPlan",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Get-UMCallDataRecord", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMCallSummaryReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GroupBy",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"UMIPGateway",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMHuntGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeSimulator",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Import-UMPrompt", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"PromptFileData",
					"PromptFileName",
					"PromptFileStream",
					"UMAutoAttendant",
					"UMDialPlan",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessTelephoneNumbers",
					"Confirm",
					"CountryOrRegionCode",
					"DefaultLanguage",
					"ErrorAction",
					"ErrorVariable",
					"GenerateUMMailboxPolicy",
					"Name",
					"NumberOfDigitsInExtension",
					"OutBuffer",
					"OutVariable",
					"URIType",
					"VoIPSecurity",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-UMHuntGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PilotIdentifier",
					"UMDialPlan",
					"UMIPGateway",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"IPAddressFamily",
					"Name",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-UMHuntGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SecondaryDialPlan"
				}),
				new CmdletRoleEntry("Set-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SecondaryDialPlan"
				}),
				new CmdletRoleEntry("Set-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"SecondaryDialPlan"
				}),
				new CmdletRoleEntry("Set-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessTelephoneNumbers",
					"AllowDialPlanSubscribers",
					"AllowedInCountryOrRegionGroups",
					"AllowedInternationalGroups",
					"AllowExtensions",
					"AllowHeuristicADCallingLineIdResolution",
					"AudioCodec",
					"AutomaticSpeechRecognitionEnabled",
					"CallSomeoneEnabled",
					"ConfiguredInCountryOrRegionGroups",
					"ConfiguredInternationalGroups",
					"Confirm",
					"ContactAddressList",
					"ContactRecipientContainer",
					"ContactScope",
					"CountryOrRegionCode",
					"DefaultLanguage",
					"DialByNamePrimary",
					"DialByNameSecondary",
					"EquivalentDialPlanPhoneContexts",
					"ErrorAction",
					"ErrorVariable",
					"Extension",
					"ForceUpgrade",
					"InCountryOrRegionNumberFormat",
					"InfoAnnouncementEnabled",
					"InfoAnnouncementFilename",
					"InputFailuresBeforeDisconnect",
					"InternationalAccessCode",
					"InternationalNumberFormat",
					"LegacyPromptPublishingPoint",
					"LogonFailuresBeforeDisconnect",
					"MatchedNameSelectionMethod",
					"MaxCallDuration",
					"MaxRecordingDuration",
					"Name",
					"NationalNumberPrefix",
					"NumberingPlanFormats",
					"OperatorExtension",
					"OutBuffer",
					"OutsideLineAccessCode",
					"OutVariable",
					"PilotIdentifierList",
					"RecordingIdleTimeout",
					"SendVoiceMsgEnabled",
					"TUIPromptEditingEnabled",
					"UMAutoAttendant",
					"VoIPSecurity",
					"WarningAction",
					"WarningVariable",
					"WelcomeGreetingEnabled",
					"WelcomeGreetingFilename",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Confirm",
					"DelayedSourcePartyInfoEnabled",
					"ErrorAction",
					"ErrorVariable",
					"IPAddressFamily",
					"MessageWaitingIndicatorAllowed",
					"Name",
					"OutBuffer",
					"OutcallsAllowed",
					"OutVariable",
					"Port",
					"Simulator",
					"Status",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"OperatorNumber",
					"UMMailboxPolicy"
				}),
				new CmdletRoleEntry("Set-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowAutomaticSpeechRecognition",
					"AllowCommonPatterns",
					"AllowMessageWaitingIndicator",
					"AllowPlayOnPhone",
					"AllowVoiceMailPreview",
					"AllowVoiceResponseToOtherMessageTypes",
					"ForceUpgrade",
					"MaxGreetingDuration",
					"MaxLogonAttempts",
					"MinPINLength",
					"Name",
					"PINHistoryCount",
					"PINLifetime",
					"ProtectAuthenticatedVoiceMail",
					"ProtectedVoiceMailText",
					"ProtectUnauthenticatedVoiceMail",
					"RequireProtectedPlayOnPhone",
					"SourceForestPolicyNames",
					"UMDialPlan",
					"VoiceMailPreviewPartnerAddress",
					"VoiceMailPreviewPartnerAssignedID",
					"VoiceMailPreviewPartnerMaxDeliveryDelay",
					"VoiceMailPreviewPartnerMaxMessageDuration"
				})
			};
		}

		private class UMPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(32)
			{
				new CmdletRoleEntry("Disable-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Enable-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Get-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Anr",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SortBy",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMMailboxConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMMailboxPIN", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreErrors",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMMailboxPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SortBy",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("Get-UMPhoneSession", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable"
				}),
				new CmdletRoleEntry("New-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CallerIds",
					"CallersCanInterruptGreeting",
					"CheckAutomaticReplies",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"ExtensionsDialed",
					"KeyMappings",
					"Mailbox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ScheduleStatus",
					"TimeOfDay",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-Contact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-DynamicDistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CreateDTMFMap",
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-MailContact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-MailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-OrganizationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMAvailableLanguages"
				}),
				new CmdletRoleEntry("Set-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-SyncDistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-SyncMailContact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-SyncUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowUMCallsFromNonUsers",
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Set-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CallerIds",
					"CallersCanInterruptGreeting",
					"CheckAutomaticReplies",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"ExtensionsDialed",
					"Identity",
					"KeyMappings",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ScheduleStatus",
					"TimeOfDay",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowUMCallsFromNonUsers",
					"AnonymousCallersCanLeaveMessages",
					"AutomaticSpeechRecognitionEnabled",
					"CallAnsweringAudioCodec",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"ImListMigrationCompleted",
					"MissedCallNotificationEnabled",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PinlessAccessToVoiceMailEnabled",
					"SubscriberAccessEnabled",
					"TUIAccessToCalendarEnabled",
					"TUIAccessToEmailEnabled",
					"VoiceMailAnalysisEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailboxConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"DefaultPlayOnPhoneNumber",
					"ErrorAction",
					"ErrorVariable",
					"FolderToReadEmailsFrom",
					"Greeting",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadOldestUnreadVoiceMessagesFirst",
					"ReceivedVoiceMailPreviewEnabled",
					"SentVoiceMailPreviewEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailboxPIN", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"LockedOut",
					"NotifyEmail",
					"OutBuffer",
					"OutVariable",
					"Pin",
					"PinExpired",
					"SendEmail",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowMissedCallNotifications",
					"AllowPinlessVoiceMailAccess",
					"AllowSubscriberAccess",
					"AllowTUIAccessToCalendar",
					"AllowTUIAccessToDirectory",
					"AllowTUIAccessToEmail",
					"AllowTUIAccessToPersonalContacts",
					"AllowVoiceMailAnalysis",
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"InformCallerOfVoiceMailAnalysis",
					"LogonFailuresBeforePINReset",
					"OutBuffer",
					"OutVariable",
					"ResetPINText",
					"UMEnabledText",
					"VoiceMailText",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-User", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowUMCallsFromNonUsers",
					"CreateDTMFMap",
					"UMDtmfMap"
				}),
				new CmdletRoleEntry("Start-UMPhoneSession", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AwayVoicemailGreeting",
					"CallAnsweringRuleId",
					"Confirm",
					"DefaultVoicemailGreeting",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PhoneNumber",
					"UMMailbox",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Stop-UMPhoneSession", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				})
			};
		}

		private class UMPersonalAutoAttendantPermissions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(3)
			{
				new CmdletRoleEntry("Set-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CallAnsweringRulesEnabled"
				}),
				new CmdletRoleEntry("Set-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CallAnsweringRulesEnabled"
				}),
				new CmdletRoleEntry("Set-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowCallAnsweringRules"
				})
			};
		}

		private class EOPPremiumRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(1029)
			{
				new CmdletRoleEntry("Add-ADPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"ChildObjectTypes",
					"Confirm",
					"Debug",
					"Deny",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedRights",
					"Identity",
					"InheritanceType",
					"InheritedObjectType",
					"Instance",
					"OutBuffer",
					"OutVariable",
					"Owner",
					"Properties",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-ContentFilterPhrase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Influence",
					"OutBuffer",
					"OutVariable",
					"Phrase",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-DatabaseAvailabilityGroupServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxServer",
					"OutBuffer",
					"OutVariable",
					"SkipDagValidation",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-FederatedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-GlobalMonitoringOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplyVersion",
					"Confirm",
					"Debug",
					"DomainController",
					"Duration",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"ItemType",
					"OutBuffer",
					"OutVariable",
					"PropertyName",
					"PropertyValue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-IPAllowListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExpirationTime",
					"IPAddress",
					"IPRange",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-IPAllowListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AnyMatch",
					"BitmaskMatch",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IPAddressesMatch",
					"LookupDomain",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-IPBlockListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExpirationTime",
					"IPAddress",
					"IPRange",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-IPBlockListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AnyMatch",
					"BitmaskMatch",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IPAddressesMatch",
					"LookupDomain",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RejectionResponse",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuxArchive",
					"AuxPrimary",
					"Identity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-MailboxDatabaseCopy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivationPreference",
					"ConfigurationOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxServer",
					"OutBuffer",
					"OutVariable",
					"ReplayLagTime",
					"SeedingPostponed",
					"TruncationLagTime",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-MailboxFolderPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-MailboxPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"AutoMapping",
					"Confirm",
					"Debug",
					"Deny",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"InheritanceType",
					"Instance",
					"OutBuffer",
					"OutVariable",
					"Owner",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-ManagementRoleEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Overwrite",
					"Parameters",
					"ParentRoleEntry",
					"PSSnapinName",
					"Role",
					"SkipScriptExistenceCheck",
					"Type",
					"UnScopedTopLevel",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-PublicFolderClientPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-RecipientPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Trustee",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-ResubmitRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CorrelationId",
					"Debug",
					"Destination",
					"EndTime",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Recipient",
					"Sender",
					"Server",
					"StartTime",
					"TestOnly",
					"UnresponsivePrimaryServers",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-SecondaryDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthenticationType",
					"Confirm",
					"Debug",
					"DomainController",
					"DomainName",
					"DomainOwnershipVerified",
					"DomainType",
					"ErrorAction",
					"ErrorVariable",
					"IsDataCenter",
					"IsPartnerHosted",
					"LiveIdInstanceType",
					"MakeDefault",
					"Name",
					"Organization",
					"OutBoundOnly",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-ServerMonitoringOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplyVersion",
					"Confirm",
					"Debug",
					"Duration",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"ItemType",
					"OutBuffer",
					"OutVariable",
					"PropertyName",
					"PropertyValue",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Add-SupervisionListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Entry",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Tag",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Clear-ActiveSyncDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cancel",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Clear-MobileDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cancel",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Clear-TextMessagingAccount", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Compare-TextMessagingVerificationCode", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"VerificationCode",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Complete-MigrationBatch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"NotificationEmails",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Complete-OrganizationUpgrade", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EnableFileLogging",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsDataCenter",
					"IsPartnerHosted",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Connect-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSyncMailboxPolicy",
					"AddressBookPolicy",
					"Alias",
					"AllowLegacyDNMismatch",
					"Archive",
					"Confirm",
					"Database",
					"Debug",
					"DomainController",
					"Equipment",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"ManagedFolderMailboxPolicy",
					"ManagedFolderMailboxPolicyAllowed",
					"OutBuffer",
					"OutVariable",
					"RetentionPolicy",
					"Room",
					"Shared",
					"User",
					"ValidateOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-AddressListPaging", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-App", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-CmdletExtensionAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-ExchangePiiMapping", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlwaysDeleteOutlookRulesBlob",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-JournalArchiving", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Identity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-JournalRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"LawfulInterception",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PreserveEmailAddresses"
				}),
				new CmdletRoleEntry("Disable-MailboxQuarantine", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-MailContact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-MailPublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-MailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"IncludeSoftDeletedObjects",
					"OutBuffer",
					"OutVariable",
					"PreventRecordingPreviousDatabase",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-OutlookAnywhere", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-OutlookProtectionRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-PushNotificationProxy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-ServiceEmailChannel", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-TransportAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"TransportService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-UMAutoAttendant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Immediate",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"KeepProperties",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-UMService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Immediate",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Dismount-Database", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Dump-ProvisioningCache", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Application",
					"CacheKeys",
					"Confirm",
					"CurrentOrganization",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"GlobalCache",
					"Organizations",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-AddressListPaging", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"DoNotUpdateRecipients",
					"ErrorAction",
					"ErrorVariable",
					"ForceUpdateOfRecipients",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-AntispamUpdates", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SpamSignatureUpdatesEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-App", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-CmdletExtensionAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-DistributionGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Alias",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"PrimarySmtpAddress",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-ExchangeCertificate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"DoNotRequireSsl",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"NetworkServiceAllowed",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Services",
					"Thumbprint",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-ExchangePiiMapping", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlwaysDeleteOutlookRulesBlob",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-JournalRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"LawfulInterception",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-MailboxQuarantine", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowMigration",
					"Confirm",
					"Debug",
					"Duration",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-MailContact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Alias",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalEmailAddress",
					"Identity",
					"MacAttachmentFormat",
					"MessageBodyFormat",
					"MessageFormat",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"PrimarySmtpAddress",
					"UsePreferMessageFormat",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-MailPublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HiddenFromAddressListsEnabled",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-MailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddOnSKUCapability",
					"Alias",
					"Archive",
					"ArchiveGuid",
					"ArchiveName",
					"BypassModerationCheck",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalEmailAddress",
					"Identity",
					"IncludeSoftDeletedObjects",
					"JournalArchiveAddress",
					"MacAttachmentFormat",
					"MessageBodyFormat",
					"MessageFormat",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"PreserveEmailAddresses",
					"PrimarySmtpAddress",
					"SKUAssigned",
					"SKUCapability",
					"UsageLocation",
					"UsePreferMessageFormat",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-OutlookAnywhere", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DefaultAuthenticationMethod",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalClientAuthenticationMethod",
					"ExternalClientsRequireSsl",
					"ExternalHostname",
					"IISAuthenticationMethods",
					"InternalClientAuthenticationMethod",
					"InternalClientsRequireSsl",
					"InternalHostname",
					"OutBuffer",
					"OutVariable",
					"Role",
					"Server",
					"SSLOffloading",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"XropUrl",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-OutlookProtectionRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-PushNotificationProxy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Uri",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ACLableSyncedObjectEnabled",
					"Alias",
					"Archive",
					"ArchiveName",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"Equipment",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"PrimarySmtpAddress",
					"RemoteRoutingAddress",
					"Room",
					"Shared",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-ServiceEmailChannel", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-TransportAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"TransportService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-UMAutoAttendant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutomaticSpeechRecognitionEnabled",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Extensions",
					"Identity",
					"IgnoreDefaultScope",
					"NotifyEmail",
					"OutBuffer",
					"OutVariable",
					"PilotNumber",
					"Pin",
					"PinExpired",
					"SIPResourceIdentifier",
					"UMMailboxPolicy",
					"ValidateOnly",
					"Verbose",
					"VoiceMailAnalysisEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-UMService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-ActiveSyncLog", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Filename",
					"Force",
					"OutBuffer",
					"OutputPath",
					"OutputPrefix",
					"OutVariable",
					"StartDate",
					"UseGMT",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-AutoDiscoverConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DeleteConfig",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MultipleExchangeDeployments",
					"OutBuffer",
					"OutVariable",
					"PreferredSourceFqdn",
					"SourceForestCredential",
					"TargetForestCredential",
					"TargetForestDomainController",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-ExchangeCertificate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BinaryEncoded",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileName",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Server",
					"Thumbprint",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-JournalRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-MailboxDiagnosticLogs", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"ComponentName",
					"Confirm",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProperties",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-Message", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-MigrationReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CsvStream",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"RowCount",
					"StartingRowIndex",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-RecipientDataProperty", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Picture",
					"SpokenName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-UMCallDataRecord", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientStream",
					"Confirm",
					"Date",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"UMIPGateway",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-UMMailboxPrompt", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CustomAwayGreeting",
					"CustomVoicemailGreeting",
					"Debug",
					"DefaultAwayGreeting",
					"DefaultVoicemailGreeting",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"TestPhoneticDisplayName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-UMPrompt", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AfterHoursWelcomeGreeting",
					"AfterHoursWelcomeGreetingAndMenu",
					"BusinessHours",
					"BusinessHoursWelcomeGreeting",
					"BusinessHoursWelcomeGreetingAndMenu",
					"BusinessLocation",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"PromptFileName",
					"TestBusinessName",
					"TestMenuKeyMapping",
					"UMAutoAttendant",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AccountPartition", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeSecondaryPartitions",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Mailbox",
					"Monitoring",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDeviceAutoblockThreshold", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDeviceClass", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncDeviceStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GetMailboxLog",
					"Identity",
					"Mailbox",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"ShowRecoveryPassword",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncOrganizationSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ActiveSyncVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AddressBookPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Container",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"SearchText",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ADPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Owner",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ADServerSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ADSite", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AdSiteLink", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AgentLog", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Location",
					"OutBuffer",
					"OutVariable",
					"StartDate",
					"TransportService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-App", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"Organization",
					"OrganizationApp",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AuditConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AuditConfigurationPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AuditConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AuthConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AuthServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AutodiscoverVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-AvailabilityConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-BposPlacementConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-BposServiceInstanceInfo", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CalendarDiagnosticAnalysis", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CalendarLogs",
					"Credential",
					"Debug",
					"DetailLevel",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GlobalObjectId",
					"LogLocation",
					"OutBuffer",
					"OutputAs",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CalendarDiagnosticLog", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Latest",
					"LogLocation",
					"MeetingID",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"StartDate",
					"Subject",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CalendarNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CalendarProcessing", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"ActiveSyncDebugLogging",
					"Anr",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"GetImapProtocolLog",
					"GetPopProtocolLog",
					"Identity",
					"IgnoreDefaultScope",
					"Monitoring",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ProtocolSettings",
					"ReadFromDomainController",
					"RecalculateHasActiveSyncDevicePartnership",
					"ResultSize",
					"SendLogsTo",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CASMailboxPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ClientAccessArray", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ClientAccessServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeAlternateServiceAccountCredentialPassword",
					"IncludeAlternateServiceAccountCredentialStatus",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CmdletExtensionAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Assembly",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CompliancePolicySyncNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ConnectionByClientTypeDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ConnectionByClientTypeReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ConnectSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ContentFilterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ContentFilterPhrase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Phrase",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CountryList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CsActiveUserReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CsAVConferenceTimeReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CsClientDeviceReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CsConferenceReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CsP2PAVTimeReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-CsP2PSessionReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DarInfo", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ExecutionUnit",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DarTask", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveInRuntime",
					"ExecutionUnit",
					"MaxCompletionTime",
					"MaxQueuedTime",
					"MinCompletionTime",
					"MinQueuedTime",
					"TaskId",
					"TaskState",
					"TaskType",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DarTaskAggregate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ExecutionUnit",
					"TaskType",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DatabaseAvailabilityGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DatabaseAvailabilityGroupConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DatabaseAvailabilityGroupNetwork", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DCPerimeterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConnectorId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DeliveryAgentConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DetailsTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DeviceConditionalAccessPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DeviceConditionalAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DeviceConfigurationPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DeviceConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DevicePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DeviceTenantPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DeviceTenantRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Policy",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpSensitiveInformationType", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Identity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DomainController", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"Forest",
					"GlobalCatalog",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-EcpVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-EdgeSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-EdgeSyncEhfConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-EdgeSyncMservConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-EdgeSyncServiceConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-EventLogLevel", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExchangeAssistanceConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExchangeNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"ShowDuplicates",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExchangeServerAccessLicense", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExchangeServerAccessLicenseUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"LicenseName",
					"OutBuffer",
					"OutVariable",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExchangeUpgradeBucket", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"EnableMailboxCounting",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExternalActivityByDomainReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExternalActivityByUserReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExternalActivityReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ExternalActivitySummaryReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-FailedContentIndexDocuments", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"Confirm",
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorCode",
					"ErrorVariable",
					"FailureMode",
					"Identity",
					"MailboxDatabase",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Server",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-FailedMSOSyncObject", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-FederatedDomainProof", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Thumbprint",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-FolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"SourceMailbox",
					"Status",
					"Suspend",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-FolderMoveRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ForeignConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-FrontendTransportService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IntraOrgConnectorProtocolLoggingLevel",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-GlobalAddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DefaultOnly",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-GlobalLocatorServiceDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"UseOfflineGLS",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-GlobalLocatorServiceMsaUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MsaUserNetId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-GlobalLocatorServiceTenant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"ShowDomainNames",
					"UseOfflineGLS",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-GlobalMonitoringOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HealthReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GroupSize",
					"HaImpactingOnly",
					"HealthSet",
					"Identity",
					"MinimumOnlinePercent",
					"OutBuffer",
					"OutVariable",
					"RollupGroup",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HoldCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HoldComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Organization",
					"Policy",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedEncryptionVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HotmailSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HybridConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HybridMailflow", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HybridMailflowDatacenterIPs", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ImapSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ImapSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DescriptionTimeFormat",
					"DescriptionTimeZone",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeHidden",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-InterceptorRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IntraOrganizationConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OrganizationGuid",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IntraOrganizationConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPAllowListConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPAllowListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IPAddress",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPAllowListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPAllowListProvidersConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPBlockListConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPBlockListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IPAddress",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPBlockListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-IPBlockListProvidersConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-JournalRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"LawfulInterception",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-LicenseVsUsageSummaryReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-LinkedUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-LogonStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Database",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Arbitration",
					"Archive",
					"AuditLog",
					"AuxMailbox",
					"Credential",
					"Database",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"InactiveMailboxOnly",
					"IncludeInactiveMailbox",
					"IncludeSoftDeletedMailbox",
					"MailboxPlan",
					"Monitoring",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"PublicFolder",
					"ReadFromDomainController",
					"RecipientTypeDetails",
					"RemoteArchive",
					"ResultSize",
					"Server",
					"SoftDeletedMailbox",
					"SortBy",
					"UsnForReconciliationSearch",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxActivityReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxAuditBypassAssociation", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxAutoReplyConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxCalendarConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxCalendarFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxDatabase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"DumpsterStatistics",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludePreExchange2013",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxDatabaseCopyStatus", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Active",
					"ConnectionStatus",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedErrorInfo",
					"Identity",
					"Local",
					"OutBuffer",
					"OutVariable",
					"Server",
					"UseServerCache",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxDatabaseRedundancy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DatabaseAvailabilityGroup",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ServerToContact",
					"TimeoutInSeconds",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxExportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Mailbox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"Status",
					"Suspend",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxExportRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GetChildren",
					"Identity",
					"MailFolderOnly",
					"OutBuffer",
					"OutVariable",
					"Recurse",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxFolderPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxFolderStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"AuditLog",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FolderScope",
					"Identity",
					"IncludeAnalysis",
					"IncludeOldestAndNewestItems",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxImportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Mailbox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"Status",
					"Suspend",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxImportRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxJunkEmailConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxMessageConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Owner",
					"ReadFromDomainController",
					"ResultSize",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"AllMailboxPlanReleases",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxRegionalConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"VerifyDefaultFolderNameLanguage",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxRepairRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"Database",
					"Debug",
					"Detailed",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"StoreMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxRestoreRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"SourceDatabase",
					"Status",
					"Suspend",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxRestoreRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"InPlaceHoldIdentity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"ShowDeletionInProgressSearches",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxServerRedundancy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DatabaseAvailabilityGroup",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ServerToContact",
					"TimeoutInSeconds",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxSpellingConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"AuditLog",
					"CopyOnServer",
					"Database",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IncludeMoveHistory",
					"IncludeMoveReport",
					"IncludePassive",
					"IncludeQuarantineDetails",
					"NoADLookup",
					"OutBuffer",
					"OutVariable",
					"Server",
					"StoreMailboxIdentity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxTransportService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxUsageDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Expression",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailboxUsageReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailPublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MalwareFilteringServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MalwareFilterRecoveryItem", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ManagementEndpoint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"GlobalDirectoryService",
					"Location",
					"OfferId",
					"OutBuffer",
					"OutVariable",
					"ProgramId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ManagementRole", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cmdlet",
					"CmdletParameters",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GetChildren",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Recurse",
					"RoleType",
					"Script",
					"ScriptParameters",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ManagementRoleAssignment", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssignmentMethod",
					"ConfigWriteScope",
					"CustomConfigWriteScope",
					"CustomRecipientWriteScope",
					"Debug",
					"Delegating",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Exclusive",
					"ExclusiveConfigWriteScope",
					"ExclusiveRecipientWriteScope",
					"GetEffectiveUsers",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RecipientOrganizationalUnitScope",
					"RecipientWriteScope",
					"Role",
					"RoleAssignee",
					"RoleAssigneeType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WritableDatabase",
					"WritableRecipient",
					"WritableServer",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ManagementRoleEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Parameters",
					"PSSnapinName",
					"Type",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ManagementScope", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Exclusive",
					"Identity",
					"Organization",
					"Orphan",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MapiVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MergeRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Mailbox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"SourceMailbox",
					"Status",
					"Suspend",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MergeRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Message", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BookmarkIndex",
					"BookmarkObject",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IncludeBookmark",
					"IncludeComponentLatencyInfo",
					"IncludeRecipientInfo",
					"OutBuffer",
					"OutVariable",
					"Queue",
					"ResultSize",
					"ReturnPageInfo",
					"SearchForward",
					"Server",
					"SortOrder",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageCategory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"IncludeLocales",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageLatencyReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdSite",
					"DailyStatistics",
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReportingDatabase",
					"ReportingPeriod",
					"ReportingServer",
					"SLATargetTimespan",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageStatisticsReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdSite",
					"DailyStatistics",
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReportingDatabase",
					"ReportingPeriod",
					"ReportingServer",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageTrackingLog", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"End",
					"ErrorAction",
					"ErrorVariable",
					"EventId",
					"InternalMessageId",
					"MessageId",
					"MessageSubject",
					"OutBuffer",
					"OutVariable",
					"Recipients",
					"Reference",
					"ResultSize",
					"Sender",
					"Server",
					"Start",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageTrackingReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassDelegateChecking",
					"Debug",
					"DetailLevel",
					"DomainController",
					"DoNotResolve",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RecipientPathFilter",
					"Recipients",
					"ReportTemplate",
					"ResultSize",
					"Status",
					"TraceLevel",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MigrationBatch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"Endpoint",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"LimitErrorsTo",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MigrationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MigrationEndpoint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BatchStatus",
					"Confirm",
					"ConnectionSettings",
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Type",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MigrationStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MigrationUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BatchId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxGuid",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"ResultSize",
					"Status",
					"StatusSummary",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MigrationUserStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"LimitSkippedItemsTo",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MobileDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSync",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Mailbox",
					"Monitoring",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"OWAforDevices",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MobileDeviceStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSync",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GetMailboxLog",
					"Identity",
					"Mailbox",
					"NotificationEmailAddresses",
					"OutBuffer",
					"OutVariable",
					"OWAforDevices",
					"ShowRecoveryPassword",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MonitoringItemHelp", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MonitoringItemIdentity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Flags",
					"HighPriority",
					"Identity",
					"IncludeSoftDeletedObjects",
					"MoveStatus",
					"Offline",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"Protect",
					"RemoteHostName",
					"ResultSize",
					"SortBy",
					"SourceDatabase",
					"Suspend",
					"SuspendWhenReadyToComplete",
					"TargetDatabase",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MoveRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"MailboxGuid",
					"MoveRequestQueue",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MSERVEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MsoDiagnostics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cookie",
					"Debug",
					"DeltaSync",
					"ErrorAction",
					"ErrorVariable",
					"EstimateBacklog",
					"ExternalDirectoryOrganizationId",
					"MaxNumberOfBatches",
					"OutBuffer",
					"OutVariable",
					"PageToken",
					"PipelineVariable",
					"SampleCountForStatistics",
					"ServiceInstanceId",
					"TenantSync",
					"UseLastCommittedCookie",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MSOFullSyncObjectRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ServiceInstanceId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MsoFullSyncOrganization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MsoRawObject", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExternalObjectId",
					"Identity",
					"IncludeBackLinks",
					"IncludeForwardLinks",
					"LinksResultSize",
					"OutBuffer",
					"OutVariable",
					"PopulateRawObject",
					"ServiceInstanceId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MSOSyncData", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cookie",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MergeIncrementalSyncCookie",
					"MergePageToken",
					"MergePageTokenContext",
					"MergeTenantFullSyncPageToken",
					"ObjectFullSyncPageToken",
					"ObjectIds",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ServiceInstance",
					"SyncOptions",
					"TenantFullSyncPageToken",
					"TenantFullSyncPageTokenContext",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MSOTenantSyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-NetworkConnectionInfo", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Notification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ProcessType",
					"ResultSize",
					"Settings",
					"StartDate",
					"Summary",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-O365ClientBrowserDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Browser",
					"BrowserVersion",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-O365ClientBrowserReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Browser",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-O365ClientOSDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"OperatingSystem",
					"OperatingSystemVersion",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-O365ClientOSReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OS",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OabVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OfflineAddressBook", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Organization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"UsnForReconciliationSearch",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OrganizationalUnit", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeContainers",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SearchText",
					"SingleNodeOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OutlookAnywhere", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OutlookProtectionRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OutlookProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OwaMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OwaVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PartnerApplication", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PartnerClientExpiringSubscriptionReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PartnerCustomerUserReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PendingFederatedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PerimeterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PhysicalAvailabilityReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DailyStatistics",
					"Database",
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeServer",
					"OutBuffer",
					"OutVariable",
					"ReportingDatabase",
					"ReportingPeriod",
					"ReportingServer",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PopSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PopSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PowerShellVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ProvisioningReconciliationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PswsVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADPropertiesOnly",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"ShowMailboxVirtualDirectories",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GetChildren",
					"Identity",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Recurse",
					"ResidentFolders",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderClientPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderDatabase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderItemStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderMailboxDiagnostics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeDumpsterInfo",
					"IncludeHierarchyInfo",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderMailboxMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"Status",
					"Suspend",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderMailboxMigrationRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"Status",
					"Suspend",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderMigrationRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"BatchName",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HighPriority",
					"Identity",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestQueue",
					"ResultSize",
					"Status",
					"Suspend",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderMoveRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PublicFolderStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PushNotificationApp", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"Platform",
					"UseClearTextAuthenticationKeys",
					"Verbose",
					"WarningAction",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PushNotificationSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExpirationTimeInHours",
					"Mailbox",
					"OutBuffer",
					"ResultSize",
					"ShowAll",
					"Verbose",
					"WarningAction",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Queue", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BookmarkIndex",
					"BookmarkObject",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Exclude",
					"Filter",
					"Identity",
					"Include",
					"IncludeBookmark",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"ReturnPageInfo",
					"SearchForward",
					"Server",
					"SortOrder",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-QueueDigest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Dag",
					"Debug",
					"DetailsLevel",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Forest",
					"GroupBy",
					"IncludeE14Servers",
					"Mtrt",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Server",
					"Site",
					"Timeout",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RecipientEnforcementProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RecipientFilterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RecipientPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Trustee",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RecipientStatisticsReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReportingDatabase",
					"ReportingServer",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RecipientTemplateProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RemoteAccountPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RemoteAccountSyncCache", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ValidateCache",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RemoteDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Anr",
					"Archive",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"OnPremisesOrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RemovedMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ResourceConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ResubmitRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RetentionPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RetentionPolicyTag", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"IncludeSystemTags",
					"Mailbox",
					"OptionalInMailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Types",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RoleAssignmentPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-RpcClientAccess", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ScorecardClientDeviceReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Category",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ScorecardClientOSReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Category",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ScorecardClientOutlookReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Category",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ScorecardMetricsReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SearchDocumentFormat", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SendAddress", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SenderFilterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SenderIdConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SenderReputationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ServerComponentState", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Component",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ServerHealth", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"HaImpactingOnly",
					"HealthSet",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ServerMonitoringOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ServiceAvailabilityReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DailyStatistics",
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReportingDatabase",
					"ReportingPeriod",
					"ReportingServer",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ServiceStatus", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MaintenanceWindowDays",
					"OutBuffer",
					"OutVariable",
					"ReportingDatabase",
					"ReportingServer",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SharingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SiteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"BypassOwnerCheck",
					"Debug",
					"DeletedSiteMailbox",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SiteMailboxDiagnostics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassOwnerCheck",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"SendMeEmail",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SiteMailboxProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SmimeConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Identity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOActiveUserReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOOneDriveForBusinessFileActivityReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Expression",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOOneDriveForBusinessUserStatisticsReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOSkyDriveProDeployedReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOSkyDriveProStorageReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOTeamSiteDeployedReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOTeamSiteStorageReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SPOTenantStorageMetricReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReportType",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-StaleMailboxDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Expression",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-StaleMailboxReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-StoreUsageStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CopyOnServer",
					"Database",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IncludePassive",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"SubscriptionType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SupervisionListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Tag",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SupervisionPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DisplayDetails",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncDaemonArbitrationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncDeletedRecipient", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cookie",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Pages",
					"RecipientType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Arbitration",
					"Archive",
					"Cookie",
					"Credential",
					"Database",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"IncludeSoftDeletedMailbox",
					"MailboxPlan",
					"Monitoring",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"Pages",
					"PublicFolder",
					"ReadFromDomainController",
					"RecipientTypeDetails",
					"RemoteArchive",
					"ResultSize",
					"Server",
					"SoftDeletedMailbox",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Cookie",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"Pages",
					"ReadFromDomainController",
					"ResultSize",
					"SoftDeletedMailUser",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncRequestStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Diagnostic",
					"DiagnosticArgument",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeReport",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncServiceInstance", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SyncUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SoftDeletedUser",
					"SortBy",
					"UsnForReconciliationSearch",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SystemMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Original",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SystemProbe", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndTime",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"StartTime",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-SystemProbeEvent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Guid",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TenantRelocationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HasPermanentError",
					"Identity",
					"Lockdown",
					"OutBuffer",
					"OutVariable",
					"RelocationLastError",
					"RelocationStateRequested",
					"RelocationStatusDetailsSource",
					"SourceStateOnly",
					"StaleLockdown",
					"Suspended",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TextMessagingAccount", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ThrottlingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"Diagnostics",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Explicit",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ThrottlingPolicyScope",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ThrottlingPolicyAssociation", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Anr",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"ThrottlingPolicy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ToolInformation", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"Version",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"TransportService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportPipeline", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportProcessingQuotaConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportProcessingQuotaDigest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-Trust", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMActiveCalls", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DialPlan",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"InstanceServer",
					"IPGateway",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMAutoAttendant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMCallDataRecord", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Mailbox",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMCallRouterSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMCallSummaryReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GroupBy",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"UMIPGateway",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMHuntGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeSimulator",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMMailboxConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMMailboxPIN", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreErrors",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMMailboxPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMPhoneSession", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UMService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-User", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"PublicFolder"
				}),
				new CmdletRoleEntry("Get-UserPhoto", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Anr",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"IgnoreDefaultScope",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"Preview",
					"ReadFromDomainController",
					"ResultSize",
					"SortBy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-UserPrincipalNamesSuffix", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-WindowsLiveIdApplicationIdentity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppId",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Uri",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-WindowsLiveIdNamespace", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Namespace",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-X400AuthoritativeDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-ContactList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CSV",
					"CSVData",
					"CSVStream",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-ExchangeCertificate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"FileName",
					"FriendlyName",
					"Instance",
					"OutBuffer",
					"OutVariable",
					"Password",
					"PrivateKeyExportable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-JournalRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-RecipientDataProperty", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Picture",
					"SpokenName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-UMPrompt", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"PromptFileData",
					"PromptFileName",
					"PromptFileStream",
					"UMAutoAttendant",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Install-TransportAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssemblyPath",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"TransportAgentFactory",
					"TransportService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Install-UnifiedCompliancePrerequisite", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ForceInitialize",
					"LoadOnly",
					"Organization",
					"PolicyCenterSiteOwner",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Invoke-ContactLinking", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Invoke-MonitoringProbe", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Account",
					"Debug",
					"Endpoint",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"ItemTargetExtension",
					"OutBuffer",
					"OutVariable",
					"Password",
					"PropertyOverride",
					"SecondaryAccount",
					"SecondaryEndpoint",
					"SecondaryPassword",
					"Server",
					"TimeOutSeconds",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Mount-Database", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptDataLoss",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Move-ActiveMailboxDatabase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivateOnServer",
					"ActivatePreferredOnServer",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MountDialOverride",
					"MoveComment",
					"OutBuffer",
					"OutVariable",
					"Server",
					"SkipActiveCopyChecks",
					"SkipClientExperienceChecks",
					"SkipHealthChecks",
					"SkipLagChecks",
					"SkipMaximumActiveDatabasesChecks",
					"TerminateOnWarning",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Move-AddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Target",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Move-DatabasePath", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConfigurationOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"EdbFilePath",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"LogFolderPath",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Move-OfflineAddressBook", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AccountPartition", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EnabledForProvisioning",
					"ErrorAction",
					"ErrorVariable",
					"LocalForest",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Secondary",
					"Trust",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessLevel",
					"Characteristic",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"QueryString",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimpleDevicePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericDevicePasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"Debug",
					"DeviceEncryptionEnabled",
					"DevicePasswordEnabled",
					"DevicePasswordExpiration",
					"DevicePasswordHistory",
					"DevicePolicyRefreshInterval",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IrmEnabled",
					"IsDefault",
					"IsDefaultPolicy",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxDevicePasswordFailedAttempts",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeDeviceLock",
					"MinDevicePasswordComplexCharacters",
					"MinDevicePasswordLength",
					"MobileOTAUpdateMode",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ActiveSyncVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplicationRoot",
					"AppPoolId",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"InstallProxySubDirectory",
					"InternalAuthenticationMethods",
					"InternalUrl",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AddressBookPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressLists",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GlobalAddressList",
					"Name",
					"OfflineAddressBook",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RoomList",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConditionalCompany",
					"ConditionalCustomAttribute1",
					"ConditionalCustomAttribute10",
					"ConditionalCustomAttribute11",
					"ConditionalCustomAttribute12",
					"ConditionalCustomAttribute13",
					"ConditionalCustomAttribute14",
					"ConditionalCustomAttribute15",
					"ConditionalCustomAttribute2",
					"ConditionalCustomAttribute3",
					"ConditionalCustomAttribute4",
					"ConditionalCustomAttribute5",
					"ConditionalCustomAttribute6",
					"ConditionalCustomAttribute7",
					"ConditionalCustomAttribute8",
					"ConditionalCustomAttribute9",
					"ConditionalDepartment",
					"ConditionalStateOrProvince",
					"Confirm",
					"Container",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IncludedRecipients",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RecipientContainer",
					"RecipientFilter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-App", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowReadWriteMailbox",
					"Confirm",
					"Debug",
					"DefaultStateForUser",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"FileStream",
					"Mailbox",
					"OrganizationApp",
					"OutBuffer",
					"OutVariable",
					"ProvidedTo",
					"UserList",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-AuditConfigurationPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AuditConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuditOperation",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AuthServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplicationIdentifier",
					"AppSecret",
					"AuthMetadataUrl",
					"AuthorizationEndpoint",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IssuerIdentifier",
					"Name",
					"OutBuffer",
					"OutVariable",
					"TokenIssuingEndpoint",
					"TrustAnySSLCertificate",
					"Type",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AutodiscoverVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplicationRoot",
					"AppPoolId",
					"BasicAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"InternalUrl",
					"OAuthAuthentication",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"WindowsAuthentication",
					"WSSecurityAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AvailabilityConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OrgWideAccount",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ClientAccessArray", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ArrayDefinition",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ServerCount",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-CmdletExtensionAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Assembly",
					"ClassFactory",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-CompliancePolicySyncNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"FullSync",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"SyncChangeInfos",
					"SyncNow",
					"SyncSvcUrl",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ConnectSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppAuthorizationCode",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Facebook",
					"LinkedIn",
					"Mailbox",
					"OAuthVerifier",
					"OutBuffer",
					"OutVariable",
					"RedirectUri",
					"RequestSecret",
					"RequestToken",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DarTask", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Priority",
					"SerializedData",
					"TaskType",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DarTaskAggregate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"IsEnabled",
					"MaxRunningTasks",
					"TaskType",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DatabaseAvailabilityGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"DagConfiguration",
					"DatabaseAvailabilityGroupIpAddresses",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ThirdPartyReplication",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WitnessDirectory",
					"WitnessServer",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DatabaseAvailabilityGroupConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CopiesPerDatabase",
					"DatabasesPerServer",
					"DatabasesPerVolume",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MinCopiesPerDatabaseForMonitoring",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ServersPerDag",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DatabaseAvailabilityGroupNetwork", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"DatabaseAvailabilityGroup",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreNetwork",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ReplicationEnabled",
					"Subnets",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DeliveryAgentConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressSpaces",
					"Comment",
					"Confirm",
					"Debug",
					"DeliveryProtocol",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IsScopedConnector",
					"MaxConcurrentConnections",
					"MaxMessageSize",
					"MaxMessagesPerConnection",
					"Name",
					"OutBuffer",
					"OutVariable",
					"SourceTransportServers",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DeviceConditionalAccessPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ExchangeBinding",
					"Force",
					"Name",
					"Organization",
					"SharePointBinding",
					"Type",
					"Verbose",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DeviceConditionalAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountName",
					"AccountUserName",
					"AllowAppStore",
					"AllowAssistantWhileLocked",
					"AllowConvenienceLogon",
					"AllowDiagnosticSubmission",
					"AllowiCloudBackup",
					"AllowiCloudDocSync",
					"AllowiCloudPhotoSync",
					"AllowJailbroken",
					"AllowMove",
					"AllowPassbookWhileLocked",
					"AllowRecentAddressSyncing",
					"AllowScreenshot",
					"AllowSimplePassword",
					"AllowVideoConferencing",
					"AllowVoiceAssistant",
					"AllowVoiceDialing",
					"AntiVirusSignatureStatus",
					"AntiVirusStatus",
					"AppsRating",
					"AutoUpdateStatus",
					"BluetoothEnabled",
					"CameraEnabled",
					"ContentType",
					"DaysToSync",
					"Debug",
					"DomainController",
					"EmailAddress",
					"EnableRemovableStorage",
					"ErrorAction",
					"ExchangeActiveSyncHost",
					"FirewallStatus",
					"ForceAppStorePassword",
					"ForceEncryptedBackup",
					"MaxPasswordAttemptsBeforeWipe",
					"MaxPasswordGracePeriod",
					"MoviesRating",
					"Organization",
					"PasswordComplexity",
					"PasswordExpirationDays",
					"PasswordHistoryCount",
					"PasswordMinComplexChars",
					"PasswordMinimumLength",
					"PasswordQuality",
					"PasswordRequired",
					"PasswordTimeout",
					"PhoneMemoryEncrypted",
					"Policy",
					"RegionRatings",
					"SmartScreenEnabled",
					"SyncSchedule",
					"SystemSecurityTLS",
					"TargetGroups",
					"TVShowsRating",
					"UseOnlyInEmail",
					"UserAccountControlStatus",
					"UseSMIME",
					"UseSSL",
					"Verbose",
					"WLANEnabled",
					"WorkFoldersSyncUrl",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DeviceConfigurationPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ExchangeBinding",
					"Force",
					"Name",
					"Organization",
					"SharePointBinding",
					"Type",
					"Verbose",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DeviceConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountName",
					"AccountUserName",
					"AllowAppStore",
					"AllowAssistantWhileLocked",
					"AllowConvenienceLogon",
					"AllowDiagnosticSubmission",
					"AllowiCloudBackup",
					"AllowiCloudDocSync",
					"AllowiCloudPhotoSync",
					"AllowMove",
					"AllowPassbookWhileLocked",
					"AllowRecentAddressSyncing",
					"AllowScreenshot",
					"AllowSimplePassword",
					"AllowVideoConferencing",
					"AllowVoiceAssistant",
					"AllowVoiceDialing",
					"AntiVirusSignatureStatus",
					"AntiVirusStatus",
					"AppsRating",
					"AutoUpdateStatus",
					"BluetoothEnabled",
					"CameraEnabled",
					"ContentType",
					"DaysToSync",
					"Debug",
					"DomainController",
					"EmailAddress",
					"EnableRemovableStorage",
					"ErrorAction",
					"ExchangeActiveSyncHost",
					"FirewallStatus",
					"ForceAppStorePassword",
					"ForceEncryptedBackup",
					"MaxPasswordAttemptsBeforeWipe",
					"MaxPasswordGracePeriod",
					"MoviesRating",
					"Organization",
					"PasswordComplexity",
					"PasswordExpirationDays",
					"PasswordHistoryCount",
					"PasswordMinComplexChars",
					"PasswordMinimumLength",
					"PasswordQuality",
					"PasswordRequired",
					"PasswordTimeout",
					"PhoneMemoryEncrypted",
					"Policy",
					"RegionRatings",
					"SmartScreenEnabled",
					"SyncSchedule",
					"SystemSecurityTLS",
					"TargetGroups",
					"TVShowsRating",
					"UseOnlyInEmail",
					"UserAccountControlStatus",
					"UseSMIME",
					"UseSSL",
					"Verbose",
					"WLANEnabled",
					"WorkFoldersSyncUrl",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DeviceTenantPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"Force",
					"Organization",
					"Type",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DeviceTenantRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplyPolicyTo",
					"BlockUnsupportedDevices",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ExclusionList",
					"Organization",
					"Policy",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DlpCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"Force",
					"Name",
					"OneDriveBinding",
					"Organization",
					"SharePointBinding",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DlpComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessScopeIs",
					"BlockAccess",
					"Comment",
					"ContentContainsSensitiveInformation",
					"ContentPropertyContainsWords",
					"Debug",
					"Disabled",
					"DomainController",
					"ErrorAction",
					"Name",
					"Organization",
					"Policy",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-EcpVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppPoolId",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"InternalUrl",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-EdgeSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountExpiryDuration",
					"Confirm",
					"CreateInboundSendConnector",
					"CreateInternetSendConnector",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"FileName",
					"Force",
					"OutBuffer",
					"OutVariable",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-EdgeSyncEhfConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminSyncEnabled",
					"AuthenticationCredential",
					"BackupLeaseLocation",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PrimaryLeaseLocation",
					"ProvisioningURL",
					"ResellerId",
					"Site",
					"Verbose",
					"Version",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-EdgeSyncMservConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BackupLeaseLocation",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"LocalCertificate",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PrimaryLeaseLocation",
					"ProvisionUrl",
					"RemoteCertificate",
					"SettingUrl",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-EdgeSyncServiceConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConfigurationSyncInterval",
					"Confirm",
					"CookieValidDuration",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FailoverDCInterval",
					"LockDuration",
					"LockRenewalDuration",
					"LogEnabled",
					"LogLevel",
					"LogMaxAge",
					"LogMaxDirectorySize",
					"LogMaxFileSize",
					"LogPath",
					"OptionDuration",
					"OutBuffer",
					"OutVariable",
					"RecipientSyncInterval",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-EmailAddressPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConditionalCompany",
					"ConditionalCustomAttribute1",
					"ConditionalCustomAttribute10",
					"ConditionalCustomAttribute11",
					"ConditionalCustomAttribute12",
					"ConditionalCustomAttribute13",
					"ConditionalCustomAttribute14",
					"ConditionalCustomAttribute15",
					"ConditionalCustomAttribute2",
					"ConditionalCustomAttribute3",
					"ConditionalCustomAttribute4",
					"ConditionalCustomAttribute5",
					"ConditionalCustomAttribute6",
					"ConditionalCustomAttribute7",
					"ConditionalCustomAttribute8",
					"ConditionalCustomAttribute9",
					"ConditionalDepartment",
					"ConditionalStateOrProvince",
					"Confirm",
					"Debug",
					"DisabledEmailAddressTemplates",
					"DomainController",
					"EnabledEmailAddressTemplates",
					"EnabledPrimarySMTPAddressTemplate",
					"ErrorAction",
					"ErrorVariable",
					"IncludedRecipients",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientContainer",
					"RecipientFilter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-EncryptedSystemProbeGuid", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Guid",
					"OutBuffer",
					"OutVariable",
					"TimeStamp",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ExchangeCertificate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BinaryEncoded",
					"Confirm",
					"Debug",
					"DomainController",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"FriendlyName",
					"GenerateRequest",
					"IncludeAcceptedDomains",
					"IncludeAutoDiscover",
					"IncludeServerFQDN",
					"IncludeServerNetBIOSName",
					"Instance",
					"KeySize",
					"OutBuffer",
					"OutVariable",
					"PrivateKeyExportable",
					"RequestFile",
					"Server",
					"Services",
					"SubjectKeyIdentifier",
					"SubjectName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ExchangeNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CreationTime",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"EventCategoryId",
					"EventInstanceId",
					"EventSource",
					"EventTime",
					"InsertionStrings",
					"NotificationRecipients",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PeriodicKey",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ExchangeUpgradeBucket", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DisabledUpgradeStages",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"MaxMailboxes",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"SourceVersion",
					"StartDate",
					"TargetVersion",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-FailedMSOSyncObject", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"IsIncrementalOnly",
					"IsLinkRelated",
					"IsRetriable",
					"IsTemporary",
					"IsTenantWideDivergence",
					"IsValidationDivergence",
					"ObjectId",
					"OutBuffer",
					"OutVariable",
					"ServiceInstanceId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-FederationTrust", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdministratorProvisioningId",
					"ApplicationIdentifier",
					"ApplicationUri",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MetadataUrl",
					"Name",
					"OutBuffer",
					"OutVariable",
					"SkipNamespaceProviderProvisioning",
					"Thumbprint",
					"UseLegacyProvisioningService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-FolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AllowLargeItems",
					"BadItemLimit",
					"CompleteAfter",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Folders",
					"IncrementalSyncInterval",
					"InternalFlags",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"SourceMailbox",
					"Suspend",
					"SuspendComment",
					"SuspendWhenReadyToComplete",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ForeignConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressSpaces",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IsScopedConnector",
					"Name",
					"OutBuffer",
					"OutVariable",
					"SourceTransportServers",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-GlobalAddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConditionalCompany",
					"ConditionalCustomAttribute1",
					"ConditionalCustomAttribute10",
					"ConditionalCustomAttribute11",
					"ConditionalCustomAttribute12",
					"ConditionalCustomAttribute13",
					"ConditionalCustomAttribute14",
					"ConditionalCustomAttribute15",
					"ConditionalCustomAttribute2",
					"ConditionalCustomAttribute3",
					"ConditionalCustomAttribute4",
					"ConditionalCustomAttribute5",
					"ConditionalCustomAttribute6",
					"ConditionalCustomAttribute7",
					"ConditionalCustomAttribute8",
					"ConditionalCustomAttribute9",
					"ConditionalDepartment",
					"ConditionalStateOrProvince",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IncludedRecipients",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RecipientContainer",
					"RecipientFilter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-GlobalLocatorServiceDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainFlags",
					"DomainInUse",
					"DomainName",
					"DomainType",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-GlobalLocatorServiceMsaUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"MsaUserMemberName",
					"MsaUserNetId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-GlobalLocatorServiceTenant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountForest",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"PrimarySite",
					"ResourceForest",
					"SmtpNextHopDomain",
					"TenantContainerCN",
					"TenantFlags",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HoldCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ExchangeBinding",
					"Force",
					"Name",
					"Organization",
					"SharePointBinding",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HoldComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"ContentDateFrom",
					"ContentDateTo",
					"ContentMatchQuery",
					"Debug",
					"Disabled",
					"DomainController",
					"ErrorAction",
					"HoldContent",
					"HoldDurationDisplayHint",
					"Name",
					"Organization",
					"Policy",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HostedEncryptionVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppPoolId",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"InternalUrl",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HotmailSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HybridConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Domains",
					"EdgeTransportServers",
					"ErrorAction",
					"ErrorVariable",
					"ExternalIPAddresses",
					"Features",
					"OnPremisesSmartHost",
					"OutBuffer",
					"OutVariable",
					"ReceivingTransportServers",
					"SendingTransportServers",
					"ServiceInstance",
					"TlsCertificateName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ImapSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUsername",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlwaysDeleteOutlookRulesBlob",
					"ApplyCategory",
					"BodyContainsWords",
					"Confirm",
					"CopyToFolder",
					"Debug",
					"DeleteMessage",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfBodyContainsWords",
					"ExceptIfFlaggedForAction",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromSubscription",
					"ExceptIfHasAttachment",
					"ExceptIfHasClassification",
					"ExceptIfHeaderContainsWords",
					"ExceptIfMessageTypeMatches",
					"ExceptIfMyNameInCcBox",
					"ExceptIfMyNameInToBox",
					"ExceptIfMyNameInToOrCcBox",
					"ExceptIfMyNameNotInToBox",
					"ExceptIfReceivedAfterDate",
					"ExceptIfReceivedBeforeDate",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfSentOnlyToMe",
					"ExceptIfSentTo",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfWithImportance",
					"ExceptIfWithinSizeRangeMaximum",
					"ExceptIfWithinSizeRangeMinimum",
					"ExceptIfWithSensitivity",
					"FlaggedForAction",
					"Force",
					"ForwardAsAttachmentTo",
					"ForwardTo",
					"From",
					"FromAddressContainsWords",
					"FromMessageId",
					"FromSubscription",
					"HasAttachment",
					"HasClassification",
					"HeaderContainsWords",
					"Mailbox",
					"MarkAsRead",
					"MarkImportance",
					"MessageTypeMatches",
					"MoveToFolder",
					"MyNameInCcBox",
					"MyNameInToBox",
					"MyNameInToOrCcBox",
					"MyNameNotInToBox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ReceivedAfterDate",
					"ReceivedBeforeDate",
					"RecipientAddressContainsWords",
					"RedirectTo",
					"SendTextMessageNotificationTo",
					"SentOnlyToMe",
					"SentTo",
					"StopProcessingRules",
					"SubjectContainsWords",
					"SubjectOrBodyContainsWords",
					"ValidateOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"WithinSizeRangeMaximum",
					"WithinSizeRangeMinimum",
					"WithSensitivity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-InterceptorRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Condition",
					"Confirm",
					"CreatedBy",
					"CustomResponseCode",
					"CustomResponseString",
					"Dag",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Event",
					"ExpireTime",
					"Forest",
					"Identity",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Server",
					"Site",
					"Source",
					"TimeInterval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-IntraOrganizationConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DiscoveryEndpoint",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"TargetAddressDomains",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-JournalRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExpiryDate",
					"FullReport",
					"JournalEmailAddress",
					"LawfulInterception",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Recipient",
					"Scope",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-LinkedUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CertificateSubject",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"Name",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"UserPrincipalName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountDisabled",
					"ActiveSyncMailboxPolicy",
					"AddOnSKUCapability",
					"AddressBookPolicy",
					"Alias",
					"Arbitration",
					"ArbitrationMailbox",
					"Archive",
					"ArchiveDatabase",
					"ArchiveDomain",
					"AuditLog",
					"AuxMailbox",
					"BypassLiveId",
					"Confirm",
					"Database",
					"Debug",
					"Discovery",
					"DisplayName",
					"DomainController",
					"EnableRoomMailboxAccount",
					"Equipment",
					"ErrorAction",
					"ErrorVariable",
					"EvictLiveId",
					"ExternalDirectoryObjectId",
					"FederatedIdentity",
					"FirstName",
					"Force",
					"HoldForMigration",
					"ImmutableId",
					"ImportLiveId",
					"Initials",
					"IsExcludedFromServingHierarchy",
					"LastName",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"LinkedRoom",
					"MailboxContainerGuid",
					"MailboxPlan",
					"MailboxProvisioningConstraint",
					"MailboxProvisioningPreferences",
					"MicrosoftOnlineServicesID",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"Office",
					"Organization",
					"OrganizationalUnit",
					"OriginalNetID",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"Password",
					"Phone",
					"PrimarySmtpAddress",
					"PublicFolder",
					"QueryBaseDNRestrictionEnabled",
					"RemoteAccountPolicy",
					"RemoteArchive",
					"RemotePowerShellEnabled",
					"RemovedMailbox",
					"ResetPasswordOnNextLogon",
					"ResourceCapacity",
					"RetentionPolicy",
					"RoleAssignmentPolicy",
					"Room",
					"RoomMailboxPassword",
					"SamAccountName",
					"SendModerationNotifications",
					"Shared",
					"SharingPolicy",
					"SKUAssigned",
					"SKUCapability",
					"TargetAllMDBs",
					"ThrottlingPolicy",
					"UsageLocation",
					"UseExistingLiveId",
					"UserPrincipalName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxAuditLogSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"ExternalAccess",
					"LogonTypes",
					"Mailboxes",
					"Name",
					"Operations",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ShowDetails",
					"StartDate",
					"StatusMailRecipients",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxDatabase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutoDagExcludeFromMonitoring",
					"Confirm",
					"Debug",
					"DomainController",
					"EdbFilePath",
					"ErrorAction",
					"ErrorVariable",
					"IsExcludedFromInitialProvisioning",
					"IsExcludedFromProvisioning",
					"IsSuspendedFromProvisioning",
					"LogFolderPath",
					"MailboxProvisioningAttributes",
					"Name",
					"OfflineAddressBook",
					"OutBuffer",
					"OutVariable",
					"PublicFolderDatabase",
					"Recovery",
					"Server",
					"SkipDatabaseLogFolderCreation",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxExportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AssociatedMessagesCopyOption",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"ConflictResolutionOption",
					"ContentFilter",
					"ContentFilterLanguage",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExcludeDumpster",
					"ExcludeFolders",
					"FilePath",
					"IncludeFolders",
					"InternalFlags",
					"IsArchive",
					"LargeItemLimit",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RemoteCredential",
					"RemoteHostName",
					"SkipMerging",
					"SourceRootFolder",
					"Suspend",
					"SuspendComment",
					"TargetRootFolder",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Parent",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxImportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AssociatedMessagesCopyOption",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"ConflictResolutionOption",
					"ContentCodePage",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExcludeDumpster",
					"ExcludeFolders",
					"FilePath",
					"IncludeFolders",
					"InternalFlags",
					"IsArchive",
					"LargeItemLimit",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RemoteCredential",
					"RemoteHostName",
					"SkipMerging",
					"SourceRootFolder",
					"Suspend",
					"SuspendComment",
					"TargetRootFolder",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxRepairRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"Confirm",
					"CorruptionType",
					"Database",
					"Debug",
					"DetectOnly",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"StoreMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxRestoreRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AllowLegacyDNMismatch",
					"AssociatedMessagesCopyOption",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"ConflictResolutionOption",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExcludeDumpster",
					"ExcludeFolders",
					"IncludeFolders",
					"InternalFlags",
					"LargeItemLimit",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RemoteCredential",
					"RemoteDatabaseGuid",
					"RemoteHostName",
					"RemoteRestoreType",
					"SkipMerging",
					"SourceDatabase",
					"SourceRootFolder",
					"SourceStoreMailbox",
					"Suspend",
					"SuspendComment",
					"TargetIsArchive",
					"TargetMailbox",
					"TargetRootFolder",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllPublicFolderSources",
					"AllSourceMailboxes",
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EstimateOnly",
					"ExcludeDuplicateMessages",
					"Force",
					"IncludeKeywordStatistics",
					"IncludeUnsearchableItems",
					"InPlaceHoldEnabled",
					"InPlaceHoldIdentity",
					"ItemHoldPeriod",
					"Language",
					"LogLevel",
					"MessageTypes",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PublicFolderSources",
					"Recipients",
					"SearchQuery",
					"Senders",
					"SourceMailboxes",
					"StartDate",
					"StatusMailRecipients",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MailMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Body",
					"BodyFormat",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Subject",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ManagementRole", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Parent",
					"UnScopedTopLevel",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ManagementRoleAssignment", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Computer",
					"Confirm",
					"CustomConfigWriteScope",
					"CustomRecipientWriteScope",
					"Debug",
					"Delegating",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExclusiveConfigWriteScope",
					"ExclusiveRecipientWriteScope",
					"Force",
					"IgnoreDehydratedFlag",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Policy",
					"RecipientOrganizationalUnitScope",
					"RecipientRelativeWriteScope",
					"Role",
					"SecurityGroup",
					"UnScopedTopLevel",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ManagementScope", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"DatabaseList",
					"DatabaseRestrictionFilter",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Exclusive",
					"Force",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PartnerDelegatedTenantRestrictionFilter",
					"RecipientRestrictionFilter",
					"RecipientRoot",
					"ServerList",
					"ServerRestrictionFilter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MapiVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"IISAuthenticationMethods",
					"InternalUrl",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MergeRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AllowLegacyDNMismatch",
					"AssociatedMessagesCopyOption",
					"AuthenticationMethod",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"ConflictResolutionOption",
					"ContentFilter",
					"ContentFilterLanguage",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExcludeDumpster",
					"ExcludeFolders",
					"IncludeFolders",
					"IncrementalSyncInterval",
					"InternalFlags",
					"IsAdministrativeCredential",
					"LargeItemLimit",
					"Name",
					"OutBuffer",
					"OutlookAnywhereHostName",
					"OutVariable",
					"Priority",
					"RemoteCredential",
					"RemoteSourceMailboxLegacyDN",
					"RemoteSourceMailboxServerLegacyDN",
					"RemoteSourceUserLegacyDN",
					"SkipMerging",
					"SourceIsArchive",
					"SourceMailbox",
					"SourceRootFolder",
					"StartAfter",
					"Suspend",
					"SuspendComment",
					"SuspendWhenReadyToComplete",
					"TargetIsArchive",
					"TargetMailbox",
					"TargetRootFolder",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MessageClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationID",
					"Confirm",
					"Debug",
					"DisplayName",
					"DisplayPrecedence",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"Locale",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PermissionMenuVisible",
					"RecipientDescription",
					"RetainClassificationEnabled",
					"SenderDescription",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MigrationBatch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowIncrementalSyncs",
					"AllowUnknownColumnsInCSV",
					"ArchiveOnly",
					"AutoComplete",
					"AutoRetryCount",
					"AutoStart",
					"BadItemLimit",
					"CompleteAfter",
					"Confirm",
					"CSVData",
					"Debug",
					"DisableOnCopy",
					"DisallowExistingUsers",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExcludeFolders",
					"LargeItemLimit",
					"Local",
					"Locale",
					"Name",
					"NotificationEmails",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"PrimaryOnly",
					"ReportInterval",
					"SkipSteps",
					"SourceEndpoint",
					"SourcePublicFolderDatabase",
					"StartAfter",
					"TargetArchiveDatabases",
					"TargetDatabases",
					"TargetDeliveryDomain",
					"TargetEndpoint",
					"TimeZone",
					"UserIds",
					"Users",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"XO1",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MigrationEndpoint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"Autodiscover",
					"Confirm",
					"Credentials",
					"Debug",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeOutlookAnywhere",
					"ExchangeRemoteMove",
					"ExchangeServer",
					"IMAP",
					"MailboxPermission",
					"MaxConcurrentIncrementalSyncs",
					"MaxConcurrentMigrations",
					"Name",
					"NspiServer",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Port",
					"PSTImport",
					"PublicFolder",
					"PublicFolderDatabaseServerLegacyDN",
					"RemoteServer",
					"RPCProxyServer",
					"Security",
					"SkipVerification",
					"SourceMailboxLegacyDN",
					"TestMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimplePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericPasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"Debug",
					"DeviceEncryptionEnabled",
					"DevicePolicyRefreshInterval",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IrmEnabled",
					"IsDefault",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeLock",
					"MaxPasswordFailedAttempts",
					"MinPasswordComplexCharacters",
					"MinPasswordLength",
					"MobileOTAUpdateMode",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PasswordEnabled",
					"PasswordExpiration",
					"PasswordHistory",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled"
				}),
				new CmdletRoleEntry("New-MoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AllowLargeItems",
					"ArchiveDomain",
					"ArchiveOnly",
					"ArchiveTargetDatabase",
					"BadItemLimit",
					"BatchName",
					"CheckInitialProvisioningSetting",
					"CompleteAfter",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"DoNotPreserveMailboxSignature",
					"ErrorAction",
					"ErrorVariable",
					"ForceOffline",
					"ForcePull",
					"ForcePush",
					"Identity",
					"IgnoreRuleLimitErrors",
					"IgnoreTenantMigrationPolicies",
					"IncrementalSyncInterval",
					"InternalFlags",
					"LargeItemLimit",
					"Outbound",
					"OutBuffer",
					"OutVariable",
					"PreventCompletion",
					"PrimaryOnly",
					"Priority",
					"Protect",
					"Remote",
					"RemoteArchiveTargetDatabase",
					"RemoteCredential",
					"RemoteGlobalCatalog",
					"RemoteHostName",
					"RemoteLegacy",
					"RemoteOrganizationName",
					"RemoteTargetDatabase",
					"SkipMoving",
					"StartAfter",
					"Suspend",
					"SuspendComment",
					"SuspendWhenReadyToComplete",
					"TargetDatabase",
					"TargetDeliveryDomain",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MSERVEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Confirm",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"MinorPartnerId",
					"OutBuffer",
					"OutVariable",
					"PartnerId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MSOFullSyncObjectRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ObjectId",
					"Options",
					"OutBuffer",
					"OutVariable",
					"ServiceInstanceId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MSOTenantSyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Full",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OabVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"InternalUrl",
					"OutBuffer",
					"OutVariable",
					"Path",
					"PollInterval",
					"Recovery",
					"RequireSSL",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OfflineAddressBook", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressLists",
					"Confirm",
					"Debug",
					"DiffRetentionPeriod",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GeneratingMailbox",
					"GlobalWebDistributionEnabled",
					"IsDefault",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PublicFolderDatabase",
					"PublicFolderDistributionEnabled",
					"Schedule",
					"Server",
					"ShadowMailboxDistributionEnabled",
					"SkipPublicFolderInitialization",
					"Verbose",
					"Versions",
					"VirtualDirectories",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Organization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"Administrator",
					"AdministratorNetID",
					"AdministratorPassword",
					"AuthenticationType",
					"CompanyTags",
					"Confirm",
					"CreateSharedConfiguration",
					"Debug",
					"DirSyncServiceInstance",
					"DirSyncStatus",
					"DomainName",
					"EnableFileLogging",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"HotmailMigration",
					"IsDataCenter",
					"IsDirSyncRunning",
					"IsPartnerHosted",
					"LiveIdInstanceType",
					"Location",
					"Name",
					"OfferId",
					"OutBoundOnly",
					"OutBuffer",
					"OutVariable",
					"PersistedCapabilities",
					"ProgramId",
					"RMSOnlineConfig",
					"RMSOnlineKeys",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OutlookProtectionRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplyRightsProtectionTemplate",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"FromDepartment",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"SentTo",
					"SentToScope",
					"UserCanOverride",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OutlookProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OwaMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IsDefault",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OwaVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplicationRoot",
					"AppPoolId",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"InternalUrl",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PartnerApplication", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptSecurityIdentifierInformation",
					"ActAsPermissions",
					"ApplicationIdentifier",
					"AppOnlyPermissions",
					"AuthMetadataUrl",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IssuerIdentifier",
					"LinkedAccount",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Realm",
					"TrustAnySSLCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PopSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUsername",
					"LeaveOnServer",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PowerShellVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppPoolId",
					"BasicAuthentication",
					"CertificateAuthentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalUrl",
					"InternalUrl",
					"LimitMaximumMemory",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Path",
					"RequireSSL",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"WindowsAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PswsVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppPoolId",
					"BasicAuthentication",
					"CertificateAuthentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalUrl",
					"InternalUrl",
					"LimitMaximumMemory",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"WindowsAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EformsLocaleId",
					"ErrorAction",
					"ErrorVariable",
					"Mailbox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PublicFolderMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AuthenticationMethod",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"CSVData",
					"CSVStream",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"InternalFlags",
					"LargeItemLimit",
					"Name",
					"Organization",
					"OutBuffer",
					"OutlookAnywhereHostName",
					"OutVariable",
					"Priority",
					"RemoteCredential",
					"RemoteMailboxLegacyDN",
					"RemoteMailboxServerLegacyDN",
					"SkipMerging",
					"SourceDatabase",
					"Suspend",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PublicFolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AllowLargeItems",
					"BadItemLimit",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Folders",
					"InternalFlags",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"Suspend",
					"SuspendComment",
					"SuspendWhenReadyToComplete",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WorkloadType",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PushNotificationApp", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcsScopeUriTemplate",
					"AcsUriTemplate",
					"AcsUserName",
					"AcsUserPassword",
					"ApnsHost",
					"ApnsPort",
					"AppSecret",
					"AppSid",
					"AsApns",
					"AsAzureChallengeRequest",
					"AsAzureDeviceRegistration",
					"AsAzureHubCreation",
					"AsAzureSend",
					"AsGcm",
					"AsPendingGet",
					"AsProxy",
					"AsWebApp",
					"AsWns",
					"AuthenticationUri",
					"CertificateThumbprint",
					"CertificateThumbprintFallback",
					"Debug",
					"DisplayName",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeMaximumVersion",
					"ExchangeMinimumVersion",
					"FeedbackHost",
					"FeedbackPort",
					"GcmServiceUri",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RegistrationTemplate",
					"SasKeyName",
					"SasKeyValue",
					"Sender",
					"SenderAuthToken",
					"Uri",
					"UriTemplate",
					"UseClearTextAuthenticationKeys",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ReceiveConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdvertiseClientSettings",
					"AuthMechanism",
					"Banner",
					"BinaryMimeEnabled",
					"Bindings",
					"ChunkingEnabled",
					"Client",
					"Comment",
					"Confirm",
					"ConnectionInactivityTimeout",
					"ConnectionTimeout",
					"Custom",
					"Debug",
					"DefaultDomain",
					"DeliveryStatusNotificationEnabled",
					"DomainController",
					"DomainSecureEnabled",
					"EightBitMimeEnabled",
					"EnableAuthGSSAPI",
					"Enabled",
					"EnhancedStatusCodesEnabled",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionPolicy",
					"Fqdn",
					"Internal",
					"Internet",
					"LiveCredentialEnabled",
					"LongAddressesEnabled",
					"MaxAcknowledgementDelay",
					"MaxHeaderSize",
					"MaxHopCount",
					"MaxInboundConnection",
					"MaxInboundConnectionPercentagePerSource",
					"MaxInboundConnectionPerSource",
					"MaxLocalHopCount",
					"MaxLogonFailures",
					"MaxMessageSize",
					"MaxProtocolErrors",
					"MaxRecipientsPerMessage",
					"MessageRateLimit",
					"MessageRateSource",
					"Name",
					"OrarEnabled",
					"OutBuffer",
					"OutVariable",
					"Partner",
					"PermissionGroups",
					"PipeliningEnabled",
					"ProtocolLoggingLevel",
					"ProxyEnabled",
					"RemoteIPRanges",
					"RequireEHLODomain",
					"RequireTLS",
					"Server",
					"ServiceDiscoveryFqdn",
					"SizeEnabled",
					"SuppressXAnonymousTls",
					"TarpitInterval",
					"TlsCertificateName",
					"TlsDomainCapabilities",
					"TlsSenderCertificateName",
					"TransportRole",
					"Usage",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RecipientEnforcementProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RecipientTemplateProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RemoteAccountPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MaxSyncAccounts",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PollingInterval",
					"SyncNowAllowed",
					"TimeBeforeDormant",
					"TimeBeforeInactive",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RemoteDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountDisabled",
					"ACLableSyncedObjectEnabled",
					"Alias",
					"ArbitrationMailbox",
					"Archive",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"Equipment",
					"ErrorAction",
					"ErrorVariable",
					"FirstName",
					"ImmutableId",
					"Initials",
					"LastName",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"OnPremisesOrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"Password",
					"PrimarySmtpAddress",
					"RemotePowerShellEnabled",
					"RemoteRoutingAddress",
					"ResetPasswordOnNextLogon",
					"Room",
					"SamAccountName",
					"SendModerationNotifications",
					"Shared",
					"UserPrincipalName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RetentionPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"IsDefault",
					"IsDefaultArbitrationMailbox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RetentionId",
					"RetentionPolicyTagLinks",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RetentionPolicyTag", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressForJournaling",
					"AgeLimitForRetention",
					"Comment",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"IsDefaultAutoGroupPolicyTag",
					"IsDefaultModeratedRecipientsPolicyTag",
					"JournalingEnabled",
					"LabelForJournaling",
					"LocalizedComment",
					"LocalizedRetentionPolicyTagName",
					"ManagedFolderToUpgrade",
					"MessageClass",
					"MessageFormatForJournaling",
					"MustDisplayCommentEnabled",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RetentionAction",
					"RetentionEnabled",
					"RetentionId",
					"SystemTag",
					"Type",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RoleAssignmentPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"IsDefault",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Roles",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-RoleGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CustomConfigWriteScope",
					"CustomRecipientWriteScope",
					"Debug",
					"Description",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryObjectId",
					"Force",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedForeignGroup",
					"LinkedPartnerGroupId",
					"LinkedPartnerOrganizationId",
					"ManagedBy",
					"Members",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PartnerManaged",
					"RecipientOrganizationalUnitScope",
					"Roles",
					"SamAccountName",
					"ValidationOrganization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WellKnownObjectGuid",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SearchDocumentFormat", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Extension",
					"Identity",
					"MimeType",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SendConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressSpaces",
					"AuthenticationCredential",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectionInactivityTimeOut",
					"Custom",
					"Debug",
					"DNSRoutingEnabled",
					"DomainController",
					"DomainSecureEnabled",
					"Enabled",
					"ErrorAction",
					"ErrorPolicies",
					"ErrorVariable",
					"Force",
					"ForceHELO",
					"Fqdn",
					"FrontendProxyEnabled",
					"IgnoreSTARTTLS",
					"Internal",
					"Internet",
					"IsScopedConnector",
					"MaxMessageSize",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Partner",
					"Port",
					"ProtocolLoggingLevel",
					"RequireOorg",
					"RequireTLS",
					"SmartHostAuthMechanism",
					"SmartHosts",
					"SmtpMaxMessagesPerConnection",
					"SourceIPAddress",
					"SourceTransportServers",
					"TlsAuthLevel",
					"TlsCertificateName",
					"TlsDomain",
					"Usage",
					"UseExternalDNSServersEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SharingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Default",
					"DomainController",
					"Domains",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SiteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Alias",
					"Database",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Name",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"SharePointUrl",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SiteMailboxProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AliasPrefix",
					"Confirm",
					"Debug",
					"DefaultAliasPrefixEnabled",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"IsDefault",
					"IssueWarningQuota",
					"MaxReceiveSize",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ProhibitSendReceiveQuota",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Hotmail",
					"Imap",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Pop",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AccountDisabled",
					"ActiveSyncMailboxPolicy",
					"AddOnSKUCapability",
					"Alias",
					"AntispamBypassEnabled",
					"Arbitration",
					"ArbitrationMailbox",
					"Archive",
					"ArchiveDatabase",
					"ArchiveDomain",
					"ArchiveGuid",
					"ArchiveName",
					"AssistantName",
					"BlockedSendersHash",
					"BypassLiveId",
					"BypassModerationFrom",
					"BypassModerationFromDLMembers",
					"C",
					"City",
					"Co",
					"Company",
					"Confirm",
					"CountryCode",
					"CountryOrRegion",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Database",
					"Debug",
					"DeliverToMailboxAndForward",
					"Department",
					"DirSyncAuthorityMetadata",
					"DirSyncId",
					"Discovery",
					"DisplayName",
					"DomainController",
					"DoNotCheckAcceptedDomains",
					"EmailAddresses",
					"Equipment",
					"ErrorAction",
					"ErrorVariable",
					"EvictLiveId",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalDirectoryObjectId",
					"Fax",
					"FederatedIdentity",
					"FirstName",
					"Force",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"HoldForMigration",
					"HomePhone",
					"ImmutableId",
					"ImportLiveId",
					"Initials",
					"InPlaceHoldsRaw",
					"IsDirSynced",
					"Languages",
					"LastName",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"MailboxPlanName",
					"MailTipTranslations",
					"ManagedFolderMailboxPolicy",
					"ManagedFolderMailboxPolicyAllowed",
					"Manager",
					"MasterAccountSid",
					"MicrosoftOnlineServicesID",
					"MobilePhone",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"Notes",
					"Office",
					"OnPremisesObjectId",
					"Organization",
					"OrganizationalUnit",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"Pager",
					"Password",
					"Phone",
					"PhoneticDisplayName",
					"Picture",
					"PostalCode",
					"PrimarySmtpAddress",
					"PublicFolder",
					"QueryBaseDNRestrictionEnabled",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"ReleaseTrack",
					"RemoteAccountPolicy",
					"RemoteArchive",
					"RemotePowerShellEnabled",
					"RemoteRecipientType",
					"RemovedMailbox",
					"RequireSenderAuthenticationEnabled",
					"ResetPasswordOnNextLogon",
					"ResourceCapacity",
					"ResourceCustom",
					"ResourceWindowsLiveID",
					"RetentionPolicy",
					"RoleAssignmentPolicy",
					"Room",
					"SafeRecipientsHash",
					"SafeSendersHash",
					"SamAccountName",
					"SCLDeleteThreshold",
					"SCLJunkThreshold",
					"SCLQuarantineThreshold",
					"SCLRejectThreshold",
					"SendModerationNotifications",
					"SeniorityIndex",
					"Shared",
					"SharingPolicy",
					"SipAddresses",
					"SKUAssigned",
					"SKUCapability",
					"SmtpAndX500Addresses",
					"SpokenName",
					"StateOrProvince",
					"StreetAddress",
					"StsRefreshTokensValidFrom",
					"TargetAllMDbs",
					"TelephoneAssistant",
					"ThrottlingPolicy",
					"Title",
					"UsageLocation",
					"UseExistingLiveId",
					"UseExistingResourceLiveId",
					"UseMapiRichTextFormat",
					"UserCertificate",
					"UserPrincipalName",
					"UserSMimeCertificate",
					"ValidationOrganization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebPage",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SyncMailPublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Alias",
					"Confirm",
					"Debug",
					"DomainController",
					"EmailAddresses",
					"EntryId",
					"ErrorAction",
					"ErrorVariable",
					"ExternalEmailAddress",
					"HiddenFromAddressListsEnabled",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsEmailAddress",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AccountDisabled",
					"AddOnSKUCapability",
					"Alias",
					"ArbitrationMailbox",
					"ArchiveGuid",
					"ArchiveName",
					"AssistantName",
					"AuditAdminOperations",
					"AuditDelegateAdminOperations",
					"AuditDelegateOperations",
					"AuditOwnerOperations",
					"BlockedSendersHash",
					"BypassAudit",
					"BypassLiveId",
					"BypassModerationFrom",
					"BypassModerationFromDLMembers",
					"C",
					"City",
					"Co",
					"Company",
					"Confirm",
					"CountryCode",
					"CountryOrRegion",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Debug",
					"DeliverToMailboxAndForward",
					"Department",
					"DirSyncAuthorityMetadata",
					"DirSyncId",
					"DisplayName",
					"DomainController",
					"DoNotCheckAcceptedDomains",
					"ElcMailboxFlags",
					"EmailAddresses",
					"EndDateForRetentionHold",
					"ErrorAction",
					"ErrorVariable",
					"EvictLiveId",
					"ExchangeGuid",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalDirectoryObjectId",
					"ExternalEmailAddress",
					"Fax",
					"FederatedIdentity",
					"FirstName",
					"ForwardingAddress",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"HomePhone",
					"ImmutableId",
					"ImportLiveId",
					"Initials",
					"InPlaceHoldsRaw",
					"IntendedMailboxPlanName",
					"IsCalculatedTargetAddress",
					"IsDirSynced",
					"Languages",
					"LastName",
					"LitigationHoldDate",
					"LitigationHoldOwner",
					"MacAttachmentFormat",
					"MailboxAuditEnabled",
					"MailboxAuditLogAgeLimit",
					"MailTipTranslations",
					"Manager",
					"MasterAccountSid",
					"MessageBodyFormat",
					"MessageFormat",
					"MicrosoftOnlineServicesID",
					"MobilePhone",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"Notes",
					"Office",
					"OnPremisesObjectId",
					"Organization",
					"OrganizationalUnit",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"Pager",
					"Password",
					"Phone",
					"PhoneticDisplayName",
					"Picture",
					"PostalCode",
					"PrimarySmtpAddress",
					"RecipientDisplayType",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"ReleaseTrack",
					"RemotePowerShellEnabled",
					"RemoteRecipientType",
					"RequireSenderAuthenticationEnabled",
					"ResetPasswordOnNextLogon",
					"ResourceCapacity",
					"ResourceCustom",
					"ResourceMetaData",
					"ResourcePropertiesDisplay",
					"ResourceSearchProperties",
					"ResourceType",
					"RetentionComment",
					"RetentionUrl",
					"SafeRecipientsHash",
					"SafeSendersHash",
					"SamAccountName",
					"SendModerationNotifications",
					"SeniorityIndex",
					"SharePointUrl",
					"SipAddresses",
					"SiteMailboxClosedTime",
					"SiteMailboxOwners",
					"SiteMailboxUsers",
					"SKUAssigned",
					"SKUCapability",
					"SmtpAndX500Addresses",
					"StartDateForRetentionHold",
					"StateOrProvince",
					"StreetAddress",
					"StsRefreshTokensValidFrom",
					"TelephoneAssistant",
					"Title",
					"UsageLocation",
					"UseExistingLiveId",
					"UseMapiRichTextFormat",
					"UsePreferMessageFormat",
					"UserCertificate",
					"UserPrincipalName",
					"UserSMimeCertificate",
					"ValidationOrganization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebPage",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AggregatedMailboxGuid",
					"Authentication",
					"Confirm",
					"Debug",
					"DGroup",
					"DomainController",
					"Eas",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Imap",
					"IncrementalSyncInterval",
					"InternalFlags",
					"Mailbox",
					"Name",
					"Olc",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Pop",
					"Puid",
					"RemoteEmailAddress",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"TargetRootFolder",
					"UserName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SyncServiceInstance", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"ActiveInstanceSleepInterval",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IsEnabled",
					"MaxVersion",
					"MinVersion",
					"Name",
					"NewTenantMaxVersion",
					"NewTenantMinVersion",
					"OutBuffer",
					"OutVariable",
					"PassiveInstanceSleepInterval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SyncUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountDisabled",
					"Confirm",
					"Debug",
					"DirSyncAuthorityMetadata",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryObjectId",
					"IsDirSynced",
					"Name",
					"NetID",
					"OnPremisesObjectId",
					"Organization",
					"OrganizationalUnit",
					"OutBuffer",
					"OutVariable",
					"ReleaseTrack",
					"RemoteRecipientType",
					"StsRefreshTokensValidFrom",
					"UsageLocation",
					"ValidationOrganization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-SystemMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"DsnCode",
					"ErrorAction",
					"ErrorVariable",
					"Internal",
					"Language",
					"OutBuffer",
					"OutVariable",
					"QuotaMessageType",
					"Text",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-TenantRelocationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutoCompletionEnabled",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"LargeTenantModeEnabled",
					"OutBuffer",
					"OutVariable",
					"RelocationStateRequested",
					"SafeLockdownSchedule",
					"TargetAccountPartition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ThrottlingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AnonymousCutoffBalance",
					"AnonymousMaxBurst",
					"AnonymousMaxConcurrency",
					"AnonymousRechargeRate",
					"ComplianceMaxExpansionDGRecipients",
					"ComplianceMaxExpansionNestedDGs",
					"Confirm",
					"CpaCutoffBalance",
					"CpaMaxBurst",
					"CpaMaxConcurrency",
					"CpaRechargeRate",
					"Debug",
					"DiscoveryMaxConcurrency",
					"DiscoveryMaxKeywords",
					"DiscoveryMaxKeywordsPerPage",
					"DiscoveryMaxMailboxes",
					"DiscoveryMaxMailboxesResultsOnly",
					"DiscoveryMaxPreviewSearchMailboxes",
					"DiscoveryMaxRefinerResults",
					"DiscoveryMaxSearchQueueDepth",
					"DiscoveryMaxStatsSearchMailboxes",
					"DiscoveryPreviewSearchResultsPageSize",
					"DiscoverySearchTimeoutPeriod",
					"DomainController",
					"EasCutoffBalance",
					"EasMaxBurst",
					"EasMaxConcurrency",
					"EasMaxDeviceDeletesPerMonth",
					"EasMaxDevices",
					"EasMaxInactivityForDeviceCleanup",
					"EasRechargeRate",
					"ErrorAction",
					"ErrorVariable",
					"EwsCutoffBalance",
					"EwsMaxBurst",
					"EwsMaxConcurrency",
					"EwsMaxSubscriptions",
					"EwsRechargeRate",
					"ExchangeMaxCmdlets",
					"ForwardeeLimit",
					"ImapCutoffBalance",
					"ImapMaxBurst",
					"ImapMaxConcurrency",
					"ImapRechargeRate",
					"IsServiceAccount",
					"MessageRateLimit",
					"Name",
					"Organization",
					"OutBuffer",
					"OutlookServiceCutoffBalance",
					"OutlookServiceMaxBurst",
					"OutlookServiceMaxConcurrency",
					"OutlookServiceMaxSocketConnectionsPerDevice",
					"OutlookServiceMaxSocketConnectionsPerUser",
					"OutlookServiceMaxSubscriptions",
					"OutlookServiceRechargeRate",
					"OutVariable",
					"OwaCutoffBalance",
					"OwaMaxBurst",
					"OwaMaxConcurrency",
					"OwaRechargeRate",
					"OwaVoiceCutoffBalance",
					"OwaVoiceMaxBurst",
					"OwaVoiceMaxConcurrency",
					"OwaVoiceRechargeRate",
					"PopCutoffBalance",
					"PopMaxBurst",
					"PopMaxConcurrency",
					"PopRechargeRate",
					"PowerShellCutoffBalance",
					"PowerShellMaxBurst",
					"PowerShellMaxCmdletQueueDepth",
					"PowerShellMaxCmdlets",
					"PowerShellMaxCmdletsTimePeriod",
					"PowerShellMaxConcurrency",
					"PowerShellMaxDestructiveCmdlets",
					"PowerShellMaxDestructiveCmdletsTimePeriod",
					"PowerShellMaxOperations",
					"PowerShellMaxRunspaces",
					"PowerShellMaxRunspacesTimePeriod",
					"PowerShellMaxTenantConcurrency",
					"PowerShellMaxTenantRunspaces",
					"PowerShellRechargeRate",
					"PswsMaxConcurrency",
					"PswsMaxRequest",
					"PswsMaxRequestTimePeriod",
					"PushNotificationCutoffBalance",
					"PushNotificationMaxBurst",
					"PushNotificationMaxBurstPerDevice",
					"PushNotificationMaxConcurrency",
					"PushNotificationRechargeRate",
					"PushNotificationRechargeRatePerDevice",
					"PushNotificationSamplingPeriodPerDevice",
					"RcaCutoffBalance",
					"RcaMaxBurst",
					"RcaMaxConcurrency",
					"RcaRechargeRate",
					"RecipientRateLimit",
					"ThrottlingPolicyScope",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("New-UMAutoAttendant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"DTMFFallbackAutoAttendant",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PilotIdentifierList",
					"SharedUMDialPlan",
					"SpeechEnabled",
					"Status",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CallerIds",
					"CallersCanInterruptGreeting",
					"CheckAutomaticReplies",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtensionsDialed",
					"KeyMappings",
					"Mailbox",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ScheduleStatus",
					"TimeOfDay",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessTelephoneNumbers",
					"Confirm",
					"CountryOrRegionCode",
					"Debug",
					"DefaultLanguage",
					"DefaultOutboundCallingLineId",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FaxEnabled",
					"GenerateUMMailboxPolicy",
					"GlobalCallRoutingScheme",
					"Name",
					"NumberOfDigitsInExtension",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"SipResourceIdentifierRequired",
					"SubscriberType",
					"URIType",
					"Verbose",
					"VoIPSecurity",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-UMHuntGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PilotIdentifier",
					"UMDialPlan",
					"UMIPGateway",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GlobalCallRoutingScheme",
					"IPAddressFamily",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"SharedUMDialPlan",
					"UMDialPlan",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-WebServicesVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplicationRoot",
					"AppPoolId",
					"AppPoolIdForManagement",
					"BasicAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"Force",
					"GzipLevel",
					"InternalNLBBypassUrl",
					"InternalUrl",
					"MRSProxyEnabled",
					"OAuthAuthentication",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Role",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebSiteName",
					"WhatIf",
					"WindowsAuthentication",
					"WSSecurityAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-X400AuthoritativeDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"X400DomainName",
					"X400ExternalRelay",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Redirect-Message", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Target",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AccountPartition", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncDeviceClass", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ActiveSyncVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AddressBookPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Recursive",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ADPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"ChildObjectTypes",
					"Confirm",
					"Debug",
					"Deny",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedRights",
					"Identity",
					"InheritanceType",
					"InheritedObjectType",
					"Instance",
					"OutBuffer",
					"OutVariable",
					"Properties",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-App", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OrganizationApp",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AuditConfigurationPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AuditConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AuthServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AutodiscoverVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AvailabilityAddressSpace", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AvailabilityConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ClientAccessArray", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-CmdletExtensionAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-CompletedDarTask", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"MaxCompletionTime",
					"TaskType",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-CompliancePolicySyncNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ConnectSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ContentFilterPhrase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Phrase",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DarTaskAggregate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"TaskType",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DatabaseAvailabilityGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DatabaseAvailabilityGroupConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DatabaseAvailabilityGroupNetwork", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DatabaseAvailabilityGroupServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConfigurationOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxServer",
					"OutBuffer",
					"OutVariable",
					"SkipDagValidation",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DeliveryAgentConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DeviceConditionalAccessPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DeviceConditionalAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DeviceConfigurationPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DeviceConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DeviceTenantPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DeviceTenantRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-EcpVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-EdgeSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-EdgeSyncEhfConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-EdgeSyncMservConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-EmailAddressPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ExchangeCertificate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Thumbprint",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ExchangeUpgradeBucket", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-FailedMSOSyncObject", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-FederatedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-FederationTrust", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-FolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ForeignConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-GlobalAddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-GlobalLocatorServiceDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-GlobalLocatorServiceMsaUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MsaUserNetId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-GlobalLocatorServiceTenant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-GlobalMonitoringOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"ItemType",
					"OutBuffer",
					"OutVariable",
					"PropertyName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HoldCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HoldComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ForceDeletion",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HostedEncryptionVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HybridConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlwaysDeleteOutlookRulesBlob",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-InterceptorRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-IntraOrganizationConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-IPAllowListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-IPAllowListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-IPBlockListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-IPBlockListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-JournalRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"LawfulInterception",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-LinkedUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Arbitration",
					"AuditLog",
					"Confirm",
					"Database",
					"Debug",
					"Disconnect",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"KeepWindowsLiveID",
					"OutBuffer",
					"OutVariable",
					"Permanent",
					"PublicFolder",
					"RemoveArbitrationMailboxWithOABsAllowed",
					"RemoveLastArbitrationMailboxAllowed",
					"StoreMailboxIdentity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxDatabase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxDatabaseCopy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxExportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxFolderPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxImportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"Confirm",
					"Debug",
					"Deny",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"InheritanceType",
					"Instance",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxRepairRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxRestoreRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MalwareFilterRecoveryItem", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ManagementRole", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Recurse",
					"UnScopedTopLevel",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ManagementRoleAssignment", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ManagementRoleEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ManagementScope", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MapiVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MergeRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-Message", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithNDR",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MessageClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MigrationBatch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MigrationEndpoint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MigrationUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MobileDevice", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxGuid",
					"MoveRequestQueue",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MSERVEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Confirm",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MSOFullSyncObjectRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ServiceInstanceId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OabVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OfflineAddressBook", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OnPremisesOrganization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-Organization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Async",
					"AuthoritativeOnly",
					"Confirm",
					"Debug",
					"EnableFileLogging",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"ForReconciliation",
					"Identity",
					"IsDatacenter",
					"IsPartnerHosted",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OrganizationalContacts", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OutlookProtectionRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OutlookProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OwaMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OwaVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PartnerApplication", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PowerShellVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PswsVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Recurse",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PublicFolderClientPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PublicFolderMailboxMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PublicFolderMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PublicFolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RequestGuid",
					"RequestQueue",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PushNotificationApp", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DomainController",
					"Identity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PushNotificationSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"RemoveStorage",
					"SubscriptionStoreId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ReceiveConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RecipientEnforcementProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RecipientPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Trustee",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RecipientTemplateProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RemoteAccountPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RemoteAccountSyncCache", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RemoteDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ResubmitRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RetentionPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RetentionPolicyTag", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RoleAssignmentPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-RoleGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassSecurityGroupManagerCheck",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"ForReconciliation",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RemoveWellKnownObjectGuid",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SearchDocumentFormat", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SecondaryDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IsDataCenter",
					"IsPartnerHosted",
					"OutBuffer",
					"OutVariable",
					"SkipRecipients",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SendConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ServerMonitoringOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"ItemType",
					"OutBuffer",
					"OutVariable",
					"PropertyName",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SharingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SiteMailboxProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-StoreMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Database",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxState",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-Subscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SupervisionListEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Entry",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RemoveAll",
					"Tag",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Arbitration",
					"Confirm",
					"Database",
					"Debug",
					"DisableWindowsLiveID",
					"Disconnect",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"KeepWindowsLiveID",
					"OutBuffer",
					"OutVariable",
					"Permanent",
					"PublicFolder",
					"RemoveArbitrationMailboxWithOABsAllowed",
					"RemoveLastArbitrationMailboxAllowed",
					"StoreMailboxIdentity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableWindowsLiveID",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"IgnoreLegalHold",
					"KeepWindowsLiveID",
					"OutBuffer",
					"OutVariable",
					"Permanent",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncServiceInstance", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SyncUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForReconciliation",
					"Identity",
					"IgnoreDefaultScope",
					"KeepWindowsLiveID",
					"OutBuffer",
					"OutVariable",
					"Permanent",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-SystemMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-TenantRelocationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Complete",
					"Confirm",
					"Debug",
					"DeprovisionedTarget",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-ThrottlingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-TransportProcessingQuotaOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UMAutoAttendant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UMHuntGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UMMailboxPrompt", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CustomAwayGreeting",
					"CustomVoicemailGreeting",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-UserPhoto", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-WebServicesVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-X400AuthoritativeDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Repair-ContactProperties", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"FixConversationIndexTracking",
					"FixDisplayName",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Request-SyncDaemonLease", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"ServiceInstance",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Reset-ContactLinking", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeUserApproved",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Reset-ProvisioningCache", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Application",
					"CacheKeys",
					"Confirm",
					"CurrentOrganization",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"GlobalCache",
					"Organizations",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Restore-DatabaseAvailabilityGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveDirectorySite",
					"AlternateWitnessDirectory",
					"AlternateWitnessServer",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"UsePrimaryWitnessServer",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Restore-DetailsTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-FolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-MailboxDatabaseCopy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableReplayLag",
					"DisableReplayLagReason",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReplicationOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-MailboxExportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-MailboxImportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-MailboxRestoreRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-MalwareFilterRecoveryItem", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Remove",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-MergeRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendWhenReadyToComplete",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-Message", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-MoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendWhenReadyToComplete",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-PublicFolderMailboxMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-PublicFolderMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-PublicFolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-Queue", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Resume-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Retry-Queue", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Resubmit",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Search-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DeleteContent",
					"DomainController",
					"DoNotIncludeArchive",
					"ErrorAction",
					"ErrorVariable",
					"EstimateResultOnly",
					"Force",
					"Identity",
					"IncludeUnsearchableItems",
					"LogLevel",
					"LogOnly",
					"OutBuffer",
					"OutVariable",
					"SearchDumpster",
					"SearchDumpsterOnly",
					"SearchQuery",
					"TargetFolder",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Search-MailboxAuditLog", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"ExternalAccess",
					"Identity",
					"LogonTypes",
					"Mailboxes",
					"Operations",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"ShowDetails",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Search-MessageTrackingReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassDelegateChecking",
					"Confirm",
					"Debug",
					"DomainController",
					"DoNotResolve",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MessageEntryId",
					"MessageId",
					"OutBuffer",
					"OutVariable",
					"Recipients",
					"ResultSize",
					"Sender",
					"Subject",
					"TraceLevel",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Select-UserForReconciliation", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Send-MapiSubmitSystemProbe", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"InternetMessageIdOfTheMessageToDeleteFromOutbox",
					"OutBuffer",
					"OutVariable",
					"RecipientEmailAddress",
					"SenderEmailAddress",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Send-SystemProbeEmail", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Attachment",
					"Body",
					"CC",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"From",
					"Html",
					"OutBuffer",
					"OutVariable",
					"Port",
					"ProbeGuid",
					"SmtpPassword",
					"SmtpServer",
					"SmtpUser",
					"Subject",
					"TestContext",
					"TimeStamp",
					"To",
					"UseSsl",
					"UseXheader",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Send-TextMessagingVerificationCode", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-AccountPartition", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EnabledForProvisioning",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Trust",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ActiveSyncDeviceAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessLevel",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ActiveSyncDeviceAutoblockThreshold", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminEmailInsert",
					"BehaviorTypeIncidenceDuration",
					"BehaviorTypeIncidenceLimit",
					"Confirm",
					"Debug",
					"DeviceBlockDuration",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ActiveSyncMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimpleDevicePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericDevicePasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"Debug",
					"DeviceEncryptionEnabled",
					"DevicePasswordEnabled",
					"DevicePasswordExpiration",
					"DevicePasswordHistory",
					"DevicePolicyRefreshInterval",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IrmEnabled",
					"IsDefault",
					"IsDefaultPolicy",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxDevicePasswordFailedAttempts",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeDeviceLock",
					"MinDevicePasswordComplexCharacters",
					"MinDevicePasswordLength",
					"MobileOTAUpdateMode",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ActiveSyncOrganizationSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddDeviceFilterRule",
					"AddDeviceFilterRuleForAllDevices",
					"AdminMailRecipients",
					"AllowAccessForUnSupportedPlatform",
					"Confirm",
					"Debug",
					"DefaultAccessLevel",
					"DeviceFilterCharacteristic",
					"DeviceFilterName",
					"DeviceFilterOperator",
					"DeviceFilterRuleName",
					"DeviceFilterValue",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OtaNotificationMailInsert",
					"OutBuffer",
					"OutVariable",
					"RemoveDeviceFilter",
					"RemoveDeviceFilterRule",
					"UserMailInsert",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ActiveSyncVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSyncServer",
					"BadItemReportingEnabled",
					"BasicAuthEnabled",
					"ClientCertAuth",
					"CompressionEnabled",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"InstallIsapiFilter",
					"InternalAuthenticationMethods",
					"InternalUrl",
					"MobileClientCertificateAuthorityURL",
					"MobileClientCertificateProvisioningEnabled",
					"MobileClientCertTemplateName",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RemoteDocumentsActionForUnknownServers",
					"RemoteDocumentsAllowedServers",
					"RemoteDocumentsBlockedServers",
					"RemoteDocumentsInternalDomainSuffixList",
					"SendWatsonReport",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthEnabled"
				}),
				new CmdletRoleEntry("Set-AddressBookPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressLists",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GlobalAddressList",
					"Identity",
					"Name",
					"OfflineAddressBook",
					"OutBuffer",
					"OutVariable",
					"RoomList",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-AddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConditionalCompany",
					"ConditionalCustomAttribute1",
					"ConditionalCustomAttribute10",
					"ConditionalCustomAttribute11",
					"ConditionalCustomAttribute12",
					"ConditionalCustomAttribute13",
					"ConditionalCustomAttribute14",
					"ConditionalCustomAttribute15",
					"ConditionalCustomAttribute2",
					"ConditionalCustomAttribute3",
					"ConditionalCustomAttribute4",
					"ConditionalCustomAttribute5",
					"ConditionalCustomAttribute6",
					"ConditionalCustomAttribute7",
					"ConditionalCustomAttribute8",
					"ConditionalCustomAttribute9",
					"ConditionalDepartment",
					"ConditionalStateOrProvince",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForceUpgrade",
					"Identity",
					"IncludedRecipients",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RecipientContainer",
					"RecipientFilter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ADServerSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConfigurationDomainController",
					"Confirm",
					"Debug",
					"DisableGls",
					"ErrorAction",
					"ErrorVariable",
					"ForceADInTemplateScope",
					"OutBuffer",
					"OutVariable",
					"PreferredGlobalCatalog",
					"PreferredServer",
					"RecipientViewRoot",
					"RunspaceServerSettings",
					"SetPreferredDomainControllers",
					"Verbose",
					"ViewEntireForest",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WriteOriginatingChangeTimestamp",
					"WriteShadowProperties",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ADSite", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HubSiteEnabled",
					"InboundMailEnabled",
					"MinorPartnerId",
					"OutBuffer",
					"OutVariable",
					"PartnerId",
					"ResponsibleForSites",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-AdSiteLink", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeCost",
					"MaxMessageSize",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-App", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DefaultStateForUser",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Name",
					"Organization",
					"OrganizationApp",
					"OutBuffer",
					"OutVariable",
					"ProvidedTo",
					"UserList",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-AuditConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-AuditConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuditOperation",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-AuthConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CertificateThumbprint",
					"ClearPreviousCertificate",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"NewCertificateEffectiveDate",
					"NewCertificateThumbprint",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PublishCertificate",
					"Realm",
					"Server",
					"ServiceName",
					"SkipImmediateCertificateDeployment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-AuthServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplicationIdentifier",
					"AppSecret",
					"AuthMetadataUrl",
					"AuthorizationEndpoint",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IsDefaultAuthorizationEndpoint",
					"IssuerIdentifier",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RefreshAuthMetadata",
					"TokenIssuingEndpoint",
					"TrustAnySSLCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-AutodiscoverVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"Identity",
					"InternalUrl",
					"LiveIdBasicAuthentication",
					"LiveIdNegotiateAuthentication",
					"LiveIdSpNegoAuthentication",
					"OAuthAuthentication",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication",
					"WSSecurityAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-AvailabilityConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OrgWideAccount",
					"OutBuffer",
					"OutVariable",
					"PerUserAccount",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-BposPlacementConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Configuration",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-BposServiceInstanceInfo", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BackSyncUrl",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"SupportsAuthorityTransfer",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-CalendarNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CalendarUpdateNotification",
					"CalendarUpdateSendDuringWorkHour",
					"Confirm",
					"DailyAgendaNotification",
					"DailyAgendaNotificationSendTime",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"MeetingReminderNotification",
					"MeetingReminderSendDuringWorkHour",
					"NextDays",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-CalendarProcessing", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddAdditionalResponse",
					"AdditionalResponse",
					"AddNewRequestsTentatively",
					"AddOrganizerToSubject",
					"AllBookInPolicy",
					"AllowConflicts",
					"AllowRecurringMeetings",
					"AllRequestInPolicy",
					"AllRequestOutOfPolicy",
					"AutomateProcessing",
					"BookingWindowInDays",
					"BookInPolicy",
					"Confirm",
					"ConflictPercentageAllowed",
					"Debug",
					"DeleteAttachments",
					"DeleteComments",
					"DeleteNonCalendarItems",
					"DeleteSubject",
					"DomainController",
					"EnableResponseDetails",
					"EnforceSchedulingHorizon",
					"ErrorAction",
					"ErrorVariable",
					"ForwardRequestsToDelegates",
					"IgnoreDefaultScope",
					"MaximumConflictInstances",
					"MaximumDurationInMinutes",
					"OrganizerInfo",
					"OutBuffer",
					"OutVariable",
					"ProcessExternalMeetingMessages",
					"RemoveForwardedMeetingNotifications",
					"RemoveOldMeetingMessages",
					"RemovePrivateProperty",
					"RequestInPolicy",
					"RequestOutOfPolicy",
					"ResourceDelegates",
					"ScheduleOnlyDuringWorkHours",
					"TentativePendingApproval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-CASMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveSyncAllowedDeviceIDs",
					"ActiveSyncBlockedDeviceIDs",
					"ActiveSyncDebugLogging",
					"ActiveSyncEnabled",
					"ActiveSyncMailboxPolicy",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ECPEnabled",
					"EmailAddresses",
					"ErrorAction",
					"ErrorVariable",
					"EwsAllowEntourage",
					"EwsAllowList",
					"EwsAllowMacOutlook",
					"EwsAllowOutlook",
					"EwsApplicationAccessPolicy",
					"EwsBlockList",
					"EwsEnabled",
					"IgnoreDefaultScope",
					"ImapEnabled",
					"ImapEnableExactRFC822Size",
					"ImapForceICalForCalendarRetrievalOption",
					"ImapMessagesRetrievalMimeFormat",
					"ImapSuppressReadReceipt",
					"ImapUseProtocolDefaults",
					"MAPIBlockOutlookExternalConnectivity",
					"MAPIBlockOutlookNonCachedMode",
					"MAPIBlockOutlookRpcHttp",
					"MAPIBlockOutlookVersions",
					"MAPIEnabled",
					"MapiHttpEnabled",
					"Name",
					"OutBuffer",
					"OutVariable",
					"OWAEnabled",
					"OWAforDevicesEnabled",
					"OwaMailboxPolicy",
					"PopEnabled",
					"PopEnableExactRFC822Size",
					"PopForceICalForCalendarRetrievalOption",
					"PopMessagesRetrievalMimeFormat",
					"PopSuppressReadReceipt",
					"PopUseProtocolDefaults",
					"PrimarySmtpAddress",
					"ResetAutoBlockedDevices",
					"SamAccountName",
					"ShowGalAsDefaultView",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ClientAccessArray", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ArrayDefinition",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ServerCount",
					"Site",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ClientAccessServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlternateServiceAccountCredential",
					"Array",
					"AutoDiscoverServiceInternalUri",
					"AutoDiscoverSiteScope",
					"CleanUpInvalidAlternateServiceAccountCredentials",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IsOutOfService",
					"OutBuffer",
					"OutVariable",
					"RemoveAlternateServiceAccountCredentials",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-CmdletExtensionAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IsSystem",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ConnectSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppAuthorizationCode",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Facebook",
					"LinkedIn",
					"OAuthVerifier",
					"OutBuffer",
					"OutVariable",
					"RedirectUri",
					"RequestSecret",
					"RequestToken",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-Contact", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DomainController",
					"ErrorAction",
					"ErrorVariable"
				}),
				new CmdletRoleEntry("Set-ContentFilterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassedRecipients",
					"BypassedSenderDomains",
					"BypassedSenders",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OutBuffer",
					"OutlookEmailPostmarkValidationEnabled",
					"OutVariable",
					"QuarantineMailbox",
					"RejectionResponse",
					"SCLDeleteEnabled",
					"SCLDeleteThreshold",
					"SCLQuarantineEnabled",
					"SCLQuarantineThreshold",
					"SCLRejectEnabled",
					"SCLRejectThreshold",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-CountryList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Countries",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-CurrentOrganization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreSiteCheck",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DarTask", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Priority",
					"TaskId",
					"TaskState",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DarTaskAggregate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"IsEnabled",
					"MaxRunningTasks",
					"TaskType",
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DatabaseAvailabilityGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowCrossSiteRpcClientAccess",
					"AlternateWitnessDirectory",
					"AlternateWitnessServer",
					"AutoDagAllServersInstalled",
					"AutoDagAutoReseedEnabled",
					"AutoDagBitlockerEnabled",
					"AutoDagDatabaseCopiesPerDatabase",
					"AutoDagDatabaseCopiesPerVolume",
					"AutoDagDatabasesRootFolderPath",
					"AutoDagDiskReclaimerEnabled",
					"AutoDagFailedVolumesRootFolderPath",
					"AutoDagFIPSCompliant",
					"AutoDagTotalNumberOfDatabases",
					"AutoDagTotalNumberOfServers",
					"AutoDagVolumesRootFolderPath",
					"Confirm",
					"DagConfiguration",
					"DatabaseAvailabilityGroupIpAddresses",
					"DatacenterActivationMode",
					"Debug",
					"DiscoverNetworks",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MailboxLoadBalanceEnabled",
					"MailboxLoadBalanceMaximumEdbFileSize",
					"MailboxLoadBalanceOverloadedThreshold",
					"MailboxLoadBalanceRelativeLoadCapacity",
					"MailboxLoadBalanceUnderloadedThreshold",
					"ManualDagNetworkConfiguration",
					"NetworkCompression",
					"NetworkEncryption",
					"OutBuffer",
					"OutVariable",
					"ReplayLagManagerEnabled",
					"ReplicationPort",
					"SkipDagValidation",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WitnessDirectory",
					"WitnessServer"
				}),
				new CmdletRoleEntry("Set-DatabaseAvailabilityGroupConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CopiesPerDatabase",
					"DatabasesPerServer",
					"DatabasesPerVolume",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MinCopiesPerDatabaseForMonitoring",
					"OutBuffer",
					"OutVariable",
					"ServersPerDag",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-DatabaseAvailabilityGroupNetwork", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreNetwork",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ReplicationEnabled",
					"Subnets",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-DCPerimeterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ConnectorId",
					"Debug",
					"DNSServerIPAddresses",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"FQDNTemplate",
					"OutboundIPAddresses",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DeliveryAgentConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressSpaces",
					"Comment",
					"Confirm",
					"Debug",
					"DeliveryProtocol",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IsScopedConnector",
					"MaxConcurrentConnections",
					"MaxMessageSize",
					"MaxMessagesPerConnection",
					"Name",
					"OutBuffer",
					"OutVariable",
					"SourceTransportServers",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-DetailsTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Pages",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-DeviceConditionalAccessPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ExchangeBinding",
					"Force",
					"Identity",
					"Name",
					"RemoveExchangeBinding",
					"RemoveSharePointBinding",
					"SharePointBinding",
					"Verbose",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DeviceConditionalAccessRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountName",
					"AccountUserName",
					"AllowAppStore",
					"AllowAssistantWhileLocked",
					"AllowConvenienceLogon",
					"AllowDiagnosticSubmission",
					"AllowiCloudBackup",
					"AllowiCloudDocSync",
					"AllowiCloudPhotoSync",
					"AllowJailbroken",
					"AllowMove",
					"AllowPassbookWhileLocked",
					"AllowRecentAddressSyncing",
					"AllowScreenshot",
					"AllowSimplePassword",
					"AllowVideoConferencing",
					"AllowVoiceAssistant",
					"AllowVoiceDialing",
					"AntiVirusSignatureStatus",
					"AntiVirusStatus",
					"AppsRating",
					"AutoUpdateStatus",
					"BluetoothEnabled",
					"CameraEnabled",
					"ContentType",
					"DaysToSync",
					"Debug",
					"DomainController",
					"EmailAddress",
					"Enabled",
					"EnableRemovableStorage",
					"ErrorAction",
					"ExchangeActiveSyncHost",
					"FirewallStatus",
					"ForceAppStorePassword",
					"ForceEncryptedBackup",
					"Identity",
					"MaxPasswordAttemptsBeforeWipe",
					"MaxPasswordGracePeriod",
					"MoviesRating",
					"PasswordComplexity",
					"PasswordExpirationDays",
					"PasswordHistoryCount",
					"PasswordMinComplexChars",
					"PasswordMinimumLength",
					"PasswordQuality",
					"PasswordRequired",
					"PasswordTimeout",
					"PhoneMemoryEncrypted",
					"RegionRatings",
					"SmartScreenEnabled",
					"SyncSchedule",
					"SystemSecurityTLS",
					"TargetGroups",
					"TVShowsRating",
					"UseOnlyInEmail",
					"UserAccountControlStatus",
					"UseSMIME",
					"UseSSL",
					"Verbose",
					"WLANEnabled",
					"WorkFoldersSyncUrl",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DeviceConfigurationPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ExchangeBinding",
					"Force",
					"Identity",
					"Name",
					"RemoveExchangeBinding",
					"RemoveSharePointBinding",
					"SharePointBinding",
					"Verbose",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DeviceConfigurationRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountName",
					"AccountUserName",
					"AllowAppStore",
					"AllowAssistantWhileLocked",
					"AllowConvenienceLogon",
					"AllowDiagnosticSubmission",
					"AllowiCloudBackup",
					"AllowiCloudDocSync",
					"AllowiCloudPhotoSync",
					"AllowMove",
					"AllowPassbookWhileLocked",
					"AllowRecentAddressSyncing",
					"AllowScreenshot",
					"AllowSimplePassword",
					"AllowVideoConferencing",
					"AllowVoiceAssistant",
					"AllowVoiceDialing",
					"AntiVirusSignatureStatus",
					"AntiVirusStatus",
					"AppsRating",
					"AutoUpdateStatus",
					"BluetoothEnabled",
					"CameraEnabled",
					"ContentType",
					"DaysToSync",
					"Debug",
					"DomainController",
					"EmailAddress",
					"Enabled",
					"EnableRemovableStorage",
					"ErrorAction",
					"ExchangeActiveSyncHost",
					"FirewallStatus",
					"ForceAppStorePassword",
					"ForceEncryptedBackup",
					"Identity",
					"MaxPasswordAttemptsBeforeWipe",
					"MaxPasswordGracePeriod",
					"MoviesRating",
					"PasswordComplexity",
					"PasswordExpirationDays",
					"PasswordHistoryCount",
					"PasswordMinComplexChars",
					"PasswordMinimumLength",
					"PasswordQuality",
					"PasswordRequired",
					"PasswordTimeout",
					"PhoneMemoryEncrypted",
					"RegionRatings",
					"SmartScreenEnabled",
					"SyncSchedule",
					"SystemSecurityTLS",
					"TargetGroups",
					"TVShowsRating",
					"UseOnlyInEmail",
					"UserAccountControlStatus",
					"UseSMIME",
					"UseSSL",
					"Verbose",
					"WLANEnabled",
					"WorkFoldersSyncUrl",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DeviceTenantPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"Force",
					"Identity",
					"Name",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DeviceTenantRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplyPolicyTo",
					"BlockUnsupportedDevices",
					"Debug",
					"DomainController",
					"Enabled",
					"ExclusionList",
					"Identity",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DlpCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddOneDriveBinding",
					"AddSharePointBinding",
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"Force",
					"Identity",
					"Name",
					"RemoveOneDriveBinding",
					"RemoveSharePointBinding",
					"RetryDistribution",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DlpComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessScopeIs",
					"BlockAccess",
					"Comment",
					"ContentContainsSensitiveInformation",
					"ContentPropertyContainsWords",
					"Debug",
					"Disabled",
					"DomainController",
					"ErrorAction",
					"Identity",
					"Name",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-EcpVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdfsAuthentication",
					"AdminEnabled",
					"BasicAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"FormsAuthentication",
					"GzipLevel",
					"Identity",
					"InternalUrl",
					"LiveIdAuthentication",
					"OutBuffer",
					"OutVariable",
					"OwaOptionsEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-EdgeSyncEhfConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminSyncEnabled",
					"AuthenticationCredential",
					"BackupLeaseLocation",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PrimaryLeaseLocation",
					"ProvisioningURL",
					"ResellerId",
					"Verbose",
					"Version",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-EdgeSyncMservConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BackupLeaseLocation",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"LocalCertificate",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PrimaryLeaseLocation",
					"ProvisionUrl",
					"RemoteCertificate",
					"SettingUrl",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-EdgeSyncServiceConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConfigurationSyncInterval",
					"Confirm",
					"CookieValidDuration",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FailoverDCInterval",
					"LockDuration",
					"LockRenewalDuration",
					"LogEnabled",
					"LogLevel",
					"LogMaxAge",
					"LogMaxDirectorySize",
					"LogMaxFileSize",
					"LogPath",
					"Name",
					"OptionDuration",
					"OutBuffer",
					"OutVariable",
					"RecipientSyncInterval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-EventLogLevel", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Level",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ExchangeAssistanceConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CommunityLinkDisplayEnabled",
					"CommunityURL",
					"Confirm",
					"ControlPanelFeedbackEnabled",
					"ControlPanelFeedbackURL",
					"ControlPanelHelpURL",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeHelpAppOnline",
					"ManagementConsoleFeedbackEnabled",
					"ManagementConsoleFeedbackURL",
					"ManagementConsoleHelpURL",
					"OutBuffer",
					"OutVariable",
					"OWAFeedbackEnabled",
					"OWAFeedbackURL",
					"OWAHelpURL",
					"OWALightFeedbackEnabled",
					"OWALightFeedbackURL",
					"OWALightHelpURL",
					"PrivacyLinkDisplayEnabled",
					"PrivacyStatementURL",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveAccountPageURL",
					"WindowsLiveAccountURLEnabled"
				}),
				new CmdletRoleEntry("Set-ExchangeServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CustomerFeedbackEnabled",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorReportingEnabled",
					"ErrorVariable",
					"InternetWebProxy",
					"MailboxProvisioningAttributes",
					"MailboxRelease",
					"MonitoringGroup",
					"OutBuffer",
					"OutVariable",
					"ProductKey",
					"StaticConfigDomainController",
					"StaticDomainControllers",
					"StaticExcludedDomainControllers",
					"StaticGlobalCatalogs",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ExchangeUpgradeBucket", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CompleteUpgradeStatus",
					"Confirm",
					"Debug",
					"Description",
					"DisabledUpgradeStages",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"MaxMailboxes",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"StartDate",
					"StartUpgradeStatus",
					"Status",
					"UpgradeOrganizationMailboxesStatus",
					"UpgradeUserMailboxesStatus",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-FailedMSOSyncObject", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsIgnoredInHaltCondition",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-FolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"BadItemLimit",
					"CompleteAfter",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IncrementalSyncInterval",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"SuspendWhenReadyToComplete",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ForeignConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressSpaces",
					"Comment",
					"Confirm",
					"Debug",
					"DomainController",
					"DropDirectory",
					"DropDirectoryQuota",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IsScopedConnector",
					"MaxMessageSize",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RelayDsnRequired",
					"SourceTransportServers",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-FrontendTransportService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AgentLogEnabled",
					"AgentLogMaxAge",
					"AgentLogMaxDirectorySize",
					"AgentLogMaxFileSize",
					"AgentLogPath",
					"AntispamAgentsEnabled",
					"AttributionLogEnabled",
					"AttributionLogMaxAge",
					"AttributionLogMaxDirectorySize",
					"AttributionLogMaxFileSize",
					"AttributionLogPath",
					"Confirm",
					"ConnectivityLogEnabled",
					"ConnectivityLogMaxAge",
					"ConnectivityLogMaxDirectorySize",
					"ConnectivityLogMaxFileSize",
					"ConnectivityLogPath",
					"Debug",
					"DnsLogEnabled",
					"DnsLogMaxAge",
					"DnsLogMaxDirectorySize",
					"DnsLogMaxFileSize",
					"DnsLogPath",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDNSAdapterEnabled",
					"ExternalDNSAdapterGuid",
					"ExternalDNSProtocolOption",
					"ExternalDNSServers",
					"ExternalIPAddress",
					"InternalDNSAdapterEnabled",
					"InternalDNSAdapterGuid",
					"InternalDNSProtocolOption",
					"InternalDNSServers",
					"IntraOrgConnectorProtocolLoggingLevel",
					"MaxConnectionRatePerMinute",
					"OutBuffer",
					"OutVariable",
					"ReceiveProtocolLogMaxAge",
					"ReceiveProtocolLogMaxDirectorySize",
					"ReceiveProtocolLogMaxFileSize",
					"ReceiveProtocolLogPath",
					"ResourceLogEnabled",
					"ResourceLogMaxAge",
					"ResourceLogMaxDirectorySize",
					"ResourceLogMaxFileSize",
					"ResourceLogPath",
					"SendProtocolLogMaxAge",
					"SendProtocolLogMaxDirectorySize",
					"SendProtocolLogMaxFileSize",
					"SendProtocolLogPath",
					"ServerState",
					"TransientFailureRetryCount",
					"TransientFailureRetryInterval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-GlobalAddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConditionalCompany",
					"ConditionalCustomAttribute1",
					"ConditionalCustomAttribute10",
					"ConditionalCustomAttribute11",
					"ConditionalCustomAttribute12",
					"ConditionalCustomAttribute13",
					"ConditionalCustomAttribute14",
					"ConditionalCustomAttribute15",
					"ConditionalCustomAttribute2",
					"ConditionalCustomAttribute3",
					"ConditionalCustomAttribute4",
					"ConditionalCustomAttribute5",
					"ConditionalCustomAttribute6",
					"ConditionalCustomAttribute7",
					"ConditionalCustomAttribute8",
					"ConditionalCustomAttribute9",
					"ConditionalDepartment",
					"ConditionalStateOrProvince",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForceUpgrade",
					"Identity",
					"IncludedRecipients",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RecipientContainer",
					"RecipientFilter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-GlobalLocatorServiceDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainFlags",
					"DomainInUse",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-GlobalLocatorServiceMsaUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"MsaUserMemberName",
					"MsaUserNetId",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-GlobalLocatorServiceTenant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountForest",
					"Confirm",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"PrimarySite",
					"ResourceForest",
					"SmtpNextHopDomain",
					"TenantContainerCN",
					"TenantFlags",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HoldCompliancePolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddExchangeBinding",
					"AddSharePointBinding",
					"Comment",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"Force",
					"Identity",
					"Name",
					"RemoveExchangeBinding",
					"RemoveSharePointBinding",
					"RetryDistribution",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HoldComplianceRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comment",
					"ContentDateFrom",
					"ContentDateTo",
					"ContentMatchQuery",
					"Debug",
					"Disabled",
					"DomainController",
					"ErrorAction",
					"HoldContent",
					"HoldDurationDisplayHint",
					"Identity",
					"Name",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedEncryptionVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowedFileTypes",
					"AllowedMimeTypes",
					"AlwaysShowBcc",
					"BlockedFileTypes",
					"BlockedMimeTypes",
					"CheckForForgottenAttachments",
					"ComposeFontColor",
					"ComposeFontName",
					"ComposeFontSize",
					"Confirm",
					"Debug",
					"DomainController",
					"E4EConfigurationXML",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"ForceSaveFileTypes",
					"ForceSaveMimeTypes",
					"GzipLevel",
					"HideMailTipsByDefault",
					"Identity",
					"InternalUrl",
					"MailTipsLargeAudienceThreshold",
					"MaxAttachmentSizeKB",
					"MaxEmailStringSize",
					"MaxEncryptedContentSizeKB",
					"MaxFwdAllowed",
					"MaxImageSizeKB",
					"MaxMessageSizeInKb",
					"MaxPortalStringSize",
					"MaxRecipientsPerMessage",
					"OutBuffer",
					"OutVariable",
					"PortalInactivityTimeout",
					"TDSTimeOut",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HotmailSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableAsPoison",
					"DisplayName",
					"DomainController",
					"Enabled",
					"EnablePoisonSubscription",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Password",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HybridConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientAccessServers",
					"Confirm",
					"Debug",
					"DomainController",
					"Domains",
					"EdgeTransportServers",
					"ErrorAction",
					"ErrorVariable",
					"ExternalIPAddresses",
					"Features",
					"Name",
					"OnPremisesSmartHost",
					"OutBuffer",
					"OutVariable",
					"ReceivingTransportServers",
					"SendingTransportServers",
					"ServiceInstance",
					"TlsCertificateName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HybridMailflow", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CentralizedTransportEnabled",
					"CertificateSubject",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"InboundIPs",
					"OnPremisesFQDN",
					"Organization",
					"OutboundDomains",
					"OutBuffer",
					"OutVariable",
					"SecureMailEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ImapSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthenticatedConnectionTimeout",
					"Banner",
					"CalendarItemRetrievalOption",
					"Confirm",
					"Debug",
					"DomainController",
					"EnableExactRFC822Size",
					"EnableGSSAPIAndNTLMAuth",
					"EnforceCertificateErrors",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionPolicy",
					"ExternalConnectionSettings",
					"InternalConnectionSettings",
					"LiveIdBasicAuthReplacement",
					"LogFileLocation",
					"LogFileRollOverSettings",
					"LoginType",
					"LogPerFileSizeQuota",
					"MaxCommandSize",
					"MaxConnectionFromSingleIP",
					"MaxConnections",
					"MaxConnectionsPerUser",
					"MessageRetrievalMimeFormat",
					"OutBuffer",
					"OutVariable",
					"OwaServerUrl",
					"PreAuthenticatedConnectionTimeout",
					"ProtocolLogEnabled",
					"ProxyTargetPort",
					"Server",
					"ShowHiddenFoldersEnabled",
					"SSLBindings",
					"SuppressReadReceipt",
					"UnencryptedOrTLSBindings",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"X509CertificateName",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ImapSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableAsPoison",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"Enabled",
					"EnablePoisonSubscription",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUserName",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResendVerification",
					"ValidateSecret",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-InboxRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AlwaysDeleteOutlookRulesBlob",
					"ApplyCategory",
					"BodyContainsWords",
					"Confirm",
					"CopyToFolder",
					"Debug",
					"DeleteMessage",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfBodyContainsWords",
					"ExceptIfFlaggedForAction",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromSubscription",
					"ExceptIfHasAttachment",
					"ExceptIfHasClassification",
					"ExceptIfHeaderContainsWords",
					"ExceptIfMessageTypeMatches",
					"ExceptIfMyNameInCcBox",
					"ExceptIfMyNameInToBox",
					"ExceptIfMyNameInToOrCcBox",
					"ExceptIfMyNameNotInToBox",
					"ExceptIfReceivedAfterDate",
					"ExceptIfReceivedBeforeDate",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfSentOnlyToMe",
					"ExceptIfSentTo",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfWithImportance",
					"ExceptIfWithinSizeRangeMaximum",
					"ExceptIfWithinSizeRangeMinimum",
					"ExceptIfWithSensitivity",
					"FlaggedForAction",
					"Force",
					"ForwardAsAttachmentTo",
					"ForwardTo",
					"From",
					"FromAddressContainsWords",
					"FromSubscription",
					"HasAttachment",
					"HasClassification",
					"HeaderContainsWords",
					"Identity",
					"Mailbox",
					"MarkAsRead",
					"MarkImportance",
					"MessageTypeMatches",
					"MoveToFolder",
					"MyNameInCcBox",
					"MyNameInToBox",
					"MyNameInToOrCcBox",
					"MyNameNotInToBox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ReceivedAfterDate",
					"ReceivedBeforeDate",
					"RecipientAddressContainsWords",
					"RedirectTo",
					"SendTextMessageNotificationTo",
					"SentOnlyToMe",
					"SentTo",
					"StopProcessingRules",
					"SubjectContainsWords",
					"SubjectOrBodyContainsWords",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"WithinSizeRangeMaximum",
					"WithinSizeRangeMinimum",
					"WithSensitivity",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-InterceptorRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Condition",
					"Confirm",
					"CreatedBy",
					"CustomResponseCode",
					"CustomResponseString",
					"Dag",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Event",
					"ExpireTime",
					"Forest",
					"OutBuffer",
					"OutVariable",
					"Path",
					"Server",
					"Site",
					"Source",
					"TimeInterval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-IntraOrganizationConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DiscoveryEndpoint",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"OutBuffer",
					"OutVariable",
					"TargetAddressDomains",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-IPAllowListConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-IPAllowListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AnyMatch",
					"BitmaskMatch",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IPAddressesMatch",
					"LookupDomain",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-IPAllowListProvidersConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-IPBlockListConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"MachineEntryRejectionResponse",
					"OutBuffer",
					"OutVariable",
					"StaticEntryRejectionResponse",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-IPBlockListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AnyMatch",
					"BitmaskMatch",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IPAddressesMatch",
					"LookupDomain",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RejectionResponse",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-IPBlockListProvidersConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassedRecipients",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-IRMConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"JournalReportDecryptionEnabled"
				}),
				new CmdletRoleEntry("Set-JournalRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExpiryDate",
					"FullReport",
					"Identity",
					"JournalEmailAddress",
					"LawfulInterception",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Recipient",
					"Scope",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-LinkedUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowUMCallsFromNonUsers",
					"AssistantName",
					"CertificateSubject",
					"City",
					"Company",
					"Confirm",
					"CountryOrRegion",
					"CreateDTMFMap",
					"Debug",
					"Department",
					"DisplayName",
					"DomainController",
					"EmwsEnabled",
					"ErrorAction",
					"ErrorVariable",
					"Fax",
					"FirstName",
					"GeoCoordinates",
					"HomePhone",
					"IgnoreDefaultScope",
					"Initials",
					"LastName",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"Manager",
					"MobilePhone",
					"Name",
					"NetID",
					"Notes",
					"Office",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"OutBuffer",
					"OutVariable",
					"Pager",
					"Phone",
					"PhoneticDisplayName",
					"PostalCode",
					"PostOfficeBox",
					"ResetPasswordOnNextLogon",
					"SamAccountName",
					"SeniorityIndex",
					"SimpleDisplayName",
					"SKUAssigned",
					"StateOrProvince",
					"StreetAddress",
					"TelephoneAssistant",
					"Title",
					"UMCallingLineIds",
					"UMDtmfMap",
					"UserPrincipalName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebPage",
					"WhatIf",
					"WindowsEmailAddress"
				}),
				new CmdletRoleEntry("Set-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"AddAggregatedAccount",
					"AddOnSKUCapability",
					"AddressBookPolicy",
					"AggregatedMailboxGuid",
					"Alias",
					"AntispamBypassEnabled",
					"ApplyMandatoryProperties",
					"Arbitration",
					"ArbitrationMailbox",
					"ArchiveDatabase",
					"ArchiveDomain",
					"ArchiveName",
					"ArchiveQuota",
					"ArchiveStatus",
					"ArchiveWarningQuota",
					"AuditAdmin",
					"AuditDelegate",
					"AuditEnabled",
					"AuditLog",
					"AuditLogAgeLimit",
					"AuditOwner",
					"BypassLiveId",
					"BypassModerationFromSendersOrMembers",
					"CalendarLoggingQuota",
					"CalendarRepairDisabled",
					"CalendarVersionStoreDisabled",
					"ClientExtensions",
					"Confirm",
					"CreateDTMFMap",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Database",
					"Debug",
					"DefaultPublicFolderMailbox",
					"DeliverToMailboxAndForward",
					"DisplayName",
					"DomainController",
					"DowngradeHighPriorityMessagesEnabled",
					"DumpsterMessagesPerFolderCountReceiveQuota",
					"DumpsterMessagesPerFolderCountWarningQuota",
					"EmailAddresses",
					"EmailAddressPolicyEnabled",
					"EnableRoomMailboxAccount",
					"EndDateForRetentionHold",
					"ErrorAction",
					"ErrorVariable",
					"EvictLiveId",
					"ExtendedPropertiesCountQuota",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalOofOptions",
					"FederatedIdentity",
					"FolderHierarchyChildrenCountReceiveQuota",
					"FolderHierarchyChildrenCountWarningQuota",
					"FolderHierarchyDepthReceiveQuota",
					"FolderHierarchyDepthWarningQuota",
					"FoldersCountReceiveQuota",
					"FoldersCountWarningQuota",
					"Force",
					"ForwardingAddress",
					"ForwardingSmtpAddress",
					"GMGen",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"IgnoreDefaultScope",
					"ImListMigrationCompleted",
					"ImmutableId",
					"IsExcludedFromServingHierarchy",
					"IsHierarchyReady",
					"IssueWarningQuota",
					"JournalArchiveAddress",
					"Languages",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"LitigationHoldDate",
					"LitigationHoldDuration",
					"LitigationHoldOwner",
					"MailboxContainerGuid",
					"MailboxMessagesPerFolderCountReceiveQuota",
					"MailboxMessagesPerFolderCountWarningQuota",
					"MailboxPlan",
					"MailboxProvisioningConstraint",
					"MailboxProvisioningPreferences",
					"MailRouting",
					"MailTip",
					"MailTipTranslations",
					"Management",
					"MaxBlockedSenders",
					"MaxReceiveSize",
					"MaxSafeSenders",
					"MaxSendSize",
					"MessageCopyForSendOnBehalfEnabled",
					"MessageCopyForSentAsEnabled",
					"MessageTracking",
					"MessageTrackingReadStatusEnabled",
					"MicrosoftOnlineServicesID",
					"Migration",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"NewPassword",
					"OABGen",
					"Office",
					"OfflineAddressBook",
					"OldPassword",
					"OMEncryption",
					"OutBuffer",
					"OutVariable",
					"Password",
					"PrimarySmtpAddress",
					"ProhibitSendQuota",
					"ProhibitSendReceiveQuota",
					"PstProvider",
					"PublicFolder",
					"QueryBaseDN",
					"QueryBaseDNRestrictionEnabled",
					"RecipientLimits",
					"RecoverableItemsQuota",
					"RecoverableItemsWarningQuota",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"RemoteAccountPolicy",
					"RemoteRecipientType",
					"RemoveAggregatedAccount",
					"RemoveManagedFolderAndPolicy",
					"RemovePicture",
					"RemoveSpokenName",
					"RequireSenderAuthenticationEnabled",
					"ResetPasswordOnNextLogon",
					"ResourceCapacity",
					"ResourceCustom",
					"RetainDeletedItemsFor",
					"RetainDeletedItemsUntilBackup",
					"RetentionComment",
					"RetentionHoldEnabled",
					"RetentionPolicy",
					"RetentionUrl",
					"RoleAssignmentPolicy",
					"RoomMailboxPassword",
					"RulesQuota",
					"SamAccountName",
					"SCLDeleteEnabled",
					"SCLDeleteThreshold",
					"SCLJunkEnabled",
					"SCLJunkThreshold",
					"SCLQuarantineEnabled",
					"SCLQuarantineThreshold",
					"SCLRejectEnabled",
					"SCLRejectThreshold",
					"SecondaryAddress",
					"SecondaryDialPlan",
					"SendModerationNotifications",
					"SharingPolicy",
					"SimpleDisplayName",
					"SingleItemRecoveryEnabled",
					"SkipMailboxProvisioningConstraintValidation",
					"SKUAssigned",
					"SKUCapability",
					"StartDateForRetentionHold",
					"SuiteServiceStorage",
					"TenantUpgrade",
					"ThrottlingPolicy",
					"Type",
					"UMDataStorage",
					"UMDtmfMap",
					"UMGrammar",
					"UnifiedMailbox",
					"UsageLocation",
					"UseDatabaseQuotaDefaults",
					"UseDatabaseRetentionDefaults",
					"UserCertificate",
					"UserPrincipalName",
					"UserSMimeCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsEmailAddress",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("Set-MailboxAuditBypassAssociation", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuditBypassEnabled",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxAutoReplyConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutoReplyState",
					"Confirm",
					"Debug",
					"DomainController",
					"EndTime",
					"ErrorAction",
					"ErrorVariable",
					"ExternalAudience",
					"ExternalMessage",
					"IgnoreDefaultScope",
					"InternalMessage",
					"OutBuffer",
					"OutVariable",
					"StartTime",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxCalendarConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DefaultReminderTime",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FirstWeekOfYear",
					"OutBuffer",
					"OutVariable",
					"RemindersEnabled",
					"ReminderSoundEnabled",
					"ShowWeekNumbers",
					"TimeIncrement",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WeatherEnabled",
					"WeatherLocations",
					"WeatherUnit",
					"WeekStartDay",
					"WhatIf",
					"WorkDays",
					"WorkingHoursEndTime",
					"WorkingHoursStartTime",
					"WorkingHoursTimeZone"
				}),
				new CmdletRoleEntry("Set-MailboxCalendarFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DetailLevel",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"PublishDateRangeFrom",
					"PublishDateRangeTo",
					"PublishEnabled",
					"ResetUrl",
					"SearchableUrlEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxDatabase", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowFileRestore",
					"AutoDagExcludeFromMonitoring",
					"AutoDatabaseMountDial",
					"BackgroundDatabaseMaintenance",
					"CalendarLoggingQuota",
					"CircularLoggingEnabled",
					"Confirm",
					"DatabaseGroup",
					"DataMoveReplicationConstraint",
					"Debug",
					"DeletedItemRetention",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"EventHistoryRetentionPeriod",
					"IndexEnabled",
					"IsExcludedFromInitialProvisioning",
					"IsExcludedFromProvisioning",
					"IssueWarningQuota",
					"IsSuspendedFromProvisioning",
					"JournalRecipient",
					"MailboxLoadBalanceEnabled",
					"MailboxLoadBalanceMaximumEdbFileSize",
					"MailboxLoadBalanceOverloadedThreshold",
					"MailboxLoadBalanceRelativeLoadCapacity",
					"MailboxLoadBalanceUnderloadedThreshold",
					"MailboxProvisioningAttributes",
					"MailboxRetention",
					"MaintenanceSchedule",
					"MountAtStartup",
					"Name",
					"OfflineAddressBook",
					"OutBuffer",
					"OutVariable",
					"ProhibitSendQuota",
					"ProhibitSendReceiveQuota",
					"PublicFolderDatabase",
					"QuotaNotificationSchedule",
					"RecoverableItemsQuota",
					"RecoverableItemsWarningQuota",
					"RetainDeletedItemsUntilBackup",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxDatabaseCopy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivationPreference",
					"ClearHostServer",
					"Confirm",
					"DatabaseCopyAutoActivationPolicy",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"ReplayLagTime",
					"TruncationLagTime",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxExportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RehomeRequest",
					"RemoteCredential",
					"RemoteHostName",
					"SkipMerging",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxFolderPermission", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessRights",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MailboxImportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RehomeRequest",
					"RemoteCredential",
					"RemoteHostName",
					"SkipMerging",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxJunkEmailConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BlockedSendersAndDomains",
					"Confirm",
					"ContactsTrusted",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"TrustedListsOnly",
					"TrustedSendersAndDomains",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxMessageConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AfterMoveOrDeleteBehavior",
					"AlwaysShowBcc",
					"AlwaysShowFrom",
					"AutoAddSignature",
					"AutoAddSignatureOnMobile",
					"CheckForForgottenAttachments",
					"Confirm",
					"ConversationSortOrder",
					"Debug",
					"DefaultFontColor",
					"DefaultFontFlags",
					"DefaultFontName",
					"DefaultFontSize",
					"DefaultFormat",
					"DomainController",
					"EmailComposeMode",
					"EmptyDeletedItemsOnLogoff",
					"ErrorAction",
					"ErrorVariable",
					"HideDeletedItems",
					"IgnoreDefaultScope",
					"NewItemNotification",
					"OutBuffer",
					"OutVariable",
					"PreviewMarkAsReadBehavior",
					"PreviewMarkAsReadDelaytime",
					"ReadReceiptResponse",
					"SendAddressDefault",
					"ShowConversationAsTree",
					"SignatureHtml",
					"SignatureText",
					"SignatureTextOnMobile",
					"UseDefaultSignatureOnMobile",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddOnSKUCapability",
					"Alias",
					"AntispamBypassEnabled",
					"ApplyMandatoryProperties",
					"ArchiveDomain",
					"ArchiveName",
					"ArchiveQuota",
					"ArchiveStatus",
					"ArchiveWarningQuota",
					"AuditAdmin",
					"AuditDelegate",
					"AuditEnabled",
					"AuditLogAgeLimit",
					"CalendarLoggingQuota",
					"CalendarRepairDisabled",
					"CalendarVersionStoreDisabled",
					"Confirm",
					"CustomAttribute1",
					"Database",
					"Debug",
					"DeliverToMailboxAndForward",
					"DisplayName",
					"DomainController",
					"DowngradeHighPriorityMessagesEnabled",
					"EmailAddressPolicyEnabled",
					"EndDateForRetentionHold",
					"ErrorAction",
					"ErrorVariable",
					"ExternalOofOptions",
					"Force",
					"HiddenFromAddressListsEnabled",
					"IgnoreDefaultScope",
					"IsDefault",
					"IsDefaultForPreviousVersion",
					"IssueWarningQuota",
					"LitigationHoldDate",
					"LitigationHoldEnabled",
					"LitigationHoldOwner",
					"MailboxPlanRelease",
					"ManagedFolderMailboxPolicy",
					"MaxBlockedSenders",
					"MaxReceiveSize",
					"MaxSafeSenders",
					"MaxSendSize",
					"MessageTrackingReadStatusEnabled",
					"Name",
					"OfflineAddressBook",
					"OutBuffer",
					"OutVariable",
					"ProhibitSendQuota",
					"ProhibitSendReceiveQuota",
					"QueryBaseDNRestrictionEnabled",
					"RecipientLimits",
					"RecoverableItemsQuota",
					"RecoverableItemsWarningQuota",
					"RemoteAccountPolicy",
					"RemoteRecipientType",
					"RequireSenderAuthenticationEnabled",
					"ResetPasswordOnNextLogon",
					"RetainDeletedItemsFor",
					"RetainDeletedItemsUntilBackup",
					"RetentionComment",
					"RetentionHoldEnabled",
					"RetentionPolicy",
					"RetentionUrl",
					"RoleAssignmentPolicy",
					"RulesQuota",
					"SCLDeleteEnabled",
					"SCLDeleteThreshold",
					"SCLJunkEnabled",
					"SCLJunkThreshold",
					"SCLQuarantineEnabled",
					"SCLQuarantineThreshold",
					"SCLRejectEnabled",
					"SCLRejectThreshold",
					"SharingPolicy",
					"SingleItemRecoveryEnabled",
					"SKUCapability",
					"StartDateForRetentionHold",
					"ThrottlingPolicy",
					"UseDatabaseQuotaDefaults",
					"UseDatabaseRetentionDefaults",
					"UserCertificate",
					"UserPrincipalName",
					"UserSMimeCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxRegionalConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"DateFormat",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Language",
					"LocalizeDefaultFolderName",
					"OutBuffer",
					"OutVariable",
					"TimeFormat",
					"TimeZone",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxRestoreRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RehomeRequest",
					"RemoteDatabaseGuid",
					"RemoteHostName",
					"SkipMerging",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllPublicFolderSources",
					"AllSourceMailboxes",
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EstimateOnly",
					"ExcludeDuplicateMessages",
					"Force",
					"Identity",
					"IncludeKeywordStatistics",
					"IncludeUnsearchableItems",
					"InPlaceHoldEnabled",
					"ItemHoldPeriod",
					"Language",
					"LogLevel",
					"MessageTypes",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PublicFolderSources",
					"Recipients",
					"SearchQuery",
					"Senders",
					"SourceMailboxes",
					"StartDate",
					"StatisticsStartIndex",
					"StatusMailRecipients",
					"TargetMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MailboxServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutoDagServerConfigured",
					"AutoDatabaseMountDial",
					"CalendarRepairIntervalEndWindow",
					"CalendarRepairLogDirectorySizeLimit",
					"CalendarRepairLogEnabled",
					"CalendarRepairLogFileAgeLimit",
					"CalendarRepairLogPath",
					"CalendarRepairLogSubjectLoggingEnabled",
					"CalendarRepairMissingItemFixDisabled",
					"CalendarRepairMode",
					"CalendarRepairWorkCycle",
					"CalendarRepairWorkCycleCheckpoint",
					"Confirm",
					"DarTaskStoreTimeBasedAssistantWorkCycle",
					"DarTaskStoreTimeBasedAssistantWorkCycleCheckpoint",
					"DatabaseCopyActivationDisabledAndMoveNow",
					"DatabaseCopyAutoActivationPolicy",
					"Debug",
					"DirectoryProcessorWorkCycle",
					"DirectoryProcessorWorkCycleCheckpoint",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FaultZone",
					"FolderLogForManagedFoldersEnabled",
					"ForceGroupMetricsGeneration",
					"GroupMailboxWorkCycle",
					"GroupMailboxWorkCycleCheckpoint",
					"InferenceDataCollectionWorkCycle",
					"InferenceDataCollectionWorkCycleCheckpoint",
					"InferenceTrainingWorkCycle",
					"InferenceTrainingWorkCycleCheckpoint",
					"IsExcludedFromProvisioning",
					"JournalingLogForManagedFoldersEnabled",
					"JunkEmailOptionsCommitterWorkCycle",
					"Locale",
					"LogDirectorySizeLimitForManagedFolders",
					"LogFileAgeLimitForManagedFolders",
					"LogFileSizeLimitForManagedFolders",
					"LogPathForManagedFolders",
					"MailboxAssociationReplicationWorkCycle",
					"MailboxAssociationReplicationWorkCycleCheckpoint",
					"MailboxProcessorWorkCycle",
					"MailboxProcessorWorkCycleCheckpoint",
					"ManagedFolderAssistantSchedule",
					"ManagedFolderWorkCycle",
					"ManagedFolderWorkCycleCheckpoint",
					"MAPIEncryptionRequired",
					"MaximumActiveDatabases",
					"MaximumPreferredActiveDatabases",
					"MaxTransportSyncDispatchers",
					"MigrationLogFilePath",
					"MigrationLogLoggingLevel",
					"MigrationLogMaxAge",
					"MigrationLogMaxDirectorySize",
					"MigrationLogMaxFileSize",
					"OABGeneratorWorkCycle",
					"OABGeneratorWorkCycleCheckpoint",
					"OutBuffer",
					"OutVariable",
					"PeopleCentricTriageWorkCycle",
					"PeopleCentricTriageWorkCycleCheckpoint",
					"PeopleRelevanceWorkCycle",
					"PeopleRelevanceWorkCycleCheckpoint",
					"ProbeTimeBasedAssistantWorkCycle",
					"ProbeTimeBasedAssistantWorkCycleCheckpoint",
					"PublicFolderWorkCycle",
					"PublicFolderWorkCycleCheckpoint",
					"RetentionLogForManagedFoldersEnabled",
					"SearchIndexRepairTimeBasedAssistantWorkCycle",
					"SearchIndexRepairTimeBasedAssistantWorkCycleCheckpoint",
					"SharePointSignalStoreWorkCycle",
					"SharePointSignalStoreWorkCycleCheckpoint",
					"SharingPolicySchedule",
					"SharingPolicyWorkCycle",
					"SharingPolicyWorkCycleCheckpoint",
					"SharingSyncWorkCycle",
					"SharingSyncWorkCycleCheckpoint",
					"SiteMailboxWorkCycle",
					"SiteMailboxWorkCycleCheckpoint",
					"StoreDsMaintenanceWorkCycle",
					"StoreDsMaintenanceWorkCycleCheckpoint",
					"StoreIntegrityCheckWorkCycle",
					"StoreIntegrityCheckWorkCycleCheckpoint",
					"StoreMaintenanceWorkCycle",
					"StoreMaintenanceWorkCycleCheckpoint",
					"StoreScheduledIntegrityCheckWorkCycle",
					"StoreScheduledIntegrityCheckWorkCycleCheckpoint",
					"StoreUrgentMaintenanceWorkCycle",
					"StoreUrgentMaintenanceWorkCycleCheckpoint",
					"SubjectLogForManagedFoldersEnabled",
					"SubmissionServerOverrideList",
					"TopNWorkCycle",
					"TopNWorkCycleCheckpoint",
					"TransportSyncDispatchEnabled",
					"TransportSyncLogEnabled",
					"TransportSyncLogFilePath",
					"TransportSyncLogLoggingLevel",
					"TransportSyncLogMaxAge",
					"TransportSyncLogMaxDirectorySize",
					"TransportSyncLogMaxFileSize",
					"TransportSyncMailboxHealthLogEnabled",
					"TransportSyncMailboxHealthLogFilePath",
					"TransportSyncMailboxHealthLogMaxAge",
					"TransportSyncMailboxHealthLogMaxDirectorySize",
					"TransportSyncMailboxHealthLogMaxFileSize",
					"UMReportingWorkCycle",
					"UMReportingWorkCycleCheckpoint",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxSpellingConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CheckBeforeSend",
					"Confirm",
					"Debug",
					"DictionaryLanguage",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreMixedDigits",
					"IgnoreUppercase",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailboxTransportService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ConnectivityLogEnabled",
					"ConnectivityLogMaxAge",
					"ConnectivityLogMaxDirectorySize",
					"ConnectivityLogMaxFileSize",
					"ConnectivityLogPath",
					"ContentConversionTracingEnabled",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MailboxDeliveryAgentLogEnabled",
					"MailboxDeliveryAgentLogMaxAge",
					"MailboxDeliveryAgentLogMaxDirectorySize",
					"MailboxDeliveryAgentLogMaxFileSize",
					"MailboxDeliveryAgentLogPath",
					"MailboxDeliveryConnectorProtocolLoggingLevel",
					"MailboxDeliveryConnectorSmtpUtf8Enabled",
					"MailboxDeliveryThrottlingLogEnabled",
					"MailboxDeliveryThrottlingLogMaxAge",
					"MailboxDeliveryThrottlingLogMaxDirectorySize",
					"MailboxDeliveryThrottlingLogMaxFileSize",
					"MailboxDeliveryThrottlingLogPath",
					"MailboxSubmissionAgentLogEnabled",
					"MailboxSubmissionAgentLogMaxAge",
					"MailboxSubmissionAgentLogMaxDirectorySize",
					"MailboxSubmissionAgentLogMaxFileSize",
					"MailboxSubmissionAgentLogPath",
					"MaxConcurrentMailboxDeliveries",
					"MaxConcurrentMailboxSubmissions",
					"OutBuffer",
					"OutVariable",
					"PipelineTracingEnabled",
					"PipelineTracingPath",
					"PipelineTracingSenderAddress",
					"ReceiveProtocolLogMaxAge",
					"ReceiveProtocolLogMaxDirectorySize",
					"ReceiveProtocolLogMaxFileSize",
					"ReceiveProtocolLogPath",
					"SendProtocolLogMaxAge",
					"SendProtocolLogMaxDirectorySize",
					"SendProtocolLogMaxFileSize",
					"SendProtocolLogPath",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MailPublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"Alias",
					"ArbitrationMailbox",
					"BypassModerationFromSendersOrMembers",
					"Confirm",
					"Contacts",
					"CreateDTMFMap",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Debug",
					"DeliverToMailboxAndForward",
					"DisplayName",
					"DomainController",
					"EmailAddresses",
					"EmailAddressPolicyEnabled",
					"EntryId",
					"ErrorAction",
					"ErrorVariable",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalEmailAddress",
					"ForwardingAddress",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"IgnoreDefaultScope",
					"MailTip",
					"MailTipTranslations",
					"MaxReceiveSize",
					"MaxSendSize",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PhoneticDisplayName",
					"PrimarySmtpAddress",
					"PublicFolderType",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"RequireSenderAuthenticationEnabled",
					"SendModerationNotifications",
					"SimpleDisplayName",
					"UMDtmfMap",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsEmailAddress"
				}),
				new CmdletRoleEntry("Set-MainStreamForwardSyncCookie", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"RollbackTimeIntervalMinutes",
					"ServiceInstanceId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MalwareFilteringServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassFiltering",
					"Confirm",
					"Debug",
					"DeferAttempts",
					"DeferWaitTime",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForceRescan",
					"MinimumSuccessfulEngineScans",
					"OutBuffer",
					"OutVariable",
					"PrimaryUpdatePath",
					"ScanErrorAction",
					"ScanTimeout",
					"SecondaryUpdatePath",
					"UpdateFrequency",
					"UpdateTimeout",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ManagementRoleAssignment", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CustomConfigWriteScope",
					"CustomRecipientWriteScope",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExclusiveConfigWriteScope",
					"ExclusiveRecipientWriteScope",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"RecipientOrganizationalUnitScope",
					"RecipientRelativeWriteScope",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ManagementRoleEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddParameter",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Parameters",
					"RemoveParameter",
					"SkipScriptExistenceCheck",
					"UnScopedTopLevel",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ManagementScope", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"DatabaseRestrictionFilter",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PartnerDelegatedTenantRestrictionFilter",
					"RecipientRestrictionFilter",
					"RecipientRoot",
					"ServerRestrictionFilter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MapiVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplyDefaults",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"Identity",
					"IISAuthenticationMethods",
					"InternalUrl",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MergeRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IncrementalSyncInterval",
					"InternalFlags",
					"IsAdministrativeCredential",
					"LargeItemLimit",
					"OutBuffer",
					"OutlookAnywhereHostName",
					"OutVariable",
					"Priority",
					"RehomeRequest",
					"RemoteCredential",
					"RemoteSourceMailboxServerLegacyDN",
					"SkipMerging",
					"StartAfter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-Message", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"OutboundIpPool",
					"OutBuffer",
					"OutVariable",
					"Resubmit",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithNDR"
				}),
				new CmdletRoleEntry("Set-MessageClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationID",
					"Confirm",
					"Debug",
					"DisplayName",
					"DisplayPrecedence",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PermissionMenuVisible",
					"RecipientDescription",
					"RetainClassificationEnabled",
					"SenderDescription",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MigrationBatch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowIncrementalSyncs",
					"AllowUnknownColumnsInCSV",
					"AutoRetryCount",
					"BadItemLimit",
					"CompleteAfter",
					"Confirm",
					"CSVData",
					"Debug",
					"DisallowExistingUsers",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"LargeItemLimit",
					"NotificationEmails",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"ReportInterval",
					"SourcePublicFolderDatabase",
					"StartAfter",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MigrationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Features",
					"Identity",
					"MaxConcurrentMigrations",
					"MaxNumberOfBatches",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MigrationEndpoint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"Confirm",
					"Credentials",
					"Debug",
					"DomainController",
					"EmailAddress",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeServer",
					"Identity",
					"MailboxPermission",
					"MaxConcurrentIncrementalSyncs",
					"MaxConcurrentMigrations",
					"NspiServer",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Port",
					"RemoteServer",
					"RPCProxyServer",
					"Security",
					"SkipVerification",
					"SourceMailboxLegacyDN",
					"TestMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MobileDeviceMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowApplePushNotifications",
					"AllowBluetooth",
					"AllowBrowser",
					"AllowCamera",
					"AllowConsumerEmail",
					"AllowDesktopSync",
					"AllowExternalDeviceManagement",
					"AllowHTMLEmail",
					"AllowInternetSharing",
					"AllowIrDA",
					"AllowMobileOTAUpdate",
					"AllowNonProvisionableDevices",
					"AllowPOPIMAPEmail",
					"AllowRemoteDesktop",
					"AllowSimplePassword",
					"AllowSMIMEEncryptionAlgorithmNegotiation",
					"AllowSMIMESoftCerts",
					"AllowStorageCard",
					"AllowTextMessaging",
					"AllowUnsignedApplications",
					"AllowUnsignedInstallationPackages",
					"AllowWiFi",
					"AlphanumericPasswordRequired",
					"ApprovedApplicationList",
					"AttachmentsEnabled",
					"Confirm",
					"Debug",
					"DeviceEncryptionEnabled",
					"DevicePolicyRefreshInterval",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IrmEnabled",
					"IsDefault",
					"MaxAttachmentSize",
					"MaxCalendarAgeFilter",
					"MaxEmailAgeFilter",
					"MaxEmailBodyTruncationSize",
					"MaxEmailHTMLBodyTruncationSize",
					"MaxInactivityTimeLock",
					"MaxPasswordFailedAttempts",
					"MinPasswordComplexCharacters",
					"MinPasswordLength",
					"MobileOTAUpdateMode",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PasswordEnabled",
					"PasswordExpiration",
					"PasswordHistory",
					"PasswordRecoveryEnabled",
					"RequireDeviceEncryption",
					"RequireEncryptedSMIMEMessages",
					"RequireEncryptionSMIMEAlgorithm",
					"RequireManualSyncWhenRoaming",
					"RequireSignedSMIMEAlgorithm",
					"RequireSignedSMIMEMessages",
					"RequireStorageCardEncryption",
					"UnapprovedInROMApplicationList",
					"UNCAccessEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WSSAccessEnabled"
				}),
				new CmdletRoleEntry("Set-MoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"ArchiveTargetDatabase",
					"BadItemLimit",
					"BatchName",
					"CompleteAfter",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreRuleLimitErrors",
					"IncrementalSyncInterval",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutVariable",
					"PreventCompletion",
					"Priority",
					"Protect",
					"RemoteCredential",
					"RemoteGlobalCatalog",
					"RemoteHostName",
					"SkipMoving",
					"StartAfter",
					"SuspendWhenReadyToComplete",
					"TargetDatabase",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MSERVEntry", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Confirm",
					"Debug",
					"DomainName",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"MinorPartnerId",
					"OutBuffer",
					"OutVariable",
					"PartnerId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-Notification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"NotificationEmails",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ProcessType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OabVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"InternalUrl",
					"OAuthAuthentication",
					"OutBuffer",
					"OutVariable",
					"PollInterval",
					"RequireSSL",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication"
				}),
				new CmdletRoleEntry("Set-OfflineAddressBook", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressLists",
					"ApplyMandatoryProperties",
					"ConfiguredAttributes",
					"Confirm",
					"Debug",
					"DiffRetentionPeriod",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"GeneratingMailbox",
					"GlobalWebDistributionEnabled",
					"Identity",
					"IsDefault",
					"MaxBinaryPropertySize",
					"MaxMultivaluedBinaryPropertySize",
					"MaxMultivaluedStringPropertySize",
					"MaxStringPropertySize",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PublicFolderDistributionEnabled",
					"Schedule",
					"ShadowMailboxDistributionEnabled",
					"UseDefaultAttributes",
					"Verbose",
					"Versions",
					"VirtualDirectories",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OnPremisesOrganization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HybridDomains",
					"InboundConnector",
					"OrganizationName",
					"OrganizationRelationship",
					"OutboundConnector",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-Organization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssociateWithServiceInstance",
					"AsynchronousOperationIds",
					"ClearPreviousSharedConfigurations",
					"CompanyTags",
					"Confirm",
					"Debug",
					"DefaultMovePriority",
					"DefaultPublicFolderIssueWarningQuota",
					"DefaultPublicFolderProhibitPostQuota",
					"DirSyncServiceInstance",
					"DirSyncStatus",
					"DomainController",
					"EnableAsSharedConfiguration",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeUpgradeBucket",
					"ExcludedFromBackSync",
					"ExcludedFromForwardSyncEDU2BPOS",
					"ExternalDirectoryOrganizationId",
					"Force",
					"Identity",
					"ImmutableConfiguration",
					"IOwnMigrationStatus",
					"IOwnMigrationStatusReport",
					"IOwnMigrationTenant",
					"IsDirSyncRunning",
					"IsHotmailMigration",
					"IsLicensingEnforced",
					"Location",
					"MailboxRelease",
					"MaxAddressBookPolicies",
					"MaxOfflineAddressBooks",
					"MSOSyncEnabled",
					"OrganizationStatus",
					"OutBuffer",
					"OutVariable",
					"PersistedCapabilities",
					"PilotMailboxRelease",
					"PreviousMailboxRelease",
					"SharedConfiguration",
					"SyncMBXAndDLToMServ",
					"UpgradeConstraints",
					"UpgradeConstraintsDisabled",
					"UpgradeDetails",
					"UpgradeE14MbxCountForCurrentStage",
					"UpgradeE14RequestCountForCurrentStage",
					"UpgradeLastE14CountsUpdateTime",
					"UpgradeMessage",
					"UpgradeRequest",
					"UpgradeStage",
					"UpgradeStageTimeStamp",
					"UpgradeStatus",
					"UpgradeUnitsOverride",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-OrganizationalUnit", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DirSyncStatusAck",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OrganizationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"ACLableSyncedObjectEnabled",
					"ActivityBasedAuthenticationTimeoutEnabled",
					"ActivityBasedAuthenticationTimeoutInterval",
					"ActivityBasedAuthenticationTimeoutWithSingleSignOnEnabled",
					"AdfsAudienceUris",
					"AdfsAuthenticationConfiguration",
					"AdfsEncryptCertificateThumbprint",
					"AdfsIssuer",
					"AdfsSignCertificateThumbprints",
					"AppsForOfficeEnabled",
					"AVAuthenticationService",
					"ByteEncoderTypeFor7BitCharsets",
					"CalendarVersionStoreEnabled",
					"Confirm",
					"CustomerFeedbackEnabled",
					"Debug",
					"DefaultPublicFolderAgeLimit",
					"DefaultPublicFolderDeletedItemRetention",
					"DefaultPublicFolderIssueWarningQuota",
					"DefaultPublicFolderMaxItemSize",
					"DefaultPublicFolderMovedItemRetention",
					"DefaultPublicFolderProhibitPostQuota",
					"DistributionGroupDefaultOU",
					"DistributionGroupNameBlockedWordsList",
					"DistributionGroupNamingPolicy",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"EwsAllowEntourage",
					"EwsAllowList",
					"EwsAllowMacOutlook",
					"EwsAllowOutlook",
					"EwsApplicationAccessPolicy",
					"EwsBlockList",
					"EwsEnabled",
					"ExchangeNotificationEnabled",
					"ExchangeNotificationRecipients",
					"ForwardSyncLiveIdBusinessInstance",
					"HierarchicalAddressBookRoot",
					"HybridConfigurationStatus",
					"Identity",
					"Industry",
					"IntuneManagedStatus",
					"IsExcludedFromOffboardMigration",
					"IsExcludedFromOnboardMigration",
					"IsFfoMigrationInProgress",
					"IsGuidPrefixedLegacyDnDisabled",
					"IsMailboxForcedReplicationDisabled",
					"IsProcessEhaMigratedMessagesEnabled",
					"IsSyncPropertySetUpgradeAllowed",
					"MailTipsAllTipsEnabled",
					"MailTipsExternalRecipientsTipsEnabled",
					"MailTipsGroupMetricsEnabled",
					"MailTipsLargeAudienceThreshold",
					"MailTipsMailboxSourcedTipsEnabled",
					"ManagedFolderHomepage",
					"MapiHttpEnabled",
					"MaxConcurrentMigrations",
					"MicrosoftExchangeRecipientEmailAddresses",
					"MicrosoftExchangeRecipientEmailAddressPolicyEnabled",
					"MicrosoftExchangeRecipientPrimarySmtpAddress",
					"MicrosoftExchangeRecipientReplyRecipient",
					"OAuth2ClientProfileEnabled",
					"OrganizationSummary",
					"OutBuffer",
					"OutVariable",
					"PreferredInternetCodePageForShiftJis",
					"PublicComputersDetectionEnabled",
					"PublicFolderMailboxesLockedForNewConnections",
					"PublicFolderMailboxesMigrationComplete",
					"PublicFolderMigrationComplete",
					"PublicFoldersEnabled",
					"PublicFoldersLockedForMigration",
					"ReadTrackingEnabled",
					"ReleaseTrack",
					"RemotePublicFolderMailboxes",
					"RequiredCharsetCoverage",
					"RmsoSubscriptionStatus",
					"SCLJunkThreshold",
					"SharePointUrl",
					"SIPAccessService",
					"SIPSessionBorderController",
					"SiteMailboxCreationURL",
					"TenantRelocationsAllowed",
					"UMAvailableLanguages",
					"Verbose",
					"WACDiscoveryEndpoint",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OutlookAnywhere", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DefaultAuthenticationMethod",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalClientAuthenticationMethod",
					"ExternalClientsRequireSsl",
					"ExternalHostname",
					"IISAuthenticationMethods",
					"InternalClientAuthenticationMethod",
					"InternalClientsRequireSsl",
					"InternalHostname",
					"Name",
					"OutBuffer",
					"OutVariable",
					"SSLOffloading",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"XropUrl"
				}),
				new CmdletRoleEntry("Set-OutlookProtectionRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ApplyRightsProtectionTemplate",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"FromDepartment",
					"Identity",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"SentTo",
					"SentToScope",
					"UserCanOverride",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OutlookProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CertPrincipalName",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutlookProviderFlags",
					"OutVariable",
					"RequiredClientVersions",
					"Server",
					"TTL",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-OwaMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActionForUnknownFileAndMIMETypes",
					"ActiveSyncIntegrationEnabled",
					"AllAddressListsEnabled",
					"AllowCopyContactsToDeviceAddressBook",
					"AllowedFileTypes",
					"AllowedMimeTypes",
					"AllowOfflineOn",
					"BlockedFileTypes",
					"BlockedMimeTypes",
					"CalendarEnabled",
					"ChangePasswordEnabled",
					"Confirm",
					"ContactsEnabled",
					"Debug",
					"DefaultClientLanguage",
					"DefaultTheme",
					"DelegateAccessEnabled",
					"DirectFileAccessOnPrivateComputersEnabled",
					"DirectFileAccessOnPublicComputersEnabled",
					"DisableFacebook",
					"DisplayPhotosEnabled",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExplicitLogonEnabled",
					"FacebookEnabled",
					"ForceSaveAttachmentFilteringEnabled",
					"ForceSaveFileTypes",
					"ForceSaveMimeTypes",
					"ForceWacViewingFirstOnPrivateComputers",
					"ForceWacViewingFirstOnPublicComputers",
					"ForceWebReadyDocumentViewingFirstOnPrivateComputers",
					"ForceWebReadyDocumentViewingFirstOnPublicComputers",
					"GlobalAddressListEnabled",
					"GroupCreationEnabled",
					"Identity",
					"InstantMessagingEnabled",
					"InstantMessagingType",
					"IRMEnabled",
					"IsDefault",
					"JournalEnabled",
					"JunkEmailEnabled",
					"LinkedInEnabled",
					"LogonAndErrorLanguage",
					"Name",
					"NotesEnabled",
					"OrganizationEnabled",
					"OutboundCharset",
					"OutBuffer",
					"OutVariable",
					"OWALightEnabled",
					"PhoneticSupportEnabled",
					"PlacesEnabled",
					"PremiumClientEnabled",
					"PublicFoldersEnabled",
					"RecoverDeletedItemsEnabled",
					"RemindersAndNotificationsEnabled",
					"ReportJunkEmailEnabled",
					"RulesEnabled",
					"SearchFoldersEnabled",
					"SetPhotoEnabled",
					"SetPhotoURL",
					"SignaturesEnabled",
					"SilverlightEnabled",
					"SkipCreateUnifiedGroupCustomSharepointClassification",
					"SMimeEnabled",
					"SpellCheckerEnabled",
					"TasksEnabled",
					"TextMessagingEnabled",
					"ThemeSelectionEnabled",
					"UMIntegrationEnabled",
					"UNCAccessOnPrivateComputersEnabled",
					"UNCAccessOnPublicComputersEnabled",
					"UseGB18030",
					"UseISO885915",
					"UserDiagnosticEnabled",
					"Verbose",
					"WacExternalServicesEnabled",
					"WacOMEXEnabled",
					"WacViewingOnPrivateComputersEnabled",
					"WacViewingOnPublicComputersEnabled",
					"WarningAction",
					"WarningVariable",
					"WeatherEnabled",
					"WebPartsFrameOptionsType",
					"WebReadyDocumentViewingForAllSupportedTypes",
					"WebReadyDocumentViewingOnPrivateComputersEnabled",
					"WebReadyDocumentViewingOnPublicComputersEnabled",
					"WebReadyDocumentViewingSupportedFileTypes",
					"WebReadyDocumentViewingSupportedMimeTypes",
					"WebReadyFileTypes",
					"WebReadyMimeTypes",
					"WhatIf",
					"WSSAccessOnPrivateComputersEnabled",
					"WSSAccessOnPublicComputersEnabled",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OwaVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActionForUnknownFileAndMIMETypes",
					"ActiveSyncIntegrationEnabled",
					"AdfsAuthentication",
					"AllAddressListsEnabled",
					"AllowCopyContactsToDeviceAddressBook",
					"AllowedFileTypes",
					"AllowedMimeTypes",
					"AllowOfflineOn",
					"AnonymousFeaturesEnabled",
					"BasicAuthentication",
					"BlockedFileTypes",
					"BlockedMimeTypes",
					"CalendarEnabled",
					"ChangePasswordEnabled",
					"ClientAuthCleanupLevel",
					"Confirm",
					"ContactsEnabled",
					"Debug",
					"DefaultClientLanguage",
					"DefaultDomain",
					"DefaultTheme",
					"DelegateAccessEnabled",
					"DigestAuthentication",
					"DirectFileAccessOnPrivateComputersEnabled",
					"DirectFileAccessOnPublicComputersEnabled",
					"DisplayPhotosEnabled",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Exchange2003Url",
					"ExchwebProxyDestination",
					"ExplicitLogonEnabled",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalAuthenticationMethods",
					"ExternalUrl",
					"FailbackUrl",
					"FilterWebBeaconsAndHtmlForms",
					"ForceSaveAttachmentFilteringEnabled",
					"ForceSaveFileTypes",
					"ForceSaveMimeTypes",
					"ForceWacViewingFirstOnPrivateComputers",
					"ForceWacViewingFirstOnPublicComputers",
					"ForceWebReadyDocumentViewingFirstOnPrivateComputers",
					"ForceWebReadyDocumentViewingFirstOnPublicComputers",
					"FormsAuthentication",
					"GlobalAddressListEnabled",
					"GzipLevel",
					"InstantMessagingCertificateThumbprint",
					"InstantMessagingEnabled",
					"InstantMessagingServerName",
					"InstantMessagingType",
					"IntegratedFeaturesEnabled",
					"InternalUrl",
					"IRMEnabled",
					"IsPublic",
					"JournalEnabled",
					"JunkEmailEnabled",
					"LiveIdAuthentication",
					"LogonAndErrorLanguage",
					"LogonFormat",
					"LogonPageLightSelectionEnabled",
					"LogonPagePublicPrivateSelectionEnabled",
					"NotesEnabled",
					"NotificationInterval",
					"OAuthAuthentication",
					"OrganizationEnabled",
					"OutboundCharset",
					"OutBuffer",
					"OutVariable",
					"OWALightEnabled",
					"PlacesEnabled",
					"PremiumClientEnabled",
					"PublicFoldersEnabled",
					"RecoverDeletedItemsEnabled",
					"RedirectToOptimalOWAServer",
					"RemindersAndNotificationsEnabled",
					"RemoteDocumentsActionForUnknownServers",
					"RemoteDocumentsAllowedServers",
					"RemoteDocumentsBlockedServers",
					"RemoteDocumentsInternalDomainSuffixList",
					"ReportJunkEmailEnabled",
					"RulesEnabled",
					"SearchFoldersEnabled",
					"SetPhotoEnabled",
					"SetPhotoURL",
					"SignaturesEnabled",
					"SilverlightEnabled",
					"SMimeEnabled",
					"SpellCheckerEnabled",
					"TasksEnabled",
					"TextMessagingEnabled",
					"ThemeSelectionEnabled",
					"UMIntegrationEnabled",
					"UNCAccessOnPrivateComputersEnabled",
					"UNCAccessOnPublicComputersEnabled",
					"UseGB18030",
					"UseISO885915",
					"UserContextTimeout",
					"UserDiagnosticEnabled",
					"Verbose",
					"VirtualDirectoryType",
					"WacViewingOnPrivateComputersEnabled",
					"WacViewingOnPublicComputersEnabled",
					"WarningAction",
					"WarningVariable",
					"WeatherEnabled",
					"WebPartsFrameOptionsType",
					"WebReadyDocumentViewingForAllSupportedTypes",
					"WebReadyDocumentViewingOnPrivateComputersEnabled",
					"WebReadyDocumentViewingOnPublicComputersEnabled",
					"WebReadyDocumentViewingSupportedFileTypes",
					"WebReadyDocumentViewingSupportedMimeTypes",
					"WebReadyFileTypes",
					"WebReadyMimeTypes",
					"WhatIf",
					"WindowsAuthentication",
					"WSSAccessOnPrivateComputersEnabled",
					"WSSAccessOnPublicComputersEnabled"
				}),
				new CmdletRoleEntry("Set-PartnerApplication", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptSecurityIdentifierInformation",
					"ActAsPermissions",
					"ApplicationIdentifier",
					"AppOnlyPermissions",
					"AuthMetadataUrl",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IssuerIdentifier",
					"LinkedAccount",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Realm",
					"RefreshAuthMetadata",
					"TrustAnySSLCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-PendingFederatedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"PendingAccountNamespace",
					"PendingDomains",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PerimeterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EheDecryptEnabled",
					"EheEnabled",
					"EhfAdminAccountSyncEnabled",
					"EhfConfigSyncEnabled",
					"ErrorAction",
					"ErrorVariable",
					"GatewayIPAddresses",
					"InternalServerIPAddresses",
					"IPSafelistingSyncEnabled",
					"IPSkiplistingEnabled",
					"MailFlowPartner",
					"MigrationInProgress",
					"OutBuffer",
					"OutVariable",
					"PartnerConnectorDomain",
					"PartnerRoutingDomain",
					"PerimeterOrgId",
					"RMSOFwdSyncEnabled",
					"RouteOutboundViaEhfEnabled",
					"RouteOutboundViaFfoFrontendEnabled",
					"SafelistingUIMode",
					"SyncToHotmailEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-PopSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthenticatedConnectionTimeout",
					"Banner",
					"CalendarItemRetrievalOption",
					"Confirm",
					"Debug",
					"DomainController",
					"EnableExactRFC822Size",
					"EnableGSSAPIAndNTLMAuth",
					"EnforceCertificateErrors",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionPolicy",
					"ExternalConnectionSettings",
					"InternalConnectionSettings",
					"LiveIdBasicAuthReplacement",
					"LogFileLocation",
					"LogFileRollOverSettings",
					"LoginType",
					"LogPerFileSizeQuota",
					"MaxCommandSize",
					"MaxConnectionFromSingleIP",
					"MaxConnections",
					"MaxConnectionsPerUser",
					"MessageRetrievalMimeFormat",
					"MessageRetrievalSortOrder",
					"OutBuffer",
					"OutVariable",
					"OwaServerUrl",
					"PreAuthenticatedConnectionTimeout",
					"ProtocolLogEnabled",
					"ProxyTargetPort",
					"Server",
					"SSLBindings",
					"SuppressReadReceipt",
					"UnencryptedOrTLSBindings",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"X509CertificateName",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PopSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableAsPoison",
					"DisplayName",
					"DomainController",
					"EmailAddress",
					"Enabled",
					"EnablePoisonSubscription",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncomingAuth",
					"IncomingPassword",
					"IncomingPort",
					"IncomingSecurity",
					"IncomingServer",
					"IncomingUserName",
					"LeaveOnServer",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"ResendVerification",
					"ValidateSecret",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PowerShellVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"CertificateAuthentication",
					"Confirm",
					"Debug",
					"DomainController",
					"EnableCertificateHeaderAuthModule",
					"EnableDelegatedAuthModule",
					"EnableSessionKeyRedirectionModule",
					"ErrorAction",
					"ErrorVariable",
					"ExternalUrl",
					"Identity",
					"InternalUrl",
					"LiveIdBasicAuthentication",
					"LiveIdNegotiateAuthentication",
					"LiveIdSpNegoAuthentication",
					"OutBuffer",
					"OutVariable",
					"RequireSSL",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ProvisioningReconciliationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ReconciliationCookies",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PswsVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"CertificateAuthentication",
					"Confirm",
					"Debug",
					"DomainController",
					"EnableCertificateHeaderAuthModule",
					"ErrorAction",
					"ErrorVariable",
					"ExternalUrl",
					"InternalUrl",
					"LiveIdBasicAuthentication",
					"LiveIdSpNegoAuthentication",
					"OAuthAuthentication",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication"
				}),
				new CmdletRoleEntry("Set-PublicFolder", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"EformsLocaleId",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IssueWarningQuota",
					"MailEnabled",
					"MailRecipientGuid",
					"MaxItemSize",
					"Name",
					"OutBuffer",
					"OutVariable",
					"OverrideContentMailbox",
					"Path",
					"PerUserReadStateEnabled",
					"ProhibitPostQuota",
					"RetainDeletedItemsFor",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PublicFolderMailboxMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"BadItemLimit",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RehomeRequest",
					"SkipMerging",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PublicFolderMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"AuthenticationMethod",
					"BadItemLimit",
					"BatchName",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutlookAnywhereHostName",
					"OutVariable",
					"PreventCompletion",
					"Priority",
					"RehomeRequest",
					"RemoteCredential",
					"RemoteMailboxLegacyDN",
					"RemoteMailboxServerLegacyDN",
					"SkipMerging",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PublicFolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptLargeDataLoss",
					"BadItemLimit",
					"CompletedRequestAgeLimit",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"InternalFlags",
					"LargeItemLimit",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"SuspendWhenReadyToComplete",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PushNotificationApp", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcsScopeUriTemplate",
					"AcsUriTemplate",
					"AcsUserName",
					"AcsUserPassword",
					"ApnsHost",
					"ApnsPort",
					"AppSecret",
					"AppSid",
					"AuthenticationUri",
					"BackOffTimeInSeconds",
					"CertificateThumbprint",
					"CertificateThumbprintFallback",
					"Debug",
					"DisplayName",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeMaximumVersion",
					"ExchangeMinimumVersion",
					"FeedbackHost",
					"FeedbackPort",
					"GcmServiceUri",
					"Identity",
					"IsDefaultPartitionName",
					"MultifactorRegistrationEnabled",
					"NumberOfChannels",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PartitionName",
					"QueueSize",
					"RegistrationEnabled",
					"RegistrationTemplate",
					"SasKeyName",
					"SasKeyValue",
					"Sender",
					"SenderAuthToken",
					"Uri",
					"UriTemplate",
					"UseClearTextAuthenticationKeys",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-RecipientEnforcementProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ContactCountQuota",
					"Debug",
					"DistributionListCountQuota",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"MailboxCountQuota",
					"MailPublicFolderCountQuota",
					"MailUserCountQuota",
					"OutBuffer",
					"OutVariable",
					"PublicFolderMailboxCountQuota",
					"TeamMailboxCountQuota",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-RecipientFilterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BlockedRecipients",
					"BlockListEnabled",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OutBuffer",
					"OutVariable",
					"RecipientValidationEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-RecipientTemplateProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DefaultDistributionListOU",
					"DefaultIssueWarningQuota",
					"DefaultMaxReceiveSize",
					"DefaultMaxSendSize",
					"DefaultProhibitSendQuota",
					"DefaultProhibitSendReceiveQuota",
					"DefaultRulesQuota",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-RemoteAccountPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MaxSyncAccounts",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PollingInterval",
					"SyncNowAllowed",
					"TimeBeforeDormant",
					"TimeBeforeInactive",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-RemoteAccountSyncCache", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-RemoteDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowedOOFType",
					"AutoForwardEnabled",
					"AutoReplyEnabled",
					"ByteEncoderTypeFor7BitCharsets",
					"CharacterSet",
					"Confirm",
					"ContentType",
					"Debug",
					"DeliveryReportEnabled",
					"DisplaySenderName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsInternal",
					"LineWrapSize",
					"MeetingForwardNotificationEnabled",
					"MessageCountThreshold",
					"Name",
					"NDRDiagnosticInfoEnabled",
					"NDREnabled",
					"NonMimeCharacterSet",
					"OutBuffer",
					"OutVariable",
					"PreferredInternetCodePageForShiftJis",
					"RequiredCharsetCoverage",
					"TargetDeliveryDomain",
					"TNEFEnabled",
					"TrustedMailInboundEnabled",
					"TrustedMailOutboundEnabled",
					"UseSimpleDisplayName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-RemoteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"ACLableSyncedObjectEnabled",
					"Alias",
					"ArbitrationMailbox",
					"ArchiveGuid",
					"ArchiveName",
					"ArchiveQuota",
					"ArchiveWarningQuota",
					"BypassModerationFromSendersOrMembers",
					"CalendarVersionStoreDisabled",
					"Confirm",
					"CreateDTMFMap",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Debug",
					"DisplayName",
					"DomainController",
					"EmailAddresses",
					"EmailAddressPolicyEnabled",
					"EndDateForRetentionHold",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeGuid",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"IgnoreDefaultScope",
					"ImmutableId",
					"LitigationHoldDate",
					"LitigationHoldEnabled",
					"LitigationHoldOwner",
					"MailTip",
					"MailTipTranslations",
					"MaxReceiveSize",
					"MaxSendSize",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Password",
					"PrimarySmtpAddress",
					"RecipientLimits",
					"RecoverableItemsQuota",
					"RecoverableItemsWarningQuota",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"RemoteRoutingAddress",
					"RemovePicture",
					"RemoveSpokenName",
					"RequireSenderAuthenticationEnabled",
					"ResetPasswordOnNextLogon",
					"RetainDeletedItemsFor",
					"RetentionComment",
					"RetentionHoldEnabled",
					"RetentionUrl",
					"SamAccountName",
					"SecondaryAddress",
					"SecondaryDialPlan",
					"SendModerationNotifications",
					"SimpleDisplayName",
					"SingleItemRecoveryEnabled",
					"StartDateForRetentionHold",
					"Type",
					"UMDtmfMap",
					"UserPrincipalName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsEmailAddress"
				}),
				new CmdletRoleEntry("Set-ResourceConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ResourcePropertySchema",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ResubmitRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-RetentionPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"IgnoreDehydratedFlag",
					"IsDefault",
					"IsDefaultArbitrationMailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RetentionId",
					"RetentionPolicyTagLinks",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-RetentionPolicyTag", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressForJournaling",
					"AgeLimitForRetention",
					"Comment",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"JournalingEnabled",
					"LabelForJournaling",
					"LegacyManagedFolder",
					"LocalizedComment",
					"LocalizedRetentionPolicyTagName",
					"Mailbox",
					"MessageClass",
					"MessageFormatForJournaling",
					"MustDisplayCommentEnabled",
					"Name",
					"OptionalInMailbox",
					"OutBuffer",
					"OutVariable",
					"RetentionAction",
					"RetentionEnabled",
					"RetentionId",
					"SystemTag",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-RoleAssignmentPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsDefault",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-RpcClientAccess", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BlockedClientVersions",
					"Confirm",
					"Debug",
					"DomainController",
					"EncryptionRequired",
					"ErrorAction",
					"ErrorVariable",
					"MaximumConnections",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SearchDocumentFormat", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SecondaryDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthenticationType",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IsDataCenter",
					"IsPartnerHosted",
					"MakeDefault",
					"OutBoundOnly",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-SenderFilterConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"BlankSenderBlockingEnabled",
					"BlockedDomains",
					"BlockedDomainsAndSubdomains",
					"BlockedSenders",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OutBuffer",
					"OutVariable",
					"RecipientBlockedSenderAction",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SenderIdConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassedRecipients",
					"BypassedSenderDomains",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OutBuffer",
					"OutVariable",
					"SpoofedDomainAction",
					"TempErrorAction",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SenderReputationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExternalMailEnabled",
					"InternalMailEnabled",
					"OpenProxyDetectionEnabled",
					"OutBuffer",
					"OutVariable",
					"ProxyServerName",
					"ProxyServerPort",
					"ProxyServerType",
					"SenderBlockingEnabled",
					"SenderBlockingPeriod",
					"SrlBlockThreshold",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ServerComponentState", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Component",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LocalOnly",
					"OutBuffer",
					"OutVariable",
					"RemoteOnly",
					"Requester",
					"State",
					"TimeoutInSeconds",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ServerMonitor", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Repairing",
					"Server",
					"TargetResource",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SharingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Default",
					"DomainController",
					"Domains",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-SiteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Active",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Members",
					"OutBuffer",
					"OutVariable",
					"Owners",
					"RemoveDuplicateMessages",
					"SharePointUrl",
					"ShowInMyClient",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-SiteMailboxProvisioningPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AliasPrefix",
					"Confirm",
					"Debug",
					"DefaultAliasPrefixEnabled",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"IsDefault",
					"IssueWarningQuota",
					"MaxReceiveSize",
					"Name",
					"OutBuffer",
					"OutVariable",
					"ProhibitSendReceiveQuota",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SmimeConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Identity",
					"OWAAllowUserChoiceOfSigningCertificate",
					"OWAAlwaysEncrypt",
					"OWAAlwaysSign",
					"OWABCCEncryptedEmailForking",
					"OWACheckCRLOnSend",
					"OWAClearSign",
					"OWACopyRecipientHeaders",
					"OWACRLConnectionTimeout",
					"OWACRLRetrievalTimeout",
					"OWADisableCRLCheck",
					"OWADLExpansionTimeout",
					"OWAEncryptionAlgorithms",
					"OWAEncryptTemporaryBuffers",
					"OWAForceSMIMEClientUpgrade",
					"OWAIncludeCertificateChainAndRootCertificate",
					"OWAIncludeCertificateChainWithoutRootCertificate",
					"OWAIncludeSMIMECapabilitiesInMessage",
					"OWAOnlyUseSmartCard",
					"OWASenderCertificateAttributesToDisplay",
					"OWASignedEmailCertificateInclusion",
					"OWASigningAlgorithms",
					"OWATripleWrapSignedEncryptedMail",
					"OWAUseKeyIdentifier",
					"OWAUseSecondaryProxiesWhenFindingCertificates",
					"SMIMECertificateIssuingCA",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SupervisionPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AntiBullyingPolicyEnabled",
					"BadWordsList",
					"BadWordsPolicyEnabled",
					"ClosedCampusInboundDomainExceptions",
					"ClosedCampusInboundGroupExceptions",
					"ClosedCampusInboundPolicyEnabled",
					"ClosedCampusOutboundDomainExceptions",
					"ClosedCampusOutboundGroupExceptions",
					"ClosedCampusOutboundPolicyEnabled",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SyncConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisableWindowsLiveID",
					"DomainController",
					"EnterpriseExchangeVersion",
					"ErrorAction",
					"ErrorVariable",
					"FederatedIdentitySourceADAttribute",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"PasswordFilePath",
					"ProvisioningDomain",
					"ResetPasswordOnNextLogon",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WlidUseSMTPPrimary",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SyncDaemonArbitrationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveInstanceSleepInterval",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IsEnabled",
					"IsHalted",
					"IsHaltRecoveryDisabled",
					"MaxVersion",
					"MinVersion",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PassiveInstanceSleepInterval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SyncMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"AccountDisabled",
					"AddOnSKUCapability",
					"Alias",
					"AntispamBypassEnabled",
					"ApplyMandatoryProperties",
					"Arbitration",
					"ArbitrationMailbox",
					"ArchiveDomain",
					"ArchiveGuid",
					"ArchiveName",
					"ArchiveQuota",
					"ArchiveStatus",
					"ArchiveWarningQuota",
					"AssistantName",
					"BlockedSendersHash",
					"BypassLiveId",
					"BypassModerationFrom",
					"BypassModerationFromDLMembers",
					"BypassModerationFromSendersOrMembers",
					"C",
					"CalendarLoggingQuota",
					"CalendarRepairDisabled",
					"CalendarVersionStoreDisabled",
					"City",
					"Co",
					"Company",
					"Confirm",
					"CountryCode",
					"CountryOrRegion",
					"CreateDTMFMap",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Debug",
					"DeliverToMailboxAndForward",
					"Department",
					"DirSyncAuthorityMetadata",
					"DirSyncId",
					"DisplayName",
					"DomainController",
					"DoNotCheckAcceptedDomains",
					"DowngradeHighPriorityMessagesEnabled",
					"EmailAddresses",
					"EmailAddressPolicyEnabled",
					"EndDateForRetentionHold",
					"ErrorAction",
					"ErrorVariable",
					"ExcludedFromBackSync",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalOofOptions",
					"Fax",
					"FederatedIdentity",
					"FirstName",
					"Force",
					"ForwardingAddress",
					"ForwardingSmtpAddress",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"HomePhone",
					"IgnoreDefaultScope",
					"ImmutableId",
					"Initials",
					"InPlaceHoldsRaw",
					"IsDirSynced",
					"IssueWarningQuota",
					"Languages",
					"LastName",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"LitigationHoldDate",
					"LitigationHoldEnabled",
					"LitigationHoldOwner",
					"MailboxPlanName",
					"MailTip",
					"MailTipTranslations",
					"ManagedFolderMailboxPolicy",
					"ManagedFolderMailboxPolicyAllowed",
					"Manager",
					"MasterAccountSid",
					"MaxBlockedSenders",
					"MaxReceiveSize",
					"MaxSafeSenders",
					"MaxSendSize",
					"MessageTrackingReadStatusEnabled",
					"MicrosoftOnlineServicesID",
					"MobilePhone",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"Notes",
					"Office",
					"OfflineAddressBook",
					"OnPremisesObjectId",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"OutBuffer",
					"OutVariable",
					"Pager",
					"Password",
					"Phone",
					"PhoneticDisplayName",
					"Picture",
					"PostalCode",
					"PrimarySmtpAddress",
					"ProhibitSendQuota",
					"ProhibitSendReceiveQuota",
					"PublicFolder",
					"QueryBaseDNRestrictionEnabled",
					"RawAcceptMessagesOnlyFrom",
					"RawBypassModerationFrom",
					"RawForwardingAddress",
					"RawGrantSendOnBehalfTo",
					"RawModeratedBy",
					"RawRejectMessagesFrom",
					"RecipientLimits",
					"RecoverableItemsQuota",
					"RecoverableItemsWarningQuota",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"ReleaseTrack",
					"RemoteAccountPolicy",
					"RemoteRecipientType",
					"RemoveManagedFolderAndPolicy",
					"RemovePicture",
					"RemoveSpokenName",
					"RequireSenderAuthenticationEnabled",
					"ResetPasswordOnNextLogon",
					"ResourceCapacity",
					"ResourceCustom",
					"RetainDeletedItemsFor",
					"RetainDeletedItemsUntilBackup",
					"RetentionComment",
					"RetentionHoldEnabled",
					"RetentionPolicy",
					"RetentionUrl",
					"RoleAssignmentPolicy",
					"RulesQuota",
					"SafeRecipientsHash",
					"SafeSendersHash",
					"SamAccountName",
					"SCLDeleteEnabled",
					"SCLDeleteThreshold",
					"SCLJunkEnabled",
					"SCLJunkThreshold",
					"SCLQuarantineEnabled",
					"SCLQuarantineThreshold",
					"SCLRejectEnabled",
					"SCLRejectThreshold",
					"SecondaryAddress",
					"SecondaryDialPlan",
					"SendModerationNotifications",
					"SeniorityIndex",
					"SharingPolicy",
					"SimpleDisplayName",
					"SingleItemRecoveryEnabled",
					"SipAddresses",
					"SKUAssigned",
					"SKUCapability",
					"SmtpAndX500Addresses",
					"SoftDeletedMailbox",
					"SpokenName",
					"StartDateForRetentionHold",
					"StateOrProvince",
					"StreetAddress",
					"StsRefreshTokensValidFrom",
					"TelephoneAssistant",
					"ThrottlingPolicy",
					"Title",
					"Type",
					"UMDtmfMap",
					"UsageLocation",
					"UseDatabaseQuotaDefaults",
					"UseDatabaseRetentionDefaults",
					"UserCertificate",
					"UserPrincipalName",
					"UserSMimeCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebPage",
					"WhatIf",
					"WindowsEmailAddress",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("Set-SyncMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AcceptMessagesOnlyFrom",
					"AcceptMessagesOnlyFromDLMembers",
					"AcceptMessagesOnlyFromSendersOrMembers",
					"AccountDisabled",
					"AddOnSKUCapability",
					"Alias",
					"ArbitrationMailbox",
					"ArchiveGuid",
					"ArchiveName",
					"ArchiveQuota",
					"ArchiveWarningQuota",
					"AssistantName",
					"AuditAdminOperations",
					"AuditDelegateAdminOperations",
					"AuditDelegateOperations",
					"AuditOwnerOperations",
					"BlockedSendersHash",
					"BypassAudit",
					"BypassLiveId",
					"BypassModerationFrom",
					"BypassModerationFromDLMembers",
					"BypassModerationFromSendersOrMembers",
					"C",
					"CalendarVersionStoreDisabled",
					"City",
					"Co",
					"Company",
					"Confirm",
					"CountryCode",
					"CountryOrRegion",
					"CreateDTMFMap",
					"CustomAttribute1",
					"CustomAttribute10",
					"CustomAttribute11",
					"CustomAttribute12",
					"CustomAttribute13",
					"CustomAttribute14",
					"CustomAttribute15",
					"CustomAttribute2",
					"CustomAttribute3",
					"CustomAttribute4",
					"CustomAttribute5",
					"CustomAttribute6",
					"CustomAttribute7",
					"CustomAttribute8",
					"CustomAttribute9",
					"Debug",
					"DeliverToMailboxAndForward",
					"Department",
					"DirSyncAuthorityMetadata",
					"DirSyncId",
					"DisplayName",
					"DomainController",
					"DoNotCheckAcceptedDomains",
					"ElcMailboxFlags",
					"EmailAddresses",
					"EmailAddressPolicyEnabled",
					"EndDateForRetentionHold",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeGuid",
					"ExcludedFromBackSync",
					"ExtensionCustomAttribute1",
					"ExtensionCustomAttribute2",
					"ExtensionCustomAttribute3",
					"ExtensionCustomAttribute4",
					"ExtensionCustomAttribute5",
					"ExternalEmailAddress",
					"Fax",
					"FederatedIdentity",
					"FirstName",
					"ForwardingAddress",
					"GrantSendOnBehalfTo",
					"HiddenFromAddressListsEnabled",
					"HomePhone",
					"IgnoreDefaultScope",
					"ImmutableId",
					"Initials",
					"InPlaceHoldsRaw",
					"IntendedMailboxPlanName",
					"IsCalculatedTargetAddress",
					"IsDirSynced",
					"Languages",
					"LastName",
					"LitigationHoldDate",
					"LitigationHoldEnabled",
					"LitigationHoldOwner",
					"MacAttachmentFormat",
					"MailboxAuditEnabled",
					"MailboxAuditLogAgeLimit",
					"MailTip",
					"MailTipTranslations",
					"Manager",
					"MasterAccountSid",
					"MaxReceiveSize",
					"MaxSendSize",
					"MessageBodyFormat",
					"MessageFormat",
					"MicrosoftOnlineServicesID",
					"MobilePhone",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"Notes",
					"Office",
					"OnPremisesObjectId",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"OutBuffer",
					"OutVariable",
					"Pager",
					"Password",
					"Phone",
					"PhoneticDisplayName",
					"Picture",
					"PostalCode",
					"PrimarySmtpAddress",
					"RawAcceptMessagesOnlyFrom",
					"RawBypassModerationFrom",
					"RawForwardingAddress",
					"RawGrantSendOnBehalfTo",
					"RawModeratedBy",
					"RawRejectMessagesFrom",
					"RawSiteMailboxOwners",
					"RawSiteMailboxUsers",
					"RecipientDisplayType",
					"RecipientLimits",
					"RejectMessagesFrom",
					"RejectMessagesFromDLMembers",
					"RejectMessagesFromSendersOrMembers",
					"ReleaseTrack",
					"RemoteRecipientType",
					"RemovePicture",
					"RemoveSpokenName",
					"RequireSenderAuthenticationEnabled",
					"ResetPasswordOnNextLogon",
					"ResourceCapacity",
					"ResourceCustom",
					"ResourceMetaData",
					"ResourcePropertiesDisplay",
					"ResourceSearchProperties",
					"ResourceType",
					"RetainDeletedItemsFor",
					"RetentionComment",
					"RetentionHoldEnabled",
					"RetentionUrl",
					"SafeRecipientsHash",
					"SafeSendersHash",
					"SamAccountName",
					"SecondaryAddress",
					"SecondaryDialPlan",
					"SendModerationNotifications",
					"SeniorityIndex",
					"SharePointUrl",
					"SimpleDisplayName",
					"SingleItemRecoveryEnabled",
					"SipAddresses",
					"SiteMailboxClosedTime",
					"SiteMailboxOwners",
					"SiteMailboxUsers",
					"SKUAssigned",
					"SKUCapability",
					"SmtpAndX500Addresses",
					"SoftDeletedMailUser",
					"StartDateForRetentionHold",
					"StateOrProvince",
					"StreetAddress",
					"StsRefreshTokensValidFrom",
					"TelephoneAssistant",
					"Title",
					"UMDtmfMap",
					"UsageLocation",
					"UseMapiRichTextFormat",
					"UsePreferMessageFormat",
					"UserCertificate",
					"UserPrincipalName",
					"UserSMimeCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebPage",
					"WhatIf",
					"WindowsEmailAddress",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("Set-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"IncrementalSyncInterval",
					"InternalFlags",
					"Mailbox",
					"OutBuffer",
					"OutVariable",
					"Password",
					"RemoteServerName",
					"RemoteServerPort",
					"Security",
					"SkipMerging",
					"SmtpServerName",
					"SmtpServerPort",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-SyncServiceInstance", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountPartition",
					"ActiveInstanceSleepInterval",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"ForwardSyncConfigurationXML",
					"IsEnabled",
					"IsHalted",
					"IsHaltRecoveryDisabled",
					"IsMultiObjectCookieEnabled",
					"IsNewCookieBlocked",
					"IsUsedForTenantToServiceInstanceAssociation",
					"MaxVersion",
					"MinVersion",
					"Name",
					"NewTenantMaxVersion",
					"NewTenantMinVersion",
					"OutBuffer",
					"OutVariable",
					"PassiveInstanceSleepInterval",
					"UseCentralConfig",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-SyncUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountDisabled",
					"AllowUMCallsFromNonUsers",
					"AssistantName",
					"CertificateSubject",
					"City",
					"Company",
					"Confirm",
					"CountryOrRegion",
					"CreateDTMFMap",
					"Debug",
					"Department",
					"DirSyncAuthorityMetadata",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Fax",
					"FirstName",
					"GeoCoordinates",
					"HomePhone",
					"IgnoreDefaultScope",
					"Initials",
					"IsDirSynced",
					"LastName",
					"Manager",
					"MicrosoftOnlineServicesID",
					"MobilePhone",
					"Name",
					"NetID",
					"Notes",
					"Office",
					"OnPremisesObjectId",
					"OtherFax",
					"OtherHomePhone",
					"OtherTelephone",
					"OutBuffer",
					"OutVariable",
					"Pager",
					"Phone",
					"PhoneticDisplayName",
					"PostalCode",
					"PostOfficeBox",
					"ReleaseTrack",
					"RemotePowerShellEnabled",
					"RemoteRecipientType",
					"ResetPasswordOnNextLogon",
					"SamAccountName",
					"SeniorityIndex",
					"SimpleDisplayName",
					"SKUAssigned",
					"SoftDeletedUser",
					"StateOrProvince",
					"StreetAddress",
					"StsRefreshTokensValidFrom",
					"TelephoneAssistant",
					"Title",
					"UMCallingLineIds",
					"UMDtmfMap",
					"UsageLocation",
					"UserPrincipalName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WebPage",
					"WhatIf",
					"WindowsEmailAddress",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("Set-SystemMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Original",
					"OutBuffer",
					"OutVariable",
					"Text",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-TextMessagingAccount", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CountryRegionId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"MobileOperatorId",
					"NotificationPhoneNumber",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ThrottlingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AnonymousCutoffBalance",
					"AnonymousMaxBurst",
					"AnonymousMaxConcurrency",
					"AnonymousRechargeRate",
					"ComplianceMaxExpansionDGRecipients",
					"ComplianceMaxExpansionNestedDGs",
					"Confirm",
					"CpaCutoffBalance",
					"CpaMaxBurst",
					"CpaMaxConcurrency",
					"CpaRechargeRate",
					"Debug",
					"DiscoveryMaxConcurrency",
					"DiscoveryMaxKeywords",
					"DiscoveryMaxKeywordsPerPage",
					"DiscoveryMaxMailboxes",
					"DiscoveryMaxMailboxesResultsOnly",
					"DiscoveryMaxPreviewSearchMailboxes",
					"DiscoveryMaxRefinerResults",
					"DiscoveryMaxSearchQueueDepth",
					"DiscoveryMaxStatsSearchMailboxes",
					"DiscoveryPreviewSearchResultsPageSize",
					"DiscoverySearchTimeoutPeriod",
					"DomainController",
					"EasCutoffBalance",
					"EasMaxBurst",
					"EasMaxConcurrency",
					"EasMaxDeviceDeletesPerMonth",
					"EasMaxDevices",
					"EasMaxInactivityForDeviceCleanup",
					"EasRechargeRate",
					"ErrorAction",
					"ErrorVariable",
					"EwsCutoffBalance",
					"EwsMaxBurst",
					"EwsMaxConcurrency",
					"EwsMaxSubscriptions",
					"EwsRechargeRate",
					"ExchangeMaxCmdlets",
					"Force",
					"ForceSettingGlobal",
					"ForwardeeLimit",
					"IgnoreDehydratedFlag",
					"ImapCutoffBalance",
					"ImapMaxBurst",
					"ImapMaxConcurrency",
					"ImapRechargeRate",
					"IsServiceAccount",
					"MessageRateLimit",
					"Name",
					"OutBuffer",
					"OutlookServiceCutoffBalance",
					"OutlookServiceMaxBurst",
					"OutlookServiceMaxConcurrency",
					"OutlookServiceMaxSocketConnectionsPerDevice",
					"OutlookServiceMaxSocketConnectionsPerUser",
					"OutlookServiceMaxSubscriptions",
					"OutlookServiceRechargeRate",
					"OutVariable",
					"OwaCutoffBalance",
					"OwaMaxBurst",
					"OwaMaxConcurrency",
					"OwaRechargeRate",
					"OwaVoiceCutoffBalance",
					"OwaVoiceMaxBurst",
					"OwaVoiceMaxConcurrency",
					"OwaVoiceRechargeRate",
					"PopCutoffBalance",
					"PopMaxBurst",
					"PopMaxConcurrency",
					"PopRechargeRate",
					"PowerShellCutoffBalance",
					"PowerShellMaxBurst",
					"PowerShellMaxCmdletQueueDepth",
					"PowerShellMaxCmdlets",
					"PowerShellMaxCmdletsTimePeriod",
					"PowerShellMaxConcurrency",
					"PowerShellMaxDestructiveCmdlets",
					"PowerShellMaxDestructiveCmdletsTimePeriod",
					"PowerShellMaxOperations",
					"PowerShellMaxRunspaces",
					"PowerShellMaxRunspacesTimePeriod",
					"PowerShellMaxTenantConcurrency",
					"PowerShellMaxTenantRunspaces",
					"PowerShellRechargeRate",
					"PswsMaxConcurrency",
					"PswsMaxRequest",
					"PswsMaxRequestTimePeriod",
					"PushNotificationCutoffBalance",
					"PushNotificationMaxBurst",
					"PushNotificationMaxBurstPerDevice",
					"PushNotificationMaxConcurrency",
					"PushNotificationRechargeRate",
					"PushNotificationRechargeRatePerDevice",
					"PushNotificationSamplingPeriodPerDevice",
					"RcaCutoffBalance",
					"RcaMaxBurst",
					"RcaMaxConcurrency",
					"RcaRechargeRate",
					"RecipientRateLimit",
					"ThrottlingPolicyScope",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ThrottlingPolicyAssociation", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"ThrottlingPolicy",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-TransportAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"TransportService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-TransportConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressBookPolicyRoutingEnabled",
					"AgentGeneratedMessageLoopDetectionInSmtpEnabled",
					"AgentGeneratedMessageLoopDetectionInSubmissionEnabled",
					"AnonymousSenderToRecipientRatePerHour",
					"ClearCategories",
					"Confirm",
					"ConvertDisclaimerWrapperToEml",
					"Debug",
					"DiagnosticsAggregationServicePort",
					"DomainController",
					"DSNConversionMode",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDelayDsnEnabled",
					"ExternalDsnDefaultLanguage",
					"ExternalDsnLanguageDetectionEnabled",
					"ExternalDsnMaxMessageAttachSize",
					"ExternalDsnReportingAuthority",
					"ExternalDsnSendHtml",
					"ExternalPostmasterAddress",
					"Force",
					"GenerateCopyOfDSNFor",
					"HeaderPromotionModeSetting",
					"HygieneSuite",
					"Identity",
					"InternalDelayDsnEnabled",
					"InternalDsnDefaultLanguage",
					"InternalDsnLanguageDetectionEnabled",
					"InternalDsnMaxMessageAttachSize",
					"InternalDsnReportingAuthority",
					"InternalDsnSendHtml",
					"InternalSMTPServers",
					"JournalArchivingEnabled",
					"JournalingReportNdrTo",
					"JournalReportDLMemberSubstitutionEnabled",
					"MaxAllowedAgentGeneratedMessageDepth",
					"MaxAllowedAgentGeneratedMessageDepthPerAgent",
					"MaxDumpsterSizePerDatabase",
					"MaxDumpsterTime",
					"MaxReceiveSize",
					"MaxRecipientEnvelopeLimit",
					"MaxRetriesForLocalSiteShadow",
					"MaxRetriesForRemoteSiteShadow",
					"MaxSendSize",
					"MigrationEnabled",
					"OpenDomainRoutingEnabled",
					"OutBuffer",
					"OutVariable",
					"QueueDiagnosticsAggregationInterval",
					"RejectMessageOnShadowFailure",
					"Rfc2231EncodingEnabled",
					"SafetyNetHoldTime",
					"ShadowHeartbeatFrequency",
					"ShadowHeartbeatRetryCount",
					"ShadowHeartbeatTimeoutInterval",
					"ShadowMessageAutoDiscardInterval",
					"ShadowMessagePreferenceSetting",
					"ShadowRedundancyEnabled",
					"ShadowResubmitTimeSpan",
					"SupervisionTags",
					"TLSReceiveDomainSecureList",
					"TLSSendDomainSecureList",
					"TransportRuleAttachmentTextScanLimit",
					"TransportRuleCollectionAddedRecipientsLimit",
					"TransportRuleCollectionRegexCharsLimit",
					"TransportRuleLimit",
					"TransportRuleMinProductVersion",
					"TransportRuleRegexValidationTimeout",
					"TransportRuleSizeLimit",
					"Verbose",
					"VerifySecureSubmitEnabled",
					"VoicemailJournalingEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"Xexch50Enabled",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-TransportProcessingQuotaConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AmWeight",
					"AsWeight",
					"CalculationEnabled",
					"CalculationFrequency",
					"CostThreshold",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"EtrWeight",
					"OutBuffer",
					"OutVariable",
					"RelativeCostThreshold",
					"ThrottleFactor",
					"ThrottlingEnabled",
					"TimeWindow",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-TransportProcessingQuotaOverride", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDirectoryOrganizationId",
					"OutBuffer",
					"OutVariable",
					"Throttle",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-TransportServer", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveUserStatisticsLogMaxAge",
					"ActiveUserStatisticsLogMaxDirectorySize",
					"ActiveUserStatisticsLogMaxFileSize",
					"ActiveUserStatisticsLogPath",
					"AgentLogEnabled",
					"AgentLogMaxAge",
					"AgentLogMaxDirectorySize",
					"AgentLogMaxFileSize",
					"AgentLogPath",
					"AntispamAgentsEnabled",
					"Confirm",
					"ConnectivityLogEnabled",
					"ConnectivityLogMaxAge",
					"ConnectivityLogMaxDirectorySize",
					"ConnectivityLogMaxFileSize",
					"ConnectivityLogPath",
					"ContentConversionTracingEnabled",
					"Debug",
					"DelayNotificationTimeout",
					"DeltaSyncClientCertificateThumbprint",
					"DnsLogEnabled",
					"DnsLogMaxAge",
					"DnsLogMaxDirectorySize",
					"DnsLogMaxFileSize",
					"DnsLogPath",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDNSAdapterEnabled",
					"ExternalDNSAdapterGuid",
					"ExternalDNSProtocolOption",
					"ExternalDNSServers",
					"ExternalIPAddress",
					"FlowControlLogEnabled",
					"FlowControlLogMaxAge",
					"FlowControlLogMaxDirectorySize",
					"FlowControlLogMaxFileSize",
					"FlowControlLogPath",
					"HttpProtocolLogEnabled",
					"HttpProtocolLogFilePath",
					"HttpProtocolLogLoggingLevel",
					"HttpProtocolLogMaxAge",
					"HttpProtocolLogMaxDirectorySize",
					"HttpProtocolLogMaxFileSize",
					"HttpTransportSyncProxyServer",
					"InternalDNSAdapterEnabled",
					"InternalDNSAdapterGuid",
					"InternalDNSProtocolOption",
					"InternalDNSServers",
					"IntraOrgConnectorProtocolLoggingLevel",
					"IntraOrgConnectorSmtpMaxMessagesPerConnection",
					"IrmLogEnabled",
					"IrmLogMaxAge",
					"IrmLogMaxDirectorySize",
					"IrmLogMaxFileSize",
					"IrmLogPath",
					"MaxActiveTransportSyncJobsPerProcessor",
					"MaxConcurrentMailboxDeliveries",
					"MaxConcurrentMailboxSubmissions",
					"MaxConnectionRatePerMinute",
					"MaxNumberOfTransportSyncAttempts",
					"MaxOutboundConnections",
					"MaxPerDomainOutboundConnections",
					"MessageExpirationTimeout",
					"MessageRetryInterval",
					"MessageTrackingLogEnabled",
					"MessageTrackingLogMaxAge",
					"MessageTrackingLogMaxDirectorySize",
					"MessageTrackingLogMaxFileSize",
					"MessageTrackingLogPath",
					"MessageTrackingLogSubjectLoggingEnabled",
					"OutboundConnectionFailureRetryInterval",
					"OutBuffer",
					"OutVariable",
					"PickupDirectoryMaxHeaderSize",
					"PickupDirectoryMaxMessagesPerMinute",
					"PickupDirectoryMaxRecipientsPerMessage",
					"PickupDirectoryPath",
					"PipelineTracingEnabled",
					"PipelineTracingPath",
					"PipelineTracingSenderAddress",
					"PoisonMessageDetectionEnabled",
					"PoisonThreshold",
					"ProcessingSchedulerLogEnabled",
					"ProcessingSchedulerLogMaxAge",
					"ProcessingSchedulerLogMaxDirectorySize",
					"ProcessingSchedulerLogMaxFileSize",
					"ProcessingSchedulerLogPath",
					"QueueLogMaxAge",
					"QueueLogMaxDirectorySize",
					"QueueLogMaxFileSize",
					"QueueLogPath",
					"QueueMaxIdleTime",
					"ReceiveProtocolLogMaxAge",
					"ReceiveProtocolLogMaxDirectorySize",
					"ReceiveProtocolLogMaxFileSize",
					"ReceiveProtocolLogPath",
					"RecipientValidationCacheEnabled",
					"ReplayDirectoryPath",
					"ResourceLogEnabled",
					"ResourceLogMaxAge",
					"ResourceLogMaxDirectorySize",
					"ResourceLogMaxFileSize",
					"ResourceLogPath",
					"RootDropDirectoryPath",
					"RoutingTableLogMaxAge",
					"RoutingTableLogMaxDirectorySize",
					"RoutingTableLogPath",
					"SendProtocolLogMaxAge",
					"SendProtocolLogMaxDirectorySize",
					"SendProtocolLogMaxFileSize",
					"SendProtocolLogPath",
					"ServerStatisticsLogMaxAge",
					"ServerStatisticsLogMaxDirectorySize",
					"ServerStatisticsLogMaxFileSize",
					"ServerStatisticsLogPath",
					"TransientFailureRetryCount",
					"TransientFailureRetryInterval",
					"TransportMaintenanceLogEnabled",
					"TransportMaintenanceLogMaxAge",
					"TransportMaintenanceLogMaxDirectorySize",
					"TransportMaintenanceLogMaxFileSize",
					"TransportMaintenanceLogPath",
					"TransportSyncAccountsPoisonAccountThreshold",
					"TransportSyncAccountsPoisonDetectionEnabled",
					"TransportSyncAccountsPoisonItemThreshold",
					"TransportSyncAccountsSuccessivePoisonItemThreshold",
					"TransportSyncEnabled",
					"TransportSyncExchangeEnabled",
					"TransportSyncFacebookEnabled",
					"TransportSyncHubHealthLogEnabled",
					"TransportSyncHubHealthLogFilePath",
					"TransportSyncHubHealthLogMaxAge",
					"TransportSyncHubHealthLogMaxDirectorySize",
					"TransportSyncHubHealthLogMaxFileSize",
					"TransportSyncImapEnabled",
					"TransportSyncLinkedInEnabled",
					"TransportSyncLogEnabled",
					"TransportSyncLogFilePath",
					"TransportSyncLogLoggingLevel",
					"TransportSyncLogMaxAge",
					"TransportSyncLogMaxDirectorySize",
					"TransportSyncLogMaxFileSize",
					"TransportSyncMaxDownloadItemsPerConnection",
					"TransportSyncMaxDownloadSizePerConnection",
					"TransportSyncMaxDownloadSizePerItem",
					"TransportSyncPopEnabled",
					"TransportSyncRemoteConnectionTimeout",
					"UseDowngradedExchangeServerAuth",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveHotmailTransportSyncEnabled",
					"WlmLogMaxAge",
					"WlmLogMaxDirectorySize",
					"WlmLogMaxFileSize",
					"WlmLogPath"
				}),
				new CmdletRoleEntry("Set-TransportService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveUserStatisticsLogMaxAge",
					"ActiveUserStatisticsLogMaxDirectorySize",
					"ActiveUserStatisticsLogMaxFileSize",
					"ActiveUserStatisticsLogPath",
					"AgentLogEnabled",
					"AgentLogMaxAge",
					"AgentLogMaxDirectorySize",
					"AgentLogMaxFileSize",
					"AgentLogPath",
					"AntispamAgentsEnabled",
					"Confirm",
					"ConnectivityLogEnabled",
					"ConnectivityLogMaxAge",
					"ConnectivityLogMaxDirectorySize",
					"ConnectivityLogMaxFileSize",
					"ConnectivityLogPath",
					"ContentConversionTracingEnabled",
					"Debug",
					"DelayNotificationTimeout",
					"DeltaSyncClientCertificateThumbprint",
					"DnsLogEnabled",
					"DnsLogMaxAge",
					"DnsLogMaxDirectorySize",
					"DnsLogMaxFileSize",
					"DnsLogPath",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalDNSAdapterEnabled",
					"ExternalDNSAdapterGuid",
					"ExternalDNSProtocolOption",
					"ExternalDNSServers",
					"ExternalIPAddress",
					"FlowControlLogEnabled",
					"FlowControlLogMaxAge",
					"FlowControlLogMaxDirectorySize",
					"FlowControlLogMaxFileSize",
					"FlowControlLogPath",
					"HttpProtocolLogEnabled",
					"HttpProtocolLogFilePath",
					"HttpProtocolLogLoggingLevel",
					"HttpProtocolLogMaxAge",
					"HttpProtocolLogMaxDirectorySize",
					"HttpProtocolLogMaxFileSize",
					"HttpTransportSyncProxyServer",
					"InternalDNSAdapterEnabled",
					"InternalDNSAdapterGuid",
					"InternalDNSProtocolOption",
					"InternalDNSServers",
					"IntraOrgConnectorProtocolLoggingLevel",
					"IntraOrgConnectorSmtpMaxMessagesPerConnection",
					"IrmLogEnabled",
					"IrmLogMaxAge",
					"IrmLogMaxDirectorySize",
					"IrmLogMaxFileSize",
					"IrmLogPath",
					"JournalLogEnabled",
					"JournalLogMaxAge",
					"JournalLogMaxDirectorySize",
					"JournalLogMaxFileSize",
					"JournalLogPath",
					"MaxActiveTransportSyncJobsPerProcessor",
					"MaxConcurrentMailboxDeliveries",
					"MaxConcurrentMailboxSubmissions",
					"MaxConnectionRatePerMinute",
					"MaxNumberOfTransportSyncAttempts",
					"MaxOutboundConnections",
					"MaxPerDomainOutboundConnections",
					"MessageExpirationTimeout",
					"MessageRetryInterval",
					"MessageTrackingLogEnabled",
					"MessageTrackingLogMaxAge",
					"MessageTrackingLogMaxDirectorySize",
					"MessageTrackingLogMaxFileSize",
					"MessageTrackingLogPath",
					"MessageTrackingLogSubjectLoggingEnabled",
					"OutboundConnectionFailureRetryInterval",
					"OutBuffer",
					"OutVariable",
					"PickupDirectoryMaxHeaderSize",
					"PickupDirectoryMaxMessagesPerMinute",
					"PickupDirectoryMaxRecipientsPerMessage",
					"PickupDirectoryPath",
					"PipelineTracingEnabled",
					"PipelineTracingPath",
					"PipelineTracingSenderAddress",
					"PoisonMessageDetectionEnabled",
					"PoisonThreshold",
					"QueueLogMaxAge",
					"QueueLogMaxDirectorySize",
					"QueueLogMaxFileSize",
					"QueueLogPath",
					"QueueMaxIdleTime",
					"QueueQuotaLogEnabled",
					"QueueQuotaLogMaxAge",
					"QueueQuotaLogMaxDirectorySize",
					"QueueQuotaLogMaxFileSize",
					"QueueQuotaLogPath",
					"ReceiveProtocolLogMaxAge",
					"ReceiveProtocolLogMaxDirectorySize",
					"ReceiveProtocolLogMaxFileSize",
					"ReceiveProtocolLogPath",
					"RecipientValidationCacheEnabled",
					"ReplayDirectoryPath",
					"ResourceLogEnabled",
					"ResourceLogMaxAge",
					"ResourceLogMaxDirectorySize",
					"ResourceLogMaxFileSize",
					"ResourceLogPath",
					"RootDropDirectoryPath",
					"RoutingTableLogMaxAge",
					"RoutingTableLogMaxDirectorySize",
					"RoutingTableLogPath",
					"SendProtocolLogMaxAge",
					"SendProtocolLogMaxDirectorySize",
					"SendProtocolLogMaxFileSize",
					"SendProtocolLogPath",
					"ServerState",
					"ServerStatisticsLogMaxAge",
					"ServerStatisticsLogMaxDirectorySize",
					"ServerStatisticsLogMaxFileSize",
					"ServerStatisticsLogPath",
					"TransientFailureRetryCount",
					"TransientFailureRetryInterval",
					"TransportMaintenanceLogEnabled",
					"TransportMaintenanceLogMaxAge",
					"TransportMaintenanceLogMaxDirectorySize",
					"TransportMaintenanceLogMaxFileSize",
					"TransportMaintenanceLogPath",
					"TransportSyncAccountsPoisonAccountThreshold",
					"TransportSyncAccountsPoisonDetectionEnabled",
					"TransportSyncAccountsPoisonItemThreshold",
					"TransportSyncAccountsSuccessivePoisonItemThreshold",
					"TransportSyncEnabled",
					"TransportSyncExchangeEnabled",
					"TransportSyncFacebookEnabled",
					"TransportSyncHubHealthLogEnabled",
					"TransportSyncHubHealthLogFilePath",
					"TransportSyncHubHealthLogMaxAge",
					"TransportSyncHubHealthLogMaxDirectorySize",
					"TransportSyncHubHealthLogMaxFileSize",
					"TransportSyncImapEnabled",
					"TransportSyncLinkedInEnabled",
					"TransportSyncLogEnabled",
					"TransportSyncLogFilePath",
					"TransportSyncLogLoggingLevel",
					"TransportSyncLogMaxAge",
					"TransportSyncLogMaxDirectorySize",
					"TransportSyncLogMaxFileSize",
					"TransportSyncMaxDownloadItemsPerConnection",
					"TransportSyncMaxDownloadSizePerConnection",
					"TransportSyncMaxDownloadSizePerItem",
					"TransportSyncPopEnabled",
					"TransportSyncRemoteConnectionTimeout",
					"UseDowngradedExchangeServerAuth",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveHotmailTransportSyncEnabled",
					"WlmLogMaxAge",
					"WlmLogMaxDirectorySize",
					"WlmLogMaxFileSize",
					"WlmLogPath"
				}),
				new CmdletRoleEntry("Set-UMAutoAttendant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AfterHoursKeyMapping",
					"AfterHoursKeyMappingEnabled",
					"AfterHoursMainMenuCustomPromptEnabled",
					"AfterHoursMainMenuCustomPromptFilename",
					"AfterHoursTransferToOperatorEnabled",
					"AfterHoursWelcomeGreetingEnabled",
					"AfterHoursWelcomeGreetingFilename",
					"AllowDialPlanSubscribers",
					"AllowedInCountryOrRegionGroups",
					"AllowedInternationalGroups",
					"AllowExtensions",
					"BusinessHoursKeyMapping",
					"BusinessHoursKeyMappingEnabled",
					"BusinessHoursMainMenuCustomPromptEnabled",
					"BusinessHoursMainMenuCustomPromptFilename",
					"BusinessHoursSchedule",
					"BusinessHoursTransferToOperatorEnabled",
					"BusinessHoursWelcomeGreetingEnabled",
					"BusinessHoursWelcomeGreetingFilename",
					"BusinessLocation",
					"BusinessName",
					"CallSomeoneEnabled",
					"Confirm",
					"ContactAddressList",
					"ContactRecipientContainer",
					"ContactScope",
					"Debug",
					"DefaultMailbox",
					"DomainController",
					"DTMFFallbackAutoAttendant",
					"ErrorAction",
					"ErrorVariable",
					"ForceUpgrade",
					"ForwardCallsToDefaultMailbox",
					"HolidaySchedule",
					"Identity",
					"InfoAnnouncementEnabled",
					"InfoAnnouncementFilename",
					"Language",
					"MatchedNameSelectionMethod",
					"Name",
					"NameLookupEnabled",
					"OperatorExtension",
					"OutBuffer",
					"OutVariable",
					"PilotIdentifierList",
					"SendVoiceMsgEnabled",
					"SpeechEnabled",
					"StarOutToDialPlanEnabled",
					"TimeZone",
					"TimeZoneName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WeekStartDay",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-UMCallAnsweringRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CallerIds",
					"CallersCanInterruptGreeting",
					"CheckAutomaticReplies",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtensionsDialed",
					"Identity",
					"KeyMappings",
					"Mailbox",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"ScheduleStatus",
					"TimeOfDay",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-UMCallRouterSettings", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DialPlans",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalHostFqdn",
					"ExternalServiceFqdn",
					"IPAddressFamily",
					"IPAddressFamilyConfigurable",
					"MaxCallsAllowed",
					"OutBuffer",
					"OutVariable",
					"Server",
					"SipTcpListeningPort",
					"SipTlsListeningPort",
					"UMForwardingAddressTemplate",
					"UMPodRedirectTemplate",
					"UMStartupMode",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-UMDialPlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccessTelephoneNumbers",
					"AllowDialPlanSubscribers",
					"AllowedInCountryOrRegionGroups",
					"AllowedInternationalGroups",
					"AllowExtensions",
					"AllowHeuristicADCallingLineIdResolution",
					"AudioCodec",
					"AutomaticSpeechRecognitionEnabled",
					"CallAnsweringRulesEnabled",
					"CallSomeoneEnabled",
					"ConfiguredInCountryOrRegionGroups",
					"ConfiguredInternationalGroups",
					"Confirm",
					"ContactAddressList",
					"ContactRecipientContainer",
					"ContactScope",
					"CountryOrRegionCode",
					"Debug",
					"DefaultLanguage",
					"DefaultOutboundCallingLineId",
					"DialByNamePrimary",
					"DialByNameSecondary",
					"DomainController",
					"EquivalentDialPlanPhoneContexts",
					"ErrorAction",
					"ErrorVariable",
					"Extension",
					"FaxEnabled",
					"ForceUpgrade",
					"InCountryOrRegionNumberFormat",
					"InfoAnnouncementEnabled",
					"InfoAnnouncementFilename",
					"InputFailuresBeforeDisconnect",
					"InternationalAccessCode",
					"InternationalNumberFormat",
					"LegacyPromptPublishingPoint",
					"LogonFailuresBeforeDisconnect",
					"MatchedNameSelectionMethod",
					"MaxCallDuration",
					"MaxRecordingDuration",
					"Name",
					"NationalNumberPrefix",
					"NumberingPlanFormats",
					"OperatorExtension",
					"OutBuffer",
					"OutsideLineAccessCode",
					"OutVariable",
					"PilotIdentifierList",
					"RecordingIdleTimeout",
					"SendVoiceMsgEnabled",
					"TUIPromptEditingEnabled",
					"UMAutoAttendant",
					"Verbose",
					"VoIPSecurity",
					"WarningAction",
					"WarningVariable",
					"WelcomeGreetingEnabled",
					"WelcomeGreetingFilename",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMIPGateway", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Address",
					"Confirm",
					"Debug",
					"DelayedSourcePartyInfoEnabled",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForceUpgrade",
					"IPAddressFamily",
					"MessageWaitingIndicatorAllowed",
					"Name",
					"OutBuffer",
					"OutcallsAllowed",
					"OutVariable",
					"Port",
					"Simulator",
					"Status",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AirSyncNumbers",
					"AllowUMCallsFromNonUsers",
					"AnonymousCallersCanLeaveMessages",
					"AutomaticSpeechRecognitionEnabled",
					"CallAnsweringAudioCodec",
					"CallAnsweringRulesEnabled",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FaxEnabled",
					"IgnoreDefaultScope",
					"ImListMigrationCompleted",
					"MissedCallNotificationEnabled",
					"Name",
					"OperatorNumber",
					"OutBuffer",
					"OutVariable",
					"PhoneNumber",
					"PhoneProviderId",
					"PinlessAccessToVoiceMailEnabled",
					"PlayOnPhoneEnabled",
					"SubscriberAccessEnabled",
					"TUIAccessToCalendarEnabled",
					"TUIAccessToEmailEnabled",
					"UMMailboxPolicy",
					"UMSMSNotificationOption",
					"Verbose",
					"VerifyGlobalRoutingEntry",
					"VoiceMailAnalysisEnabled",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailboxConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DefaultPlayOnPhoneNumber",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FolderToReadEmailsFrom",
					"Greeting",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"ReadOldestUnreadVoiceMessagesFirst",
					"ReceivedVoiceMailPreviewEnabled",
					"SentVoiceMailPreviewEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-UMMailboxPIN", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDefaultScope",
					"LockedOut",
					"NotifyEmail",
					"OutBuffer",
					"OutVariable",
					"Pin",
					"PinExpired",
					"SendEmail",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowAutomaticSpeechRecognition",
					"AllowCallAnsweringRules",
					"AllowCommonPatterns",
					"AllowDialPlanSubscribers",
					"AllowedInCountryOrRegionGroups",
					"AllowedInternationalGroups",
					"AllowExtensions",
					"AllowFax",
					"AllowMessageWaitingIndicator",
					"AllowMissedCallNotifications",
					"AllowPinlessVoiceMailAccess",
					"AllowPlayOnPhone",
					"AllowSMSNotification",
					"AllowSubscriberAccess",
					"AllowTUIAccessToCalendar",
					"AllowTUIAccessToDirectory",
					"AllowTUIAccessToEmail",
					"AllowTUIAccessToPersonalContacts",
					"AllowVoiceMailAnalysis",
					"AllowVoiceMailPreview",
					"AllowVoiceResponseToOtherMessageTypes",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FaxMessageText",
					"FaxServerURI",
					"ForceUpgrade",
					"InformCallerOfVoiceMailAnalysis",
					"LogonFailuresBeforePINReset",
					"MaxGreetingDuration",
					"MaxLogonAttempts",
					"MinPINLength",
					"Name",
					"OutBuffer",
					"OutVariable",
					"PINHistoryCount",
					"PINLifetime",
					"ProtectAuthenticatedVoiceMail",
					"ProtectedVoiceMailText",
					"ProtectUnauthenticatedVoiceMail",
					"RequireProtectedPlayOnPhone",
					"ResetPINText",
					"SourceForestPolicyNames",
					"UMDialPlan",
					"UMEnabledText",
					"Verbose",
					"VoiceMailPreviewPartnerAddress",
					"VoiceMailPreviewPartnerAssignedID",
					"VoiceMailPreviewPartnerMaxDeliveryDelay",
					"VoiceMailPreviewPartnerMaxMessageDuration",
					"VoiceMailText",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UMService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DialPlans",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExternalHostFqdn",
					"ExternalServiceFqdn",
					"GrammarGenerationSchedule",
					"IPAddressFamily",
					"IPAddressFamilyConfigurable",
					"IrmLogEnabled",
					"IrmLogMaxAge",
					"IrmLogMaxDirectorySize",
					"IrmLogMaxFileSize",
					"IrmLogPath",
					"MaxCallsAllowed",
					"OutBuffer",
					"OutVariable",
					"SIPAccessService",
					"Status",
					"UMForwardingAddressTemplate",
					"UMPodRedirectTemplate",
					"UMStartupMode",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-UserPhoto", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Cancel",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDefaultScope",
					"OutBuffer",
					"OutVariable",
					"PictureData",
					"PictureStream",
					"Preview",
					"Save",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-WebServicesVirtualDirectory", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BasicAuthentication",
					"CertificateAuthentication",
					"Confirm",
					"Debug",
					"DigestAuthentication",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExtendedProtectionFlags",
					"ExtendedProtectionSPNList",
					"ExtendedProtectionTokenChecking",
					"ExternalUrl",
					"Force",
					"GzipLevel",
					"Identity",
					"InternalNLBBypassUrl",
					"InternalUrl",
					"LiveIdBasicAuthentication",
					"LiveIdNegotiateAuthentication",
					"LiveIdSpNegoAuthentication",
					"MRSProxyEnabled",
					"OAuthAuthentication",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsAuthentication",
					"WSSecurityAuthentication",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-X400AuthoritativeDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"X400DomainName",
					"X400ExternalRelay",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-DatabaseAvailabilityGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveDirectorySite",
					"ConfigurationOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxServer",
					"OutBuffer",
					"OutVariable",
					"QuorumOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-EdgeSynchronization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"ForceFullSync",
					"ForceUpdateCookie",
					"OutBuffer",
					"OutVariable",
					"Server",
					"TargetServer",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Resume",
					"StatisticsStartIndex",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-ManagedFolderAssistant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EHAHiddenFolderCleanup",
					"ErrorAction",
					"ErrorVariable",
					"HoldCleanup",
					"Identity",
					"InactiveMailbox",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-MigrationBatch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Validate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-MsoFullSync", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-OrganizationPilot", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EnableFileLogging",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsDataCenter",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-OrganizationUpgrade", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthoritativeOnly",
					"ConfigOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"EnableFileLogging",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsDataCenter",
					"IsPartnerHosted",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-RetentionAutoTagLearning", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Clear",
					"Confirm",
					"CrossValidate",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"NumberOfSegments",
					"OutBuffer",
					"OutVariable",
					"Train",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-UMPhoneSession", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AwayVoicemailGreeting",
					"CallAnsweringRuleId",
					"Confirm",
					"Debug",
					"DefaultVoicemailGreeting",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PhoneNumber",
					"UMMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-UnifiedPolicySynchronization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DeleteObjectId",
					"FullSync",
					"ObjectType",
					"Organization",
					"UpdateObjectId",
					"Verbose",
					"Workload",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Stop-DatabaseAvailabilityGroup", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveDirectorySite",
					"ConfigurationOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxServer",
					"OutBuffer",
					"OutVariable",
					"QuorumOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Stop-MailboxSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Stop-ManagedFolderAssistant", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Stop-MigrationBatch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Stop-UMPhoneSession", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-FolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-MailboxDatabaseCopy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivationOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"EnableReplayLag",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-MailboxExportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-MailboxImportRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-MailboxRestoreRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-MergeRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-Message", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-MoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-PublicFolderMigrationRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-PublicFolderMoveRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"SuspendComment",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-Queue", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Suspend-SyncRequest", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ActiveDirectoryConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"SearchLatencyThresholdInMilliseconds",
					"TargetDC",
					"TotalTimeoutInMinutes",
					"UseADDriver",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ActiveSyncConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowUnsecureAccess",
					"ClientAccessServer",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LightMode",
					"MailboxCredential",
					"MailboxServer",
					"MonitoringContext",
					"MonitoringInstance",
					"OutBuffer",
					"OutVariable",
					"ResetTestAccountCredentials",
					"Timeout",
					"TrustAnySSLCertificate",
					"URL",
					"UseAutodiscoverForClientAccessServer",
					"UserType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ArchiveConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"IncludeArchiveMRMConfiguration",
					"MessageId",
					"OutBuffer",
					"OutVariable",
					"UserSmtp",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-AssistantHealth", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"IncludeCrashDump",
					"MaxProcessingTimeInMinutes",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"ResolveProblems",
					"ServerName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WatermarkBehindWarningThreholdInMinutes",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-CalendarConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientAccessServer",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LightMode",
					"MailboxServer",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"ResetTestAccountCredentials",
					"TestType",
					"Timeout",
					"TrustAnySSLCertificate",
					"UserType",
					"Verbose",
					"VirtualDirectoryName",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-DarTask", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"TenantId",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-DataCenterDKMAccess", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-EcpConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientAccessServer",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LightMode",
					"MailboxServer",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"ResetTestAccountCredentials",
					"RSTEndPoint",
					"TestType",
					"Timeout",
					"TrustAnySSLCertificate",
					"UserType",
					"Verbose",
					"VirtualDirectoryName",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-EcpConnectivity2", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllowUnsecureAccess",
					"ClientAccessServer",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LightMode",
					"MailboxCredential",
					"MailboxServer",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"RequestTimeout",
					"ResetTestAccountCredentials",
					"TestType",
					"Timeout",
					"TrustAnySSLCertificate",
					"Url",
					"UserType",
					"Verbose",
					"VirtualDirectoryName",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-EdgeSyncEhf", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"ConnectorId",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MonitoringContext",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-EdgeSynchronization", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExcludeRecipientTest",
					"FullCompareMode",
					"MaxReportSize",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"TargetServer",
					"Verbose",
					"VerifyRecipient",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-EdgeSyncMserv", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EmailAddresses",
					"ErrorAction",
					"ErrorVariable",
					"Mailboxes",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ExchangeNotification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"InsertionStrings",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PeriodicKey",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ExchangeSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Archive",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IndexingTimeoutInSeconds",
					"MailboxDatabase",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-FederationTrust", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"UserIdentity",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-FederationTrustCertificate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-GlobalLocatorService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ImapConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientAccessServer",
					"Confirm",
					"ConnectionType",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LightMode",
					"MailboxCredential",
					"MailboxServer",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"PerConnectionTimeout",
					"PortClientAccessServer",
					"ResetTestAccountCredentials",
					"Timeout",
					"TrustAnySSLCertificate",
					"UserType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-IPAllowListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IPAddress",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-IPBlockListProvider", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IPAddress",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-LinkedInConnect", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthorizationCallbackUrl",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-LiveIdAuthentication", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreLowPasswordConfidence",
					"LiveIdXmlAuth",
					"MailboxCredential",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"PreferOfflineAuth",
					"Server",
					"SyncADBackendOnly",
					"TestFailOver",
					"TestLegacyAPI",
					"UserType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-Mailflow", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveDirectoryTimeout",
					"AutoDiscoverTargetMailboxServer",
					"Confirm",
					"CrossPremises",
					"CrossPremisesExpirationTimeout",
					"CrossPremisesPendingErrorCount",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorLatency",
					"ErrorVariable",
					"ExecutionTimeout",
					"Identity",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"TargetDatabase",
					"TargetEmailAddress",
					"TargetEmailAddressDisplayName",
					"TargetMailboxServer",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-MAPIConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveDirectoryTimeout",
					"AllConnectionsTimeout",
					"Archive",
					"Confirm",
					"CopyOnServer",
					"Database",
					"Debug",
					"DomainController",
					"EnableSoftDeletedRecipientLogon",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludePassive",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"PerConnectionTimeout",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-MigrationServerAvailability", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"Autodiscover",
					"Confirm",
					"Credentials",
					"Debug",
					"EmailAddress",
					"Endpoint",
					"ErrorAction",
					"ErrorVariable",
					"ExchangeOutlookAnywhere",
					"ExchangeRemoteMove",
					"ExchangeServer",
					"FilePath",
					"Imap",
					"MailboxPermission",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Partition",
					"Port",
					"PSTImport",
					"PublicFolder",
					"PublicFolderDatabaseServerLegacyDN",
					"RemoteServer",
					"RPCProxyServer",
					"Security",
					"SourceMailboxLegacyDN",
					"TestMailbox",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-MRSHealth", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MaxQueueScanAgeSeconds",
					"MonitoringContext",
					"MRSProxyCredentials",
					"MRSProxyServer",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-OAuthConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppOnly",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Mailbox",
					"OrganizationDomain",
					"OutBuffer",
					"OutVariable",
					"ReloadConfig",
					"Service",
					"TargetUri",
					"UseCachedToken",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-OutlookConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Credential",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Hostname",
					"MailboxId",
					"OutBuffer",
					"OutVariable",
					"ProbeIdentity",
					"RunFromServerId",
					"TimeOutSeconds",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-OutlookWebServices", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutoDiscoverServer",
					"ClientAccessServer",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MailboxCredential",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"TrustAnySSLCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-PopConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientAccessServer",
					"Confirm",
					"ConnectionType",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"LightMode",
					"MailboxCredential",
					"MailboxServer",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"PerConnectionTimeout",
					"PortClientAccessServer",
					"ResetTestAccountCredentials",
					"Timeout",
					"TrustAnySSLCertificate",
					"UserType",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-PowerShellConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Authentication",
					"ClientAccessServer",
					"Confirm",
					"ConnectionUri",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MailboxServer",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"ResetTestAccountCredentials",
					"TestCredential",
					"TestType",
					"TrustAnySSLCertificate",
					"UserType",
					"Verbose",
					"VirtualDirectoryName",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ReplicationHealth", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveDirectoryTimeout",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MonitoringContext",
					"OutBuffer",
					"OutputObjects",
					"OutVariable",
					"TransientEventSuppressionWindow",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-SenderId", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"HelloDomain",
					"IPAddress",
					"OutBuffer",
					"OutVariable",
					"PurportedResponsibleDomain",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-ServiceHealth", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActiveDirectoryTimeout",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-SiteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassOwnerCheck",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequestorIdentity",
					"SharePointUrl",
					"UseAppTokenOnly",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-SmtpConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-TenantMonitoringPerfCounters", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"CounterNameForAttempts",
					"CounterNameForSuccesses",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"EventId",
					"MinimumCountForAlert",
					"OutBuffer",
					"OutVariable",
					"SuccessThresholdPercentage",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-TopologyService", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ADServerRole",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"MonitoringContext",
					"OperationType",
					"OutBuffer",
					"OutVariable",
					"PartitionFqdn",
					"Server",
					"TargetDomainController",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-UMConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CallRouter",
					"CertificateThumbprint",
					"Confirm",
					"Debug",
					"DiagDtmfDurationInMilisecs",
					"DiagDtmfSequence",
					"DiagInitialSilenceInMilisecs",
					"DiagInterDtmfDiffGapInMilisecs",
					"DiagInterDtmfGapInMilisecs",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"From",
					"ListenPort",
					"MediaSecured",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"Phone",
					"PIN",
					"RemotePort",
					"ResetPIN",
					"Secured",
					"Timeout",
					"TUILogon",
					"TUILogonAll",
					"UMDialPlan",
					"UMIPGateway",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-WebServicesConnectivity", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AutoDiscoverServer",
					"ClientAccessServer",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"LightMode",
					"MailboxCredential",
					"MonitoringContext",
					"OutBuffer",
					"OutVariable",
					"TrustAnySSLCertificate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Undo-SoftDeletedMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Password",
					"SoftDeletedObject",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Undo-SyncSoftDeletedMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassLiveId",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Password",
					"SoftDeletedObject",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Undo-SyncSoftDeletedMailUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassLiveId",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Password",
					"SoftDeletedObject",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Undo-SyncSoftDeletedUser", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassLiveId",
					"Confirm",
					"Debug",
					"DisplayName",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Password",
					"SoftDeletedObject",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveID",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Uninstall-TransportAgent", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"TransportService",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-AddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-DatabaseSchema", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MajorVersion",
					"MinorVersion",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-ExchangeHelp", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Force",
					"Verbose",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-GlobalAddressList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-HybridConfiguration", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ForceUpgrade",
					"OnPremisesCredentials",
					"OutBuffer",
					"OutVariable",
					"SuppressOAuthWarning",
					"TenantCredentials",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-MailboxDatabaseCopy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BeginSeed",
					"CancelSeed",
					"CatalogOnly",
					"Confirm",
					"DatabaseOnly",
					"Debug",
					"DeleteExistingFiles",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"ManualResume",
					"MaximumSeedsInParallel",
					"Network",
					"NetworkCompressionOverride",
					"NetworkEncryptionOverride",
					"OutBuffer",
					"OutVariable",
					"SafeDeleteExistingFiles",
					"Server",
					"SourceServer",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-OfflineAddressBook", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-PublicFolderMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FullSync",
					"Identity",
					"InvokeSynchronizer",
					"OutBuffer",
					"OutVariable",
					"ReconcileFolders",
					"SuppressStatus",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-Recipient", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Credential",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-SafeList", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"EnsureJunkEmailRule",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeDomains",
					"OutBuffer",
					"OutVariable",
					"Type",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-ServicePlan", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ConfigOnly",
					"Confirm",
					"Conservative",
					"Debug",
					"DomainController",
					"EnableFileLogging",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IncludeUserUpdatePhase",
					"IsDataCenter",
					"IsPartnerHosted",
					"OfferId",
					"OutBuffer",
					"OutVariable",
					"ProgramId",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-SiteMailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"BypassOwnerCheck",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"FullSync",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Server",
					"Target",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-StoreMailboxState", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Database",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Update-SyncStatistics", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClientData",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"MailboxCreationElapsedMilliseconds",
					"NumberOfConnectionErrors",
					"NumberOfExportSyncRuns",
					"NumberOfIlmLogicErrors",
					"NumberOfIlmOtherErrors",
					"NumberOfImportSyncRuns",
					"NumberOfLiveIdErrors",
					"NumberOfMailboxesCreated",
					"NumberOfMailboxesToCreate",
					"NumberOfPermissionErrors",
					"NumberOfSucessfulExportSyncRuns",
					"NumberOfSucessfulImportSyncRuns",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class EXOStandardRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(31)
			{
				new CmdletRoleEntry("Export-DlpPolicyCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationRuleCollectionIdentity",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DataClassificationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Actor",
					"Debug",
					"DlpPolicy",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EventType",
					"Expression",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"Source",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailDetailDlpPolicyReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"Direction",
					"DlpPolicy",
					"Domain",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EventType",
					"Expression",
					"MessageId",
					"MessageTraceId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"RecipientAddress",
					"SenderAddress",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Locale",
					"Organization",
					"Original",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DlpPolicy"
				}),
				new CmdletRoleEntry("Import-DlpPolicyCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Force",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"InstallDefaultCollection",
					"Organization",
					"OutBuffer",
					"OutOfBoxCollection",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationRuleCollectionIdentity",
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Fingerprints",
					"Locale",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Mode",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Parameters",
					"State",
					"Template",
					"TemplateData",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Fingerprint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Value",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ThrottlingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"EncryptionRecipientCutoffBalance",
					"EncryptionRecipientMaxBurst",
					"EncryptionRecipientMaxConcurrency",
					"EncryptionRecipientRechargeRate",
					"EncryptionSenderCutoffBalance",
					"EncryptionSenderMaxBurst",
					"EncryptionSenderMaxConcurrency",
					"EncryptionSenderRechargeRate"
				}),
				new CmdletRoleEntry("New-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DlpPolicy",
					"ExceptIfMessageContainsDataClassifications",
					"MessageContainsDataClassifications",
					"NotifySender"
				}),
				new CmdletRoleEntry("Remove-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Name",
					"Organization",
					"OutBuffer",
					"OutOfBoxCollection",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Fingerprints",
					"Identity",
					"IsDefault",
					"Locale",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DataClassificationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DistinctFunctions",
					"DistinctRegExes",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FingerprintThreshold",
					"Identity",
					"KeywordLength",
					"MaxAnyBlocks",
					"MaxFingerprints",
					"MaxNestedAnyBlocks",
					"MaxRulePackages",
					"MaxRulePackageSize",
					"Name",
					"NumberOfKeywords",
					"OutBuffer",
					"OutVariable",
					"RegExGrammarLimit",
					"RegExLength",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mode",
					"Name",
					"OutBuffer",
					"OutVariable",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Value",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-ThrottlingPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"EncryptionRecipientCutoffBalance",
					"EncryptionRecipientMaxBurst",
					"EncryptionRecipientMaxConcurrency",
					"EncryptionRecipientRechargeRate",
					"EncryptionSenderCutoffBalance",
					"EncryptionSenderMaxBurst",
					"EncryptionSenderMaxConcurrency",
					"EncryptionSenderRechargeRate"
				}),
				new CmdletRoleEntry("Set-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"DlpPolicy",
					"ExceptIfMessageContainsDataClassifications",
					"MessageContainsDataClassifications",
					"NotifySender"
				})
			};
		}

		private class FFOMigrationInProgress_Restrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(76)
			{
				new CmdletRoleEntry("Disable-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-DlpPolicyCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-TransportRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Format",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationRuleCollectionIdentity",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DataClassificationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Actor",
					"Debug",
					"DlpPolicy",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EventType",
					"Expression",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"Source",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HistoricalSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"JobId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedOutboundSpamFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailDetailDlpPolicyReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"Direction",
					"DlpPolicy",
					"Domain",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EventType",
					"Expression",
					"MessageId",
					"MessageTraceId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"RecipientAddress",
					"SenderAddress",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"IncludeInvalidPolicies",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageTrace", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Expression",
					"FromIP",
					"MessageId",
					"MessageTraceId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"RecipientAddress",
					"SenderAddress",
					"StartDate",
					"Status",
					"ToIP",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageTraceDetail", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Event",
					"Expression",
					"MessageId",
					"MessageTraceId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"RecipientAddress",
					"SenderAddress",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsTransportRuleScoped",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Locale",
					"Organization",
					"Original",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-QuarantineMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Direction",
					"Domain",
					"DomainController",
					"EndExpiresDate",
					"EndReceivedDate",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MessageId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"RecipientAddress",
					"Reported",
					"SenderAddress",
					"StartExpiresDate",
					"StartReceivedDate",
					"Subject",
					"Type",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-QuarantineMessageHeader", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportRuleAction", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportRulePredicate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-DlpPolicyCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Force",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-TransportRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Force",
					"Identity",
					"MigrationSource",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AcceptedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthenticationType",
					"CatchAllRecipient",
					"Confirm",
					"Debug",
					"DomainController",
					"DomainName",
					"DomainType",
					"ErrorAction",
					"ErrorVariable",
					"InitialDomain",
					"LiveIdInstanceType",
					"MailFlowPartner",
					"MatchSubDomains",
					"Name",
					"Organization",
					"OutboundOnly",
					"OutBuffer",
					"OutVariable",
					"SkipDnsProvisioning",
					"SkipDomainNameValidation",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"InstallDefaultCollection",
					"Organization",
					"OutBuffer",
					"OutOfBoxCollection",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationRuleCollectionIdentity",
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Fingerprints",
					"Locale",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Mode",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Parameters",
					"State",
					"Template",
					"TemplateData",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Fingerprint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminDisplayName",
					"Confirm",
					"Debug",
					"DirectoryBasedEdgeBlockMode",
					"DomainController",
					"EnableSafeList",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"IPAllowList",
					"IPBlockList",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddXHeaderValue",
					"AdminDisplayName",
					"BulkThreshold",
					"Confirm",
					"Debug",
					"DomainController",
					"DownloadLink",
					"EnableEndUserSpamNotifications",
					"EnableLanguageBlockList",
					"EnableRegionBlockList",
					"EndUserSpamNotificationCustomFromAddress",
					"EndUserSpamNotificationCustomFromName",
					"EndUserSpamNotificationCustomSubject",
					"EndUserSpamNotificationFrequency",
					"EndUserSpamNotificationLanguage",
					"EndUserSpamNotificationLimit",
					"ErrorAction",
					"ErrorVariable",
					"FalsePositiveAdditionalRecipients",
					"HighConfidenceSpamAction",
					"IgnoreDehydratedFlag",
					"IncreaseScoreWithBizOrInfoUrls",
					"IncreaseScoreWithImageLinks",
					"IncreaseScoreWithNumericIps",
					"IncreaseScoreWithRedirectToOtherPort",
					"LanguageBlockList",
					"MarkAsSpamBulkMail",
					"MarkAsSpamEmbedTagsInHtml",
					"MarkAsSpamEmptyMessages",
					"MarkAsSpamFormTagsInHtml",
					"MarkAsSpamFramesInHtml",
					"MarkAsSpamFromAddressAuthFail",
					"MarkAsSpamJavaScriptInHtml",
					"MarkAsSpamNdrBackscatter",
					"MarkAsSpamObjectTagsInHtml",
					"MarkAsSpamSensitiveWordList",
					"MarkAsSpamSpfRecordHardFail",
					"MarkAsSpamWebBugsInHtml",
					"ModifySubjectValue",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"QuarantineRetentionPeriod",
					"RedirectToRecipients",
					"RegionBlockList",
					"SpamAction",
					"TestModeAction",
					"TestModeBccToRecipients",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"HostedContentFilterPolicy",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssociatedAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequireTls",
					"RestrictDomainsToCertificate",
					"RestrictDomainsToIPAddresses",
					"SenderDomains",
					"SenderIPAddresses",
					"TlsSenderCertificateName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"AdminDisplayName",
					"BypassInboundMessages",
					"BypassOutboundMessages",
					"Confirm",
					"CustomAlertText",
					"CustomExternalBody",
					"CustomExternalSubject",
					"CustomFromAddress",
					"CustomFromName",
					"CustomInternalBody",
					"CustomInternalSubject",
					"CustomNotifications",
					"Debug",
					"DomainController",
					"EnableExternalSenderAdminNotifications",
					"EnableExternalSenderNotifications",
					"EnableInternalSenderAdminNotifications",
					"EnableInternalSenderNotifications",
					"ErrorAction",
					"ErrorVariable",
					"ExternalSenderAdminAddress",
					"IgnoreDehydratedFlag",
					"InternalSenderAdminAddress",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"MalwareFilterPolicy",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IsTransportRuleScoped",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RecipientDomains",
					"RouteAllMessagesViaOnPremises",
					"SmartHosts",
					"TlsDomain",
					"TlsSettings",
					"UseMXRecord",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Value",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Release-QuarantineMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReleaseToAll",
					"ReportFalsePositive",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AcceptedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-AcceptedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressBookEnabled",
					"AuthenticationType",
					"BlockLiveIdProvisioningCalls",
					"CatchAllRecipient",
					"Confirm",
					"Debug",
					"DomainController",
					"DomainType",
					"DualProvisioningEnabled",
					"EnableNego2Authentication",
					"ErrorAction",
					"ErrorVariable",
					"IsCoexistenceDomain",
					"LiveIdInstanceType",
					"MailFlowPartner",
					"MakeDefault",
					"MatchSubDomains",
					"Name",
					"OutboundOnly",
					"OutBuffer",
					"OutVariable",
					"PendingCompletion",
					"PendingRemoval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Name",
					"Organization",
					"OutBuffer",
					"OutOfBoxCollection",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Fingerprints",
					"Identity",
					"IsDefault",
					"Locale",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DataClassificationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DistinctFunctions",
					"DistinctRegExes",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FingerprintThreshold",
					"Identity",
					"KeywordLength",
					"MaxAnyBlocks",
					"MaxFingerprints",
					"MaxNestedAnyBlocks",
					"MaxRulePackages",
					"MaxRulePackageSize",
					"Name",
					"NumberOfKeywords",
					"OutBuffer",
					"OutVariable",
					"RegExGrammarLimit",
					"RegExLength",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mode",
					"Name",
					"OutBuffer",
					"OutVariable",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminDisplayName",
					"Confirm",
					"Debug",
					"DirectoryBasedEdgeBlockMode",
					"DomainController",
					"EnableSafeList",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"IPAllowList",
					"IPBlockList",
					"MakeDefault",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddXHeaderValue",
					"AdminDisplayName",
					"BulkThreshold",
					"Confirm",
					"Debug",
					"DomainController",
					"DownloadLink",
					"EnableEndUserSpamNotifications",
					"EnableLanguageBlockList",
					"EnableRegionBlockList",
					"EndUserSpamNotificationCustomFromAddress",
					"EndUserSpamNotificationCustomFromName",
					"EndUserSpamNotificationCustomSubject",
					"EndUserSpamNotificationFrequency",
					"EndUserSpamNotificationLanguage",
					"EndUserSpamNotificationLimit",
					"ErrorAction",
					"ErrorVariable",
					"FalsePositiveAdditionalRecipients",
					"HighConfidenceSpamAction",
					"Identity",
					"IgnoreDehydratedFlag",
					"IncreaseScoreWithBizOrInfoUrls",
					"IncreaseScoreWithImageLinks",
					"IncreaseScoreWithNumericIps",
					"IncreaseScoreWithRedirectToOtherPort",
					"LanguageBlockList",
					"MakeDefault",
					"MarkAsSpamBulkMail",
					"MarkAsSpamEmbedTagsInHtml",
					"MarkAsSpamEmptyMessages",
					"MarkAsSpamFormTagsInHtml",
					"MarkAsSpamFramesInHtml",
					"MarkAsSpamFromAddressAuthFail",
					"MarkAsSpamJavaScriptInHtml",
					"MarkAsSpamNdrBackscatter",
					"MarkAsSpamObjectTagsInHtml",
					"MarkAsSpamSensitiveWordList",
					"MarkAsSpamSpfRecordHardFail",
					"MarkAsSpamWebBugsInHtml",
					"ModifySubjectValue",
					"Name",
					"OutBuffer",
					"OutVariable",
					"QuarantineRetentionPeriod",
					"RedirectToRecipients",
					"RegionBlockList",
					"SpamAction",
					"TestModeAction",
					"TestModeBccToRecipients",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"HostedContentFilterPolicy",
					"Identity",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedOutboundSpamFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminDisplayName",
					"BccSuspiciousOutboundAdditionalRecipients",
					"BccSuspiciousOutboundMail",
					"BlockUnlistedDomains",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Name",
					"NotifyOutboundSpam",
					"NotifyOutboundSpamRecipients",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HybridMailflow", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"CentralizedTransportEnabled",
					"CertificateSubject",
					"Confirm",
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"InboundIPs",
					"OnPremisesFQDN",
					"Organization",
					"OutboundDomains",
					"OutBuffer",
					"OutVariable",
					"SecureMailEnabled",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssociatedAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RequireTls",
					"RestrictDomainsToCertificate",
					"RestrictDomainsToIPAddresses",
					"SenderDomains",
					"SenderIPAddresses",
					"TlsSenderCertificateName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"AdminDisplayName",
					"BypassInboundMessages",
					"BypassOutboundMessages",
					"Confirm",
					"CustomAlertText",
					"CustomExternalBody",
					"CustomExternalSubject",
					"CustomFromAddress",
					"CustomFromName",
					"CustomInternalBody",
					"CustomInternalSubject",
					"CustomNotifications",
					"Debug",
					"DomainController",
					"EnableExternalSenderAdminNotifications",
					"EnableExternalSenderNotifications",
					"EnableInternalSenderAdminNotifications",
					"EnableInternalSenderNotifications",
					"ErrorAction",
					"ErrorVariable",
					"ExternalSenderAdminAddress",
					"Identity",
					"IgnoreDehydratedFlag",
					"InternalSenderAdminAddress",
					"MakeDefault",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"Identity",
					"MalwareFilterPolicy",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IsTransportRuleScoped",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RecipientDomains",
					"RouteAllMessagesViaOnPremises",
					"SmartHosts",
					"TlsDomain",
					"TlsSettings",
					"UseMXRecord",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Value",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-HistoricalSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DeliveryStatus",
					"Direction",
					"DLPPolicy",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Locale",
					"MessageID",
					"NotifyAddress",
					"Organization",
					"OriginalClientIP",
					"OutBuffer",
					"OutVariable",
					"RecipientAddress",
					"ReportTitle",
					"ReportType",
					"SenderAddress",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Stop-HistoricalSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"JobId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				})
			};
		}

		private class OwaFacebookEnabledRestrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(3)
			{
				new CmdletRoleEntry("New-ConnectSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppAuthorizationCode",
					"Facebook"
				}),
				new CmdletRoleEntry("Set-ConnectSubscription", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AppAuthorizationCode",
					"Facebook"
				}),
				new CmdletRoleEntry("Set-OwaMailboxPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"FacebookEnabled"
				})
			};
		}

		private class PilotingOrganization_Restrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(83)
			{
				new CmdletRoleEntry("Disable-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Disable-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mode",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-DlpPolicyCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Export-TransportRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Format",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationRuleCollectionIdentity",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DataClassificationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpDetailReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Actor",
					"Debug",
					"DlpPolicy",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EventType",
					"Expression",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"Source",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HistoricalSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"JobId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-HostedOutboundSpamFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MailDetailDlpPolicyReport", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"Direction",
					"DlpPolicy",
					"Domain",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"EventType",
					"Expression",
					"MessageId",
					"MessageTraceId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"RecipientAddress",
					"SenderAddress",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"IncludeInvalidPolicies",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageTrace", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Expression",
					"FromIP",
					"MessageId",
					"MessageTraceId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"RecipientAddress",
					"SenderAddress",
					"StartDate",
					"Status",
					"ToIP",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-MessageTraceDetail", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Event",
					"Expression",
					"MessageId",
					"MessageTraceId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"ProbeTag",
					"RecipientAddress",
					"SenderAddress",
					"StartDate",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IsTransportRuleScoped",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Locale",
					"Organization",
					"Original",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-QuarantineMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Direction",
					"Domain",
					"DomainController",
					"EndExpiresDate",
					"EndReceivedDate",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"MessageId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Page",
					"PageSize",
					"RecipientAddress",
					"Reported",
					"SenderAddress",
					"StartExpiresDate",
					"StartReceivedDate",
					"Subject",
					"Type",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-QuarantineMessageHeader", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DlpPolicy",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportRuleAction", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportRulePredicate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-DlpPolicyCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Force",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Import-TransportRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Force",
					"Identity",
					"MigrationSource",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-AcceptedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AuthenticationType",
					"CatchAllRecipient",
					"Confirm",
					"Debug",
					"DomainController",
					"DomainName",
					"DomainType",
					"ErrorAction",
					"ErrorVariable",
					"InitialDomain",
					"LiveIdInstanceType",
					"MailFlowPartner",
					"MatchSubDomains",
					"Name",
					"Organization",
					"OutboundOnly",
					"OutBuffer",
					"OutVariable",
					"SkipDnsProvisioning",
					"SkipDomainNameValidation",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"InstallDefaultCollection",
					"Organization",
					"OutBuffer",
					"OutOfBoxCollection",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ClassificationRuleCollectionIdentity",
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Fingerprints",
					"Locale",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Mode",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Parameters",
					"State",
					"Template",
					"TemplateData",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Fingerprint", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminDisplayName",
					"Confirm",
					"Debug",
					"DirectoryBasedEdgeBlockMode",
					"DomainController",
					"EnableSafeList",
					"ErrorAction",
					"ErrorVariable",
					"IgnoreDehydratedFlag",
					"IPAllowList",
					"IPBlockList",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddXHeaderValue",
					"AdminDisplayName",
					"BulkThreshold",
					"Confirm",
					"Debug",
					"DomainController",
					"DownloadLink",
					"EnableEndUserSpamNotifications",
					"EnableLanguageBlockList",
					"EnableRegionBlockList",
					"EndUserSpamNotificationCustomFromAddress",
					"EndUserSpamNotificationCustomFromName",
					"EndUserSpamNotificationCustomSubject",
					"EndUserSpamNotificationFrequency",
					"EndUserSpamNotificationLanguage",
					"EndUserSpamNotificationLimit",
					"ErrorAction",
					"ErrorVariable",
					"FalsePositiveAdditionalRecipients",
					"HighConfidenceSpamAction",
					"IgnoreDehydratedFlag",
					"IncreaseScoreWithBizOrInfoUrls",
					"IncreaseScoreWithImageLinks",
					"IncreaseScoreWithNumericIps",
					"IncreaseScoreWithRedirectToOtherPort",
					"LanguageBlockList",
					"MarkAsSpamBulkMail",
					"MarkAsSpamEmbedTagsInHtml",
					"MarkAsSpamEmptyMessages",
					"MarkAsSpamFormTagsInHtml",
					"MarkAsSpamFramesInHtml",
					"MarkAsSpamFromAddressAuthFail",
					"MarkAsSpamJavaScriptInHtml",
					"MarkAsSpamNdrBackscatter",
					"MarkAsSpamObjectTagsInHtml",
					"MarkAsSpamSensitiveWordList",
					"MarkAsSpamSpfRecordHardFail",
					"MarkAsSpamWebBugsInHtml",
					"ModifySubjectValue",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"QuarantineRetentionPeriod",
					"RedirectToRecipients",
					"RegionBlockList",
					"SpamAction",
					"TestModeAction",
					"TestModeBccToRecipients",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"HostedContentFilterPolicy",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssociatedAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RequireTls",
					"RestrictDomainsToCertificate",
					"RestrictDomainsToIPAddresses",
					"SenderDomains",
					"SenderIPAddresses",
					"TlsSenderCertificateName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-Mailbox", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AccountDisabled",
					"ActiveSyncMailboxPolicy",
					"AddOnSKUCapability",
					"AddressBookPolicy",
					"Alias",
					"Arbitration",
					"ArbitrationMailbox",
					"Archive",
					"ArchiveDatabase",
					"ArchiveDomain",
					"AuxMailbox",
					"BypassLiveId",
					"Confirm",
					"Database",
					"Debug",
					"Discovery",
					"DisplayName",
					"DomainController",
					"EnableRoomMailboxAccount",
					"Equipment",
					"ErrorAction",
					"ErrorVariable",
					"EvictLiveId",
					"ExternalDirectoryObjectId",
					"FederatedIdentity",
					"FirstName",
					"Force",
					"HoldForMigration",
					"ImmutableId",
					"ImportLiveId",
					"Initials",
					"IsExcludedFromServingHierarchy",
					"LastName",
					"LinkedCredential",
					"LinkedDomainController",
					"LinkedMasterAccount",
					"LinkedRoom",
					"MailboxContainerGuid",
					"MailboxPlan",
					"MicrosoftOnlineServicesID",
					"ModeratedBy",
					"ModerationEnabled",
					"Name",
					"NetID",
					"Office",
					"Organization",
					"OrganizationalUnit",
					"OriginalNetID",
					"OutBuffer",
					"OutVariable",
					"OverrideRecipientQuotas",
					"Password",
					"Phone",
					"PrimarySmtpAddress",
					"PublicFolder",
					"QueryBaseDNRestrictionEnabled",
					"RemoteAccountPolicy",
					"RemoteArchive",
					"RemotePowerShellEnabled",
					"RemovedMailbox",
					"ResetPasswordOnNextLogon",
					"ResourceCapacity",
					"RetentionPolicy",
					"RoleAssignmentPolicy",
					"Room",
					"RoomMailboxPassword",
					"SamAccountName",
					"SendModerationNotifications",
					"Shared",
					"SharingPolicy",
					"SKUAssigned",
					"SKUCapability",
					"TargetAllMDBs",
					"ThrottlingPolicy",
					"UsageLocation",
					"UseExistingLiveId",
					"UserPrincipalName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WindowsLiveID"
				}),
				new CmdletRoleEntry("New-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"AdminDisplayName",
					"BypassInboundMessages",
					"BypassOutboundMessages",
					"Confirm",
					"CustomAlertText",
					"CustomExternalBody",
					"CustomExternalSubject",
					"CustomFromAddress",
					"CustomFromName",
					"CustomInternalBody",
					"CustomInternalSubject",
					"CustomNotifications",
					"Debug",
					"DomainController",
					"EnableExternalSenderAdminNotifications",
					"EnableExternalSenderNotifications",
					"EnableInternalSenderAdminNotifications",
					"EnableInternalSenderNotifications",
					"ErrorAction",
					"ErrorVariable",
					"ExternalSenderAdminAddress",
					"IgnoreDehydratedFlag",
					"InternalSenderAdminAddress",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"MalwareFilterPolicy",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IsTransportRuleScoped",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"RecipientDomains",
					"RouteAllMessagesViaOnPremises",
					"SmartHosts",
					"TlsDomain",
					"TlsSettings",
					"UseMXRecord",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Value",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivationDate",
					"AdComparisonAttribute",
					"AdComparisonOperator",
					"AddManagerAsRecipientType",
					"AddToRecipients",
					"AnyOfCcHeader",
					"AnyOfCcHeaderMemberOf",
					"AnyOfRecipientAddressContainsWords",
					"AnyOfRecipientAddressMatchesPatterns",
					"AnyOfToCcHeader",
					"AnyOfToCcHeaderMemberOf",
					"AnyOfToHeader",
					"AnyOfToHeaderMemberOf",
					"ApplyClassification",
					"ApplyHtmlDisclaimerFallbackAction",
					"ApplyHtmlDisclaimerLocation",
					"ApplyHtmlDisclaimerText",
					"ApplyOME",
					"ApplyRightsProtectionTemplate",
					"AttachmentContainsWords",
					"AttachmentExtensionMatchesWords",
					"AttachmentHasExecutableContent",
					"AttachmentIsPasswordProtected",
					"AttachmentIsUnsupported",
					"AttachmentMatchesPatterns",
					"AttachmentNameMatchesPatterns",
					"AttachmentProcessingLimitExceeded",
					"AttachmentPropertyContainsWords",
					"AttachmentSizeOver",
					"BetweenMemberOf1",
					"BetweenMemberOf2",
					"BlindCopyTo",
					"Comments",
					"Confirm",
					"ContentCharacterSetContainsWords",
					"CopyTo",
					"Debug",
					"DeleteMessage",
					"Disconnect",
					"DlpPolicy",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfAdComparisonAttribute",
					"ExceptIfAdComparisonOperator",
					"ExceptIfAnyOfCcHeader",
					"ExceptIfAnyOfCcHeaderMemberOf",
					"ExceptIfAnyOfRecipientAddressContainsWords",
					"ExceptIfAnyOfRecipientAddressMatchesPatterns",
					"ExceptIfAnyOfToCcHeader",
					"ExceptIfAnyOfToCcHeaderMemberOf",
					"ExceptIfAnyOfToHeader",
					"ExceptIfAnyOfToHeaderMemberOf",
					"ExceptIfAttachmentContainsWords",
					"ExceptIfAttachmentExtensionMatchesWords",
					"ExceptIfAttachmentHasExecutableContent",
					"ExceptIfAttachmentIsPasswordProtected",
					"ExceptIfAttachmentIsUnsupported",
					"ExceptIfAttachmentMatchesPatterns",
					"ExceptIfAttachmentNameMatchesPatterns",
					"ExceptIfAttachmentProcessingLimitExceeded",
					"ExceptIfAttachmentPropertyContainsWords",
					"ExceptIfAttachmentSizeOver",
					"ExceptIfBetweenMemberOf1",
					"ExceptIfBetweenMemberOf2",
					"ExceptIfContentCharacterSetContainsWords",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromAddressMatchesPatterns",
					"ExceptIfFromMemberOf",
					"ExceptIfFromScope",
					"ExceptIfHasClassification",
					"ExceptIfHasNoClassification",
					"ExceptIfHasSenderOverride",
					"ExceptIfHeaderContainsMessageHeader",
					"ExceptIfHeaderContainsWords",
					"ExceptIfHeaderMatchesMessageHeader",
					"ExceptIfHeaderMatchesPatterns",
					"ExceptIfManagerAddresses",
					"ExceptIfManagerForEvaluatedUser",
					"ExceptIfMessageContainsDataClassifications",
					"ExceptIfMessageSizeOver",
					"ExceptIfMessageTypeMatches",
					"ExceptIfRecipientADAttributeContainsWords",
					"ExceptIfRecipientADAttributeMatchesPatterns",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfRecipientAddressMatchesPatterns",
					"ExceptIfRecipientDomainIs",
					"ExceptIfRecipientInSenderList",
					"ExceptIfSCLOver",
					"ExceptIfSenderADAttributeContainsWords",
					"ExceptIfSenderADAttributeMatchesPatterns",
					"ExceptIfSenderDomainIs",
					"ExceptIfSenderInRecipientList",
					"ExceptIfSenderIpRanges",
					"ExceptIfSenderManagementRelationship",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"ExceptIfSentToScope",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectMatchesPatterns",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfSubjectOrBodyMatchesPatterns",
					"ExceptIfWithImportance",
					"ExpiryDate",
					"From",
					"FromAddressContainsWords",
					"FromAddressMatchesPatterns",
					"FromMemberOf",
					"FromScope",
					"GenerateIncidentReport",
					"GenerateNotification",
					"HasClassification",
					"HasNoClassification",
					"HasSenderOverride",
					"HeaderContainsMessageHeader",
					"HeaderContainsWords",
					"HeaderMatchesMessageHeader",
					"HeaderMatchesPatterns",
					"IncidentReportContent",
					"IncidentReportOriginalMail",
					"LogEventText",
					"ManagerAddresses",
					"ManagerForEvaluatedUser",
					"MessageContainsDataClassifications",
					"MessageSizeOver",
					"MessageTypeMatches",
					"Mode",
					"ModerateMessageByManager",
					"ModerateMessageByUser",
					"Name",
					"NotifySender",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PrependSubject",
					"Priority",
					"Quarantine",
					"RecipientADAttributeContainsWords",
					"RecipientADAttributeMatchesPatterns",
					"RecipientAddressContainsWords",
					"RecipientAddressMatchesPatterns",
					"RecipientDomainIs",
					"RecipientInSenderList",
					"RedirectMessageTo",
					"RejectMessageEnhancedStatusCode",
					"RejectMessageReasonText",
					"RemoveHeader",
					"RemoveOME",
					"RouteMessageOutboundConnector",
					"RouteMessageOutboundRequireTls",
					"RuleErrorAction",
					"RuleSubType",
					"SCLOver",
					"SenderADAttributeContainsWords",
					"SenderADAttributeMatchesPatterns",
					"SenderAddressLocation",
					"SenderDomainIs",
					"SenderInRecipientList",
					"SenderIpRanges",
					"SenderManagementRelationship",
					"SentTo",
					"SentToMemberOf",
					"SentToScope",
					"SetAuditSeverity",
					"SetHeaderName",
					"SetHeaderValue",
					"SetSCL",
					"SmtpRejectMessageRejectStatusCode",
					"SmtpRejectMessageRejectText",
					"StopRuleProcessing",
					"SubjectContainsWords",
					"SubjectMatchesPatterns",
					"SubjectOrBodyContainsWords",
					"SubjectOrBodyMatchesPatterns",
					"UseLegacyRegex",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Release-QuarantineMessage", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ReleaseToAll",
					"ReportFalsePositive",
					"User",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-AcceptedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-DlpPolicyTemplate", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Force",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Remove-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-AcceptedDomain", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddressBookEnabled",
					"AuthenticationType",
					"BlockLiveIdProvisioningCalls",
					"CatchAllRecipient",
					"Confirm",
					"Debug",
					"DomainController",
					"DomainType",
					"DualProvisioningEnabled",
					"EnableNego2Authentication",
					"ErrorAction",
					"ErrorVariable",
					"IsCoexistenceDomain",
					"LiveIdInstanceType",
					"MailFlowPartner",
					"MakeDefault",
					"MatchSubDomains",
					"Name",
					"OutboundOnly",
					"OutBuffer",
					"OutVariable",
					"PendingCompletion",
					"PendingRemoval",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-ClassificationRuleCollection", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FileData",
					"Name",
					"Organization",
					"OutBuffer",
					"OutOfBoxCollection",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DataClassification", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Fingerprints",
					"Identity",
					"IsDefault",
					"Locale",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DataClassificationConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DistinctFunctions",
					"DistinctRegExes",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"FingerprintThreshold",
					"Identity",
					"KeywordLength",
					"MaxAnyBlocks",
					"MaxFingerprints",
					"MaxNestedAnyBlocks",
					"MaxRulePackages",
					"MaxRulePackageSize",
					"Name",
					"NumberOfKeywords",
					"OutBuffer",
					"OutVariable",
					"RegExGrammarLimit",
					"RegExLength",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-DlpPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"Description",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mode",
					"Name",
					"OutBuffer",
					"OutVariable",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedConnectionFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminDisplayName",
					"Confirm",
					"Debug",
					"DirectoryBasedEdgeBlockMode",
					"DomainController",
					"EnableSafeList",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"IPAllowList",
					"IPBlockList",
					"MakeDefault",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedContentFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AddXHeaderValue",
					"AdminDisplayName",
					"BulkThreshold",
					"Confirm",
					"Debug",
					"DomainController",
					"DownloadLink",
					"EnableEndUserSpamNotifications",
					"EnableLanguageBlockList",
					"EnableRegionBlockList",
					"EndUserSpamNotificationCustomFromAddress",
					"EndUserSpamNotificationCustomFromName",
					"EndUserSpamNotificationCustomSubject",
					"EndUserSpamNotificationFrequency",
					"EndUserSpamNotificationLanguage",
					"EndUserSpamNotificationLimit",
					"ErrorAction",
					"ErrorVariable",
					"FalsePositiveAdditionalRecipients",
					"HighConfidenceSpamAction",
					"Identity",
					"IgnoreDehydratedFlag",
					"IncreaseScoreWithBizOrInfoUrls",
					"IncreaseScoreWithImageLinks",
					"IncreaseScoreWithNumericIps",
					"IncreaseScoreWithRedirectToOtherPort",
					"LanguageBlockList",
					"MakeDefault",
					"MarkAsSpamBulkMail",
					"MarkAsSpamEmbedTagsInHtml",
					"MarkAsSpamEmptyMessages",
					"MarkAsSpamFormTagsInHtml",
					"MarkAsSpamFramesInHtml",
					"MarkAsSpamFromAddressAuthFail",
					"MarkAsSpamJavaScriptInHtml",
					"MarkAsSpamNdrBackscatter",
					"MarkAsSpamObjectTagsInHtml",
					"MarkAsSpamSensitiveWordList",
					"MarkAsSpamSpfRecordHardFail",
					"MarkAsSpamWebBugsInHtml",
					"ModifySubjectValue",
					"Name",
					"OutBuffer",
					"OutVariable",
					"QuarantineRetentionPeriod",
					"RedirectToRecipients",
					"RegionBlockList",
					"SpamAction",
					"TestModeAction",
					"TestModeBccToRecipients",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedContentFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"HostedContentFilterPolicy",
					"Identity",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-HostedOutboundSpamFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AdminDisplayName",
					"BccSuspiciousOutboundAdditionalRecipients",
					"BccSuspiciousOutboundMail",
					"BlockUnlistedDomains",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"IgnoreDehydratedFlag",
					"Name",
					"NotifyOutboundSpam",
					"NotifyOutboundSpamRecipients",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-InboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AssociatedAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RequireTls",
					"RestrictDomainsToCertificate",
					"RestrictDomainsToIPAddresses",
					"SenderDomains",
					"SenderIPAddresses",
					"TlsSenderCertificateName",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-MalwareFilterPolicy", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Action",
					"AdminDisplayName",
					"BypassInboundMessages",
					"BypassOutboundMessages",
					"Confirm",
					"CustomAlertText",
					"CustomExternalBody",
					"CustomExternalSubject",
					"CustomFromAddress",
					"CustomFromName",
					"CustomInternalBody",
					"CustomInternalSubject",
					"CustomNotifications",
					"Debug",
					"DomainController",
					"EnableExternalSenderAdminNotifications",
					"EnableExternalSenderNotifications",
					"EnableInternalSenderAdminNotifications",
					"EnableInternalSenderNotifications",
					"ErrorAction",
					"ErrorVariable",
					"ExternalSenderAdminAddress",
					"Identity",
					"IgnoreDehydratedFlag",
					"InternalSenderAdminAddress",
					"MakeDefault",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-MalwareFilterRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Comments",
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfRecipientDomainIs",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"Identity",
					"MalwareFilterPolicy",
					"Name",
					"OutBuffer",
					"OutVariable",
					"Priority",
					"RecipientDomainIs",
					"SentTo",
					"SentToMemberOf",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-OutboundConnector", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"AllAcceptedDomains",
					"BypassValidation",
					"CloudServicesMailEnabled",
					"Comment",
					"Confirm",
					"ConnectorSource",
					"ConnectorType",
					"Debug",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"IsTransportRuleScoped",
					"Name",
					"OutBuffer",
					"OutVariable",
					"RecipientDomains",
					"RouteAllMessagesViaOnPremises",
					"SmartHosts",
					"TlsDomain",
					"TlsSettings",
					"UseMXRecord",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf"
				}),
				new CmdletRoleEntry("Set-PolicyTipConfig", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Value",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivationDate",
					"AdComparisonAttribute",
					"AdComparisonOperator",
					"AddManagerAsRecipientType",
					"AddToRecipients",
					"AnyOfCcHeader",
					"AnyOfCcHeaderMemberOf",
					"AnyOfRecipientAddressContainsWords",
					"AnyOfRecipientAddressMatchesPatterns",
					"AnyOfToCcHeader",
					"AnyOfToCcHeaderMemberOf",
					"AnyOfToHeader",
					"AnyOfToHeaderMemberOf",
					"ApplyClassification",
					"ApplyHtmlDisclaimerFallbackAction",
					"ApplyHtmlDisclaimerLocation",
					"ApplyHtmlDisclaimerText",
					"ApplyOME",
					"ApplyRightsProtectionTemplate",
					"AttachmentContainsWords",
					"AttachmentExtensionMatchesWords",
					"AttachmentHasExecutableContent",
					"AttachmentIsPasswordProtected",
					"AttachmentIsUnsupported",
					"AttachmentMatchesPatterns",
					"AttachmentNameMatchesPatterns",
					"AttachmentProcessingLimitExceeded",
					"AttachmentPropertyContainsWords",
					"AttachmentSizeOver",
					"BetweenMemberOf1",
					"BetweenMemberOf2",
					"BlindCopyTo",
					"Comments",
					"Confirm",
					"ContentCharacterSetContainsWords",
					"CopyTo",
					"Debug",
					"DeleteMessage",
					"Disconnect",
					"DlpPolicy",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfAdComparisonAttribute",
					"ExceptIfAdComparisonOperator",
					"ExceptIfAnyOfCcHeader",
					"ExceptIfAnyOfCcHeaderMemberOf",
					"ExceptIfAnyOfRecipientAddressContainsWords",
					"ExceptIfAnyOfRecipientAddressMatchesPatterns",
					"ExceptIfAnyOfToCcHeader",
					"ExceptIfAnyOfToCcHeaderMemberOf",
					"ExceptIfAnyOfToHeader",
					"ExceptIfAnyOfToHeaderMemberOf",
					"ExceptIfAttachmentContainsWords",
					"ExceptIfAttachmentExtensionMatchesWords",
					"ExceptIfAttachmentHasExecutableContent",
					"ExceptIfAttachmentIsPasswordProtected",
					"ExceptIfAttachmentIsUnsupported",
					"ExceptIfAttachmentMatchesPatterns",
					"ExceptIfAttachmentNameMatchesPatterns",
					"ExceptIfAttachmentProcessingLimitExceeded",
					"ExceptIfAttachmentPropertyContainsWords",
					"ExceptIfAttachmentSizeOver",
					"ExceptIfBetweenMemberOf1",
					"ExceptIfBetweenMemberOf2",
					"ExceptIfContentCharacterSetContainsWords",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromAddressMatchesPatterns",
					"ExceptIfFromMemberOf",
					"ExceptIfFromScope",
					"ExceptIfHasClassification",
					"ExceptIfHasNoClassification",
					"ExceptIfHasSenderOverride",
					"ExceptIfHeaderContainsMessageHeader",
					"ExceptIfHeaderContainsWords",
					"ExceptIfHeaderMatchesMessageHeader",
					"ExceptIfHeaderMatchesPatterns",
					"ExceptIfManagerAddresses",
					"ExceptIfManagerForEvaluatedUser",
					"ExceptIfMessageContainsDataClassifications",
					"ExceptIfMessageSizeOver",
					"ExceptIfMessageTypeMatches",
					"ExceptIfRecipientADAttributeContainsWords",
					"ExceptIfRecipientADAttributeMatchesPatterns",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfRecipientAddressMatchesPatterns",
					"ExceptIfRecipientDomainIs",
					"ExceptIfRecipientInSenderList",
					"ExceptIfSCLOver",
					"ExceptIfSenderADAttributeContainsWords",
					"ExceptIfSenderADAttributeMatchesPatterns",
					"ExceptIfSenderDomainIs",
					"ExceptIfSenderInRecipientList",
					"ExceptIfSenderIpRanges",
					"ExceptIfSenderManagementRelationship",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"ExceptIfSentToScope",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectMatchesPatterns",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfSubjectOrBodyMatchesPatterns",
					"ExceptIfWithImportance",
					"ExpiryDate",
					"From",
					"FromAddressContainsWords",
					"FromAddressMatchesPatterns",
					"FromMemberOf",
					"FromScope",
					"GenerateIncidentReport",
					"GenerateNotification",
					"HasClassification",
					"HasNoClassification",
					"HasSenderOverride",
					"HeaderContainsMessageHeader",
					"HeaderContainsWords",
					"HeaderMatchesMessageHeader",
					"HeaderMatchesPatterns",
					"Identity",
					"IncidentReportContent",
					"IncidentReportOriginalMail",
					"LogEventText",
					"ManagerAddresses",
					"ManagerForEvaluatedUser",
					"MessageContainsDataClassifications",
					"MessageSizeOver",
					"MessageTypeMatches",
					"Mode",
					"ModerateMessageByManager",
					"ModerateMessageByUser",
					"Name",
					"NotifySender",
					"OutBuffer",
					"OutVariable",
					"PrependSubject",
					"Priority",
					"Quarantine",
					"RecipientADAttributeContainsWords",
					"RecipientADAttributeMatchesPatterns",
					"RecipientAddressContainsWords",
					"RecipientAddressMatchesPatterns",
					"RecipientDomainIs",
					"RecipientInSenderList",
					"RedirectMessageTo",
					"RejectMessageEnhancedStatusCode",
					"RejectMessageReasonText",
					"RemoveHeader",
					"RemoveOME",
					"RouteMessageOutboundConnector",
					"RouteMessageOutboundRequireTls",
					"RuleErrorAction",
					"RuleSubType",
					"SCLOver",
					"SenderADAttributeContainsWords",
					"SenderADAttributeMatchesPatterns",
					"SenderAddressLocation",
					"SenderDomainIs",
					"SenderInRecipientList",
					"SenderIpRanges",
					"SenderManagementRelationship",
					"SentTo",
					"SentToMemberOf",
					"SentToScope",
					"SetAuditSeverity",
					"SetHeaderName",
					"SetHeaderValue",
					"SetSCL",
					"SmtpRejectMessageRejectStatusCode",
					"SmtpRejectMessageRejectText",
					"StopRuleProcessing",
					"SubjectContainsWords",
					"SubjectMatchesPatterns",
					"SubjectOrBodyContainsWords",
					"SubjectOrBodyMatchesPatterns",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Start-HistoricalSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DeliveryStatus",
					"Direction",
					"DLPPolicy",
					"EndDate",
					"ErrorAction",
					"ErrorVariable",
					"Locale",
					"MessageID",
					"NotifyAddress",
					"Organization",
					"OriginalClientIP",
					"OutBuffer",
					"OutVariable",
					"RecipientAddress",
					"ReportTitle",
					"ReportType",
					"SenderAddress",
					"StartDate",
					"TransportRule",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Stop-HistoricalSearch", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"ErrorAction",
					"ErrorVariable",
					"JobId",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-Message", "Microsoft.Exchange.Management.Powershell.Support", new string[]
				{
					"TransportRules"
				})
			};
		}

		private class RuleMigration_Restrictions
		{
			internal static readonly List<RoleEntry> RulesList = new List<RoleEntry>(7)
			{
				new CmdletRoleEntry("Disable-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Enable-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"Mode",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Get-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Debug",
					"DlpPolicy",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Filter",
					"Identity",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"ResultSize",
					"State",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("New-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivationDate",
					"AdComparisonAttribute",
					"AdComparisonOperator",
					"AddManagerAsRecipientType",
					"AddToRecipients",
					"AnyOfCcHeader",
					"AnyOfCcHeaderMemberOf",
					"AnyOfRecipientAddressContainsWords",
					"AnyOfRecipientAddressMatchesPatterns",
					"AnyOfToCcHeader",
					"AnyOfToCcHeaderMemberOf",
					"AnyOfToHeader",
					"AnyOfToHeaderMemberOf",
					"ApplyClassification",
					"ApplyHtmlDisclaimerFallbackAction",
					"ApplyHtmlDisclaimerLocation",
					"ApplyHtmlDisclaimerText",
					"ApplyOME",
					"ApplyRightsProtectionTemplate",
					"AttachmentContainsWords",
					"AttachmentExtensionMatchesWords",
					"AttachmentHasExecutableContent",
					"AttachmentIsPasswordProtected",
					"AttachmentIsUnsupported",
					"AttachmentMatchesPatterns",
					"AttachmentNameMatchesPatterns",
					"AttachmentProcessingLimitExceeded",
					"AttachmentPropertyContainsWords",
					"AttachmentSizeOver",
					"BetweenMemberOf1",
					"BetweenMemberOf2",
					"BlindCopyTo",
					"Comments",
					"Confirm",
					"ContentCharacterSetContainsWords",
					"CopyTo",
					"Debug",
					"DeleteMessage",
					"Disconnect",
					"DlpPolicy",
					"DomainController",
					"Enabled",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfAdComparisonAttribute",
					"ExceptIfAdComparisonOperator",
					"ExceptIfAnyOfCcHeader",
					"ExceptIfAnyOfCcHeaderMemberOf",
					"ExceptIfAnyOfRecipientAddressContainsWords",
					"ExceptIfAnyOfRecipientAddressMatchesPatterns",
					"ExceptIfAnyOfToCcHeader",
					"ExceptIfAnyOfToCcHeaderMemberOf",
					"ExceptIfAnyOfToHeader",
					"ExceptIfAnyOfToHeaderMemberOf",
					"ExceptIfAttachmentContainsWords",
					"ExceptIfAttachmentExtensionMatchesWords",
					"ExceptIfAttachmentHasExecutableContent",
					"ExceptIfAttachmentIsPasswordProtected",
					"ExceptIfAttachmentIsUnsupported",
					"ExceptIfAttachmentMatchesPatterns",
					"ExceptIfAttachmentNameMatchesPatterns",
					"ExceptIfAttachmentProcessingLimitExceeded",
					"ExceptIfAttachmentPropertyContainsWords",
					"ExceptIfAttachmentSizeOver",
					"ExceptIfBetweenMemberOf1",
					"ExceptIfBetweenMemberOf2",
					"ExceptIfContentCharacterSetContainsWords",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromAddressMatchesPatterns",
					"ExceptIfFromMemberOf",
					"ExceptIfFromScope",
					"ExceptIfHasClassification",
					"ExceptIfHasNoClassification",
					"ExceptIfHasSenderOverride",
					"ExceptIfHeaderContainsMessageHeader",
					"ExceptIfHeaderContainsWords",
					"ExceptIfHeaderMatchesMessageHeader",
					"ExceptIfHeaderMatchesPatterns",
					"ExceptIfManagerAddresses",
					"ExceptIfManagerForEvaluatedUser",
					"ExceptIfMessageContainsDataClassifications",
					"ExceptIfMessageSizeOver",
					"ExceptIfMessageTypeMatches",
					"ExceptIfRecipientADAttributeContainsWords",
					"ExceptIfRecipientADAttributeMatchesPatterns",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfRecipientAddressMatchesPatterns",
					"ExceptIfRecipientDomainIs",
					"ExceptIfRecipientInSenderList",
					"ExceptIfSCLOver",
					"ExceptIfSenderADAttributeContainsWords",
					"ExceptIfSenderADAttributeMatchesPatterns",
					"ExceptIfSenderDomainIs",
					"ExceptIfSenderInRecipientList",
					"ExceptIfSenderIpRanges",
					"ExceptIfSenderManagementRelationship",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"ExceptIfSentToScope",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectMatchesPatterns",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfSubjectOrBodyMatchesPatterns",
					"ExceptIfWithImportance",
					"ExpiryDate",
					"From",
					"FromAddressContainsWords",
					"FromAddressMatchesPatterns",
					"FromMemberOf",
					"FromScope",
					"GenerateIncidentReport",
					"GenerateNotification",
					"HasClassification",
					"HasNoClassification",
					"HasSenderOverride",
					"HeaderContainsMessageHeader",
					"HeaderContainsWords",
					"HeaderMatchesMessageHeader",
					"HeaderMatchesPatterns",
					"IncidentReportContent",
					"IncidentReportOriginalMail",
					"LogEventText",
					"ManagerAddresses",
					"ManagerForEvaluatedUser",
					"MessageContainsDataClassifications",
					"MessageSizeOver",
					"MessageTypeMatches",
					"Mode",
					"ModerateMessageByManager",
					"ModerateMessageByUser",
					"Name",
					"NotifySender",
					"Organization",
					"OutBuffer",
					"OutVariable",
					"PrependSubject",
					"Priority",
					"Quarantine",
					"RecipientADAttributeContainsWords",
					"RecipientADAttributeMatchesPatterns",
					"RecipientAddressContainsWords",
					"RecipientAddressMatchesPatterns",
					"RecipientDomainIs",
					"RecipientInSenderList",
					"RedirectMessageTo",
					"RejectMessageEnhancedStatusCode",
					"RejectMessageReasonText",
					"RemoveHeader",
					"RemoveOME",
					"RouteMessageOutboundConnector",
					"RouteMessageOutboundRequireTls",
					"RuleErrorAction",
					"RuleSubType",
					"SCLOver",
					"SenderADAttributeContainsWords",
					"SenderADAttributeMatchesPatterns",
					"SenderAddressLocation",
					"SenderDomainIs",
					"SenderInRecipientList",
					"SenderIpRanges",
					"SenderManagementRelationship",
					"SentTo",
					"SentToMemberOf",
					"SentToScope",
					"SetAuditSeverity",
					"SetHeaderName",
					"SetHeaderValue",
					"SetSCL",
					"SmtpRejectMessageRejectStatusCode",
					"SmtpRejectMessageRejectText",
					"StopRuleProcessing",
					"SubjectContainsWords",
					"SubjectMatchesPatterns",
					"SubjectOrBodyContainsWords",
					"SubjectOrBodyMatchesPatterns",
					"UseLegacyRegex",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Remove-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"Confirm",
					"Debug",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"Identity",
					"OutBuffer",
					"OutVariable",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Set-TransportRule", "Microsoft.Exchange.Management.PowerShell.E2010", new string[]
				{
					"ActivationDate",
					"AdComparisonAttribute",
					"AdComparisonOperator",
					"AddManagerAsRecipientType",
					"AddToRecipients",
					"AnyOfCcHeader",
					"AnyOfCcHeaderMemberOf",
					"AnyOfRecipientAddressContainsWords",
					"AnyOfRecipientAddressMatchesPatterns",
					"AnyOfToCcHeader",
					"AnyOfToCcHeaderMemberOf",
					"AnyOfToHeader",
					"AnyOfToHeaderMemberOf",
					"ApplyClassification",
					"ApplyHtmlDisclaimerFallbackAction",
					"ApplyHtmlDisclaimerLocation",
					"ApplyHtmlDisclaimerText",
					"ApplyOME",
					"ApplyRightsProtectionTemplate",
					"AttachmentContainsWords",
					"AttachmentExtensionMatchesWords",
					"AttachmentHasExecutableContent",
					"AttachmentIsPasswordProtected",
					"AttachmentIsUnsupported",
					"AttachmentMatchesPatterns",
					"AttachmentNameMatchesPatterns",
					"AttachmentProcessingLimitExceeded",
					"AttachmentPropertyContainsWords",
					"AttachmentSizeOver",
					"BetweenMemberOf1",
					"BetweenMemberOf2",
					"BlindCopyTo",
					"Comments",
					"Confirm",
					"ContentCharacterSetContainsWords",
					"CopyTo",
					"Debug",
					"DeleteMessage",
					"Disconnect",
					"DlpPolicy",
					"DomainController",
					"ErrorAction",
					"ErrorVariable",
					"ExceptIfAdComparisonAttribute",
					"ExceptIfAdComparisonOperator",
					"ExceptIfAnyOfCcHeader",
					"ExceptIfAnyOfCcHeaderMemberOf",
					"ExceptIfAnyOfRecipientAddressContainsWords",
					"ExceptIfAnyOfRecipientAddressMatchesPatterns",
					"ExceptIfAnyOfToCcHeader",
					"ExceptIfAnyOfToCcHeaderMemberOf",
					"ExceptIfAnyOfToHeader",
					"ExceptIfAnyOfToHeaderMemberOf",
					"ExceptIfAttachmentContainsWords",
					"ExceptIfAttachmentExtensionMatchesWords",
					"ExceptIfAttachmentHasExecutableContent",
					"ExceptIfAttachmentIsPasswordProtected",
					"ExceptIfAttachmentIsUnsupported",
					"ExceptIfAttachmentMatchesPatterns",
					"ExceptIfAttachmentNameMatchesPatterns",
					"ExceptIfAttachmentProcessingLimitExceeded",
					"ExceptIfAttachmentPropertyContainsWords",
					"ExceptIfAttachmentSizeOver",
					"ExceptIfBetweenMemberOf1",
					"ExceptIfBetweenMemberOf2",
					"ExceptIfContentCharacterSetContainsWords",
					"ExceptIfFrom",
					"ExceptIfFromAddressContainsWords",
					"ExceptIfFromAddressMatchesPatterns",
					"ExceptIfFromMemberOf",
					"ExceptIfFromScope",
					"ExceptIfHasClassification",
					"ExceptIfHasNoClassification",
					"ExceptIfHasSenderOverride",
					"ExceptIfHeaderContainsMessageHeader",
					"ExceptIfHeaderContainsWords",
					"ExceptIfHeaderMatchesMessageHeader",
					"ExceptIfHeaderMatchesPatterns",
					"ExceptIfManagerAddresses",
					"ExceptIfManagerForEvaluatedUser",
					"ExceptIfMessageContainsDataClassifications",
					"ExceptIfMessageSizeOver",
					"ExceptIfMessageTypeMatches",
					"ExceptIfRecipientADAttributeContainsWords",
					"ExceptIfRecipientADAttributeMatchesPatterns",
					"ExceptIfRecipientAddressContainsWords",
					"ExceptIfRecipientAddressMatchesPatterns",
					"ExceptIfRecipientDomainIs",
					"ExceptIfRecipientInSenderList",
					"ExceptIfSCLOver",
					"ExceptIfSenderADAttributeContainsWords",
					"ExceptIfSenderADAttributeMatchesPatterns",
					"ExceptIfSenderDomainIs",
					"ExceptIfSenderInRecipientList",
					"ExceptIfSenderIpRanges",
					"ExceptIfSenderManagementRelationship",
					"ExceptIfSentTo",
					"ExceptIfSentToMemberOf",
					"ExceptIfSentToScope",
					"ExceptIfSubjectContainsWords",
					"ExceptIfSubjectMatchesPatterns",
					"ExceptIfSubjectOrBodyContainsWords",
					"ExceptIfSubjectOrBodyMatchesPatterns",
					"ExceptIfWithImportance",
					"ExpiryDate",
					"From",
					"FromAddressContainsWords",
					"FromAddressMatchesPatterns",
					"FromMemberOf",
					"FromScope",
					"GenerateIncidentReport",
					"GenerateNotification",
					"HasClassification",
					"HasNoClassification",
					"HasSenderOverride",
					"HeaderContainsMessageHeader",
					"HeaderContainsWords",
					"HeaderMatchesMessageHeader",
					"HeaderMatchesPatterns",
					"Identity",
					"IncidentReportContent",
					"IncidentReportOriginalMail",
					"LogEventText",
					"ManagerAddresses",
					"ManagerForEvaluatedUser",
					"MessageContainsDataClassifications",
					"MessageSizeOver",
					"MessageTypeMatches",
					"Mode",
					"ModerateMessageByManager",
					"ModerateMessageByUser",
					"Name",
					"NotifySender",
					"OutBuffer",
					"OutVariable",
					"PrependSubject",
					"Priority",
					"Quarantine",
					"RecipientADAttributeContainsWords",
					"RecipientADAttributeMatchesPatterns",
					"RecipientAddressContainsWords",
					"RecipientAddressMatchesPatterns",
					"RecipientDomainIs",
					"RecipientInSenderList",
					"RedirectMessageTo",
					"RejectMessageEnhancedStatusCode",
					"RejectMessageReasonText",
					"RemoveHeader",
					"RemoveOME",
					"RouteMessageOutboundConnector",
					"RouteMessageOutboundRequireTls",
					"RuleErrorAction",
					"RuleSubType",
					"SCLOver",
					"SenderADAttributeContainsWords",
					"SenderADAttributeMatchesPatterns",
					"SenderAddressLocation",
					"SenderDomainIs",
					"SenderInRecipientList",
					"SenderIpRanges",
					"SenderManagementRelationship",
					"SentTo",
					"SentToMemberOf",
					"SentToScope",
					"SetAuditSeverity",
					"SetHeaderName",
					"SetHeaderValue",
					"SetSCL",
					"SmtpRejectMessageRejectStatusCode",
					"SmtpRejectMessageRejectText",
					"StopRuleProcessing",
					"SubjectContainsWords",
					"SubjectMatchesPatterns",
					"SubjectOrBodyContainsWords",
					"SubjectOrBodyMatchesPatterns",
					"Verbose",
					"WarningAction",
					"WarningVariable",
					"WhatIf",
					"WithImportance",
					"_RestrictionDefinedForAllParameters"
				}),
				new CmdletRoleEntry("Test-Message", "Microsoft.Exchange.Management.Powershell.Support", new string[]
				{
					"TransportRules"
				})
			};
		}
	}
}
