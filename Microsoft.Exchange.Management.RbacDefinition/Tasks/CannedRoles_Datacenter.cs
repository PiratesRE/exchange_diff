using System;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;

namespace Microsoft.Exchange.Management.Tasks
{
	internal class CannedRoles_Datacenter
	{
		internal static RoleDefinition[] Definition = new RoleDefinition[]
		{
			new RoleDefinition("AccessToCustomerDataDCOnly", RoleType.AccessToCustomerDataDCOnly, CannedRoles_Datacenter.AccessToCustomerDataDCOnly.Cmdlets),
			new RoleDefinition("Active Directory Permissions", RoleType.ActiveDirectoryPermissions, CannedRoles_Datacenter.Active_Directory_Permissions.Cmdlets),
			new RoleDefinition("Active Monitoring", RoleType.ActiveMonitoring, CannedRoles_Datacenter.Active_Monitoring.Cmdlets),
			new RoleDefinition("Address Lists", RoleType.AddressLists, CannedRoles_Datacenter.Address_Lists.Cmdlets),
			new RoleDefinition("ApplicationImpersonation", RoleType.ApplicationImpersonation, CannedRoles_Datacenter.ApplicationImpersonation.Cmdlets),
			new RoleDefinition("Audit Logs", RoleType.AuditLogs, CannedRoles_Datacenter.Audit_Logs.Cmdlets),
			new RoleDefinition("CSSEngineersScripts", RoleType.Custom, CannedRoles_Datacenter.CSSEngineersScripts.Cmdlets),
			new RoleDefinition("CentralAdminCredentialManagement", RoleType.CentralAdminCredentialManagement, CannedRoles_Datacenter.CentralAdminCredentialManagement.Cmdlets),
			new RoleDefinition("CentralAdminManagement", RoleType.CentralAdminManagement, CannedRoles_Datacenter.CentralAdminManagement.Cmdlets),
			new RoleDefinition("Cmdlet Extension Agents", RoleType.CmdletExtensionAgents, CannedRoles_Datacenter.Cmdlet_Extension_Agents.Cmdlets),
			new RoleDefinition("Data Loss Prevention", RoleType.DataLossPrevention, CannedRoles_Datacenter.Data_Loss_Prevention.Cmdlets),
			new RoleDefinition("DataCenter Destructive Operations", RoleType.DataCenterDestructiveOperations, CannedRoles_Datacenter.DataCenter_Destructive_Operations.Cmdlets),
			new RoleDefinition("DataCenter Operations", RoleType.DataCenterOperations, CannedRoles_Datacenter.DataCenter_Operations.Cmdlets),
			new RoleDefinition("Database Availability Groups", RoleType.DatabaseAvailabilityGroups, CannedRoles_Datacenter.Database_Availability_Groups.Cmdlets),
			new RoleDefinition("Database Copies", RoleType.DatabaseCopies, CannedRoles_Datacenter.Database_Copies.Cmdlets),
			new RoleDefinition("Databases", RoleType.Databases, CannedRoles_Datacenter.Databases.Cmdlets),
			new RoleDefinition("Disaster Recovery", RoleType.DisasterRecovery, CannedRoles_Datacenter.Disaster_Recovery.Cmdlets),
			new RoleDefinition("Distribution Groups", RoleType.DistributionGroups, CannedRoles_Datacenter.Distribution_Groups.Cmdlets),
			new RoleDefinition("E-Mail Address Policies", RoleType.EmailAddressPolicies, CannedRoles_Datacenter.E_Mail_Address_Policies.Cmdlets),
			new RoleDefinition("Edge Subscriptions", RoleType.EdgeSubscriptions, CannedRoles_Datacenter.Edge_Subscriptions.Cmdlets),
			new RoleDefinition("EduPartnerScriptRole", RoleType.Custom, CannedRoles_Datacenter.EduPartnerScriptRole.Cmdlets),
			new RoleDefinition("Exchange Connectors", RoleType.ExchangeConnectors, CannedRoles_Datacenter.Exchange_Connectors.Cmdlets),
			new RoleDefinition("Exchange Server Certificates", RoleType.ExchangeServerCertificates, CannedRoles_Datacenter.Exchange_Server_Certificates.Cmdlets),
			new RoleDefinition("Exchange Servers", RoleType.ExchangeServers, CannedRoles_Datacenter.Exchange_Servers.Cmdlets),
			new RoleDefinition("Exchange Virtual Directories", RoleType.ExchangeVirtualDirectories, CannedRoles_Datacenter.Exchange_Virtual_Directories.Cmdlets),
			new RoleDefinition("ExchangeCrossServiceIntegration", RoleType.ExchangeCrossServiceIntegration, CannedRoles_Datacenter.ExchangeCrossServiceIntegration.Cmdlets),
			new RoleDefinition("Federated Sharing", RoleType.FederatedSharing, CannedRoles_Datacenter.Federated_Sharing.Cmdlets),
			new RoleDefinition("GALSynchronizationManagement", RoleType.GALSynchronizationManagement, CannedRoles_Datacenter.GALSynchronizationManagement.Cmdlets),
			new RoleDefinition("Information Rights Management", RoleType.InformationRightsManagement, CannedRoles_Datacenter.Information_Rights_Management.Cmdlets),
			new RoleDefinition("Journaling", RoleType.Journaling, CannedRoles_Datacenter.Journaling.Cmdlets),
			new RoleDefinition("Law Enforcement Requests", RoleType.LawEnforcementRequests, CannedRoles_Datacenter.Law_Enforcement_Requests.Cmdlets),
			new RoleDefinition("Legal Hold", RoleType.LegalHold, CannedRoles_Datacenter.Legal_Hold.Cmdlets),
			new RoleDefinition("Mail Enabled Public Folders", RoleType.MailEnabledPublicFolders, CannedRoles_Datacenter.Mail_Enabled_Public_Folders.Cmdlets),
			new RoleDefinition("Mail Recipient Creation", RoleType.MailRecipientCreation, CannedRoles_Datacenter.Mail_Recipient_Creation.Cmdlets),
			new RoleDefinition("Mail Recipients", RoleType.MailRecipients, CannedRoles_Datacenter.Mail_Recipients.Cmdlets),
			new RoleDefinition("Mail Tips", RoleType.MailTips, CannedRoles_Datacenter.Mail_Tips.Cmdlets),
			new RoleDefinition("Mailbox Import Export", RoleType.MailboxImportExport, CannedRoles_Datacenter.Mailbox_Import_Export.Cmdlets),
			new RoleDefinition("Mailbox Search", RoleType.MailboxSearch, CannedRoles_Datacenter.Mailbox_Search.Cmdlets),
			new RoleDefinition("Message Tracking", RoleType.MessageTracking, CannedRoles_Datacenter.Message_Tracking.Cmdlets),
			new RoleDefinition("Migration", RoleType.Migration, CannedRoles_Datacenter.Migration.Cmdlets),
			new RoleDefinition("Monitoring", RoleType.Monitoring, CannedRoles_Datacenter.Monitoring.Cmdlets),
			new RoleDefinition("Move Mailboxes", RoleType.MoveMailboxes, CannedRoles_Datacenter.Move_Mailboxes.Cmdlets),
			new RoleDefinition("My Custom Apps", RoleType.MyCustomApps, CannedRoles_Datacenter.My_Custom_Apps.Cmdlets),
			new RoleDefinition("My Marketplace Apps", RoleType.MyMarketplaceApps, CannedRoles_Datacenter.My_Marketplace_Apps.Cmdlets),
			new RoleDefinition("My ReadWriteMailbox Apps", RoleType.MyReadWriteMailboxApps, CannedRoles_Datacenter.My_ReadWriteMailbox_Apps.Cmdlets),
			new RoleDefinition("MyAddressInformation", "MyContactInformation", RoleType.MyContactInformation, CannedRoles_Datacenter.MyAddressInformation.Cmdlets),
			new RoleDefinition("MyBaseOptions", RoleType.MyBaseOptions, CannedRoles_Datacenter.MyBaseOptions.Cmdlets),
			new RoleDefinition("MyContactInformation", RoleType.MyContactInformation, CannedRoles_Datacenter.MyContactInformation.Cmdlets),
			new RoleDefinition("MyDiagnostics", RoleType.MyDiagnostics, CannedRoles_Datacenter.MyDiagnostics.Cmdlets),
			new RoleDefinition("MyDisplayName", "MyProfileInformation", RoleType.MyProfileInformation, CannedRoles_Datacenter.MyDisplayName.Cmdlets),
			new RoleDefinition("MyDistributionGroupMembership", RoleType.MyDistributionGroupMembership, CannedRoles_Datacenter.MyDistributionGroupMembership.Cmdlets),
			new RoleDefinition("MyDistributionGroups", RoleType.MyDistributionGroups, CannedRoles_Datacenter.MyDistributionGroups.Cmdlets),
			new RoleDefinition("MyMailSubscriptions", RoleType.MyMailSubscriptions, CannedRoles_Datacenter.MyMailSubscriptions.Cmdlets),
			new RoleDefinition("MyMailboxDelegation", RoleType.MyMailboxDelegation, CannedRoles_Datacenter.MyMailboxDelegation.Cmdlets),
			new RoleDefinition("MyMobileInformation", "MyContactInformation", RoleType.MyContactInformation, CannedRoles_Datacenter.MyMobileInformation.Cmdlets),
			new RoleDefinition("MyName", "MyProfileInformation", RoleType.MyProfileInformation, CannedRoles_Datacenter.MyName.Cmdlets),
			new RoleDefinition("MyPersonalInformation", "MyContactInformation", RoleType.MyContactInformation, CannedRoles_Datacenter.MyPersonalInformation.Cmdlets),
			new RoleDefinition("MyProfileInformation", RoleType.MyProfileInformation, CannedRoles_Datacenter.MyProfileInformation.Cmdlets),
			new RoleDefinition("MyRetentionPolicies", RoleType.MyRetentionPolicies, CannedRoles_Datacenter.MyRetentionPolicies.Cmdlets),
			new RoleDefinition("MyTeamMailboxes", RoleType.MyTeamMailboxes, CannedRoles_Datacenter.MyTeamMailboxes.Cmdlets),
			new RoleDefinition("MyTextMessaging", RoleType.MyTextMessaging, CannedRoles_Datacenter.MyTextMessaging.Cmdlets),
			new RoleDefinition("MyVoiceMail", RoleType.MyVoiceMail, CannedRoles_Datacenter.MyVoiceMail.Cmdlets),
			new RoleDefinition("NetworkingManagement", RoleType.NetworkingManagement, CannedRoles_Datacenter.NetworkingManagement.Cmdlets),
			new RoleDefinition("OperatorScripts", RoleType.Custom, CannedRoles_Datacenter.OperatorScripts.Cmdlets),
			new RoleDefinition("Org Custom Apps", RoleType.OrgCustomApps, CannedRoles_Datacenter.Org_Custom_Apps.Cmdlets),
			new RoleDefinition("Org Marketplace Apps", RoleType.OrgMarketplaceApps, CannedRoles_Datacenter.Org_Marketplace_Apps.Cmdlets),
			new RoleDefinition("Organization Client Access", RoleType.OrganizationClientAccess, CannedRoles_Datacenter.Organization_Client_Access.Cmdlets),
			new RoleDefinition("Organization Configuration", RoleType.OrganizationConfiguration, CannedRoles_Datacenter.Organization_Configuration.Cmdlets),
			new RoleDefinition("Organization Transport Settings", RoleType.OrganizationTransportSettings, CannedRoles_Datacenter.Organization_Transport_Settings.Cmdlets),
			new RoleDefinition("POP3 And IMAP4 Protocols", RoleType.POP3AndIMAP4Protocols, CannedRoles_Datacenter.POP3_And_IMAP4_Protocols.Cmdlets),
			new RoleDefinition("PartnerDelegatedTenantManagement", RoleType.PartnerDelegatedTenantManagement, CannedRoles_Datacenter.PartnerDelegatedTenantManagement.Cmdlets),
			new RoleDefinition("Personally Identifiable Information", RoleType.PersonallyIdentifiableInformation, CannedRoles_Datacenter.Personally_Identifiable_Information.Cmdlets),
			new RoleDefinition("Public Folders", RoleType.PublicFolders, CannedRoles_Datacenter.Public_Folders.Cmdlets),
			new RoleDefinition("Receive Connectors", RoleType.ReceiveConnectors, CannedRoles_Datacenter.Receive_Connectors.Cmdlets),
			new RoleDefinition("Recipient Policies", RoleType.RecipientPolicies, CannedRoles_Datacenter.Recipient_Policies.Cmdlets),
			new RoleDefinition("Remote and Accepted Domains", RoleType.RemoteAndAcceptedDomains, CannedRoles_Datacenter.Remote_and_Accepted_Domains.Cmdlets),
			new RoleDefinition("Reporting", RoleType.Reporting, CannedRoles_Datacenter.Reporting.Cmdlets),
			new RoleDefinition("Reset Password", RoleType.ResetPassword, CannedRoles_Datacenter.Reset_Password.Cmdlets),
			new RoleDefinition("Retention Management", RoleType.RetentionManagement, CannedRoles_Datacenter.Retention_Management.Cmdlets),
			new RoleDefinition("Role Management", RoleType.RoleManagement, CannedRoles_Datacenter.Role_Management.Cmdlets),
			new RoleDefinition("Security Group Creation and Membership", RoleType.SecurityGroupCreationAndMembership, CannedRoles_Datacenter.Security_Group_Creation_and_Membership.Cmdlets),
			new RoleDefinition("Send Connectors", RoleType.SendConnectors, CannedRoles_Datacenter.Send_Connectors.Cmdlets),
			new RoleDefinition("Supervision", RoleType.Supervision, CannedRoles_Datacenter.Supervision.Cmdlets),
			new RoleDefinition("Support Diagnostics", RoleType.SupportDiagnostics, CannedRoles_Datacenter.Support_Diagnostics.Cmdlets),
			new RoleDefinition("Team Mailboxes", RoleType.TeamMailboxes, CannedRoles_Datacenter.Team_Mailboxes.Cmdlets),
			new RoleDefinition("Transport Agents", RoleType.TransportAgents, CannedRoles_Datacenter.Transport_Agents.Cmdlets),
			new RoleDefinition("Transport Hygiene", RoleType.TransportHygiene, CannedRoles_Datacenter.Transport_Hygiene.Cmdlets),
			new RoleDefinition("Transport Queues", RoleType.TransportQueues, CannedRoles_Datacenter.Transport_Queues.Cmdlets),
			new RoleDefinition("Transport Rules", RoleType.TransportRules, CannedRoles_Datacenter.Transport_Rules.Cmdlets),
			new RoleDefinition("UM Mailboxes", RoleType.UMMailboxes, CannedRoles_Datacenter.UM_Mailboxes.Cmdlets),
			new RoleDefinition("UM Prompts", RoleType.UMPrompts, CannedRoles_Datacenter.UM_Prompts.Cmdlets),
			new RoleDefinition("UnScoped Role Management", RoleType.UnScopedRoleManagement, CannedRoles_Datacenter.UnScoped_Role_Management.Cmdlets),
			new RoleDefinition("Unified Messaging", RoleType.UnifiedMessaging, CannedRoles_Datacenter.Unified_Messaging.Cmdlets),
			new RoleDefinition("User Options", RoleType.UserOptions, CannedRoles_Datacenter.User_Options.Cmdlets),
			new RoleDefinition("View-Only Audit Logs", RoleType.ViewOnlyAuditLogs, CannedRoles_Datacenter.View_Only_Audit_Logs.Cmdlets),
			new RoleDefinition("View-Only Configuration", RoleType.ViewOnlyConfiguration, CannedRoles_Datacenter.View_Only_Configuration.Cmdlets),
			new RoleDefinition("View-Only Recipients", RoleType.ViewOnlyRecipients, CannedRoles_Datacenter.View_Only_Recipients.Cmdlets),
			new RoleDefinition("ViewAdminDebugScripts", RoleType.Custom, CannedRoles_Datacenter.ViewAdminDebugScripts.Cmdlets),
			new RoleDefinition("ViewOnlyCentralAdminManagement", RoleType.ViewOnlyCentralAdminManagement, CannedRoles_Datacenter.ViewOnlyCentralAdminManagement.Cmdlets),
			new RoleDefinition("ViewOnlyCentralAdminSupport", RoleType.ViewOnlyCentralAdminSupport, CannedRoles_Datacenter.ViewOnlyCentralAdminSupport.Cmdlets),
			new RoleDefinition("ViewOnlyRoleManagement", RoleType.ViewOnlyRoleManagement, CannedRoles_Datacenter.ViewOnlyRoleManagement.Cmdlets),
			new RoleDefinition("WorkloadManagement", RoleType.WorkloadManagement, CannedRoles_Datacenter.WorkloadManagement.Cmdlets)
		};

		private class AccessToCustomerDataDCOnly
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccessRights,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-MailboxPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Instance,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccessRights,AutoMapping,Confirm,Deny,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,InheritanceType,OutBuffer,OutVariable,Owner,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-PublicFolderClientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccessRights,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExpiryDate,FullReport,JournalEmailAddress,LawfulInterception,Name,Organization,OutBuffer,OutVariable,Recipient,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AssociatedMessagesCopyOption,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,ConflictResolutionOption,ContentFilter,ContentFilterLanguage,Debug,DomainController,ErrorAction,ErrorVariable,ExcludeDumpster,ExcludeFolders,FilePath,IncludeFolders,InternalFlags,IsArchive,LargeItemLimit,Mailbox,Name,OutBuffer,OutVariable,Priority,RemoteCredential,RemoteHostName,SkipMerging,SourceRootFolder,Suspend,SuspendComment,TargetRootFolder,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AllowLegacyDNMismatch,AssociatedMessagesCopyOption,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,ConflictResolutionOption,Debug,DomainController,ErrorAction,ErrorVariable,ExcludeDumpster,ExcludeFolders,IncludeFolders,InternalFlags,LargeItemLimit,Name,OutBuffer,OutVariable,Priority,RemoteCredential,RemoteDatabaseGuid,RemoteHostName,RemoteRestoreType,SkipMerging,SourceDatabase,SourceRootFolder,SourceStoreMailbox,Suspend,SuspendComment,TargetIsArchive,TargetMailbox,TargetRootFolder,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "InPlaceHoldEnabled,InPlaceHoldIdentity,ItemHoldPeriod"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Force,Name,OutBuffer,OutVariable,SourceMailboxes,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SearchMessagePermissions"
					}, "AllPublicFolderSources,AllSourceMailboxes,EndDate,EstimateOnly,ExcludeDuplicateMessages,IncludeKeywordStatistics,IncludeUnsearchableItems,Language,LogLevel,MessageTypes,PublicFolderSources,Recipients,SearchQuery,Senders,StartDate,StatusMailRecipients,TargetMailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MergeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AllowLegacyDNMismatch,AssociatedMessagesCopyOption,AuthenticationMethod,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,ConflictResolutionOption,ContentFilter,ContentFilterLanguage,Debug,DomainController,ErrorAction,ErrorVariable,ExcludeDumpster,ExcludeFolders,IncludeFolders,IncrementalSyncInterval,InternalFlags,IsAdministrativeCredential,LargeItemLimit,Name,OutBuffer,OutVariable,OutlookAnywhereHostName,Priority,RemoteCredential,RemoteSourceMailboxLegacyDN,RemoteSourceMailboxServerLegacyDN,RemoteSourceUserLegacyDN,SkipMerging,SourceIsArchive,SourceMailbox,SourceRootFolder,StartAfter,Suspend,SuspendComment,SuspendWhenReadyToComplete,TargetIsArchive,TargetMailbox,TargetRootFolder,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Outbound")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SearchMessagePermissions"
					}, "Confirm,Debug,DeleteContent,DoNotIncludeArchive,DomainController,ErrorAction,ErrorVariable,EstimateResultOnly,Force,Identity,IncludeUnsearchableItems,LogLevel,LogOnly,OutBuffer,OutVariable,SearchDumpster,SearchDumpsterOnly,SearchQuery,TargetFolder,TargetMailbox,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"SMSPermissions"
					}, "SendTextMessageNotificationTo"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,ApplyCategory,BodyContainsWords,Confirm,CopyToFolder,DeleteMessage,ErrorAction,ErrorVariable,ExceptIfBodyContainsWords,ExceptIfFlaggedForAction,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromSubscription,ExceptIfHasAttachment,ExceptIfHasClassification,ExceptIfHeaderContainsWords,ExceptIfMessageTypeMatches,ExceptIfMyNameInCcBox,ExceptIfMyNameInToBox,ExceptIfMyNameInToOrCcBox,ExceptIfMyNameNotInToBox,ExceptIfReceivedAfterDate,ExceptIfReceivedBeforeDate,ExceptIfRecipientAddressContainsWords,ExceptIfSentOnlyToMe,ExceptIfSentTo,ExceptIfSubjectContainsWords,ExceptIfSubjectOrBodyContainsWords,ExceptIfWithImportance,ExceptIfWithSensitivity,ExceptIfWithinSizeRangeMaximum,ExceptIfWithinSizeRangeMinimum,FlaggedForAction,Force,ForwardAsAttachmentTo,ForwardTo,From,FromAddressContainsWords,FromSubscription,HasAttachment,HasClassification,HeaderContainsWords,Identity,Mailbox,MarkAsRead,MarkImportance,MessageTypeMatches,MoveToFolder,MyNameInCcBox,MyNameInToBox,MyNameInToOrCcBox,MyNameNotInToBox,Name,OutBuffer,OutVariable,Priority,ReceivedAfterDate,ReceivedBeforeDate,RecipientAddressContainsWords,RedirectTo,SentOnlyToMe,SentTo,StopProcessingRules,SubjectContainsWords,SubjectOrBodyContainsWords,WarningAction,WarningVariable,WhatIf,WithImportance,WithSensitivity,WithinSizeRangeMaximum,WithinSizeRangeMinimum")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-InterceptorRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Action,Condition,Confirm,CreatedBy,CustomResponseCode,CustomResponseString,Dag,Debug,Description,DomainController,ErrorAction,ErrorVariable,Event,ExpireTime,Forest,OutBuffer,OutVariable,Path,Server,Site,Source,TimeInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExpiryDate,FullReport,Identity,JournalEmailAddress,LawfulInterception,Name,OutBuffer,OutVariable,Recipient,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,Priority,RehomeRequest,RemoteCredential,RemoteHostName,SkipMerging,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccessRights,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "InPlaceHoldEnabled,ItemHoldPeriod"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Force,Identity,Name,OutBuffer,OutVariable,SourceMailboxes,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SearchMessagePermissions"
					}, "AllPublicFolderSources,AllSourceMailboxes,EndDate,EstimateOnly,ExcludeDuplicateMessages,IncludeKeywordStatistics,IncludeUnsearchableItems,Language,LogLevel,MessageTypes,PublicFolderSources,Recipients,SearchQuery,Senders,StartDate,StatisticsStartIndex,StatusMailRecipients,TargetMailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Search-Mails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DalSessionType,Debug,ErrorAction,ErrorVariable,MaxDegreeOfParallelism,Messages,OutBuffer,OutVariable,Path,RulePackage,ScoreThreshold,Verbose,WarningAction,WarningVariable,XmlFile,XmlPackage")
				}, "c")
			};
		}

		private class Active_Directory_Permissions
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ADPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,ChildObjectTypes,Confirm,Debug,Deny,DomainController,ErrorAction,ErrorVariable,ExtendedRights,Identity,InheritanceType,InheritedObjectType,Instance,OutBuffer,OutVariable,Owner,Properties,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Owner,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,ShowPartnerLinked,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ADPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,ChildObjectTypes,Confirm,Debug,Deny,DomainController,ErrorAction,ErrorVariable,ExtendedRights,Identity,InheritanceType,InheritedObjectType,Instance,OutBuffer,OutVariable,Properties,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,MaxAddressBookPolicies,MaxOfflineAddressBooks,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Active_Monitoring
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr")
				}, "c")
			};
		}

		private class Address_Lists
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-AddressListPaging", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-AddressListPaging", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DoNotUpdateRecipients,DomainController,ErrorAction,ErrorVariable,ForceUpdateOfRecipients,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"AddressListsEnabled",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Container,SearchText"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "DefaultOnly,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OabVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions",
						"OfflineAddressBookEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Move-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Target,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Move-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,GlobalAddressList,Name,OfflineAddressBook,Organization,OutBuffer,OutVariable,RoomList,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,Container,DisplayName,ErrorAction,ErrorVariable,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,RecipientContainer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,ErrorAction,ErrorVariable,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,RecipientContainer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,Confirm,DiffRetentionPeriod,ErrorAction,ErrorVariable,IsDefault,Name,OutBuffer,OutVariable,Versions,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,GeneratingMailbox,GlobalWebDistributionEnabled,Organization,Schedule,Server,ShadowMailboxDistributionEnabled,SkipPublicFolderInitialization,Verbose,VirtualDirectories")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Recursive,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Restore-DetailsTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,Confirm,ErrorAction,ErrorVariable,GlobalAddressList,Identity,Name,OfflineAddressBook,OutBuffer,OutVariable,RoomList,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,DisplayName,ErrorAction,ErrorVariable,Identity,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ForceUpgrade,RecipientContainer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DetailsTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Pages,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,ErrorAction,ErrorVariable,Identity,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ForceUpgrade,RecipientContainer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,ApplyMandatoryProperties,ConfiguredAttributes,Confirm,DiffRetentionPeriod,ErrorAction,ErrorVariable,Identity,IsDefault,Name,OutBuffer,OutVariable,Schedule,UseDefaultAttributes,Versions,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,GeneratingMailbox,GlobalWebDistributionEnabled,MaxBinaryPropertySize,MaxMultivaluedBinaryPropertySize,MaxMultivaluedStringPropertySize,MaxStringPropertySize,ShadowMailboxDistributionEnabled,Verbose,VirtualDirectories")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,MaxAddressBookPolicies,MaxOfflineAddressBooks,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressListsEnabled",
						"EOPPremiumRestrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OfflineAddressBookEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class ApplicationImpersonation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Impersonate-ExchangeUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "")
				}, "a")
			};
		}

		private class Audit_Logs
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "CreatedAfter,CreatedBefore,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAuditBypassAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AdminAuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Cmdlets,Confirm,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,Name,ObjectIds,Organization,OutBuffer,OutVariable,Parameters,StartDate,StatusMailRecipients,UserIds,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxAuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,LogonTypes,Mailboxes,Name,Operations,Organization,OutBuffer,OutVariable,ShowDetails,StartDate,StatusMailRecipients,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Cmdlets,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,Identity,IsSuccess,ObjectIds,OutBuffer,OutVariable,Parameters,ResultSize,StartDate,StartIndex,UserIds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MailboxAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,Identity,LogonTypes,Mailboxes,Operations,Organization,OutBuffer,OutVariable,ResultSize,ShowDetails,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AdminAuditLogAgeLimit,AdminAuditLogCmdlets,AdminAuditLogEnabled,AdminAuditLogExcludedCmdlets,AdminAuditLogParameters,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IgnoreDehydratedFlag,LogLevel,Name,OutBuffer,OutVariable,TestCmdletLoggingEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditAdmin,AuditDelegate,AuditEnabled,AuditLogAgeLimit,AuditOwner,Force"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "DefaultPublicFolderMailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAuditBypassAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditBypassEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,MaxAddressBookPolicies,MaxOfflineAddressBooks,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class CSSEngineersScripts
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("", "UpdatePSMaxConcurrency.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "MailboxId,PowerShellMaxConcurrency")
				}, "s")
			};
		}

		private class CentralAdminCredentialManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Export-CentralAdminSecureValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatacenterLocation,Debug,ErrorAction,ErrorVariable,OutBuffer,OutFile,OutObject,OutVariable,Password,ReadPublisher,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "SecureValue")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSecureValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineParametersXml", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatacenterLocation,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,ReadPublisher,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineSecureParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatacenterLocation,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,ParameterDefinition,ReadPublisher,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineSingleParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatacenterLocation,Debug,ErrorAction,ErrorVariable,Machine,NoSecureValueProcessing,OutBuffer,OutVariable,ParameterDefinition,ReadPublisher,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Import-CentralAdminSecureValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,InFile,NoImport,OutBuffer,OutVariable,Password,Verbose,WarningAction,WarningVariable,WhatIf,XmlString")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-ApprovalPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthorityRank,AutoApproval,Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RbacRole,RotationTeam,SecurityGroup,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-ApprovalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApprovalPolicy,Confirm,Debug,Description,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Precedence,RuleAction,RuleDefinition,RuleEngineVersion,TargetPolicy,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-LockBoxGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,GroupScope,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-LockBoxRbacRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-LockBoxRbacRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,LockBoxGroup,LockBoxRbacRole,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-LockBoxRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Clearance,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,MaxDurationHours,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-LockBoxRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,LockBoxGroup,LockBoxRole,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-ApprovalPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-ApprovalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminSecureValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-LockBoxGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-LockBoxRbacRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-LockBoxRbacRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-LockBoxRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-LockBoxRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ApprovalPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthorityRank,AutoApproval,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RbacRole,RotationTeam,SecurityGroup,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ApprovalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApprovalPolicy,Confirm,Debug,Description,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Precedence,RuleAction,RuleDefinition,TargetPolicy,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrderType,Location")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminSecureValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Apply,ClearStaged,Confirm,Debug,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Revert,Value,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-LockBoxGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,GroupScope,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-LockBoxRbacRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-LockBoxRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Clearance,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,Identity,MaxDurationHours,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class CentralAdminManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Datacenter.Common", "Import-ScopeData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DbName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeLevel,ServerName,TableName,Verbose,WarningAction,WarningVariable,XmlFileDoc,XmlFilePath")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Add-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ColumnIndex,Debug,ErrorAction,ErrorVariable,Kind,SearchStrategy,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Add-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Name,SchedulerJob,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Add-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Name,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,RetrievePasswords,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,RetrieveConnectionString,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Datamart,Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,Recurrence,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,SchedulerJob,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-DataMiningPIIValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "PiiData,PiiType")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ClusterAuthHost,ClusterPath,Credential1,Credential1Expiration,Credential2,Credential2Expiration,Debug,ErrorAction,ErrorVariable,Name,Scope,Verbose,WarningAction,WarningVariable,WhatIf,WorkingClusterDirectory")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConnectionString,Debug,Description,ErrorAction,ErrorVariable,Name,Owner,Scope,Team,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Datamart,Debug,Description,Enabled,ErrorAction,ErrorVariable,Name,RetentionDays,Scheduler,SkipInvalidLines,UpdateFrequency,UpdateStartTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,MaxRequestsPerMinute,RetentionDays,Scope,Timeout,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,Enabled,ErrorAction,ErrorVariable,MaxConsecutiveDays,MostRecentFirst,Name,Owner,Priority,Recurrence,RetentionDays,SchemaScript,Scope,Script,StrictStreamSelection,Team,Timeout,UpdateFrequency,UpdateStartTime,VCPercentageAllocation,Verbose,WaitForJobsToFinish,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Parent,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BatchFileSizeInMB,BatchLineProcessingCount,CosmosCluster,Debug,DiskSpaceThreshold,ErrorAction,ErrorVariable,PIIScrubbingEnabled,Scope,SecurityLogEncryptionEnabled,SourceLogRetention,TransformWaitTime,UploadsEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommentHeader,CosmosTransformer,Debug,Description,DestinationPath,DynamicPath,Enabled,ErrorAction,ErrorVariable,FileExtension,Format,Name,Partitioner,RetentionDays,Scope,SourcePath,TransformationPath,Transformer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ClusterAuthHost,ClusterPath,Credential1,Credential1Expiration,Credential2,Credential2Expiration,Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf,WorkingClusterDirectory")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConnectionString,Debug,Description,ErrorAction,ErrorVariable,Identity,Owner,Team,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,Enabled,ErrorAction,ErrorVariable,Identity,RetentionDays,Scheduler,SkipInvalidLines,UpdateFrequency,UpdateStartTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Kind,Strategy,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,MaxRequestsPerMinute,RetentionDays,Scope,Timeout,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,Enabled,ErrorAction,ErrorVariable,Identity,MaxConsecutiveDays,MostRecentFirst,Owner,Priority,Recurrence,RetentionDays,SchemaScript,Script,StrictStreamSelection,Team,Timeout,UpdateFrequency,UpdateStartTime,VCPercentageAllocation,Verbose,WaitForJobsToFinish,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BatchFileSizeInMB,BatchLineProcessingCount,CosmosCluster,Debug,DiskSpaceThreshold,ErrorAction,ErrorVariable,PIIScrubbingEnabled,Scope,SecurityLogEncryptionEnabled,SourceLogRetention,TransformWaitTime,UploadsEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommentHeader,CosmosTransformer,Debug,Description,DestinationPath,DynamicPath,Enabled,ErrorAction,ErrorVariable,FileExtension,Format,Identity,Partitioner,RetentionDays,SourcePath,TransformationPath,Transformer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ActiveSyncDeviceDistributionByVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DistributionDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxLogonFailureTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxLogonTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxUniqueLogonTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTrendSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-AutoReseed", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Choice,DAGName,DCName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-AvailabilitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CaOperationsServerHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CaOServerName,CreateTime,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CentralAdminServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringAggregatedResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringErrorDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,RecordId,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CosmosExceptionDistribution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DailyAlerts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistribution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistributionByUserAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DistributionDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistributionTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,InitialDate,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DiscoverySearchActivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PastDays,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-EscalationAlertsMonthlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,MonthToShowFrom,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-EscalationAlertsMonthlyReportByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,MonthToShow,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionDistributionByDeviceType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionDistributionWithSCStatusByDeviceType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionMessageAll", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,ExceptionName,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExecutionTimeByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Thredshold,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ImapUserCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MailboxDatabaseUsage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,SQLCredential,ServerName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmActivityAggForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmActivityPctForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmMbxActivityPct", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MsnImExceptions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Dcs,Debug,EndDate,ErrorAction,ErrorVariable,Exps,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabDistinctOab", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabDistinctOabOverTime", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabUsage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OperationsFailureHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorString,ErrorVariable,FailedActivity,FailedWorkflow,FailureCategory,FailureName,Filter,OutBuffer,OutVariable,ServerName,StartDate,Target,Verbose,Version,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OwaApiDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Day,Debug,ErrorAction,ErrorVariable,Filter,FilterServerName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ParameterUsageByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorGroup,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringErrorDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,RecordId,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringErrorSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PopUserCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ServicePlanTenantStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-SummaryByTopologyDaily", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReportDate,ServerName,TargetFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TenantStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,GroupBy,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityDatacenterError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityDatacenterErrorOccurred", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityMachineError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityMachineErrorOccurred", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ThrottlingPolicyByTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TenantName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ThrottlingPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TopOabByUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncDataReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncExceptions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncHealthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncInitializedReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncMailboxesReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsCreated", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsDeletedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncTenantsReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TrendByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-UMCallDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallType,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OfferResult,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-VersionSuccessSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Role,ServerName,StartDate,Verbose,Version,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-WeeklyAlerts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-WeeklyAlertsByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,EscalationTeam,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncADObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,TopologyFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,FilterValue,NumberOfPastDays,OnlyActive,OnlySev1,OutBuffer,OutVariable,Scope,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertLastSyncTime", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncEnabledUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,TopologyFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADCapacityRatioSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADCapacityRatioSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseAvailabilityGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConcurrentConnection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConcurrentConnectionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConference", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceAVTotal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceAVTotalGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceTotal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceTotalGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseEnabledUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseEnabledUserGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseExecutiveSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseExecutiveSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PAVSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PAVSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PIMSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PIMSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnections", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisionedTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisionedTenantGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisioningSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisioningSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ByUPN,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PIIValueOnly,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncUserActivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecentDays,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Add-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,Debug,Duration,ErrorAction,ErrorVariable,HealthSet,InstanceName,OutBuffer,OutVariable,PropertyName,PropertyValue,Scope,WarningAction,WarningVariable,WorkDefinitionName,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Get-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,InstanceName,OutBuffer,OutVariable,WarningAction,WarningVariable,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Remove-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,InstanceName,OutBuffer,OutVariable,WarningAction,WarningVariable,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Add-CentralAdminOperationOutput", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,CreateTime,DCLocation,Data,Debug,ErrorAction,ErrorVariable,Operation,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Add-CentralAdminOperationTrace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,CreateTime,DCLocation,Data,Debug,ErrorAction,ErrorVariable,Operation,OutBuffer,OutVariable,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Add-CentralAdminParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Data,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Override,ParameterDefinition,ParameterSet,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Add-CentralAdminVirtualMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RetryCount,SleepInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Raw,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-EnterpriseTenantConfigBlobRevision", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-TenantConfigSnapshot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Id,Tenant,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Export-GFSiAdminServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,GFSiAdminCredential,GFSiAdminEndpoint,OutBuffer,OutVariable,RetireServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ApprovalPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ApprovalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureScopeMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-BlackBoxMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderUnitCapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminAlertMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCapacityUnitDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCountry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDagConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDagLocationInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangedSinceTime,Debug,ErrorAction,ErrorVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDatabaseVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxFailedMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxForestEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxPodEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxScopeEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminExecutingUserId", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminHardwareConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminIPDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancerNode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancerVirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Local,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowAll,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachineDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachineFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminManagementServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminManagementVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminNetworkAdapter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,HostType,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,LiveOnly,OutBuffer,OutVariable,Recursive,ResultSize,ShowError,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperationOutput", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,GroupOperations,Identity,OutBuffer,OutVariable,Recursive,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperationTrace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Exclude,Filter,GroupOperations,Identity,Include,OutBuffer,OutVariable,Recursive,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameterDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPod", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPreBurnInMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPublisherServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResolvePrimaryHostName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRack", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRouter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSku", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSkuMachineDefinitionMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSkuType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVersionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVirtualMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,RetryCount,SleepInterval,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminWorkflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,Name,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Colocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Component", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,MachineDefinition,OutBuffer,OutVariable,Payload,ReadPublisher,ResultSize,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxMachinePatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxRecurringPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenantConfigBlobRevision", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FailedHardDisk", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionAssetSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionAssetSetLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeIpRange", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeIpRangeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ForestGrowthRate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FuseBoxEvaluation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ResultSize,ShowDetail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRbacRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRbacRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineBootDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineOobmInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ControllerIP,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineOobmLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachinePowerState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigItemNameContains,CreatedAfter,CreatedBefore,CreatedBy,Credential,DatacenterContains,DescriptionContains,FullTextContains,Id,Property,PropertyContains,Requestor,ResultSize,TemplateContains,TicketStatus,TitleContains")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-OobmController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-PropertyDimension", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RackDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RackType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowAll,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxTestResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ScanResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ScopeHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ReadPublisher,ScopeType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ServiceChangeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ShowAll,ShowStates,UserApprovals,UserRequests,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ServiceFrontDoor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-SiteMaintenanceHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-SiteMaintenanceOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-TenantConfigSnapshot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Tenant,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-UTSTicket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-VirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,Verbose,VirtualServers,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Import-CentralAdminCapacityConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,InputFile,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Import-GFSAssets", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,LoadBalancers,Location,OutBuffer,OutVariable,Password,RetryFailures,Routers,Servers,SyncAll,SyncAllDevices,Username,Verbose,VlansRacks,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Import-GFSiAdminServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,GFSiAdminCredential,GFSiAdminEndpoint,Location,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MachineDefinition,Name,OutBuffer,OutVariable,Phase,RunMode,UnitName,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureRoleDefinition,AzureWorkItemSku,AzureWorkload,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SetupInfo,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureSubscription,Debug,ErrorAction,ErrorVariable,MaxAzureInstancesAllowed,MaxProxyScopesAllowed,Name,OutBuffer,OutVariable,ProxyScopeAggregationLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureGroup,Debug,ErrorAction,ErrorVariable,EscalationEndpoint,Name,OutBuffer,OutVariable,SqlAzureDatabase,SqlAzureServer,TopologyDatabaseName,TopologyDatabaseServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AzureWorkload,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PropertyBag,ScopeType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureScopeMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureGroup,AzureProxyScope,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureWorkload,Debug,ErrorAction,ErrorVariable,MaxAzureGroupsAllowed,Name,OutBuffer,OutVariable,StorageAccount,StoragePrimaryKey,StorageSecondaryKey,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrderType,Confirm,Debug,DeliveryDate,ErrorAction,ErrorVariable,Location,Name,OrderDate,OrderGroup,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrderType,Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RackType,RackTypeCount,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllocationCompleted,CapacityOrderGroup,CapacityUnitDefinition,Confirm,DagConfiguration,Debug,DecomCompleteActual,DecomCompleteETA,DecomStarted,DeploymentStarted,ErrorAction,ErrorVariable,EscrowStarted,Forest,GoLiveActual,GoLiveApprovalState,GoLiveETA,MailboxDrainStarted,Name,OutBuffer,OutVariable,PodIndex,PostGoLiveTasksCompleted,PromotionOperation,ServiceReadinessStarted,Status,StatusInfo,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrderUnitCapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrder,CapacityOrderUnit,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminAlertMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alert,AlertMappingVersion,Arguments,Confirm,Debug,Description,ErrorAction,ErrorVariable,MachineDefinition,MatchPriority,Name,OperationPriority,OutBuffer,OutVariable,ResponseDocument,Verbose,Version,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,CapacityUnitDefinition,Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminCapacityUnitDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MachineDefinition,MinimumGoLiveServerCount,Name,OutBuffer,OutVariable,ServerCount,Sku,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminCountry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Location,Name,OutBuffer,OutVariable,Service,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Configuration,Confirm,Debug,ErrorAction,ErrorVariable,IpAddress,MaximumInactivePercentage,Name,OutBuffer,OutVariable,Pod1,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDagConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DatabaseCopies,DatabaseDrivesPerServer,DatabasesPerDAG,DatabasesPerDrive,DatabasesPerServer,Debug,DiskSize,ErrorAction,ErrorVariable,FswRootDirectory,LogicalDatabaseSpaceTB,MaxActiveDatabasesPerServer,MaxPreferredActiveDatabasesPerServer,MinServerCapacityPercentageLimit,Name,NumberOfExtraCopiesOnSpares,NumberOfServers,OutBuffer,OutVariable,PartitionsPerDatabase,ReservedDrive,RootFolder,SafeMailflowLimit,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDatabaseVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DCLocation,Debug,ErrorAction,ErrorVariable,ExchangeVersion,MajorVersion,MinorVersion,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDropBoxFailedMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Activity,Confirm,Debug,ErrorAction,ErrorVariable,FailureTagId,MachineEntryId,OperationName,OutBuffer,OutVariable,ScrubbedError,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDropBoxForestEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Confirm,Debug,ErrorAction,ErrorVariable,Forest,Location,OutBuffer,OutVariable,Payload,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDropBoxMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Payload,PayloadStatus,Pod,PodEntryId,RetryCount,Scope,Verbose,WarningAction,WarningVariable,WhatIf,WorkflowId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDropBoxPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Authorization,BugId,Confirm,Debug,DeploymentType,DeploymentVersion,ErrorAction,ErrorVariable,EscalationTeam,Location,ManifestPath,Name,OutBuffer,OutVariable,OwnerEmailAddress,PayloadType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDropBoxPodEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Confirm,Dag,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Payload,Pod,Role,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminDropBoxScopeEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApprovalStatus,Confirm,Debug,DeploymentPhase,ErrorAction,ErrorVariable,Location,OutBuffer,OutVariable,Payload,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminHardwareConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigurationCommand,ConfigurationFile,Confirm,Debug,ErrorAction,ErrorVariable,MachineDefinition,OutBuffer,OutVariable,Sku,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminLoadBalancerNode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IP,LoadBalancer,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminLoadBalancerVirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityUnit,Confirm,Debug,ErrorAction,ErrorVariable,IsBlocked,LoadBalancer,Name,OutBuffer,OutVariable,Pod,Port,Role,VIP,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Caller,Confirm,DCLocation,Debug,ErrorAction,ErrorVariable,Inheritable,Object,OutBuffer,OutVariable,Timeout,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Building,CapacityUnit,Confirm,Debug,DesiredMachineDefinition,DesiredVersion,DiskController,ErrorAction,ErrorVariable,HostMachineId,MAC,Name,OutBuffer,OutVariable,Pod,Rack,RackId,Slot,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminMachineDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BaselineImage,Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Role,UnattendScript,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminMachineFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FailureDescription,FailureStatus,FailureSubID,FailureSubType,FailureType,Machine,OutBuffer,OutVariable,PropertyOwner,TrackId,TrackType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminManagementServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommitmentLevel,Confirm,Debug,DropboxServiceState,ErrorAction,ErrorVariable,Machine,MachineState,OutBuffer,OutVariable,Verbose,VersionGroup,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminNetworkAdapter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdapterType,Confirm,Debug,DefaultGateway,ErrorAction,ErrorVariable,IP,IPv6Address,IPv6Vlan,MAC,Machine,OutBuffer,OutVariable,SwitchPort,TOR,Verbose,Vlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertTime,Confirm,DCLocation,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Subscription,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminOperation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Arguments,ArgumentsString,BugId,BugState,ChildPriority,Confirm,DCLocation,Debug,Description,ErrorAction,ErrorVariable,ExecutingManagementServer,ForceInitialize,Name,OperationType,OutBuffer,OutVariable,ParentOperation,Pod,Priority,RecurrencePattern,StartPendingTimeout,StartTime,Target,TargetType,Verbose,Version,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminParameterDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DefaultValue,Description,ErrorAction,ErrorVariable,ExcludeFromParameterFile,Name,OutBuffer,OutVariable,Required,Secure,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppliesTo,Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Precedence,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminPreBurnInMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetNumber,Building,Confirm,Debug,DigiIP,DigiLogon,DigiPort,ErrorAction,ErrorVariable,GfsName,IP,MAC,OutBuffer,OutVariable,Rack,SKU,SerialNumber,Slot,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminProxyScript", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowOptionalTarget,ApprovalProxy,Confirm,Debug,DefaultPriority,ErrorAction,ErrorVariable,OutBuffer,OutFile,OutVariable,ProxyScriptDefinition,SequenceName,SkipHelpCreation,SourceFile,Verbose,WarningAction,WarningVariable,WhatIf,WorkingDirectory")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminSku", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminSkuMachineDefinitionMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminSkuType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ExchangePath,Name,OSImagePath,OutBuffer,OutVariable,Verbose,VersionState,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminVersionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Location,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminWorkflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Path,Scope,Severity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Location,Name,OutBuffer,OutVariable,Resolution,Verbose,WarningAction,WarningVariable,WhatIf,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-Colocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DatacenterCode,Debug,ErrorAction,ErrorVariable,Location,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-Component", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,SharePath,Type,Verbose,Version,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Confirm,Debug,ErrorAction,ErrorVariable,Force,MachineDefinition,OutBuffer,OutVariable,Payload,PerMachineConfig,Verbose,Version,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-DropBoxMachinePatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Payload,Verbose,WarningAction,WarningVariable,WorkflowId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-EnterpriseTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeFreezeDescription,ChangeFreezeEnd,ChangeFreezeStart,Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeDescription,ConfigBlob,Confirm,Debug,ErrorAction,ErrorVariable,Name,SchemaType,Tenant,Type,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FailedHardDisk", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Bay,Box,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Port,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FaultInjectionAssetSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetSetCsv,Confirm,Debug,ErrorAction,ErrorVariable,LinkedAssetSet,Name,Verbose,VictimType,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FaultInjectionAssetSetLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetSet,Confirm,Debug,ErrorAction,ErrorVariable,LockReason,ReasourceType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FaultInjectionHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetSet,Confirm,Debug,ErrorAction,ErrorVariable,OperationId,Result,Scavenged,Status,Verbose,Victim,VictimType,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FaultInjectionParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,Value,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FaultInjectionSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetSet,Confirm,Debug,ErrorAction,ErrorVariable,Friday,Monday,Saturday,Sunday,Thursday,Tuesday,Verbose,WarningAction,WarningVariable,Wednesday,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FirewallPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,Confirm,Debug,ErrorAction,ErrorVariable,Forest,ForestType,MachineType,Name,OutBuffer,OutVariable,Priority,RuleFilter,RuleName,ScopeType,SelectionFilter,TestName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FirewallRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApplicationName,Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Ports,Protocol,SelectionFilter,ServiceName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FirewallScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IpRangeType,Name,OutBuffer,OutVariable,ScopeType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FirewallScopeIpRange", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Ip1,Ip2,IpRangeFormat,IpRangeType,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FirewallScopeIpRangeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FirewallScopeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FirewallState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApplicationName,Confirm,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,PolicyState,ValidationState,Verbose,WarningAction,WarningVariable,WhatIf,WhenLastPolicyApplied")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-ForestGrowthRate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Forest,MonthlyExpectedGrowthRate,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-FuseBoxEvaluation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FuseBoxEvaluationStatus,OutBuffer,OutVariable,Payload,Scope,Verbose,WarningAction,WarningVariable,WhatIf,WorkflowId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-MachineComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Component,Confirm,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalNotificationAliases,Arguments,ClientImpact,ConfigItemName,ConfigItemTypeName,Credential,DatacenterName,Debug,Description,ErrorAction,ErrorVariable,IsBreakFix,IsDowntimeAuthorized,NoTemplate,OutBuffer,OutVariable,Priority,ProblemType,Property,Severity,TargetName,TeamAssignedId,TeamAssignedName,TemplateFile,TemplateName,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Activity,ComponentName,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Reason,RegularExp,RespondOn,ResponderType,ScrubbedError,Threshold,ThresholdHours,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-PropertyDimension", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Confirm,Data,Debug,DetectedTime,ErrorAction,ErrorVariable,Instance,ManualPriority,OutBuffer,OutVariable,Owner,Priority,Source,SourceDetail,TargetId,TargetType,TicketApproved,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Source,SourceDetail,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,FailureBlocksDeployment,FailureBlocksLive,Name,OutBuffer,OutVariable,Phase,Status,TicketAutoDispatch,TimeoutSeconds,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-ScanResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Code,Confirm,Debug,ErrorAction,ErrorVariable,IP,MAC,Message,OutBuffer,OutVariable,SerialNumber,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-ServiceChangeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DCLocation,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Reason,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-ServiceFrontDoor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,SwitchConfirmationRequiredPercentage,SwitchPermission,SwitchState,SwitchTarget,SwitchTargetSwitchPercentage,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-SiteMaintenanceHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Approver,Confirm,Debug,ErrorAction,ErrorVariable,FromSite,Name,OutBuffer,OutVariable,Reason,Requester,Status,ToSite,Verbose,WarningAction,WarningVariable,WhatIf,Workflow,WorkflowID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-SiteMaintenanceOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Contact,Debug,ErrorAction,ErrorVariable,MaintenanceAllowed,Reason,Site,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-UTSTicket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ClientImpact,Confirm,ControlClosure,DataCenter,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TeamAssignment,TicketNumber,TicketOwner,TicketPriority,TicketSubItem,TicketType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Read-ApnsFeedback", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppId,Debug,ErrorAction,ErrorVariable,FeedbackHost,FeedbackPort,OutBuffer,OutVariable,ResultSize,Thumbprint,ThumbprintFallback,UseProductionHost,UseSandboxHost,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureScopeMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderUnitCapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminAlertMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminCapacityUnitDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminCountry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDagConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDatabaseVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDropBoxFailedMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDropBoxForestEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDropBoxMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDropBoxPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDropBoxPodEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminDropBoxScopeEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminHardwareConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminIPDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminLoadBalancer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminLoadBalancerNode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminLoadBalancerVirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminMachineDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminMachineFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminManagementServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminNetworkAdapter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminOperation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Recursive,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminParameterDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminPod", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminPreBurnInMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminRack", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminRouter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminSku", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminSkuMachineDefinitionMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminSkuType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminVersionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminVirtualMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RetryCount,SleepInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminVlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminWorkflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Location,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-Colocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-Component", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-DropBoxMachinePatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-EnterpriseTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FailedHardDisk", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FaultInjectionAssetSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FaultInjectionAssetSetLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FaultInjectionParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FaultInjectionSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FirewallPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FirewallRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FirewallScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FirewallScopeIpRange", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FirewallScopeIpRangeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FirewallScopeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FirewallState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-ForestGrowthRate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-FuseBoxEvaluation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-MachineComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-PropertyDimension", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-RackDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-RackType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-ScanResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-ServiceFrontDoor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-SiteMaintenanceHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-SiteMaintenanceOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-UTSTicket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Search-CentralAdminAuditEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActionName,DatabaseName,DatacenterLocation,Debug,EndDate,ErrorAction,ErrorVariable,EventType,ExecutingUser,MirrorDatabaseName,OutBuffer,OutVariable,StartDate,TargetObject,TimeSpan,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,MachineDefinition,Name,OutBuffer,OutVariable,Phase,RunMode,UnitName,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureRoleDefinition,AzureWorkItemSku,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SetupInfo,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureRoleDefinition,AzureWorkItemSku,Confirm,Debug,ErrorAction,ErrorVariable,Identity,MaxAzureInstancesAllowed,MaxProxyScopesAllowed,Name,OutBuffer,OutVariable,ProxyScopeAggregationLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DeployedBy,DeployedTime,DeployedVersion,DeploymentId,DeploymentStatus,ErrorAction,ErrorVariable,EscalationEndpoint,HealthState,Identity,Name,OutBuffer,OutVariable,ProvisioningState,SqlAzureDatabase,SqlAzureServer,TopologyDatabaseName,TopologyDatabaseServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,PropertyBag,ScopeType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,MaxAzureGroupsAllowed,Name,OutBuffer,OutVariable,StorageAccount,StoragePrimaryKey,StorageSecondaryKey,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DeliveryDate,ErrorAction,ErrorVariable,Identity,OrderDate,OrderGroup,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrderType,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,RackType,RackTypeCount,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllocationCompleted,CapacityOrderGroup,CapacityUnitDefinition,Confirm,DagConfiguration,Debug,DecomCompleteActual,DecomCompleteETA,DecomStarted,DeploymentStarted,ErrorAction,ErrorVariable,EscrowStarted,Forest,GoLiveActual,GoLiveApprovalState,GoLiveETA,Identity,MailboxDrainStarted,Name,OutBuffer,OutVariable,PodIndex,PostGoLiveTasksCompleted,PromotionOperation,ServiceReadinessStarted,Status,StatusInfo,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminAlertMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alert,AlertMappingVersion,Arguments,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,MatchPriority,OperationPriority,OutBuffer,OutVariable,ResponseDocument,Verbose,Version,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,CapacityUnitDefinition,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ProvisioningState,SwitchState,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminCapacityUnitDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,MachineDefinition,MinimumGoLiveServerCount,OutBuffer,OutVariable,ServerCount,Sku,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminCountry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Location,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,Configuration,Confirm,Debug,ErrorAction,ErrorVariable,FaultInjectionEnabled,FswAlternateServer,FswServer,Identity,IpAddress,MaximumInactivePercentage,OutBuffer,OutVariable,Pod1,Pod2,PostGoLiveTaskState,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDagConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DatabaseCopies,DatabaseDrivesPerServer,DatabasesPerDAG,DatabasesPerDrive,DatabasesPerServer,Debug,DiskSize,ErrorAction,ErrorVariable,FswRootDirectory,Identity,LogicalDatabaseSpaceTB,MaxActiveDatabasesPerServer,MaxPreferredActiveDatabasesPerServer,MinServerCapacityPercentageLimit,NumberOfExtraCopiesOnSpares,NumberOfServers,OutBuffer,OutVariable,PartitionsPerDatabase,ReservedDrive,RootFolder,SafeMailflowLimit,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDatabaseVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ExchangeVersion,Identity,MajorVersion,MinorVersion,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDropBoxFailedMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Activity,Confirm,Debug,ErrorAction,ErrorVariable,FailureTagId,Identity,MachineEntryId,OperationName,OutBuffer,OutVariable,ScrubbedError,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDropBoxForestEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Location,OutBuffer,OutVariable,PayloadStatus,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDropBoxMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FuseStatus,Identity,OutBuffer,OutVariable,PayloadStatus,RetryCount,Verbose,WarningAction,WarningVariable,WhatIf,WorkflowId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDropBoxPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalStatusInfo,Authorization,BugId,Confirm,Debug,ErrorAction,ErrorVariable,EscalationTeam,Identity,LastReportSendTime,Location,ManifestPath,OutBuffer,OutVariable,OwnerEmailAddress,PayloadStatus,PayloadType,ReachedSuccessGoal,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDropBoxPodEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalStatusInfo,ApproxTotalMachineCount,Confirm,Debug,ErrorAction,ErrorVariable,FailedMachines,Identity,MachinesInProgress,OutBuffer,OutVariable,PayloadStatus,PodStatus,RetryCount,Role,SucceededMachines,UnhealthyMachines,Verbose,WarningAction,WarningVariable,WhatIf,WorkflowId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDropBoxScopeEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalStatusInfo,ApprovalStatus,Confirm,Debug,ErrorAction,ErrorVariable,FuseStatus,Identity,Location,OutBuffer,OutVariable,PayloadStatus,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,Alias,AuthenticationForest,Confirm,Debug,ErrorAction,ErrorVariable,Identity,IsFIPSCompliant,MajorVersion,OutBuffer,OutVariable,Region,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminHardwareConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigurationCommand,ConfigurationFile,Confirm,Debug,ErrorAction,ErrorVariable,Identity,MachineDefinition,OutBuffer,OutVariable,Sku,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminIPDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityUnitDefinition,Confirm,Debug,Device,ErrorAction,ErrorVariable,Identity,MachineDefinition,Offset,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminLoadBalancer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,ActualVersion,BackEndSnatAddresses,ConfigVersion,Confirm,Debug,DesiredVersion,ErrorAction,ErrorVariable,FirmwareVersion,FrontEndSnatAddresses,GFSID,Identity,Interfaces,ManagementIP,MonitoringState,NetworkDeviceType,OperationState,OutBuffer,OutVariable,Profile,ProvisioningState,Rack,SwitchState,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminLoadBalancerNode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IP,Identity,LoadBalancer,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminLoadBalancerVirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityUnit,Confirm,Debug,ErrorAction,ErrorVariable,Identity,IsBlocked,LoadBalancer,Name,OutBuffer,OutVariable,Pod,Port,Role,VIP,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,Confirm,DatabaseName,Debug,ErrorAction,ErrorVariable,FileShareAccount,FileSharePassword,FileShareRoot,GfsFullName,GfsName,GfsSiteServiceTeam,Identity,IsOperationalLeader,LogPath,ManagedBy,MirrorDatabaseName,OutBuffer,OutVariable,PhysicalRegion,RemotePxeBoot,UTCTimeOffsetInHours,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,ActualMachineDefinition,ActualVersion,AssetNumber,BitlockerState,Building,CapacityUnit,Confirm,Dag,Debug,DesiredMachineDefinition,DesiredVersion,DigiIP,DigiLogon,DigiPort,DiskController,ErrorAction,ErrorVariable,GFSName,IP,Identity,LocalAdminPassword,MAC,MaintenanceState,MonitoringState,Name,OobmId,OutBuffer,OutVariable,Pod,ProvisioningState,Rack,RackId,SKU,SecurityClassification,SerialNumber,Slot,SwitchState,Verbose,WarningAction,WarningVariable,WhatIf,WhenFlattenDeployed,WhenLeftService")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminMachineDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BaselineImage,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Role,UnattendTemplate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminMachineFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FailureDescription,FailureStatus,FailureSubID,FailureSubType,FailureType,Identity,Machine,OutBuffer,OutVariable,PropertyOwner,TrackId,TrackType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminManagementServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CentralAdminConnectorState,CentralAdminDatabaseState,CentralAdminFileShareState,CentralAdminServiceState,CommitmentLevel,Confirm,DHCPServiceState,Debug,DropboxServiceState,ErrorAction,ErrorVariable,Identity,MachineState,OpsMgrCorrelationServiceState,OpsMgrDatabaseState,OpsMgrMSServiceState,OpsMgrRMSServiceState,OpsMgrReportingDatabaseState,OutBuffer,OutVariable,Verbose,VersionGroup,WDSServiceState,WarningAction,WarningVariable,WhatIf,WorkflowPersistenceDatabaseState,WorkflowTrackingDatabaseState")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminNetworkAdapter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdapterType,Confirm,Debug,DefaultGateway,ErrorAction,ErrorVariable,IP,IPv6Address,IPv6Vlan,Identity,MAC,Machine,OutBuffer,OutVariable,SwitchPort,TOR,Verbose,Vlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminOperation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveWorkflow,Arguments,ArgumentsString,BugId,BugState,ChildPriority,Confirm,CurrentActivity,Debug,Description,ErrorAction,ErrorVariable,ExecutingManagementServer,ForceInitialize,Identity,OperationType,OutBuffer,OutVariable,Pod,Priority,RecurrencePattern,StartPendingTimeout,StartTime,Target,TargetType,Verbose,Version,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Data,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Override,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminParameterDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DefaultValue,Description,ErrorAction,ErrorVariable,ExcludeFromParameterFile,Identity,OutBuffer,OutVariable,Required,Secure,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppliesTo,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Precedence,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminPod", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,AuthoritativeVipCheck,Confirm,Debug,ErrorAction,ErrorVariable,Forest,Identity,IsManagementPod,IsPassive,LoadBalancer,Location,MServeId,OutBuffer,OutVariable,SwitchState,SwitchTarget,Verbose,WarningAction,WarningVariable,Weight,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminPreBurnInMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetNumber,Building,Confirm,Debug,DigiIP,DigiLogon,DigiPort,ErrorAction,ErrorVariable,GfsName,IP,Identity,MAC,OutBuffer,OutVariable,Rack,SKU,SerialNumber,Slot,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminRack", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,Confirm,Debug,ErrorAction,ErrorVariable,GFSID,Identity,IloVlan,MapiV6Vlan,MapiVlan,OutBuffer,OutVariable,Pod,PublicV6Vlan,PublicVlan,SwitchState,Type,Verbose,WarningAction,WarningVariable,WhatIf,WhenInventoryCompleted,WhenNetworkCompleted,WhenRtoCompleted")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminRouter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,ActualVersion,ConfigVersion,Confirm,Debug,DesiredVersion,ErrorAction,ErrorVariable,FirmwareVersion,GFSID,IP,Identity,ManagementIP,MonitoringState,NetworkDeviceType,OperationState,OutBuffer,OutVariable,PairRouter,Profile,ProvisioningState,Rack,Type,UpstreamRouter1,UpstreamRouter2,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminSku", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DiskCount,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminSkuType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DCDeploymentStatus,Debug,ErrorAction,ErrorVariable,ExchangePath,Identity,IsDCDeployable,IsDeployable,OSImagePath,OutBuffer,OutVariable,Verbose,VersionState,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminVersionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Location,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminVlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,Confirm,DHCPServer,Datacenter,Debug,ErrorAction,ErrorVariable,GFSID,GNSNumber,Identity,Location,Name,OutBuffer,OutVariable,ProvisioningState,RouterIP,RoutingGroup,Subnet,SubnetMask,Verbose,VlanType,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminWorkflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Path,Scope,Severity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Location,Name,OutBuffer,OutVariable,Resolution,Verbose,WarningAction,WarningVariable,WhatIf,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-Colocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DatacenterCode,Debug,ErrorAction,ErrorVariable,Identity,Location,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Confirm,Debug,ErrorAction,Identity,MachineDefinition,OutBuffer,OutVariable,Payload,PerMachineConfig,Verbose,Version,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DropBoxRecurringPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CancelInstance,Confirm,Debug,Enabled,ErrorAction,ErrorVariable,EscalationTeam,Identity,Location,Manifest,OutBuffer,OutVariable,PayloadTimeoutInHours,PayloadType,RecurrencePattern,RunNow,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-EnterpriseTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeFreezeDescription,ChangeFreezeEnd,ChangeFreezeStart,ClearChangeFreeze,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeDescription,ConfigBlob,Confirm,Debug,ErrorAction,ErrorVariable,ForceUpdate,Identity,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FailedHardDisk", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Bay,Box,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Port,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FaultInjectionAssetSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetSetCsv,Confirm,Debug,ErrorAction,ErrorVariable,Identity,LinkedAssetSet,OutBuffer,OutVariable,Verbose,VictimType,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FaultInjectionHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetSet,Confirm,Debug,ErrorAction,ErrorVariable,FaultInjectionState,Identity,OutBuffer,OutVariable,Result,Scavenged,Status,Verbose,Victim,VictimType,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FaultInjectionParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Value,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FaultInjectionSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssetSet,Confirm,Debug,ErrorAction,ErrorVariable,ExtraParameters,Friday,Identity,Monday,OutBuffer,OutVariable,Saturday,Sunday,Thursday,Tuesday,Verbose,WarningAction,WarningVariable,Wednesday,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FirewallPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,Confirm,Debug,ErrorAction,ErrorVariable,Forest,ForestType,Identity,MachineType,OutBuffer,OutVariable,Priority,RuleFilter,RuleName,ScopeType,SelectionFilter,TestName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FirewallRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApplicationName,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Ports,Protocol,SelectionFilter,ServiceName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FirewallScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,IpRangeType,OutBuffer,OutVariable,ScopeType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FirewallScopeIpRange", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Ip1,Ip2,IpRangeFormat,IpRangeType,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FirewallScopeIpRangeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FirewallScopeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FirewallState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PolicyState,ValidationState,Verbose,WarningAction,WarningVariable,WhatIf,WhenLastApplicationAttempted,WhenLastPolicyApplied,WhenLastValidationAttempted")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ForestGrowthRate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Forest,Identity,MonthlyExpectedGrowthRate,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-FuseBoxEvaluation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FuseBoxEvaluationDetail,FuseBoxEvaluationStatus,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf,WorkflowId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-MachineBootDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Device,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-MachinePowerState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalNotificationAliases,ClientImpact,ConfigItemName,ConfigItemTypeName,Credential,DatacenterName,Debug,Description,DiaryEntry,DiaryTitle,ErrorAction,ErrorVariable,Id,OutBuffer,OutVariable,Priority,ProblemType,Property,TeamAssignedId,TeamAssignedName,TicketStatus,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Activity,ComponentName,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Reason,RegularExp,RespondOn,ResponderType,ScrubbedError,Threshold,ThresholdHours,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-PropertyDimension", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Confirm,Data,Debug,DetectedTime,Dirty,ErrorAction,ErrorVariable,Identity,Instance,ManualPriority,OutBuffer,OutVariable,Owner,Priority,Source,SourceDetail,Status,TargetId,TargetType,TicketApproved,TicketId,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivateTicket,AutoBeginMM,AutoBeginMMSchedule,AutoEndMM,AutoOfflineRepair,AutoOnlineRepair,AutoOnlineRepairSchedule,AutoRepair,AutoSetOffline,AutoSetOnline,AutoSliceCarryStraggler,AutoSliceCount,AutoSliceWindowHours,BlockDeployment,BlockLive,Category,CloseTicket,Component,Confirm,CreateTicket,Debug,Description,DispatchTicket,ErrorAction,ErrorVariable,Identity,ManualRepair,Name,OutBuffer,OutVariable,Priority,Severity,Source,SourceDetail,Status,TicketDailyThreshold,TicketTemplate,TicketVerbiage,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,FailureBlocksDeployment,FailureBlocksLive,Identity,Name,OutBuffer,OutVariable,Phase,Status,TicketAutoDispatch,TicketEnabled,TimeoutSeconds,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ScanResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Code,Confirm,Debug,ErrorAction,ErrorVariable,IP,Identity,MAC,Message,OutBuffer,OutVariable,SerialNumber,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ServiceChangeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Authorization,BugId,Cancel,Comment,Confirm,Debug,Decision,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ServiceFrontDoor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FaultInjectionEnabled,Identity,Name,OutBuffer,OutVariable,SwitchConfirmationRequiredPercentage,SwitchPermission,SwitchState,SwitchTarget,SwitchTargetSwitchPercentage,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-SiteMaintenanceHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Approver,Confirm,Debug,ErrorAction,ErrorVariable,FromSite,Identity,OutBuffer,OutVariable,Reason,Requester,Status,ToSite,Verbose,WarningAction,WarningVariable,WhatIf,Workflow,WorkflowID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-SiteMaintenanceOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Contact,Debug,ErrorAction,ErrorVariable,Identity,MaintenanceAllowed,Reason,Site,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-UTSTicket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ClientImpact,Confirm,ControlClosure,DataCenter,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TeamAssignment,TicketNumber,TicketOwner,TicketPriority,TicketSubItem,TicketType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-VirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DesiredStatus,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,VirtualServers,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Start-IPReservation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MachineName,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Start-IloScan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPScopeFilter,Debug,EnableSetIloPassword,ErrorAction,ErrorVariable,ExecutingManagementServer,Location,MachineName,OutBuffer,OutVariable,ReserveIP,ScanAll,SearchIloVlansByVlanType,SubnetComment,SubnetHost,SubnetId,SubnetMask,SubnetName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Start-OobmScan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Stop-CentralAdminOperation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Test-CAMomConnectorAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Test-CentralAdminAuditAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Test-CentralAdminServiceAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Undo-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeDescription,Confirm,Debug,ErrorAction,ErrorVariable,ForceUpdate,Identity,LastChange,RevertToRevisionId,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,ShowDuplicates,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HealthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GroupSize,HaImpactingOnly,HealthSet,Identity,MinimumOnlinePercent,OutBuffer,OutVariable,RollupGroup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,Platform,UseClearTextAuthenticationKeys,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExpirationTimeInHours,Mailbox,OutBuffer,ResultSize,ShowAll,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,HaImpactingOnly,HealthSet,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CreationTime,Debug,DomainController,ErrorAction,ErrorVariable,EventCategoryId,EventInstanceId,EventSource,EventTime,InsertionStrings,NotificationRecipients,Organization,OutBuffer,OutVariable,PeriodicKey,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Add-CentralAdminEntityPropertyMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Data,Debug,Entity,EntityPropertyType,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Add-CentralAdminSnatPoolMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MemberIP,OutBuffer,OutVariable,SnatPool,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityPropertyMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityPropertyType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminMachineF5Availability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertEmail,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Role,ServiceInstance,ServiceUrl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminOperationNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ShowError,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminSnatPool", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminSnatPoolMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Readpublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-FfoCentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-FfoCentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-RAALease", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-RAARecoveryQueue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "New-CentralAdminEntity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,EntityType,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "New-CentralAdminEntityPropertyType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowMultipleValues,Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PropertyType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "New-CentralAdminEntityType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "New-CentralAdminSnatPool", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,F5FloatingIP,Location,Name,OutBuffer,OutVariable,PoolName,Port,Threshold,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "New-FfoCentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppliesTo,Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Precedence,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Remove-CentralAdminEntity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Remove-CentralAdminEntityPropertyMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Remove-CentralAdminEntityPropertyType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IdEntityPropertyType,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Remove-CentralAdminEntityType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Remove-CentralAdminSnatPool", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Remove-CentralAdminSnatPoolMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Remove-FfoCentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminEntity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,EntityType,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminEntityPropertyMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,Description,Entity,EntityPropertyType,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminEntityPropertyType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowMultipleValues,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,PropertyType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminEntityType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminOperationNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,NotificationSent,OutBuffer,OutVariable,Subscribers,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminSnatPool", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,F5FloatingIP,Identity,Location,Name,OutBuffer,OutVariable,PoolName,Port,Threshold,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminSnatPoolMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DisableHours,Disabled,ErrorAction,ErrorVariable,Identity,MemberIP,OutBuffer,OutVariable,SkipLastMemberCheck,SkipThresholdCheck,SnatPool,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-FfoCentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppliesTo,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Precedence,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoAggregatedProbeErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoAggregatedProbeResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoOperationPerformanceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoProbeErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveProvisioningTenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveProvisioningTrendReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveStatisticsDatacenterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveStatisticsTenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AsTotalUsagePerfReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AsXsitePerfReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverErrorSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverRequestSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationVersionV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationVersionViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeRequestSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUnhandledSchemasV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryProtocolV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3DiscoverySearchactivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3DiscoverySearchinfoReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsCrashSummaryV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorImpactByOrgV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsLatencyImpactByOrgV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMigrationSummaryPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrClientsV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrRegionLatencyV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrRegionUsersV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestClientSlaPerForestPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestClientSlaPerRegionPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaPerForestPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaPerRegionPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaRegionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSummaryV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUnhandledSchemasV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryApplicationV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3GlobalTenantServiceplanLocalCopyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtAllUsersReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtHoldkeyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageOrgReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageRequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLatencyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsSoftwareReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsVersionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaOrgLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaOrgLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaTopLatencyByWeekReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRequestSummaryPerSiteOrgWebmethodReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtUserSummaryPerOrgReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityAggForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityPctForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityPctMbxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmManagedassistantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmProcessingtimesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmTopmailboxtimesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MsnImExceptionInformationReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3PumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3QuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyDcReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailySftReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsMbxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsThrottlingPolicySummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopdelayedtenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopdelayeduserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopoverbudgettenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopoverbudgetuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTotalrequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTotaluserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopdelayedtenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopdelayeduserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopoverbudgettenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopoverbudgetuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTotalrequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTotaluserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEndpointBacksyncReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsExceptionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsExecutiontimeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsHighlatencytasksReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsParameterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsTenantthrottlingpolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsTrendReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletServiceplanUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityConstTimetableReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpFvaAnalysisReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpHelpAnalysisReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisBrowserAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisBrowserByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisFeatureAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisFeatureByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisPlatformAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisPlatformByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpRadiobuttonReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPerfEditmailboxCountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPerfEditmailboxLoadReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityTestecpconnectivityErrorcountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportFopeInboundMessagesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportHopComponentLatencyByDayReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportHopComponentLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportLatentMessageByServiceTypeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportMachineDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailDailyDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailDailyHubReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailHourlyForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceTypeHopReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceTypeReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverExpensiveReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverFailureDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADReplicationLogsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataActionsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataDailyAggregateReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataReconcileReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmFilteredProbeExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmMonitorExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmProbeExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmResponderExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCBigTenantsFailureLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCAOperationDistributionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCaActiveCapacityMachinesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCmdletEventlogsProvisionLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCmdletEventlogsProvisionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDataCollectionWatermarkReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDatacenterServersReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDeploymentPiqReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDirectoryHydrationEventReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEduTenantDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEduTenantSummaryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCElevationrequestsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsMonthlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamIncidentsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamLateralsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationTriadsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncKnownErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncLogReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncTenantFirstUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncThroughputInMinuteReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGatewayaccessDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGatewayinteractionsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGlsFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGlsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCLiveIdAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMachinesbyversionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMachinestateHourlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMonthlyReportFirstUserE2EReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMservFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMservReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxforestentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxmachineentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxpayloadsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxpodentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxscopeentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsFailureareasReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsRetrycountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsStatecountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOspUsageSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOverridesDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringAggregatedResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringSummaryResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProDeproReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProvisionBigTenantsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProvisionGrowthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPumperJobReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServiceReadinessSuppressedAlertsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServicealertDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServicerequestsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCSqlobjectchangelogHourlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoOutlookRequestProcessedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-OspExoMailboxDatabaseUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-OspExoSummaryByTopologyDailyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-BuildStageAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildStageId,DeploymentStage,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-ContactToRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddContactInEndPosition,ContactAlias,ContactStartTime,Debug,ErrorAction,ErrorVariable,LastModifiedBy,OutBuffer,OutVariable,RotationId,ServiceName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,BusinessHoursEnd,BusinessHoursStart,Carrier,CellPhone,Confirm,Debug,EmailAddress,ErrorAction,ErrorVariable,FullName,HomePhone,Name,OutBuffer,OutVariable,Service,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf,WorkPhone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,ContactScheduleStartTime,Contacts,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RotationEndTime,RotationStartTime,Schedule,SetCurrent,Team,TimeZone,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,FromAddress,Name,NonUrgentCCAddresses,NonUrgentToAddresses,OutBuffer,OutVariable,Service,UrgentCCAddresses,UrgentToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,EndTime,ErrorAction,ErrorVariable,NewContact,OriginalContact,OutBuffer,OutVariable,StartTime,Team,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalInformation,AdditionalInformationLink,AllowedModifiers,CCAddresses,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,EscalateNowAllowed,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPath,IssueTrackingPropertyMapping,Name,OutBuffer,OutVariable,Service,Tags,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceVersion,Team,TrackingPath,TriageTrackingDatabase,TriageTrackingDatabaseType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AMAvailabilityByProbeAndTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ProbeName,ReadFromSqlAzure,SQLCredential,SelectedEndDate,SelectedRange,ServerName,TargetPartitionName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AMLatencyByProbeAndTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ProbeName,ReadFromSqlAzure,SQLCredential,SelectedEndDate,SelectedRange,ServerName,ShowFailure,TargetPartitionName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrorSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,IncludeNonLiveCapacity,Name,OutBuffer,OutVariable,PivotAttribute,PivotAttributeValue,ReadFromSqlAzure,ResultSize,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrors", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReadFromSqlAzure,RecordId,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrorsForTargetAndState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,IncludeNonLiveCapacity,Name,OutBuffer,OutVariable,PivotAttribute,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringProbeResults", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,DegradedCapacityOnly,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringProbeResultsByLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,DegradedCapacityOnly,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResults", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForTargetsByProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Targets,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringSummaryForProbes", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringTrendByRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AlertCommunicationMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,CommunicationFriendlyId,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDatetime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartDatetime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AlertTrendByTeamAndSubject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Dag,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,EscalationName,Filter,Forest,IntervalHours,MachineName,OutBuffer,OutVariable,ServerName,Service,Site,StartTime,Target,Team,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AvailableGroupsAndReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportsFilePath,ScopeString,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-BandwidthForNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Builds", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterForForkGrid,GetLinkedBuilds,OspControlBuildIdentity,OutBuffer,OutVariable,ProductName,ResultSize,ServiceUri,ShowAllBuilds,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartDataFileCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartLogFileCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartTableCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CapacityUsageAggregateListDataByForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationScope,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Probe,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CommunicationScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CommunicationsForWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDate,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ScopeFilter,SearchFilter,StartDate,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosMODJobInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,JobName,OutBuffer,OutVariable,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosMODJobStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosmosStreamInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,FilterByMachine,Identity,OutBuffer,OutVariable,ResultSize,Scope,StartDate,StreamName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByServerAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByTenantAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByUniqueUserAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagForSourceComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DagType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,TopologyType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagForSourceComponentForOWA", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DagType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagPingCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationScope,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DataCenterInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DatacenterMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Date,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ErrorCountTrendForSourceComponentByRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ErrorCountTrendForSourceComponentByRegionForOWA", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "All,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Service,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Facts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,InstanceName,MachineName,MeasureName,OutBuffer,OutVariable,TimeRangeInHours,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-FailedVipsForNetworkBandwidth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,NetworkCategory,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Features", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,FeatureGroupName,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ForkMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildVersion,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-IPCountForNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-IncidentConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Machines", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Roles,ScopeString,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-MosAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Identity,IncidentFriendlyId,IsPublished,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-NetworkBandwidthForDataBlock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,AggregationLevel,AggregationType,DatabaseName,Debug,Duration,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OSPReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ObjectHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ParentId,Providers,StartTime,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallRotationScheduleType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Contact,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Team,Time,TimeZone,Verbose,WarningAction,WarningVariable,Weeks")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OpticsSsrsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-PlannedMaintenanceEventsForWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDate,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ScopeFilter,SearchFilter,StartDate,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-PrecannedMessagesForFeature", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,FeatureID,Filter,Identity,IncidentImpactID,IncidentStatusID,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Probe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,ServiceAlias,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertErrorDetailsForTargetAndState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,Distinguisher,EndTime,ErrorAction,ErrorVariable,FailingType,Filter,IncludeNonLiveCapacity,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertHealthIndexForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeHealthType,ServerName,Service,Target,TargetLevel,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertResultsForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeType,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ScopeInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-SeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,SeType,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ExcludeResolveNowProperties,ExcludeTileProperties,Filter,Identity,OutBuffer,OutVariable,QueryTimeoutInSeconds,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertRecovery", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Dag,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Forest,MachineName,OutBuffer,OutVariable,ServerName,Service,Site,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceChangeDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeLevel,ServerName,Service,StartTimeStamp,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceChangeForTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,IncidentId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-SubscriptionInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,OutBuffer,OutVariable,ResultSize,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-TargettingSuccessListByArea", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,IdleOrActiveDays,OutBuffer,OutVariable,ReadFromSqlAzure,SeOwner,SeType,ServerName,Service,StartTime,Status,Target,TryNumber,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WeeklyServiceAlertsByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ServerName,Service,StartTime,Team,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkloadName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadConfigurationForAllWorkloads", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TemplateTypeId,Verbose,WarningAction,WarningVariable,WorkloadId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Invoke-FuseBox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FuseConfigFile,FuseFilter,IgnoreMachineThresholds,MachineName,OutBuffer,OutVariable,PayloadName,PayloadScopeName,ServiceUri,ThumbPrint,UpdateReleasePipeline,ValidationScenario,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertTypeId,CapacityUnit,Dag,Debug,ErrorAction,ErrorVariable,Expiration,Forest,Id,IsGlobal,IsServiceLevel,MachineName,NewAlertSource,NewEscalationTeam,NewService,OriginalEscalationTeam,OutBuffer,OutVariable,Rack,Reason,Service,Site,SqlDatabase,SqlServer,Suppressed,Urgent,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,TextDomain,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Body,CCAddresses,FromAddress,SMTPHost,Source,Subject,ToAddresses,Urgent,UseSSL")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,CCAddresses,CustomConCallText,CustomNotificationText,Debug,Description,ErrorAction,ErrorVariable,IsVersion2,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPropertyMapping,Name,OutBuffer,OutVariable,ToAddresses,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,DatabaseName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServerName,Severity,SubStatus,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-PumperBackfill", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,Datamart,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PowershellExe,ResultSize,Scope,Table,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SchedulerBackfill", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,SchedulerJob,Scope,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddedBy,AlertCategory,AlertDescription,AlertId,AlertName,AlertSource,AlertTypeId,CapacityUnit,CapacityUnitActivityState,CentralAdminServer,Component,Dag,DagActivityState,Debug,EndPoint,Environment,ErrorAction,ErrorVariable,EscalationTeam,EscalationTeamContact,Forest,IsIncident,IsUrgent,Location,MachineDefinitionName,MachineMaintenanceState,MachineMonitoringState,MachineName,MachineProvisioningState,MachineVersion,Mdb,MonitoringAgent,MonitoringObject,OutBuffer,OutVariable,OwnerEmail,OwnerName,OwnerPhone,ParentServiceAlert,ProblemTime,PropertyBag,Rack,RackSwitchState,RaisedTime,Region,Service,Site,SkipPaging,SkipSuppression,SqlDatabase,SqlServer,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,BugDatabase,BugId,Debug,ETA,ErrorAction,ErrorVariable,FollowUpStatus,OutBuffer,OutVariable,Owner,SqlDatabase,SqlServer,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,CommunicationAccessLevel,Debug,DetectionMethod,ErrorAction,ErrorVariable,EscalationMethod,EstimatedAffectedUsers,IncidentEndTime,IncidentSeverity,IncidentStartTime,IsCommunicationNecessary,IssueDetectedToEscalated,IssueEscalatedToInvestigation,IssueInvestigationToResolution,OutBuffer,OutVariable,OutageDuration,PostMortemDocURL,PublishCommunicationText,PublishExternalStatus,PublishToTarget,SLAImpact,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Comments,Debug,EmailAction,ErrorAction,ErrorVariable,IsOwner,IsPaging,OutBuffer,OutVariable,Service,Source,SqlDatabase,SqlServer,TargetContact,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,AssetName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PropertyBag,ServiceAlertScopeAssetType,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,ActionTime,AlertId,Comments,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SubscribeJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,JobName,OutBuffer,OutVariable,ResultSize,Scope,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-UnsubscribeJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,JobName,OutBuffer,OutVariable,ResultSize,Scope,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-ContactFromRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Service,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,Whatif")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-BuildStageAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AnnotationId,DeploymentStage,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentProgress", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,OutBuffer,OutVariable,Progress,ServiceUri,Status,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentStart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,OutBuffer,OutVariable,Payload,ProductName,ServiceUri,StartTime,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentStop", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProductName,ServiceUri,StartTime,Status,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Expiration,Identity,OutBuffer,OutVariable,Reason,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,Whatif")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ForkMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildVersion,Debug,ErrorAction,ErrorVariable,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TextDomain,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,BusinessHoursEnd,BusinessHoursStart,Carrier,CellPhone,Confirm,Debug,EmailAddress,ErrorAction,ErrorVariable,FullName,HomePhone,Identity,OutBuffer,OutVariable,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf,WorkPhone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Contacts,Debug,Description,ErrorAction,ErrorVariable,Identity,LastContactsUploaded,OutBuffer,OutVariable,RotationEndTime,RotationStartTime,Schedule,ScheduleDescription,ScheduleDetails,SetCurrent,SqlDatabase,SqlServer,TimeZone,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,CCAddresses,Confirm,CustomConCallText,CustomNotificationText,Debug,Description,ErrorAction,ErrorVariable,Identity,IncidentManagementTeam,IsVersion2,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPropertyMapping,OutBuffer,OutVariable,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,FromAddress,Identity,NonUrgentCCAddresses,NonUrgentToAddresses,OutBuffer,OutVariable,UrgentCCAddresses,UrgentToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,EndTime,ErrorAction,ErrorVariable,Identity,NewContact,OutBuffer,OutVariable,SqlDatabase,SqlServer,Team,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalInformation,AdditionalInformationLink,AllowedModifiers,CCAddresses,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,EscalateNowAllowed,Identity,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPath,IssueTrackingPropertyMapping,OutBuffer,OutVariable,Tags,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerName,Severity,SubStatus,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AnnotationId,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ReleasePipelineBuildStageProperty", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,Key,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Value,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,CapacityUnit,Confirm,Dag,Debug,ErrorAction,ErrorVariable,EscalationTeam,EscalationTeamContact,Forest,Identity,IncidentId,IsIncident,LateralId,MachineName,OutBuffer,OutVariable,ParentServiceAlert,PropertyBag,Rack,Region,ResolvedComments,ResolvedTime,Site,SqlDatabase,SqlServer,Status,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugDatabase,BugId,Debug,ETA,ErrorAction,ErrorVariable,FollowUpStatus,Identity,OutBuffer,OutVariable,Owner,SqlDatabase,SqlServer,Title,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommunicationAccessLevel,Debug,DetectionMethod,ErrorAction,ErrorVariable,EscalationMethod,EstimatedAffectedUsers,Identity,IncidentEndTime,IncidentSeverity,IncidentStartTime,IsCommunicationNecessary,IssueDetectedToEscalated,IssueEscalatedToInvestigation,IssueInvestigationToResolution,OutBuffer,OutVariable,OutageDuration,PostMortemDocURL,PublishCommunicationText,PublishExternalStatus,PublishToTarget,SLAImpact,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoFillResponder,Confirm,Debug,ErrorAction,ErrorVariable,Id,Identity,OutBuffer,OutVariable,PageResponder,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,ActionTime,Comments,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,TrackingPath,TriageTrackingDatabase,TriageTrackingDatabaseType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Test-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,OverrideId,SqlDatabase,SqlServer,TimeMachine,Verbose,WarningAction,WarningVariable,WriteAlert")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "Get-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "New-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AverageCPU,Date,Forest,ForestType,OutBuffer,OutVariable,PeakMailflow,Region,SafeMailflowLimit,StorageAvailable,StorageUsed,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "Remove-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "Set-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AverageCPU,Confirm,Date,Debug,ErrorAction,ErrorVariable,Forest,ForestType,Identity,OutBuffer,OutVariable,PeakMailflow,Region,SafeMailflowLimit,StorageAvailable,StorageUsed,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusComponents", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLeader", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Realm,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityId,ComponentName,Credential,Debug,EntryCount,ErrorAction,ErrorVariable,EventType,FromDate,HostName,OutBuffer,OutVariable,PipelineVariable,ShowAll,Tag,ToDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusServiceInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusServiceLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Realm,ShowAll,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusTags", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusTraceEventType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class Cmdlet_Extension_Agents
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-CmdletExtensionAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-CmdletExtensionAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CmdletExtensionAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Assembly,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-CmdletExtensionAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Assembly,ClassFactory,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Priority,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-CmdletExtensionAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CmdletExtensionAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Priority,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Data_Loss_Prevention
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mode,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-DlpPolicyCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-TransportRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Format,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ClassificationRuleCollectionIdentity,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DataClassificationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Actor,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetectionsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpPolicyTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,ErrorAction,ErrorVariable,JobId,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailDlpPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailMalwareReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MalwareName,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailSpamReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailTransportRuleReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailFilterListReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,ProbeTag,SelectionTarget,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Category,Debug,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficTopReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeLocales,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Expression,FromIP,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Status,ToIP,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTraceDetail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,EndDate,ErrorAction,ErrorVariable,Event,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Locale,Organization,Original,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,TrustedPublishingDomain,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions"
					}, "DlpPolicy"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ResultSize,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRuleAction", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRulePredicate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-DlpPolicyCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,Force,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-DlpPolicyTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-TransportRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,Force,Identity,MigrationSource,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,Organization,OutBuffer,OutOfBoxCollection,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,FullSync,Identity,Organization,OutBuffer,OutVariable,SyncChangeInfos,SyncNow,SyncSvcUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ClassificationRuleCollectionIdentity,Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Fingerprints,Locale,Name,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Mode,Name,Organization,OutBuffer,OutVariable,Parameters,State,Template,TemplateData,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Fingerprint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,FileData,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Value,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions"
					}, "DlpPolicy,ExceptIfMessageContainsDataClassifications,MessageContainsDataClassifications,NotifySender"),
					new RoleParameters(new string[]
					{
						"IRMPremiumFeaturesPermissions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyRightsProtectionTemplate"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ActivationDate,AdComparisonAttribute,AdComparisonOperator,AddManagerAsRecipientType,AddToRecipients,AnyOfCcHeader,AnyOfCcHeaderMemberOf,AnyOfRecipientAddressContainsWords,AnyOfRecipientAddressMatchesPatterns,AnyOfToCcHeader,AnyOfToCcHeaderMemberOf,AnyOfToHeader,AnyOfToHeaderMemberOf,ApplyClassification,ApplyHtmlDisclaimerFallbackAction,ApplyHtmlDisclaimerLocation,ApplyHtmlDisclaimerText,ApplyOME,AttachmentContainsWords,AttachmentExtensionMatchesWords,AttachmentHasExecutableContent,AttachmentIsPasswordProtected,AttachmentIsUnsupported,AttachmentMatchesPatterns,AttachmentNameMatchesPatterns,AttachmentProcessingLimitExceeded,AttachmentPropertyContainsWords,AttachmentSizeOver,BetweenMemberOf1,BetweenMemberOf2,BlindCopyTo,Comments,Confirm,ContentCharacterSetContainsWords,CopyTo,Debug,DeleteMessage,Disconnect,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptIfAdComparisonAttribute,ExceptIfAdComparisonOperator,ExceptIfAnyOfCcHeader,ExceptIfAnyOfCcHeaderMemberOf,ExceptIfAnyOfRecipientAddressContainsWords,ExceptIfAnyOfRecipientAddressMatchesPatterns,ExceptIfAnyOfToCcHeader,ExceptIfAnyOfToCcHeaderMemberOf,ExceptIfAnyOfToHeader,ExceptIfAnyOfToHeaderMemberOf,ExceptIfAttachmentContainsWords,ExceptIfAttachmentExtensionMatchesWords,ExceptIfAttachmentHasExecutableContent,ExceptIfAttachmentIsPasswordProtected,ExceptIfAttachmentIsUnsupported,ExceptIfAttachmentMatchesPatterns,ExceptIfAttachmentNameMatchesPatterns,ExceptIfAttachmentProcessingLimitExceeded,ExceptIfAttachmentPropertyContainsWords,ExceptIfAttachmentSizeOver,ExceptIfBetweenMemberOf1,ExceptIfBetweenMemberOf2,ExceptIfContentCharacterSetContainsWords,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromAddressMatchesPatterns,ExceptIfFromMemberOf,ExceptIfFromScope,ExceptIfHasClassification,ExceptIfHasNoClassification,ExceptIfHasSenderOverride,ExceptIfHeaderContainsMessageHeader,ExceptIfHeaderContainsWords,ExceptIfHeaderMatchesMessageHeader,ExceptIfHeaderMatchesPatterns,ExceptIfManagerAddresses,ExceptIfManagerForEvaluatedUser,ExceptIfMessageSizeOver,ExceptIfMessageTypeMatches,ExceptIfRecipientADAttributeContainsWords,ExceptIfRecipientADAttributeMatchesPatterns,ExceptIfRecipientAddressContainsWords,ExceptIfRecipientAddressMatchesPatterns,ExceptIfRecipientDomainIs,ExceptIfRecipientInSenderList,ExceptIfSCLOver,ExceptIfSenderADAttributeContainsWords,ExceptIfSenderADAttributeMatchesPatterns,ExceptIfSenderDomainIs,ExceptIfSenderInRecipientList,ExceptIfSenderIpRanges,ExceptIfSenderManagementRelationship,ExceptIfSentTo,ExceptIfSentToMemberOf,ExceptIfSentToScope,ExceptIfSubjectContainsWords,ExceptIfSubjectMatchesPatterns,ExceptIfSubjectOrBodyContainsWords,ExceptIfSubjectOrBodyMatchesPatterns,ExceptIfWithImportance,ExpiryDate,From,FromAddressContainsWords,FromAddressMatchesPatterns,FromMemberOf,FromScope,GenerateIncidentReport,GenerateNotification,HasClassification,HasNoClassification,HasSenderOverride,HeaderContainsMessageHeader,HeaderContainsWords,HeaderMatchesMessageHeader,HeaderMatchesPatterns,IncidentReportContent,IncidentReportOriginalMail,LogEventText,ManagerAddresses,ManagerForEvaluatedUser,MessageSizeOver,MessageTypeMatches,Mode,ModerateMessageByManager,ModerateMessageByUser,Name,Organization,OutBuffer,OutVariable,PrependSubject,Priority,Quarantine,RecipientADAttributeContainsWords,RecipientADAttributeMatchesPatterns,RecipientAddressContainsWords,RecipientAddressMatchesPatterns,RecipientDomainIs,RecipientInSenderList,RedirectMessageTo,RejectMessageEnhancedStatusCode,RejectMessageReasonText,RemoveHeader,RemoveOME,RouteMessageOutboundConnector,RouteMessageOutboundRequireTls,RuleErrorAction,RuleSubType,SCLOver,SenderADAttributeContainsWords,SenderADAttributeMatchesPatterns,SenderAddressLocation,SenderDomainIs,SenderInRecipientList,SenderIpRanges,SenderManagementRelationship,SentTo,SentToMemberOf,SentToScope,SetAuditSeverity,SetHeaderName,SetHeaderValue,SetSCL,SmtpRejectMessageRejectStatusCode,SmtpRejectMessageRejectText,StopRuleProcessing,SubjectContainsWords,SubjectMatchesPatterns,SubjectOrBodyContainsWords,SubjectOrBodyMatchesPatterns,UseLegacyRegex,Verbose,WarningAction,WarningVariable,WhatIf,WithImportance")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpPolicyTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,Organization,OutBuffer,OutOfBoxCollection,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Fingerprints,Identity,IsDefault,Locale,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DataClassificationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DistinctFunctions,DistinctRegExes,DomainController,ErrorAction,ErrorVariable,FingerprintThreshold,Identity,KeywordLength,MaxAnyBlocks,MaxFingerprints,MaxNestedAnyBlocks,MaxRulePackageSize,MaxRulePackages,Name,NumberOfKeywords,OutBuffer,OutVariable,RegExGrammarLimit,RegExLength,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Identity,Mode,Name,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DisclaimerText,EmailText,Image,OTPEnabled,Organization,PortalText")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Value,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions"
					}, "DlpPolicy,ExceptIfMessageContainsDataClassifications,MessageContainsDataClassifications,NotifySender"),
					new RoleParameters(new string[]
					{
						"IRMPremiumFeaturesPermissions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyRightsProtectionTemplate,Identity"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ActivationDate,AdComparisonAttribute,AdComparisonOperator,AddManagerAsRecipientType,AddToRecipients,AnyOfCcHeader,AnyOfCcHeaderMemberOf,AnyOfRecipientAddressContainsWords,AnyOfRecipientAddressMatchesPatterns,AnyOfToCcHeader,AnyOfToCcHeaderMemberOf,AnyOfToHeader,AnyOfToHeaderMemberOf,ApplyClassification,ApplyHtmlDisclaimerFallbackAction,ApplyHtmlDisclaimerLocation,ApplyHtmlDisclaimerText,ApplyOME,AttachmentContainsWords,AttachmentExtensionMatchesWords,AttachmentHasExecutableContent,AttachmentIsPasswordProtected,AttachmentIsUnsupported,AttachmentMatchesPatterns,AttachmentNameMatchesPatterns,AttachmentProcessingLimitExceeded,AttachmentPropertyContainsWords,AttachmentSizeOver,BetweenMemberOf1,BetweenMemberOf2,BlindCopyTo,Comments,Confirm,ContentCharacterSetContainsWords,CopyTo,Debug,DeleteMessage,Disconnect,DomainController,ErrorAction,ErrorVariable,ExceptIfAdComparisonAttribute,ExceptIfAdComparisonOperator,ExceptIfAnyOfCcHeader,ExceptIfAnyOfCcHeaderMemberOf,ExceptIfAnyOfRecipientAddressContainsWords,ExceptIfAnyOfRecipientAddressMatchesPatterns,ExceptIfAnyOfToCcHeader,ExceptIfAnyOfToCcHeaderMemberOf,ExceptIfAnyOfToHeader,ExceptIfAnyOfToHeaderMemberOf,ExceptIfAttachmentContainsWords,ExceptIfAttachmentExtensionMatchesWords,ExceptIfAttachmentHasExecutableContent,ExceptIfAttachmentIsPasswordProtected,ExceptIfAttachmentIsUnsupported,ExceptIfAttachmentMatchesPatterns,ExceptIfAttachmentNameMatchesPatterns,ExceptIfAttachmentProcessingLimitExceeded,ExceptIfAttachmentPropertyContainsWords,ExceptIfAttachmentSizeOver,ExceptIfBetweenMemberOf1,ExceptIfBetweenMemberOf2,ExceptIfContentCharacterSetContainsWords,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromAddressMatchesPatterns,ExceptIfFromMemberOf,ExceptIfFromScope,ExceptIfHasClassification,ExceptIfHasNoClassification,ExceptIfHasSenderOverride,ExceptIfHeaderContainsMessageHeader,ExceptIfHeaderContainsWords,ExceptIfHeaderMatchesMessageHeader,ExceptIfHeaderMatchesPatterns,ExceptIfManagerAddresses,ExceptIfManagerForEvaluatedUser,ExceptIfMessageSizeOver,ExceptIfMessageTypeMatches,ExceptIfRecipientADAttributeContainsWords,ExceptIfRecipientADAttributeMatchesPatterns,ExceptIfRecipientAddressContainsWords,ExceptIfRecipientAddressMatchesPatterns,ExceptIfRecipientDomainIs,ExceptIfRecipientInSenderList,ExceptIfSCLOver,ExceptIfSenderADAttributeContainsWords,ExceptIfSenderADAttributeMatchesPatterns,ExceptIfSenderDomainIs,ExceptIfSenderInRecipientList,ExceptIfSenderIpRanges,ExceptIfSenderManagementRelationship,ExceptIfSentTo,ExceptIfSentToMemberOf,ExceptIfSentToScope,ExceptIfSubjectContainsWords,ExceptIfSubjectMatchesPatterns,ExceptIfSubjectOrBodyContainsWords,ExceptIfSubjectOrBodyMatchesPatterns,ExceptIfWithImportance,ExpiryDate,From,FromAddressContainsWords,FromAddressMatchesPatterns,FromMemberOf,FromScope,GenerateIncidentReport,GenerateNotification,HasClassification,HasNoClassification,HasSenderOverride,HeaderContainsMessageHeader,HeaderContainsWords,HeaderMatchesMessageHeader,HeaderMatchesPatterns,IncidentReportContent,IncidentReportOriginalMail,LogEventText,ManagerAddresses,ManagerForEvaluatedUser,MessageSizeOver,MessageTypeMatches,Mode,ModerateMessageByManager,ModerateMessageByUser,Name,OutBuffer,OutVariable,PrependSubject,Priority,Quarantine,RecipientADAttributeContainsWords,RecipientADAttributeMatchesPatterns,RecipientAddressContainsWords,RecipientAddressMatchesPatterns,RecipientDomainIs,RecipientInSenderList,RedirectMessageTo,RejectMessageEnhancedStatusCode,RejectMessageReasonText,RemoveHeader,RemoveOME,RouteMessageOutboundConnector,RouteMessageOutboundRequireTls,RuleErrorAction,RuleSubType,SCLOver,SenderADAttributeContainsWords,SenderADAttributeMatchesPatterns,SenderAddressLocation,SenderDomainIs,SenderInRecipientList,SenderIpRanges,SenderManagementRelationship,SentTo,SentToMemberOf,SentToScope,SetAuditSeverity,SetHeaderName,SetHeaderValue,SetSCL,SmtpRejectMessageRejectStatusCode,SmtpRejectMessageRejectText,StopRuleProcessing,SubjectContainsWords,SubjectMatchesPatterns,SubjectOrBodyContainsWords,SubjectOrBodyMatchesPatterns,Verbose,WarningAction,WarningVariable,WhatIf,WithImportance")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "DLPPolicy,Debug,DeliveryStatus,Direction,EndDate,ErrorAction,ErrorVariable,Locale,MessageID,NotifyAddress,Organization,OriginalClientIP,OutBuffer,OutVariable,RecipientAddress,ReportTitle,ReportType,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,ErrorAction,ErrorVariable,JobId,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Test-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,WhatIf"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "TransportRules")
				}, "c")
			};
		}

		private class DataCenter_Destructive_Operations
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Invoke-CentralAdminCommand", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Arguments,ComputerName,Confirm,Debug,ErrorAction,ErrorVariable,HideComputerName,OutBuffer,OutVariable,Pod,ScriptBlock,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ServiceFrontDoor")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,AuthenticationForest,Confirm,Debug,ErrorAction,ErrorVariable,IsFIPSCompliant,Name,OutBuffer,OutVariable,Region,Service,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminIPDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityUnitDefinition,Confirm,Debug,Device,ErrorAction,ErrorVariable,MachineDefinition,Offset,OutBuffer,OutVariable,RackType,Verbose,VlanType,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DatabaseName,Debug,ErrorAction,ErrorVariable,FileShareRoot,GfsName,MirrorDatabaseName,Name,OutBuffer,OutVariable,PhysicalRegion,Service,UTCTimeOffsetInHours,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminPod", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthoritativeVipCheck,Confirm,Debug,ErrorAction,ErrorVariable,Forest,IsManagementPod,IsPassive,Location,MServeId,Name,NetworkType,OutBuffer,OutVariable,PodFrontDoor,ServiceFrontDoor,StaticIpConfig,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminRack", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,GFSID,IloVlan,MapiV6Vlan,MapiVlan,Name,OutBuffer,OutVariable,Pod,PublicV6Vlan,PublicVlan,Type,Verbose,WarningAction,WarningVariable,WhatIf,WhenInventoryCompleted,WhenNetworkCompleted,WhenRtoCompleted")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminRouter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActualVersion,Confirm,Debug,DesiredVersion,ErrorAction,ErrorVariable,GFSID,IP,ManagementIP,Name,NetworkDeviceType,OutBuffer,OutVariable,PairRouter,Rack,Type,UpstreamRouter1,UpstreamRouter2,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminVlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,GNSNumber,Location,Name,OutBuffer,OutVariable,RouterIP,RoutingGroup,Subnet,SubnetMask,Verbose,VlanType,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CentralAdminVirtualMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RetryCount,SleepInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CorrelationId,Debug,Destination,EndTime,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Recipient,Sender,Server,StartTime,TestOnly,UnresponsivePrimaryServers,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-JournalArchiving", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Move-ActiveMailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "MountDialOverride,SkipHealthChecks"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActivatePreferredOnServer,Identity,Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MsaUserMemberName,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation,IgnoreLegalHold"),
					new RoleParameters(new string[]
					{
						"DestructiveAction",
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Permanent"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Arbitration,Confirm,Database,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,PublicFolder,RemoveArbitrationMailboxWithOABsAllowed,RemoveLastArbitrationMailboxAllowed,StoreMailboxIdentity,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RecipientManagementPermissions"
					}, "Disconnect"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Async,AuthoritativeOnly,Confirm,Debug,EnableFileLogging,ErrorAction,ErrorVariable,ForReconciliation,Force,Identity,IsDatacenter,IsPartnerHosted,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Identity,IsDataCenter,IsPartnerHosted,OutBuffer,OutVariable,SkipRecipients,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MsaUserMemberName,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Database")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IsLicensingEnforced,OrganizationStatus")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ForceUpgrade,OnPremisesCredentials,OutBuffer,OutVariable,SuppressOAuthWarning,TenantCredentials,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "DeleteExistingFiles"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity,Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Add-DelegatedGroupsToLocalAdminGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Add-LiveIdCredential", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CreateDTMFMap,DomainController,Identity,IgnoreDefaultScope,Manager,RequireSecretQA")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Add-ManagementEndPointHook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AccountPartition,DomainName,ExternalDirectoryOrganizationId,GlobalDirectoryService,InitialDomain,PopulateCacheWithDomainName,TenantContainerCN")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Add-RoutingGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Add-StampGroupServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Clear-ObsoleteRBACRoles", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization,ServicePlanSettings")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Clear-RbacCoexistenceData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Configure-WSManIISHosting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterCAS,EnableKerberosModule")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Disable-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,IgnoreDefaultScope,KeepProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Enable-OabWebDistribution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddressLists,ApplyMandatoryProperties,DomainController,Identity,UseDefaultAttributes,VirtualDirectories")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Enable-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutomaticSpeechRecognitionEnabled,DomainController,Extensions,Identity,IgnoreDefaultScope,NotifyEmail,PilotNumber,Pin,PinExpired,SIPResourceIdentifier,UMMailboxPolicy,ValidateOnly")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Export-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Credential,DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Get-ADQueryPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Get-InstalledRoleInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "RoleName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Get-ProcessModule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ProcessId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Get-ProvisionedExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Get-PushNotificationsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ADPropertiesOnly,DomainController,Identity,Server,ShowBackEndVirtualDirectories,ShowMailboxVirtualDirectories")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Get-ServiceEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Get-StampGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,Status")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Import-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Credential,Data")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Initialize-ExchangeConfigurationPermissions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Initialize-ExchangeLocalGroups", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Initialize-TenantConfigurationPermissions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Initialize-TenantUniversalGroups", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,IsDehydrated,Organization,ServicePlanSettings")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ActiveSyncDeviceClassContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AddressBookRoot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AdministrativeGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AdministrativeGroupContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AuthCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AuthConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AutoDiscoverContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-CannedAddressLists", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-CannedPushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthenticationKeys,Environment,IsDedicated")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-CannedRbacRoleAssignments", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,InvocationMode,IsFfo,Organization,PreviousServicePlanSettings,ServicePlanSettings")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-CannedRbacRoleAssignmentsRAP", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,InvocationMode,Organization,PreviousServicePlanSettings,ServicePlanSettings")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-CannedRbacRoles", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,InvocationMode,IsFfo,Organization,ServicePlanSettings")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ContentConfigContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ContentFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-CrimsonManifest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DefinitionXml,MessageDll,ProviderName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-DataClassificationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-DefaultAcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,DomainName,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-DefaultSharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-DlpPolicyCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-EdgeCredentialService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ServicesDependedOn")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-EdgeTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ServicesDependedOnParameter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,DomainName,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DoNotRequireSsl,DomainController,InstallInTrustedRootCAIfSelfSigned,NetworkServiceAllowed,Services,Thumbprint,WebSiteName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ExchangeSchema", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "LdapFileName,MacroName,MacroValue")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ExsetdataAtom", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AtomName,DomainController,LegacyOrganization,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-FederationContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-FmsService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ServicesDependedOnParameter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-GlobalAddressLists", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-HostedOutboundSpamFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BccSuspiciousOutboundAdditionalRecipients,BccSuspiciousOutboundMail,DomainController,IgnoreDehydratedFlag,Name,NotifyOutboundSpam,NotifyOutboundSpamRecipients,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-IPAllowListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-IPAllowListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-IPBlockListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-IPBlockListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-Imap4Container", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-InternetMessageFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-MomConnectorService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Domain,Password,UserName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-OutOfBoxDlpPolicyCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-PerimeterConfigContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-Pop3Container", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ProtectedServiceHost", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ServicesDependedOnParameter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ProvisioningReconciliationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-RecipientFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-RecoveryActionArbiterService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Domain,Password,UserName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-RootOrganizationContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-SIPContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-SenderFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-SenderIdConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ServiceHost", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ServicesDependedOnParameter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ShareIISLogFileDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppcmdPath,DefaultAdminUserDomain")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-SmtpContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-StampGroupContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-SystemMessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-ThrottlingPolicies", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,InstallationMode")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-TransportLogSearchService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ServicesDependedOnParameter,StartAutomatically")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-UceContentFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-UserAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Domain,DomainController,LastName,LogonEnabled,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Install-sqldatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,DatabasePath,MirrorServerName,ServerName,TransactionLogPath")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Move-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,User")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ActiveSyncDeviceAutoblockThreshold", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdminEmailInsert,BehaviorType,BehaviorTypeIncidenceDuration,BehaviorTypeIncidenceLimit,DeviceBlockDuration,DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ActiveSyncOrganizationSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdminMailRecipients,AllowAccessForUnSupportedPlatform,DefaultAccessLevel,DomainController,Organization,OtaNotificationMailInsert,UserMailInsert")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ApprovalApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoGroup,DomainController,ELCRetentionPolicyTag,ModeratedRecipients,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ApprovalApplicationContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization,RetentionPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-CountryList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Countries,DomainController,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ExchangeAssistanceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,IgnoreDehydratedFlag,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-HttpContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ImapSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ExchangePath")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AccountDisabled,ActiveSyncMailboxPolicy,Alias,Arbitration,ArbitrationMailbox,Archive,ArchiveDatabase,ArchiveDomain,Discovery,DisplayName,DomainController,EnableRoomMailboxAccount,Equipment,EvictLiveId,FederatedIdentity,FirstName,Force,HoldForMigration,ImmutableId,ImportLiveId,Initials,IsDefault,IsExcludedFromServingHierarchy,IsPilotMailboxPlan,LastName,LinkedCredential,LinkedDomainController,LinkedMasterAccount,MailboxPlan,MailboxPlanIndex,MailboxPlanRelease,ManagedFolderMailboxPolicy,ManagedFolderMailboxPolicyAllowed,MicrosoftOnlineServicesID,ModeratedBy,ModerationEnabled,Name,NetID,Organization,OrganizationalUnit,OverrideRecipientQuotas,Password,PrimarySmtpAddress,PublicFolder,QueryBaseDNRestrictionEnabled,RemoteAccountPolicy,RemoteArchive,RemotePowerShellEnabled,RemovedMailbox,ResetPasswordOnNextLogon,RetentionPolicy,RoleAssignmentPolicy,Room,RoomMailboxPassword,SamAccountName,SendModerationNotifications,Shared,SharingPolicy,TargetAllMDBs,ThrottlingPolicy,UseExistingLiveId,UserPrincipalName,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-MicrosoftExchangeRecipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-PerfCounters", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DefinitionFileName,FileMappingSize")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-PopSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ExchangePath")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-PushNotificationsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ExternalUrl,InternalUrl,LiveIdAuthentication,OAuthAuthentication,Role,Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-RpcClientAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BlockedClientVersions,DomainController,EncryptionRequired,MaximumConnections,Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-SenderReputationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ServiceConnectionPoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApplicationUri,DomainController,DomainToApplicationUri,Domains,Name,TrustedHoster,TrustedHostnames")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-ServiceEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertificateSubjectName,DomainController,Name,Token,Url,UrlTemplate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-StampGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "New-UMCallRouterSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Preserve-AppSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigFileName,RoleInstallPath")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-ApprovalApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoGroup,DomainController,Identity,ModeratedRecipients")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-ApprovalApplicationContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-ArbitrationMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Arbitration,Database,Disconnect,DomainController,Force,Identity,IgnoreDefaultScope,IgnoreLegalHold,KeepWindowsLiveID,Permanent,PublicFolder,RemoveArbitrationMailboxWithOABsAllowed,RemoveLastArbitrationMailboxAllowed,StoreMailboxIdentity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-CountryList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-EnvironmentVariable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Name,Target")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-HostedOutboundSpamFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-LiveIdCredential", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CreateDTMFMap,DomainController,Identity,IgnoreDefaultScope,Manager")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Arbitration,Confirm,Database,Disconnect,DomainController,Force,Identity,IgnoreDefaultScope,IgnoreLegalHold,KeepWindowsLiveID,Permanent,PublicFolder,RemoveArbitrationMailboxWithOABsAllowed,RemoveLastArbitrationMailboxAllowed,StoreMailboxIdentity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-ManagementEndpointHook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainName,ExternalDirectoryOrganizationId,GlobalDirectoryService")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-MicrosoftExchangeRecipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-PerfCounters", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DefinitionFileName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-PushNotificationsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-RPCClientAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-RoutingGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-ServiceEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-StampGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-StampGroupServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigurationOnly,DomainController,Identity,Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Remove-XmlNode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ExchangeInstallPath,XmlFileName,XmlFileRelativePath,XmlNodeNameToRemove")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-ADQueryPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-AdminConfiguredVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Mode")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-AppConfigValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppSettingKey,Attribute,ConfigFileFullPath,Element,InsertAsFirst,ListValues,NewValue,OldValue,Remove")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-EnvironmentVariable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Name,Target,Value")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-ExchangeServerFfoRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,Remove,ServerRole")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-ExchangeServerOSPRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,Remove,ServerRole")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-ExchangeServerRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-InstallPathInAppConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigFileAbsolutePath,ConfigFileName,ConfigFileRelativePath,ExchangeInstallPath,ReplacementString")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-InstalledRoleInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfiguredVersion,RoleName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-LocalPermissions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Feature")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-MServSyncConfigFlags", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,MSOSyncEnabled,SMTPAddressCheckWithAcceptedDomain,SyncMBXAndDLToMserv")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-ManagementEndPointHook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AccountPartition,DomainName,ExternalDirectoryOrganizationId,GlobalDirectoryService,TenantContainerCN,TenantFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-ManagementSiteLink", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-OrganizationFlags", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowDeleteOfExternalIdentityUponRemove,DomainController,HideAdminAccessWarning,Identity,IsFederated,IsLicensingEnforced,IsPilotingOrganization,IsTenantAccessBlocked,IsUpgradeOperationInProgress,IsUpgradingOrganization,SMTPAddressCheckWithAcceptedDomain,SkipToUAndParentalControlCheck,SoftDeletedFeatureStatus,UseServicePlanAsCounterInstanceName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-RecipientInternalOption", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,IgnoreDefaultScope,InternalOnly")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-SetupOnlyOrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,Name,ObjectVersion,SCLJunkThreshold")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-SharedConfigDC", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-TeanantObjectVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Set-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity,IgnoreDefaultScope,UMMailboxPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-ActiveSyncVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveSyncServer,BadItemReportingEnabled,BasicAuthEnabled,ClientCertAuth,CompressionEnabled,DomainController,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalAuthenticationMethods,ExternalUrl,Identity,InstallIsapiFilter,InternalAuthenticationMethods,InternalUrl,MobileClientCertTemplateName,MobileClientCertificateAuthorityURL,MobileClientCertificateProvisioningEnabled,RemoteDocumentsActionForUnknownServers,RemoteDocumentsAllowedServers,RemoteDocumentsBlockedServers,RemoteDocumentsInternalDomainSuffixList,SendWatsonReport,WindowsAuthEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-AutodiscoverVirtualDirectoryVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-LegacyGwart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-OwaVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-PowerShellVirtualDirectoryVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-RmsSharedIdentity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "RemoveLink,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-ServiceExecutable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Executable,ServiceName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Update-WebServicesVirtualDirectoryVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Upgrade-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "Write-ExchangeSetupLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Error,Exception,Info,Message,Warning")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "add-ExchangeServerGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName,SkipEtsGroup")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "add-ManagedAvailabilityServerGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "add-firewallexception", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BinaryPath,FirewallRule,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "enable-SystemAttendantMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "get-ExchangeServerGroupSid", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "initialize-AdminGroupPermissions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdministrativeGroup,DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "initialize-DomainPermissions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllDomains,CreateMsoSyncRoot,CreateTenantRoot,Domain,DomainController,IsManagementForest")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "initialize-ExchangeMimeTypes", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "initialize-ExchangeUniversalGroups", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveDirectorySplitPermissions,DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "initialize-ServerPermissions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "initialize-SystemAttendantPermissions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "initialize-umdialplancontainerpermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-AddressRewriteConfigContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-ConfigurationContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CompanyTags,CreateSharedConfiguration,DirSyncStatus,DomainController,ExternalDirectoryOrganizationId,IsDirSyncRunning,Location,OfferId,Organization,OrganizationalUnit,ParentContainerDN,PersistedCapabilities,ProgramId,ServicePlan")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-ConfigurationUnitsContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-Container", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-DefaultConnectionFilterContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-DefaultMessageFilterContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-GlobalSettingsContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-MessageDeliveryContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-RuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-SyncDaemonArbitrationConfigContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-TransportConfigContainer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,Name,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "install-windowscomponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ADToolsNeeded,Args,IgnoreExitCode,ShortNameForRole,Timeout")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "remove-ExchangeServerGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "remove-ManagedAvailabilityServerGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController,ServerName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "remove-firewallexception", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BinaryPath,FirewallRule,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "set-CASMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveSyncDebugLogging,ActiveSyncEnabled,ActiveSyncMailboxPolicy,DisplayName,DomainController,ECPEnabled,EwsAllowEntourage,EwsAllowList,EwsAllowMacOutlook,EwsAllowOutlook,EwsApplicationAccessPolicy,EwsBlockList,EwsEnabled,Identity,IgnoreDefaultScope,ImapEnableExactRFC822Size,ImapEnabled,ImapForceICalForCalendarRetrievalOption,ImapMessagesRetrievalMimeFormat,ImapProtocolLoggingEnabled,ImapSuppressReadReceipt,ImapUseProtocolDefaults,MAPIBlockOutlookNonCachedMode,MAPIBlockOutlookRpcHttp,MAPIBlockOutlookVersions,MAPIEnabled,OWAEnabled,OWAforDevicesEnabled,OwaMailboxPolicy,PopEnableExactRFC822Size,PopEnabled,PopForceICalForCalendarRetrievalOption,PopMessagesRetrievalMimeFormat,PopProtocolLoggingEnabled,PopSuppressReadReceipt,PopUseProtocolDefaults,RemotePowerShellEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.Setup", "set-attachmentfilteringconfigdefaults", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-AlertCommunicationMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,CommunicationFriendlyId,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,OutBuffer,OutVariable,UpdatedBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-PlannedMaintenanceEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AffectedInfrastrIds,AffectedTenantsBytes,AffectedTenantsListFileName,CancelEvent,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndTime,ErrorAction,ErrorVariable,FriendlyId,ImpactId,IsIncremental,Message,MosAlertEmailSettings,OutBuffer,OutVariable,PublishToO365,PublishToOLA,StartTime,Status,UpdatedBy,Verbose,WarningAction,WarningVariable,WorkLoadId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SaveAndSendMosAlertEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Actions,AffectedRegionNames,AffectedTenants,CommunicationDate,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EmailAddressCC,EmailAddressTo,ErrorAction,ErrorVariable,FriendlyId,GroupsEngaged,IncidentSeverity,IncidentStatus,IsNewMossAlert,IsPublished,IssueDescription,LastPublished,LastSaved,MosAlertEmailSettings,MosAlertType,NoCommunication,OutBuffer,OutVariable,PrefixedTitle,ShdCadenceDate,TechnicalIssueDescription,Title,UpdatedBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AffectedFeatureIds,AffectedInfrastrIds,AffectedTenantsBytes,AffectedTenantsListFileName,BridgeNumber,BugId,CMEngagedTime,CommunicationCadenceHours,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndTime,ErrorAction,ErrorVariable,FriendlyID,ImpactID,IncidentSeverity,IncidentStatus,IsIncremental,LastUpdatedBy,LastUpdatedTime,MessageText,MosAlertEmailSettings,OutBuffer,OutVariable,PostmortemReportLink,PublishToO365,PublishToOLA,StartTime,Verbose,VersionID,WarningAction,WarningVariable,WorkLoadID,WorkLoadName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-IncidentMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECMaxBufferPoolSize,ECMaxBufferSize,ECMaxReceivedMessageSize,ECServiceUrl,ErrorAction,ErrorVariable,FriendlyID,Identity,IsClosureSummary,IsPrecanned,MessageEntryId,MessageText,MessageTime,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-MosAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Actions,AffectedRegionNames,AffectedTenantCount,CommunicationDate,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EmailAddressCC,EmailAddressTo,ErrorAction,ErrorVariable,GroupsEngaged,IncidentFriendlyId,IncidentSeverity,IsNewMossAlert,IsPublished,IsSent,IssueDescription,LastPublished,LastSaved,OutBuffer,OutVariable,PrefixedTitle,TechnicalIssueDescription,Title,UpdatedBy,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-MosAlertCommunicationDate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,FriendlyId,NextCommunicationData,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-PlannedMaintenanceEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AffectedInfrastrIds,AffectedTenantsBytes,AffectedTenantsListFileName,CancelEvent,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndTime,ErrorAction,ErrorVariable,FriendlyId,Identity,ImpactId,IsIncremental,Message,MosAlertEmailSettings,OutBuffer,OutVariable,PublishToO365,PublishToOLA,StartTime,Status,UpdatedBy,Verbose,VersionId,WarningAction,WarningVariable,WorkLoadId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-PostIncidentReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECMaxBufferPoolSize,ECMaxBufferSize,ECMaxReceivedMessageSize,ECServiceUrl,ErrorAction,ErrorVariable,IncidentId,LastUpdatedBy,OutBuffer,OutVariable,PIRExpiryDays,PirDocumentBytes,PirDocumentPath,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadDisplayName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AffectedFeatureIds,AffectedInfrastrIds,AffectedTenantsBytes,AffectedTenantsListFileName,BridgeNumber,BugId,CMEngagedTime,CommunicationCadenceHours,Debug,ECCertificateThumbprint,ECIdentityDNS,ECMaxBufferPoolSize,ECMaxBufferSize,ECMaxReceivedMessageSize,ECServiceUrl,EndTime,ErrorAction,ErrorVariable,FriendlyID,ImpactID,IncidentSeverity,IncidentStatus,IsIncremental,IsSave,LastUpdatedBy,LastUpdatedTime,MessageText,MosAlertEmailSettings,OutBuffer,OutVariable,PostmortemReportLink,PublishToO365,PublishToOLA,StartTime,Verbose,VersionID,WarningAction,WarningVariable,WorkLoadID,WorkLoadName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceIncidentClosure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AffectedInfrastructureUnitIds,Debug,ECCertificateThumbprint,ECIdentityDNS,ECMaxBufferPoolSize,ECMaxBufferSize,ECMaxReceivedMessageSize,ECServiceUrl,EndTime,ErrorAction,ErrorVariable,EventSummary,FriendlyId,LastUpdatedBy,MosAlertEmailSettings,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable,WorkloadId,WorkloadName")
				}, "c")
			};
		}

		private class DataCenter_Operations
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "AuxArchive,AuxPrimary,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Complete-OrganizationUpgrade", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-JournalArchiving", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailboxQuarantine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailboxQuarantine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowMigration,Confirm,Debug,Duration,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-OrganizationCustomization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ConfigCustomizationsPermissions"
					}, "Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,IsPartnerHosted,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-AutoDiscoverConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DeleteConfig,DomainController,ErrorAction,ErrorVariable,MultipleExchangeDeployments,OutBuffer,OutVariable,PreferredSourceFqdn,SourceForestCredential,TargetForestCredential,TargetForestDomainController,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter,UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSecondaryPartitions,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-BposPlacementConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-BposServiceInstanceInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CountryList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSyncEhfConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSyncMservConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigName,Database,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Force,GenericScopeName,GenericScopeValue,GenericScopes,Identity,Organization,OutBuffer,OutVariable,Process,Server,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,EnableMailboxCounting,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,SourceMailbox,Status,Suspend,TargetMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FolderMoveRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,UseOfflineGLS,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,ShowDomainNames,UseOfflineGLS,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSOFullSyncObjectRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServiceInstanceId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSOSyncData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cookie,Debug,ErrorAction,ErrorVariable,MergeIncrementalSyncCookie,MergePageToken,MergePageTokenContext,MergeTenantFullSyncPageToken,ObjectFullSyncPageToken,ObjectIds,Organization,OutBuffer,OutVariable,ServiceInstance,SyncOptions,TenantFullSyncPageToken,TenantFullSyncPageTokenContext,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSOTenantSyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "AuxMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditLog,UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRelocationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,GlobalDirectoryService,Location,OfferId,OutBuffer,OutVariable,ProgramId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MsoDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cookie,Debug,DeltaSync,ErrorAction,ErrorVariable,EstimateBacklog,ExternalDirectoryOrganizationId,MaxNumberOfBatches,OutBuffer,OutVariable,PageToken,PipelineVariable,SampleCountForStatistics,ServiceInstanceId,TenantSync,UseLastCommittedCookie,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MsoFullSyncOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MsoRawObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExternalObjectId,Identity,IncludeBackLinks,IncludeForwardLinks,LinksResultSize,OutBuffer,OutVariable,PopulateRawObject,ServiceInstanceId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,UsnForReconciliationSearch,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ProvisioningReconciliationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDaemonArbitrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,DomainController,Filter,Identity,Organization,UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Cookie,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,Pages,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Archive,Cookie,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,Pages,PublicFolder,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SoftDeletedMailbox,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,DomainController,Filter,Identity,Organization,ResultSize,SoftDeletedUser,UsnForReconciliationSearch")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbeEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,HasPermanentError,Identity,Lockdown,OutBuffer,OutVariable,RelocationLastError,RelocationStateRequested,RelocationStatusDetailsSource,SourceStateOnly,StaleLockdown,Suspended,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Name,Organization,RMSOnlineConfig,RMSOnlineKeys")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnabledForProvisioning,ErrorAction,ErrorVariable,LocalForest,Name,OutBuffer,OutVariable,Secondary,Trust,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Name"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ExternalDirectoryObjectId,OverrideRecipientQuotas")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Name,OverrideRecipientQuotas,RecipientFilter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EncryptedSystemProbeGuid", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,TimeStamp,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Description,DisabledUpgradeStages,DomainController,Enabled,ErrorAction,ErrorVariable,MaxMailboxes,Name,OutBuffer,OutVariable,Priority,SourceVersion,StartDate,TargetVersion,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,IsIncrementalOnly,IsLinkRelated,IsRetriable,IsTemporary,IsTenantWideDivergence,IsValidationDivergence,ObjectId,OutBuffer,OutVariable,ServiceInstanceId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Flight,Force,MaxVersion,MinVersion,Name,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-FolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AllowLargeItems,BadItemLimit,CompleteAfter,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Folders,IncrementalSyncInterval,InternalFlags,Name,OutBuffer,OutVariable,Priority,SourceMailbox,Suspend,SuspendComment,SuspendWhenReadyToComplete,TargetMailbox,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainFlags,DomainInUse,DomainName,DomainType,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MsaUserMemberName,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountForest,Confirm,Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,PrimarySite,ResourceForest,SmtpNextHopDomain,TenantContainerCN,TenantFlags,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MinorPartnerId,OutBuffer,OutVariable,PartnerId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MSOFullSyncObjectRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ObjectId,Options,OutBuffer,OutVariable,ServiceInstanceId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MSOTenantSyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Full,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ExternalDirectoryObjectId,ExternalEmailAddress,Name,OverrideRecipientQuotas")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ExternalDirectoryObjectId,Name,OverrideRecipientQuotas"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions"
					}, "AuxMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "OverrideRecipientQuotas"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions",
						"PilotingOrganization_Restrictions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions",
						"PilotingOrganization_Restrictions"
					}, "OriginalNetID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"PublicFoldersEnabled"
					}, "HoldForMigration,IsExcludedFromServingHierarchy,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RecipientManagementPermissions"
					}, "ExternalDirectoryObjectId,Name"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"UserLiveIdManagementPermissions"
					}, "UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CheckInitialProvisioningSetting,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,InternalFlags,Mailbox,Name,OutBuffer,OutVariable,Priority,RehomeRequest,SkipMoving,Suspend,SuspendComment,TargetContainer,TargetDatabase,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Administrator,AdministratorNetID,AuthenticationType,CompanyTags,Confirm,CreateSharedConfiguration,Debug,DirSyncServiceInstance,DirSyncStatus,DomainName,EnableFileLogging,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,HotmailMigration,IsDataCenter,IsDirSyncRunning,LiveIdInstanceType,Location,Name,OfferId,OutBoundOnly,OutBuffer,OutVariable,PersistedCapabilities,ProgramId,RMSOnlineConfig,RMSOnlineKeys,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcsScopeUriTemplate,AcsUriTemplate,AcsUserName,AcsUserPassword,ApnsHost,ApnsPort,AppSecret,AppSid,AsApns,AsAzureChallengeRequest,AsAzureDeviceRegistration,AsAzureHubCreation,AsAzureSend,AsGcm,AsPendingGet,AsProxy,AsWebApp,AsWns,AuthenticationUri,CertificateThumbprint,CertificateThumbprintFallback,Debug,DisplayName,DomainController,Enabled,ErrorAction,ErrorVariable,ExchangeMaximumVersion,ExchangeMinimumVersion,FeedbackHost,FeedbackPort,GcmServiceUri,Name,Organization,OutBuffer,OutVariable,RegistrationTemplate,SasKeyName,SasKeyValue,Sender,SenderAuthToken,Uri,UriTemplate,UseClearTextAuthenticationKeys,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Component,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Force,MaxVersion,MinVersion,Name,OutBuffer,OutVariable,Parameters,Reason,Section,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,Alias,ArbitrationMailbox,BlockedSendersHash,Confirm,CopyOwnerToMember,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,OverrideRecipientQuotas,PhoneticDisplayName,PrimarySmtpAddress,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SafeRecipientsHash,SafeSendersHash,SamAccountName,SendOofMessageToOriginatorEnabled,SeniorityIndex,SipAddresses,SmtpAndX500Addresses,Type,ValidationOrganization,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Name"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassNestedModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DirSyncAuthorityMetadata,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,IsDirSynced,Name,OnPremisesObjectId,Organization,OrganizationalUnit,OutBuffer,OutVariable,Type,ValidationOrganization,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,Alias,ArbitrationMailbox,AssistantName,BlockedSendersHash,C,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,ExternalEmailAddress,Name,OverrideRecipientQuotas,Phone,PhoneticDisplayName,PostalCode,PrimarySmtpAddress,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceType,SafeRecipientsHash,SafeSendersHash,SeniorityIndex,SipAddresses,SmtpAndX500Addresses,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,ValidationOrganization,Verbose,WarningAction,WarningVariable,WebPage,WhatIf"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,Alias,ArbitrationMailbox,ArchiveGuid,ArchiveName,AssistantName,AuditAdminOperations,AuditDelegateAdminOperations,AuditDelegateOperations,AuditOwnerOperations,BlockedSendersHash,BypassAudit,BypassLiveId,C,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,ElcMailboxFlags,EmailAddresses,EndDateForRetentionHold,ErrorAction,ErrorVariable,EvictLiveId,ExchangeGuid,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,InPlaceHoldsRaw,IsCalculatedTargetAddress,MicrosoftOnlineServicesID,Name,OverrideRecipientQuotas,SharePointUrl,SiteMailboxClosedTime,SiteMailboxOwners,SiteMailboxUsers,UseExistingLiveId,UserCertificate,UserSMimeCertificate,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AccountDisabled,ActiveSyncMailboxPolicy,Alias,AntispamBypassEnabled,Arbitration,ArbitrationMailbox,Archive,ArchiveDatabase,ArchiveDomain,ArchiveGuid,ArchiveName,AssistantName,BlockedSendersHash,BypassLiveId,C,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Database,Debug,DeliverToMailboxAndForward,Department,DirSyncId,Discovery,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,Equipment,ErrorAction,ErrorVariable,EvictLiveId,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,FederatedIdentity,FirstName,Force,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HoldForMigration,HomePhone,ImmutableId,ImportLiveId,InPlaceHoldsRaw,Initials,IsDirSynced,Languages,LastName,LinkedCredential,LinkedDomainController,LinkedMasterAccount,MailboxPlanName,ManagedFolderMailboxPolicy,ManagedFolderMailboxPolicyAllowed,Manager,MasterAccountSid,MicrosoftOnlineServicesID,Name,OverrideRecipientQuotas,ResourceWindowsLiveID,Room,UserCertificate,UserSMimeCertificate,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncServiceInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,ActiveInstanceSleepInterval,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IsEnabled,MaxVersion,MinVersion,Name,NewTenantMaxVersion,NewTenantMinVersion,OutBuffer,OutVariable,PassiveInstanceSleepInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoCompletionEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeTenantModeEnabled,OutBuffer,OutVariable,RelocationStateRequested,SafeLockdownSchedule,TargetAccountPartition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MSOFullSyncObjectRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServiceInstanceId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation,IgnoreLegalHold"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,PublicFolder,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RecipientManagementPermissions"
					}, "Disconnect"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Async,AuthoritativeOnly,Confirm,Debug,EnableFileLogging,ErrorAction,ErrorVariable,ForReconciliation,Force,Identity,IsDatacenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PushNotificationSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Mailbox,OutBuffer,OutVariable,RemoveStorage,SubscriptionStoreId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController"),
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Force,Identity,SkipRecipients")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-StoreMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Database,Debug,ErrorAction,ErrorVariable,Identity,MailboxState,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncServiceInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DomainController,Identity,KeepWindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RecipientManagementPermissions"
					}, "Permanent")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Complete,Confirm,Debug,DeprovisionedTarget,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Request-SyncDaemonLease", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceInstance,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-FolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Select-UserForReconciliation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-ComplianceMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,SerializedComplianceMessage,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-SystemProbeEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Attachment,Body,CC,Debug,ErrorAction,ErrorVariable,From,Html,OutBuffer,OutVariable,Port,ProbeGuid,SmtpPassword,SmtpServer,SmtpUser,Subject,TestContext,TimeStamp,To,UseSsl,UseXheader,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DisableGls,ForceADInTemplateScope")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "BlockLiveIdProvisioningCalls,DualProvisioningEnabled,EnableNego2Authentication,IsCoexistenceDomain")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnabledForProvisioning,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Trust,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-BposPlacementConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Configuration,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-BposServiceInstanceInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BackSyncUrl,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SupportsAuthorityTransfer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CountryList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Countries,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CurrentOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreSiteCheck,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MailboxRelease")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddScope,ClearHistory,ConfigName,ConfigPairs,ConfigValue,Confirm,CreateSettingsGroup,Debug,Disable,DisableGroup,DomainController,EnableGroup,ErrorAction,ErrorVariable,ExpirationDate,Force,GenericScopeName,GenericScopeValue,GroupName,GuidMatch,Identity,MaxVersion,MinVersion,NameMatch,OutBuffer,OutVariable,Priority,Reason,RemoveScope,RemoveSetting,RemoveSettingsGroup,Scope,ScopeFilter,ScopeId,SettingsGroup,UpdateScope,UpdateSetting,UpdateSettingsGroup,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CompleteUpgradeStatus,Confirm,Debug,Description,DisabledUpgradeStages,DomainController,Enabled,ErrorAction,ErrorVariable,MaxMailboxes,Name,OutBuffer,OutVariable,Priority,StartDate,StartUpgradeStatus,Status,UpgradeOrganizationMailboxesStatus,UpgradeUserMailboxesStatus,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,ErrorAction,ErrorVariable,Identity,IsIgnoredInHaltCondition,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Identity,MaxVersion,MinVersion,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,BadItemLimit,CompleteAfter,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IncrementalSyncInterval,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,Priority,SuspendWhenReadyToComplete,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainFlags,DomainInUse,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalLocatorServiceMsaUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MsaUserMemberName,MsaUserNetId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountForest,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,PrimarySite,ResourceForest,SmtpNextHopDomain,TenantContainerCN,TenantFlags,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "SKUAssigned")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MinorPartnerId,OutBuffer,OutVariable,PartnerId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Priority,RehomeRequest,SkipMoving,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MainStreamForwardSyncCookie", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RollbackTimeIntervalMinutes,ServiceInstanceId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddRelocationConstraint,RelocationConstraintExpirationInDays,RelocationConstraintType,RemoveRelocationConstraint"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AsynchronousOperationIds,CompanyTags,Confirm,Debug,DirSyncServiceInstance,DirSyncStatus,DomainController,ErrorAction,ErrorVariable,ExchangeUpgradeBucket,ExcludedFromBackSync,ExcludedFromForwardSyncEDU2BPOS,IOwnMigrationStatus,IOwnMigrationStatusReport,IOwnMigrationTenant,Identity,IsDirSyncRunning,IsHotmailMigration,IsLicensingEnforced,Location,MailboxRelease,MaxAddressBookPolicies,MaxOfflineAddressBooks,OrganizationStatus,OutBuffer,OutVariable,PersistedCapabilities,PilotMailboxRelease,PreviousMailboxRelease,UpgradeConstraints,UpgradeConstraintsDisabled,UpgradeDetails,UpgradeE14MbxCountForCurrentStage,UpgradeE14RequestCountForCurrentStage,UpgradeLastE14CountsUpdateTime,UpgradeMessage,UpgradeRequest,UpgradeStage,UpgradeStageTimeStamp,UpgradeStatus,UpgradeUnitsOverride,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,HybridConfigurationStatus,Identity,IntuneManagedStatus,OAuth2ClientProfileEnabled,OutBuffer,OutVariable,RmsoSubscriptionStatus,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DirSyncStatusAck,DomainController,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ProvisioningReconciliationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ReconciliationCookies,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcsScopeUriTemplate,AcsUriTemplate,AcsUserName,AcsUserPassword,ApnsHost,ApnsPort,AppSecret,AppSid,AuthenticationUri,BackOffTimeInSeconds,CertificateThumbprint,CertificateThumbprintFallback,Debug,DisplayName,DomainController,Enabled,ErrorAction,ErrorVariable,ExchangeMaximumVersion,ExchangeMinimumVersion,FeedbackHost,FeedbackPort,GcmServiceUri,Identity,IsDefaultPartitionName,MultifactorRegistrationEnabled,NumberOfChannels,Organization,OutBuffer,OutVariable,PartitionName,QueueSize,RegistrationEnabled,RegistrationTemplate,SasKeyName,SasKeyValue,Sender,SenderAuthToken,Uri,UriTemplate,UseClearTextAuthenticationKeys,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ContactCountQuota,Debug,DistributionListCountQuota,DomainController,ErrorAction,ErrorVariable,IgnoreDehydratedFlag,MailPublicFolderCountQuota,MailUserCountQuota,MailboxCountQuota,OutBuffer,OutVariable,PublicFolderMailboxCountQuota,TeamMailboxCountQuota,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Identity,MaxVersion,MinVersion,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncDaemonArbitrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveInstanceSleepInterval,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IsEnabled,IsHaltRecoveryDisabled,IsHalted,MaxVersion,MinVersion,Name,OutBuffer,OutVariable,PassiveInstanceSleepInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ElcMailboxFlags,InPlaceHoldsRaw,IsCalculatedTargetAddress,RawSiteMailboxOwners,RawSiteMailboxUsers,SharePointUrl,SiteMailboxClosedTime,SiteMailboxOwners,SiteMailboxUsers,UserCertificate,UserSMimeCertificate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InPlaceHoldsRaw,UserCertificate,UserSMimeCertificate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncServiceInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,ActiveInstanceSleepInterval,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,ForwardSyncConfigurationXML,IsEnabled,IsHaltRecoveryDisabled,IsHalted,IsMultiObjectCookieEnabled,IsNewCookieBlocked,IsUsedForTenantToServiceInstanceAssociation,MaxVersion,MinVersion,Name,NewTenantMaxVersion,NewTenantMinVersion,OutBuffer,OutVariable,PassiveInstanceSleepInterval,UseCentralConfig,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "SKUAssigned,SoftDeletedUser"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ProfileUpdatePermissions"
					}, "LastName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoCompletionEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeTenantModeEnabled,OutBuffer,OutVariable,RelocationStateRequested,ResetPermanentError,ResetStartSyncTime,ResetTransitionCounter,Resume,RollbackGls,SafeLockdownSchedule,Suspend,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "SKUAssigned")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-MsoFullSync", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-OrganizationPilot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-OrganizationUpgrade", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthoritativeOnly,ConfigOnly,Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-FolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassLiveId,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassLiveId,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassLiveId,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-ServicePlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigOnly,Confirm,Conservative,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IncludeUserUpdatePhase,IsDataCenter,OfferId,OutBuffer,OutVariable,ProgramId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-StoreMailboxState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Database,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SyncDistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Add-DelistIp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IPToDelist,ListName,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Add-OutboundIps", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,XmlFilePath")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Convert-CountryLookupData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataId,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SourceFileName,TargetFileName,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Delist-Ip", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuditComments,Debug,ErrorAction,ErrorVariable,IpAddress,ListName,NumberOfHoursToSafelist,OutBuffer,OutVariable,Permanent,PrimaryOnly,StreamingOpticsExePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Find-RuleData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PrintXml,RuleStatus,ScopeTypes,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Find-SpamDataBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataID,DataTypeID,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-DnsBlocklistInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BlocklistServer,Debug,ErrorAction,ErrorVariable,IpAddress,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-FpClusteringInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BucketRange,BucketSizeAbove,Machine,Port,Target,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-GenericReputationData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataPointType,Debug,EntityKey,EntityType,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-IpReputation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterShortName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PrintXml,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-IpStat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppName,Debug,ErrorAction,ErrorVariable,IpAddress,OutBuffer,OutVariable,StreamingOpticsExePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-KEStoreClusters", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AsTask,ClientAggregate,Debug,ErrorAction,ErrorVariable,Fingerprint,Keyword,OutBuffer,OutVariable,Regex,ServiceUrl,Target,TargetName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-KEStoreMails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AsTask,Coefficient,Debug,ErrorAction,ErrorVariable,FingerprintData,MailIds,MetadataOnly,OutBuffer,OutVariable,ServiceUrl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ListedIP", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IpAddress,OutBuffer,OutVariable,PrimaryOnly,StreamingOpticsExePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ListedIPWrapper", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IPAddress,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-OutboundIps", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterShortName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PrintXml,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-OutboundSingleSenderData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SenderAddress,TenantId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-OutboundSpamExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ExclusionStringToLookup,OutBuffer,OutVariable,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ReputationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SenderAddress,Session,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ReputationOverrideInternal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Account,Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Session,StartTime,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-RuleData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ErrorAction,ErrorVariable,GroupID,OutBuffer,OutVariable,PrintXml,RuleID,RulePackage,Session,Verbose,WarningAction,WarningVariable,XmlFile,XmlPackage")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-SpamDataBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataID,DataTypeID,MajorVersion,MinorVersion,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-SpamDbAppConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-StreamingOpticsTopology", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Config,Debug,DomainName,ErrorAction,ErrorVariable,MachineName,OutBuffer,OutVariable,PrintXml,ProcessName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-SyncWatermark", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-URIData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ErrorAction,ErrorVariable,GroupID,OutBuffer,OutVariable,Session,URIToLookup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-URIExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "OutBuffer,OutVariable,Session,URIToLookup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "New-OutboundSpamExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,ExclusionString,IsRegex,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,XmlFilePath")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "New-ReputationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SenderAddress,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "New-ReputationOverrideInternal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Account,Comment,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "New-RuleData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RulePackage,Verbose,WarningAction,WarningVariable,XmlFile,XmlPackage")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "New-URIExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "OutBuffer,OutVariable,Session,URIToAdd,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Remove-OutboundIps", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IpsToRemove,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Remove-OutboundSpamExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ExclusionStringToRemove,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Remove-ReputationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SenderAddress,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Remove-ReputationOverrideInternal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Account,Comment,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Remove-URIExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "OutBuffer,OutVariable,Session,UriToRemove,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Save-CountryLookupData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DalSessionType,DataId,Debug,ErrorAction,ErrorVariable,FileName,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Save-SpamDataBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,DataID,DataTypeID,MajorVersion,MinorVersion,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Search-KEStoreMetadata", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filters,OutBuffer,OutVariable,ServiceUrl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-DbebMode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CsvFile,CsvPackage,DbebMode,Debug,EnableLoggingToFile,ErrorAction,ErrorVariable,MaxTenantThrottleCount,OutBuffer,OutVariable,ThrottleBackOffDuration,ThrottleSleepInBetweenExecution,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-FingerprintRuleInactive", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FP,OutBuffer,OutVariable,RuleID,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-RuleInactive", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,RuleID,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-RuleInvalid", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,RuleID,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-SpamDbAppConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Force,Name,OutBuffer,OutVariable,Type,Value,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-SpamEngineExecutionPackage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PackageFile,SpamDataBlobDataID,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-SyncWatermark", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Set-URIData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,GroupID,OutBuffer,OutVariable,Score,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Test-DbAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseAccessType,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SessionType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Test-NetworkServicePermissionToFileShare", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Access,Debug,ErrorAction,ErrorVariable,FileSharePath,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Triage-KEStoreMails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,MailIds,OutBuffer,OutVariable,ServiceUrl,TriageCategory,TriageVerdict,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Add-O365DnsResourceRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthenticationCertificateSubject,DNSManagementServiceEndpointUri,Debug,DeleteExisting,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Priority,RecordType,RecordValue,SkipConfirmation,Ttl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Add-TenantPremigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlexandriaTenantId,Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RejectIfExists,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Cancel-Migration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Constraint,Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-AuditHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Database,Debug,EndTime,EntityInstanceId,EntityName,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-CacheItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CacheKey,CacheType,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Import-MigrateSkipped1415Requests", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilePath,OutBuffer,OutVariable,RejectIfExists,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-BackgroundJobDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BackgroundJobId,CommandLine,Debug,Description,ErrorAction,ErrorVariable,FileName,MaxFailoverCount,MaxLocalRetryCount,OutBuffer,OutVariable,Path,Role,RoleId,SchedulingStrategy,SingleInstancePerMachine,Timeout,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-BackgroundJobSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,BackgroundJobId,DataCenter,Debug,ErrorAction,ErrorVariable,JobDefinition,MaxFailoverCount,MaxLocalRetryCount,OutBuffer,OutVariable,Region,RoleId,ScheduleId,ScheduleInterval,ScheduleType,SchedulingStrategy,SingleInstancePerMachine,StartTime,TargetMachine,Timeout,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-DomainDeprovisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "SkipDirectoryVerification")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-DomainProvisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "SkipDirectoryVerification")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-EnginePackageRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EngineName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PlatformName,Rollback,RollbackVersion,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-FfoTenantConfigurationCacheEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-HostedFilteringDataCenter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-HostedFilteringRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RegionName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-Migrate1415HostedStandaloneCombined", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilePath,OutBuffer,OutVariable,RejectIfExists,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-Migrate1415WithoutSymphony", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilePath,OutBuffer,OutVariable,RejectIfExists,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-ProbeOrganizationInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FeatureTag,FilteringOnly,LoginPassword,OrganizationName,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-SyncCookie", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DefaultVersion,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProvisioningFlags,ServiceInstance,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-SyncPropertyRefresh", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceInstance,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-SyncUsers", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilePath,OutBuffer,OutVariable,Priority,RejectIfExists,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-TenantDeprovisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "SkipDirectoryVerification")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-TenantProvisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "SkipDirectoryVerification")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Remove-FfoTenantConfigurationCacheEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Remove-O365DnsResourceRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthenticationCertificateSubject,DNSManagementServiceEndpointUri,Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResourceRecordId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Remove-ProbeOrganizationInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FeatureTag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Remove-SyncPropertyRefresh", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceInstance,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Restart-Migration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlexandriaTenantId,Debug,ErrorAction,ErrorVariable,MigrationType,OrganizationalUnitRoot,OutBuffer,OutVariable,Reason,RequestId,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Rollback-Tenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EnforceCustomRollback,ErrorAction,ErrorVariable,Force,GetCurrentDomains,OrganizationalUnitRoot,OutBuffer,OutVariable,Reason,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Run-FfoDomainProvisioning", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Force")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Run-FfoTenantProvisioning", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Force")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-AsyncQueueOwnerProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,OwnerId,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-BackgroundJobDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommandLine")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-BloomFilterEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilePath,Keys,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-DatacenterSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FfoDataCenterPublicIPAddresses,FfoFrontDoorSmtpCertificates,OutBuffer,OutVariable,ServiceProviders,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-EntityData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ColumnName,Condition,Database,Debug,ErrorAction,ErrorVariable,NewValue,OutBuffer,OutVariable,PartitionId,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-SyncCookieFlags", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProvisioningFlags,ServiceInstance,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-WstServersStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ApplicationName,Debug,ErrorAction,ErrorVariable,IfUseGlobalSite,OutBuffer,OutVariable,Servers,Status,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class Database_Availability_Groups
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DatabaseAvailabilityGroupServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxServer,OutBuffer,OutVariable,SkipDagValidation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CapacitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Database,DatabaseAvailabilityGroup,Debug,ErrorAction,ErrorVariable,Forest,OutBuffer,OutVariable,Refresh,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DatabaseAvailabilityGroupConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DatabaseAvailabilityGroupNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DagConfiguration,DatabaseAvailabilityGroupIpAddresses,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ThirdPartyReplication,Verbose,WarningAction,WarningVariable,WhatIf,WitnessDirectory,WitnessServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DatabaseAvailabilityGroupConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CopiesPerDatabase,DatabasesPerServer,DatabasesPerVolume,Debug,ErrorAction,ErrorVariable,MinCopiesPerDatabaseForMonitoring,Name,OutBuffer,OutVariable,ServersPerDag,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DatabaseAvailabilityGroupNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DatabaseAvailabilityGroup,Debug,Description,DomainController,ErrorAction,ErrorVariable,IgnoreNetwork,Name,OutBuffer,OutVariable,ReplicationEnabled,Subnets,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DatabaseAvailabilityGroupConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DatabaseAvailabilityGroupNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DatabaseAvailabilityGroupServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxServer,OutBuffer,OutVariable,SkipDagValidation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowCrossSiteRpcClientAccess,AlternateWitnessDirectory,AlternateWitnessServer,AutoDagAllServersInstalled,AutoDagAutoReseedEnabled,AutoDagBitlockerEnabled,AutoDagDatabaseCopiesPerDatabase,AutoDagDatabaseCopiesPerVolume,AutoDagDatabasesRootFolderPath,AutoDagDiskReclaimerEnabled,AutoDagFIPSCompliant,AutoDagFailedVolumesRootFolderPath,AutoDagTotalNumberOfDatabases,AutoDagTotalNumberOfServers,AutoDagVolumesRootFolderPath,Confirm,DagConfiguration,DatabaseAvailabilityGroupIpAddresses,DatacenterActivationMode,Debug,DiscoverNetworks,DomainController,ErrorAction,ErrorVariable,ManualDagNetworkConfiguration,NetworkCompression,NetworkEncryption,OutBuffer,OutVariable,ReplayLagManagerEnabled,ReplicationPort,SkipDagValidation,Verbose,WarningAction,WarningVariable,WhatIf,WitnessDirectory,WitnessServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DatabaseAvailabilityGroupConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CopiesPerDatabase,DatabasesPerServer,DatabasesPerVolume,Debug,ErrorAction,ErrorVariable,MinCopiesPerDatabaseForMonitoring,OutBuffer,OutVariable,ServersPerDag,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DatabaseAvailabilityGroupNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,IgnoreNetwork,Name,OutBuffer,OutVariable,ReplicationEnabled,Subnets,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Database_Copies
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActivationPreference,ConfigurationOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxServer,OutBuffer,OutVariable,ReplayLagTime,SeedingPostponed,TruncationLagTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CapacitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Database,DatabaseAvailabilityGroup,Debug,ErrorAction,ErrorVariable,Forest,OutBuffer,OutVariable,Refresh,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabaseCopyStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Active,ConnectionStatus,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedErrorInfo,Identity,Local,OutBuffer,OutVariable,Server,UseServerCache,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServerRedundancy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DatabaseAvailabilityGroup,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerToContact,TimeoutInSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisableReplayLag,DisableReplayLagReason,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReplicationOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActivationPreference,ClearHostServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReplayLagTime,TruncationLagTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActivationOnly,Confirm,Debug,DomainController,EnableReplayLag,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ForceUpgrade,OnPremisesCredentials,OutBuffer,OutVariable,SuppressOAuthWarning,TenantCredentials,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "DeleteExistingFiles"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BeginSeed,CancelSeed,CatalogOnly,Confirm,DatabaseOnly,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,ManualResume,MaximumSeedsInParallel,Network,NetworkCompressionOverride,NetworkEncryptionOverride,OutBuffer,OutVariable,SafeDeleteExistingFiles,SourceServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Databases
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CorrelationId,Debug,Destination,EndTime,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Recipient,Sender,Server,StartTime,TestOnly,UnresponsivePrimaryServers,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailboxQuarantine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Dismount-Database", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailboxQuarantine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowMigration,Confirm,Debug,Duration,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CapacitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Database,DatabaseAvailabilityGroup,Debug,ErrorAction,ErrorVariable,Forest,OutBuffer,OutVariable,Refresh,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DumpsterStatistics,ErrorAction,ErrorVariable,Identity,IncludePreExchange2013,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabaseRedundancy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DatabaseAvailabilityGroup,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerToContact,TimeoutInSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRepairRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Database,Debug,Detailed,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,StoreMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServerRedundancy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DatabaseAvailabilityGroup,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerToContact,TimeoutInSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Mount-Database", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptDataLoss,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Move-ActiveMailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "MountDialOverride,SkipHealthChecks"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActivateOnServer,ActivatePreferredOnServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MoveComment,OutBuffer,OutVariable,Server,SkipActiveCopyChecks,SkipClientExperienceChecks,SkipLagChecks,SkipMaximumActiveDatabasesChecks,TerminateOnWarning,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Move-DatabasePath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationOnly,Confirm,Debug,DomainController,EdbFilePath,ErrorAction,ErrorVariable,Force,Identity,LogFolderPath,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoDagExcludeFromMonitoring,Confirm,Debug,DomainController,EdbFilePath,ErrorAction,ErrorVariable,IsExcludedFromInitialProvisioning,IsExcludedFromProvisioning,IsSuspendedFromProvisioning,LogFolderPath,MailboxProvisioningAttributes,Name,OfflineAddressBook,OutBuffer,OutVariable,PublicFolderDatabase,Recovery,Server,SkipDatabaseLogFolderCreation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxRepairRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,CorruptionType,Database,Debug,DetectOnly,DomainController,ErrorAction,ErrorVariable,Force,Mailbox,OutBuffer,OutVariable,StoreMailbox,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxRepairRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-StoreMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Database,Debug,ErrorAction,ErrorVariable,Identity,MailboxState,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MailboxLoadBalanceEnabled,MailboxLoadBalanceMaximumEdbFileSize,MailboxLoadBalanceOverloadedThreshold,MailboxLoadBalanceRelativeLoadCapacity,MailboxLoadBalanceUnderloadedThreshold")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowFileRestore,AutoDagExcludeFromMonitoring,BackgroundDatabaseMaintenance,CalendarLoggingQuota,CircularLoggingEnabled,Confirm,DataMoveReplicationConstraint,DatabaseGroup,Debug,DeletedItemRetention,DomainController,ErrorAction,ErrorVariable,EventHistoryRetentionPeriod,IndexEnabled,IsExcludedFromInitialProvisioning,IsExcludedFromProvisioning,IsSuspendedFromProvisioning,IssueWarningQuota,JournalRecipient,MailboxLoadBalanceEnabled,MailboxLoadBalanceMaximumEdbFileSize,MailboxLoadBalanceOverloadedThreshold,MailboxLoadBalanceRelativeLoadCapacity,MailboxLoadBalanceUnderloadedThreshold,MailboxProvisioningAttributes,MailboxRetention,MaintenanceSchedule,MountAtStartup,Name,OfflineAddressBook,OutBuffer,OutVariable,ProhibitSendQuota,ProhibitSendReceiveQuota,QuotaNotificationSchedule,RecoverableItemsQuota,RecoverableItemsWarningQuota,RetainDeletedItemsUntilBackup,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-DatabaseSchema", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,MajorVersion,MinorVersion,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Server")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-StoreMailboxState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Database,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Disaster_Recovery
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,SourceDatabase,Status,Suspend,TargetMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRestoreRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoDagExcludeFromMonitoring,Confirm,Debug,DomainController,EdbFilePath,ErrorAction,ErrorVariable,IsExcludedFromInitialProvisioning,IsExcludedFromProvisioning,IsSuspendedFromProvisioning,LogFolderPath,MailboxProvisioningAttributes,Name,OfflineAddressBook,OutBuffer,OutVariable,PublicFolderDatabase,Recovery,Server,SkipDatabaseLogFolderCreation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Restore-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveDirectorySite,AlternateWitnessDirectory,AlternateWitnessServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UsePrimaryWitnessServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Database"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ArchiveDatabase,Confirm,DomainController,IgnoreDefaultScope,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IsExcludedFromInitialProvisioning")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,Priority,RehomeRequest,SkipMerging,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveDirectorySite,ConfigurationOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxServer,OutBuffer,OutVariable,QuorumOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveDirectorySite,ConfigurationOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxServer,OutBuffer,OutVariable,QuorumOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Distribution_Groups
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Alias,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "CatchAllRecipient,Debug,DomainController,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Confirm,CopyOwnerToMember,DisplayName,ErrorAction,ErrorVariable,ManagedBy,MemberJoinRestriction,Members,Name,Notes,OutBuffer,OutVariable,PrimarySmtpAddress,SamAccountName,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox,Debug,DomainController,IgnoreNamingPolicy,MemberDepartRestriction,Organization,OrganizationalUnit,RoomList,Verbose"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassNestedModerationEnabled"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Alias,ArbitrationMailbox,ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,IncludedRecipients,Name,Organization,OrganizationalUnit,OutBuffer,OutVariable,PrimarySmtpAddress,RecipientContainer,RecipientFilter,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ForReconciliation,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,Confirm,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DisplayName,DomainController,EmailAddressPolicyEnabled,EmailAddresses,ErrorAction,ErrorVariable,ExpansionServer,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,IgnoreDefaultScope,IgnoreNamingPolicy,ManagedBy,MaxReceiveSize,MaxSendSize,MemberDepartRestriction,MemberJoinRestriction,Name,OutBuffer,OutVariable,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SamAccountName,SendOofMessageToOriginatorEnabled,SimpleDisplayName,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ForceUpgrade,GenerateExternalDirectoryObjectId"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "BypassNestedModerationEnabled"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "BypassModerationFromSendersOrMembers")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DisplayName,DomainController,EmailAddressPolicyEnabled,EmailAddresses,ExpansionServer,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ForceUpgrade,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IgnoreDefaultScope,IncludedRecipients,ManagedBy,MaxReceiveSize,MaxSendSize,Name,Notes,PhoneticDisplayName,RecipientContainer,RecipientFilter,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,SendOofMessageToOriginatorEnabled,SimpleDisplayName,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"ResourceMailboxRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DisplayName,Identity,IsHierarchicalGroup,ManagedBy,Name,Notes,OutBuffer,OutVariable,PhoneticDisplayName,SeniorityIndex,SimpleDisplayName,Universal,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDefaultScope,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DistributionGroupDefaultOU,DistributionGroupNameBlockedWordsList,DistributionGroupNamingPolicy,HierarchicalAddressBookRoot")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Members,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class E_Mail_Address_Policies
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeMailboxSettingOnlyPolicy,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,Debug,DisabledEmailAddressTemplates,DomainController,EnabledEmailAddressTemplates,EnabledPrimarySMTPAddressTemplate,ErrorAction,ErrorVariable,IncludedRecipients,Name,Organization,OutBuffer,OutVariable,Priority,RecipientContainer,RecipientFilter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,Debug,DisabledEmailAddressTemplates,DomainController,EnabledEmailAddressTemplates,EnabledPrimarySMTPAddressTemplate,ErrorAction,ErrorVariable,ForceUpgrade,IncludedRecipients,Name,OutBuffer,OutVariable,Priority,RecipientContainer,RecipientFilter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixMissingAlias,Identity,OutBuffer,OutVariable,UpdateSecondaryAddressesOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Edge_Subscriptions
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADSite", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EdgeSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountExpiryDuration,Confirm,CreateInboundSendConnector,CreateInternetSendConnector,Debug,DomainController,ErrorAction,ErrorVariable,FileData,FileName,Force,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EdgeSyncServiceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationSyncInterval,Confirm,CookieValidDuration,Debug,DomainController,ErrorAction,ErrorVariable,FailoverDCInterval,LockDuration,LockRenewalDuration,LogEnabled,LogLevel,LogMaxAge,LogMaxDirectorySize,LogMaxFileSize,LogPath,OptionDuration,OutBuffer,OutVariable,RecipientSyncInterval,Site,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-EdgeSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-EdgeSyncServiceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationSyncInterval,Confirm,CookieValidDuration,Debug,DomainController,ErrorAction,ErrorVariable,FailoverDCInterval,LockDuration,LockRenewalDuration,LogEnabled,LogLevel,LogMaxAge,LogMaxDirectorySize,LogMaxFileSize,LogPath,Name,OptionDuration,OutBuffer,OutVariable,RecipientSyncInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-EdgeSynchronization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ForceFullSync,ForceUpdateCookie,OutBuffer,OutVariable,Server,TargetServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class EduPartnerScriptRole
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("", "Invoke-OrgOwnMigration.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Organization,WhatIf,WindowsLiveId")
				}, "s")
			};
		}

		private class Exchange_Connectors
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DCPerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConnectorId,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeliveryAgentConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeliveryAgentConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddressSpaces,Comment,Confirm,Debug,DeliveryProtocol,DomainController,Enabled,ErrorAction,ErrorVariable,IsScopedConnector,MaxConcurrentConnections,MaxMessageSize,MaxMessagesPerConnection,Name,OutBuffer,OutVariable,SourceTransportServers,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EdgeSyncEhfConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdminSyncEnabled,AuthenticationCredential,BackupLeaseLocation,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PrimaryLeaseLocation,ProvisioningURL,ResellerId,Site,Verbose,Version,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EdgeSyncMservConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BackupLeaseLocation,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,LocalCertificate,Name,OutBuffer,OutVariable,PrimaryLeaseLocation,ProvisionUrl,RemoteCertificate,SettingUrl,Site,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeliveryAgentConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-EdgeSyncEhfConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-EdgeSyncMservConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DCPerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ConnectorId,DNSServerIPAddresses,Debug,DomainController,ErrorAction,ErrorVariable,FQDNTemplate,Force,OutBuffer,OutVariable,OutboundIPAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeliveryAgentConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddressSpaces,Comment,Confirm,Debug,DeliveryProtocol,DomainController,Enabled,ErrorAction,ErrorVariable,Force,IsScopedConnector,MaxConcurrentConnections,MaxMessageSize,MaxMessagesPerConnection,Name,OutBuffer,OutVariable,SourceTransportServers,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-EdgeSyncEhfConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdminSyncEnabled,AuthenticationCredential,BackupLeaseLocation,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PrimaryLeaseLocation,ProvisioningURL,ResellerId,Verbose,Version,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-EdgeSyncMservConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BackupLeaseLocation,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,LocalCertificate,Name,OutBuffer,OutVariable,PrimaryLeaseLocation,ProvisionUrl,RemoteCertificate,SettingUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Exchange_Server_Certificates
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DoNotRequireSsl,DomainController,ErrorAction,ErrorVariable,Force,Identity,NetworkServiceAllowed,OutBuffer,OutVariable,Server,Services,Thumbprint,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BinaryEncoded,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileName,Identity,OutBuffer,OutVariable,Password,Server,Thumbprint,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,DomainName,ErrorAction,ErrorVariable,Identity,Instance,OutBuffer,OutVariable,Server,Thumbprint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,FileName,FriendlyName,Instance,OutBuffer,OutVariable,Password,PrivateKeyExportable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BinaryEncoded,Confirm,Debug,DomainController,DomainName,ErrorAction,ErrorVariable,Force,FriendlyName,GenerateRequest,IncludeAcceptedDomains,IncludeAutoDiscover,IncludeServerFQDN,IncludeServerNetBIOSName,Instance,KeySize,OutBuffer,OutVariable,PrivateKeyExportable,RequestFile,Server,Services,SubjectKeyIdentifier,SubjectName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Thumbprint,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Exchange_Servers
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DatabaseAvailabilityGroupServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxServer,OutBuffer,OutVariable,SkipDagValidation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ServerMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyVersion,Confirm,Debug,Duration,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,PropertyValue,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Immediate,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultAuthenticationMethod,DomainController,ErrorAction,ErrorVariable,ExternalClientAuthenticationMethod,ExternalClientsRequireSsl,ExternalHostname,IISAuthenticationMethods,InternalClientAuthenticationMethod,InternalClientsRequireSsl,InternalHostname,OutBuffer,OutVariable,SSLOffloading,Server,Verbose,WarningAction,WarningVariable,WhatIf,XropUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeAlternateServiceAccountCredentialStatus,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ContentFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EventLogLevel", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FrontendTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IntraOrgConnectorProtocolLoggingLevel,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServerRedundancy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DatabaseAvailabilityGroup,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerToContact,TimeoutInSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilteringServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MonitoringItemHelp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MonitoringItemIdentity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-NetworkConnectionInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerComponentState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Component,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbeEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportProcessingQuotaConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportProcessingQuotaDigest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Invoke-MonitoringProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Account,Debug,Endpoint,ErrorAction,ErrorVariable,Identity,ItemTargetExtension,OutBuffer,OutVariable,Password,PropertyOverride,SecondaryAccount,SecondaryEndpoint,SecondaryPassword,Server,TimeOutSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EncryptedSystemProbeGuid", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,TimeStamp,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MapiVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IISAuthenticationMethods")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ContentFilterPhrase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Phrase,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DatabaseAvailabilityGroupServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxServer,OutBuffer,OutVariable,SkipDagValidation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ServerMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TransportProcessingQuotaOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-MapiSubmitSystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternetMessageIdOfTheMessageToDeleteFromOutbox,RecipientEmailAddress,SenderEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-SystemProbeEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Attachment,Body,CC,Debug,ErrorAction,ErrorVariable,From,Html,OutBuffer,OutVariable,Port,ProbeGuid,SmtpPassword,SmtpServer,SmtpUser,Subject,TestContext,TimeStamp,To,UseSsl,UseXheader,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ClientAccessServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AlternateServiceAccountCredential,Array,AutoDiscoverServiceInternalUri,AutoDiscoverSiteScope,CleanUpInvalidAlternateServiceAccountCredentials,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IsOutOfService,OutBuffer,OutVariable,RemoveAlternateServiceAccountCredentials,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ContentFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassedRecipients,BypassedSenderDomains,BypassedSenders,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,OutlookEmailPostmarkValidationEnabled,QuarantineMailbox,RejectionResponse,SCLDeleteEnabled,SCLDeleteThreshold,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-EventLogLevel", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Level,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CustomerFeedbackEnabled,Debug,DomainController,ErrorAction,ErrorReportingEnabled,ErrorVariable,InternetWebProxy,MailboxProvisioningAttributes,MonitoringGroup,OutBuffer,OutVariable,ProductKey,StaticConfigDomainController,StaticDomainControllers,StaticExcludedDomainControllers,StaticGlobalCatalogs,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FrontendTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AgentLogEnabled,AgentLogMaxAge,AgentLogMaxDirectorySize,AgentLogMaxFileSize,AgentLogPath,AntispamAgentsEnabled,AttributionLogEnabled,AttributionLogMaxAge,AttributionLogMaxDirectorySize,AttributionLogMaxFileSize,AttributionLogPath,Confirm,ConnectivityLogEnabled,ConnectivityLogMaxAge,ConnectivityLogMaxDirectorySize,ConnectivityLogMaxFileSize,ConnectivityLogPath,Debug,DnsLogEnabled,DnsLogMaxAge,DnsLogMaxDirectorySize,DnsLogMaxFileSize,DnsLogPath,DomainController,ErrorAction,ErrorVariable,ExternalDNSAdapterEnabled,ExternalDNSAdapterGuid,ExternalDNSProtocolOption,ExternalDNSServers,ExternalIPAddress,InternalDNSAdapterEnabled,InternalDNSAdapterGuid,InternalDNSProtocolOption,InternalDNSServers,IntraOrgConnectorProtocolLoggingLevel,MaxConnectionRatePerMinute,OutBuffer,OutVariable,ReceiveProtocolLogMaxAge,ReceiveProtocolLogMaxDirectorySize,ReceiveProtocolLogMaxFileSize,ReceiveProtocolLogPath,ResourceLogEnabled,ResourceLogMaxAge,ResourceLogMaxDirectorySize,ResourceLogMaxFileSize,ResourceLogPath,SendProtocolLogMaxAge,SendProtocolLogMaxDirectorySize,SendProtocolLogMaxFileSize,SendProtocolLogPath,ServerState,TransientFailureRetryCount,TransientFailureRetryInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoDatabaseMountDial")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxDatabaseCopy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DatabaseCopyAutoActivationPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoDagServerConfigured,AutoDatabaseMountDial,CalendarRepairIntervalEndWindow,CalendarRepairLogDirectorySizeLimit,CalendarRepairLogEnabled,CalendarRepairLogFileAgeLimit,CalendarRepairLogPath,CalendarRepairLogSubjectLoggingEnabled,CalendarRepairMissingItemFixDisabled,CalendarRepairMode,CalendarRepairWorkCycle,CalendarRepairWorkCycleCheckpoint,Confirm,DarTaskStoreTimeBasedAssistantWorkCycle,DarTaskStoreTimeBasedAssistantWorkCycleCheckpoint,DatabaseCopyActivationDisabledAndMoveNow,DatabaseCopyAutoActivationPolicy,Debug,DirectoryProcessorWorkCycle,DirectoryProcessorWorkCycleCheckpoint,DomainController,ErrorAction,ErrorVariable,FaultZone,FolderLogForManagedFoldersEnabled,ForceGroupMetricsGeneration,GroupMailboxWorkCycle,GroupMailboxWorkCycleCheckpoint,InferenceDataCollectionWorkCycle,InferenceDataCollectionWorkCycleCheckpoint,InferenceTrainingWorkCycle,InferenceTrainingWorkCycleCheckpoint,IsExcludedFromProvisioning,JournalingLogForManagedFoldersEnabled,JunkEmailOptionsCommitterWorkCycle,Locale,LogDirectorySizeLimitForManagedFolders,LogFileAgeLimitForManagedFolders,LogFileSizeLimitForManagedFolders,LogPathForManagedFolders,MAPIEncryptionRequired,MailboxAssociationReplicationWorkCycle,MailboxAssociationReplicationWorkCycleCheckpoint,MailboxProcessorWorkCycle,MailboxProcessorWorkCycleCheckpoint,ManagedFolderAssistantSchedule,ManagedFolderWorkCycle,ManagedFolderWorkCycleCheckpoint,MaxTransportSyncDispatchers,MaximumActiveDatabases,MaximumPreferredActiveDatabases,MigrationLogFilePath,MigrationLogLoggingLevel,MigrationLogMaxAge,MigrationLogMaxDirectorySize,MigrationLogMaxFileSize,OABGeneratorWorkCycle,OABGeneratorWorkCycleCheckpoint,OutBuffer,OutVariable,PeopleCentricTriageWorkCycle,PeopleCentricTriageWorkCycleCheckpoint,PeopleRelevanceWorkCycle,PeopleRelevanceWorkCycleCheckpoint,ProbeTimeBasedAssistantWorkCycle,ProbeTimeBasedAssistantWorkCycleCheckpoint,PublicFolderWorkCycle,PublicFolderWorkCycleCheckpoint,RetentionLogForManagedFoldersEnabled,SearchIndexRepairTimeBasedAssistantWorkCycle,SearchIndexRepairTimeBasedAssistantWorkCycleCheckpoint,SharePointSignalStoreWorkCycle,SharePointSignalStoreWorkCycleCheckpoint,SharingPolicySchedule,SharingPolicyWorkCycle,SharingPolicyWorkCycleCheckpoint,SharingSyncWorkCycle,SharingSyncWorkCycleCheckpoint,SiteMailboxWorkCycle,SiteMailboxWorkCycleCheckpoint,StoreDsMaintenanceWorkCycle,StoreDsMaintenanceWorkCycleCheckpoint,StoreIntegrityCheckWorkCycle,StoreIntegrityCheckWorkCycleCheckpoint,StoreMaintenanceWorkCycle,StoreMaintenanceWorkCycleCheckpoint,StoreScheduledIntegrityCheckWorkCycle,StoreScheduledIntegrityCheckWorkCycleCheckpoint,StoreUrgentMaintenanceWorkCycle,StoreUrgentMaintenanceWorkCycleCheckpoint,SubjectLogForManagedFoldersEnabled,SubmissionServerOverrideList,TopNWorkCycle,TopNWorkCycleCheckpoint,TransportSyncDispatchEnabled,TransportSyncLogEnabled,TransportSyncLogFilePath,TransportSyncLogLoggingLevel,TransportSyncLogMaxAge,TransportSyncLogMaxDirectorySize,TransportSyncLogMaxFileSize,TransportSyncMailboxHealthLogEnabled,TransportSyncMailboxHealthLogFilePath,TransportSyncMailboxHealthLogMaxAge,TransportSyncMailboxHealthLogMaxDirectorySize,TransportSyncMailboxHealthLogMaxFileSize,UMReportingWorkCycle,UMReportingWorkCycleCheckpoint,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ConnectivityLogEnabled,ConnectivityLogMaxAge,ConnectivityLogMaxDirectorySize,ConnectivityLogMaxFileSize,ConnectivityLogPath,ContentConversionTracingEnabled,Debug,DomainController,ErrorAction,ErrorVariable,MailboxDeliveryAgentLogEnabled,MailboxDeliveryAgentLogMaxAge,MailboxDeliveryAgentLogMaxDirectorySize,MailboxDeliveryAgentLogMaxFileSize,MailboxDeliveryAgentLogPath,MailboxDeliveryConnectorProtocolLoggingLevel,MailboxDeliveryConnectorSmtpUtf8Enabled,MailboxDeliveryThrottlingLogEnabled,MailboxDeliveryThrottlingLogMaxAge,MailboxDeliveryThrottlingLogMaxDirectorySize,MailboxDeliveryThrottlingLogMaxFileSize,MailboxDeliveryThrottlingLogPath,MailboxSubmissionAgentLogEnabled,MailboxSubmissionAgentLogMaxAge,MailboxSubmissionAgentLogMaxDirectorySize,MailboxSubmissionAgentLogMaxFileSize,MailboxSubmissionAgentLogPath,MaxConcurrentMailboxDeliveries,MaxConcurrentMailboxSubmissions,OutBuffer,OutVariable,PipelineTracingEnabled,PipelineTracingPath,PipelineTracingSenderAddress,ReceiveProtocolLogMaxAge,ReceiveProtocolLogMaxDirectorySize,ReceiveProtocolLogMaxFileSize,ReceiveProtocolLogPath,SendProtocolLogMaxAge,SendProtocolLogMaxDirectorySize,SendProtocolLogMaxFileSize,SendProtocolLogPath,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MalwareFilteringServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassFiltering,Confirm,Debug,DeferAttempts,DeferWaitTime,DomainController,ErrorAction,ErrorVariable,ForceRescan,MinimumSuccessfulEngineScans,OutBuffer,OutVariable,PrimaryUpdatePath,ScanErrorAction,ScanTimeout,SecondaryUpdatePath,UpdateFrequency,UpdateTimeout,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MapiVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IISAuthenticationMethods")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultAuthenticationMethod,DomainController,ErrorAction,ErrorVariable,ExternalClientAuthenticationMethod,ExternalClientsRequireSsl,ExternalHostname,IISAuthenticationMethods,InternalClientAuthenticationMethod,InternalClientsRequireSsl,InternalHostname,Name,OutBuffer,OutVariable,SSLOffloading,Verbose,WarningAction,WarningVariable,WhatIf,XropUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ServerComponentState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Component,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LocalOnly,OutBuffer,OutVariable,RemoteOnly,Requester,State,TimeoutInSeconds,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ServerMonitor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Repairing,Server,TargetResource,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportProcessingQuotaConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AmWeight,AsWeight,CalculationEnabled,CalculationFrequency,CostThreshold,Debug,ErrorAction,ErrorVariable,EtrWeight,OutBuffer,OutVariable,RelativeCostThreshold,ThrottleFactor,ThrottlingEnabled,TimeWindow,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportProcessingQuotaOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Throttle,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveUserStatisticsLogMaxAge,ActiveUserStatisticsLogMaxDirectorySize,ActiveUserStatisticsLogMaxFileSize,ActiveUserStatisticsLogPath,AgentLogEnabled,AgentLogMaxAge,AgentLogMaxDirectorySize,AgentLogMaxFileSize,AgentLogPath,AntispamAgentsEnabled,Confirm,ConnectivityLogEnabled,ConnectivityLogMaxAge,ConnectivityLogMaxDirectorySize,ConnectivityLogMaxFileSize,ConnectivityLogPath,ContentConversionTracingEnabled,Debug,DelayNotificationTimeout,DeltaSyncClientCertificateThumbprint,DnsLogEnabled,DnsLogMaxAge,DnsLogMaxDirectorySize,DnsLogMaxFileSize,DnsLogPath,DomainController,ErrorAction,ErrorVariable,ExternalDNSAdapterEnabled,ExternalDNSAdapterGuid,ExternalDNSProtocolOption,ExternalDNSServers,ExternalIPAddress,FlowControlLogEnabled,FlowControlLogMaxAge,FlowControlLogMaxDirectorySize,FlowControlLogMaxFileSize,FlowControlLogPath,HttpProtocolLogEnabled,HttpProtocolLogFilePath,HttpProtocolLogLoggingLevel,HttpProtocolLogMaxAge,HttpProtocolLogMaxDirectorySize,HttpProtocolLogMaxFileSize,HttpTransportSyncProxyServer,InternalDNSAdapterEnabled,InternalDNSAdapterGuid,InternalDNSProtocolOption,InternalDNSServers,IntraOrgConnectorProtocolLoggingLevel,IntraOrgConnectorSmtpMaxMessagesPerConnection,IrmLogEnabled,IrmLogMaxAge,IrmLogMaxDirectorySize,IrmLogMaxFileSize,IrmLogPath,MaxActiveTransportSyncJobsPerProcessor,MaxConcurrentMailboxDeliveries,MaxConcurrentMailboxSubmissions,MaxConnectionRatePerMinute,MaxNumberOfTransportSyncAttempts,MaxOutboundConnections,MaxPerDomainOutboundConnections,MessageExpirationTimeout,MessageRetryInterval,MessageTrackingLogEnabled,MessageTrackingLogMaxAge,MessageTrackingLogMaxDirectorySize,MessageTrackingLogMaxFileSize,MessageTrackingLogPath,MessageTrackingLogSubjectLoggingEnabled,OutBuffer,OutVariable,OutboundConnectionFailureRetryInterval,PickupDirectoryMaxHeaderSize,PickupDirectoryMaxMessagesPerMinute,PickupDirectoryMaxRecipientsPerMessage,PickupDirectoryPath,PipelineTracingEnabled,PipelineTracingPath,PipelineTracingSenderAddress,PoisonMessageDetectionEnabled,PoisonThreshold,ProcessingSchedulerLogEnabled,ProcessingSchedulerLogMaxAge,ProcessingSchedulerLogMaxDirectorySize,ProcessingSchedulerLogMaxFileSize,ProcessingSchedulerLogPath,QueueLogMaxAge,QueueLogMaxDirectorySize,QueueLogMaxFileSize,QueueLogPath,QueueMaxIdleTime,ReceiveProtocolLogMaxAge,ReceiveProtocolLogMaxDirectorySize,ReceiveProtocolLogMaxFileSize,ReceiveProtocolLogPath,RecipientValidationCacheEnabled,ReplayDirectoryPath,ResourceLogEnabled,ResourceLogMaxAge,ResourceLogMaxDirectorySize,ResourceLogMaxFileSize,ResourceLogPath,RootDropDirectoryPath,RoutingTableLogMaxAge,RoutingTableLogMaxDirectorySize,RoutingTableLogPath,SendProtocolLogMaxAge,SendProtocolLogMaxDirectorySize,SendProtocolLogMaxFileSize,SendProtocolLogPath,ServerStatisticsLogMaxAge,ServerStatisticsLogMaxDirectorySize,ServerStatisticsLogMaxFileSize,ServerStatisticsLogPath,TransientFailureRetryCount,TransientFailureRetryInterval,TransportMaintenanceLogEnabled,TransportMaintenanceLogMaxAge,TransportMaintenanceLogMaxDirectorySize,TransportMaintenanceLogMaxFileSize,TransportMaintenanceLogPath,TransportSyncAccountsPoisonAccountThreshold,TransportSyncAccountsPoisonDetectionEnabled,TransportSyncAccountsPoisonItemThreshold,TransportSyncAccountsSuccessivePoisonItemThreshold,TransportSyncEnabled,TransportSyncExchangeEnabled,TransportSyncFacebookEnabled,TransportSyncHubHealthLogEnabled,TransportSyncHubHealthLogFilePath,TransportSyncHubHealthLogMaxAge,TransportSyncHubHealthLogMaxDirectorySize,TransportSyncHubHealthLogMaxFileSize,TransportSyncImapEnabled,TransportSyncLinkedInEnabled,TransportSyncLogEnabled,TransportSyncLogFilePath,TransportSyncLogLoggingLevel,TransportSyncLogMaxAge,TransportSyncLogMaxDirectorySize,TransportSyncLogMaxFileSize,TransportSyncMaxDownloadItemsPerConnection,TransportSyncMaxDownloadSizePerConnection,TransportSyncMaxDownloadSizePerItem,TransportSyncPopEnabled,TransportSyncRemoteConnectionTimeout,UseDowngradedExchangeServerAuth,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveHotmailTransportSyncEnabled,WlmLogMaxAge,WlmLogMaxDirectorySize,WlmLogMaxFileSize,WlmLogPath")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveUserStatisticsLogMaxAge,ActiveUserStatisticsLogMaxDirectorySize,ActiveUserStatisticsLogMaxFileSize,ActiveUserStatisticsLogPath,AgentLogEnabled,AgentLogMaxAge,AgentLogMaxDirectorySize,AgentLogMaxFileSize,AgentLogPath,AntispamAgentsEnabled,Confirm,ConnectivityLogEnabled,ConnectivityLogMaxAge,ConnectivityLogMaxDirectorySize,ConnectivityLogMaxFileSize,ConnectivityLogPath,ContentConversionTracingEnabled,Debug,DelayNotificationTimeout,DeltaSyncClientCertificateThumbprint,DnsLogEnabled,DnsLogMaxAge,DnsLogMaxDirectorySize,DnsLogMaxFileSize,DnsLogPath,DomainController,ErrorAction,ErrorVariable,ExternalDNSAdapterEnabled,ExternalDNSAdapterGuid,ExternalDNSProtocolOption,ExternalDNSServers,ExternalIPAddress,FlowControlLogEnabled,FlowControlLogMaxAge,FlowControlLogMaxDirectorySize,FlowControlLogMaxFileSize,FlowControlLogPath,HttpProtocolLogEnabled,HttpProtocolLogFilePath,HttpProtocolLogLoggingLevel,HttpProtocolLogMaxAge,HttpProtocolLogMaxDirectorySize,HttpProtocolLogMaxFileSize,HttpTransportSyncProxyServer,InternalDNSAdapterEnabled,InternalDNSAdapterGuid,InternalDNSProtocolOption,InternalDNSServers,IntraOrgConnectorProtocolLoggingLevel,IntraOrgConnectorSmtpMaxMessagesPerConnection,IrmLogEnabled,IrmLogMaxAge,IrmLogMaxDirectorySize,IrmLogMaxFileSize,IrmLogPath,JournalLogEnabled,JournalLogMaxAge,JournalLogMaxDirectorySize,JournalLogMaxFileSize,JournalLogPath,MaxActiveTransportSyncJobsPerProcessor,MaxConcurrentMailboxDeliveries,MaxConcurrentMailboxSubmissions,MaxConnectionRatePerMinute,MaxNumberOfTransportSyncAttempts,MaxOutboundConnections,MaxPerDomainOutboundConnections,MessageExpirationTimeout,MessageRetryInterval,MessageTrackingLogEnabled,MessageTrackingLogMaxAge,MessageTrackingLogMaxDirectorySize,MessageTrackingLogMaxFileSize,MessageTrackingLogPath,MessageTrackingLogSubjectLoggingEnabled,OutBuffer,OutVariable,OutboundConnectionFailureRetryInterval,PickupDirectoryMaxHeaderSize,PickupDirectoryMaxMessagesPerMinute,PickupDirectoryMaxRecipientsPerMessage,PickupDirectoryPath,PipelineTracingEnabled,PipelineTracingPath,PipelineTracingSenderAddress,PoisonMessageDetectionEnabled,PoisonThreshold,QueueLogMaxAge,QueueLogMaxDirectorySize,QueueLogMaxFileSize,QueueLogPath,QueueMaxIdleTime,QueueQuotaLogEnabled,QueueQuotaLogMaxAge,QueueQuotaLogMaxDirectorySize,QueueQuotaLogMaxFileSize,QueueQuotaLogPath,ReceiveProtocolLogMaxAge,ReceiveProtocolLogMaxDirectorySize,ReceiveProtocolLogMaxFileSize,ReceiveProtocolLogPath,RecipientValidationCacheEnabled,ReplayDirectoryPath,ResourceLogEnabled,ResourceLogMaxAge,ResourceLogMaxDirectorySize,ResourceLogMaxFileSize,ResourceLogPath,RootDropDirectoryPath,RoutingTableLogMaxAge,RoutingTableLogMaxDirectorySize,RoutingTableLogPath,SendProtocolLogMaxAge,SendProtocolLogMaxDirectorySize,SendProtocolLogMaxFileSize,SendProtocolLogPath,ServerState,ServerStatisticsLogMaxAge,ServerStatisticsLogMaxDirectorySize,ServerStatisticsLogMaxFileSize,ServerStatisticsLogPath,TransientFailureRetryCount,TransientFailureRetryInterval,TransportMaintenanceLogEnabled,TransportMaintenanceLogMaxAge,TransportMaintenanceLogMaxDirectorySize,TransportMaintenanceLogMaxFileSize,TransportMaintenanceLogPath,TransportSyncAccountsPoisonAccountThreshold,TransportSyncAccountsPoisonDetectionEnabled,TransportSyncAccountsPoisonItemThreshold,TransportSyncAccountsSuccessivePoisonItemThreshold,TransportSyncEnabled,TransportSyncExchangeEnabled,TransportSyncFacebookEnabled,TransportSyncHubHealthLogEnabled,TransportSyncHubHealthLogFilePath,TransportSyncHubHealthLogMaxAge,TransportSyncHubHealthLogMaxDirectorySize,TransportSyncHubHealthLogMaxFileSize,TransportSyncImapEnabled,TransportSyncLinkedInEnabled,TransportSyncLogEnabled,TransportSyncLogFilePath,TransportSyncLogLoggingLevel,TransportSyncLogMaxAge,TransportSyncLogMaxDirectorySize,TransportSyncLogMaxFileSize,TransportSyncMaxDownloadItemsPerConnection,TransportSyncMaxDownloadSizePerConnection,TransportSyncMaxDownloadSizePerItem,TransportSyncPopEnabled,TransportSyncRemoteConnectionTimeout,UseDowngradedExchangeServerAuth,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveHotmailTransportSyncEnabled,WlmLogMaxAge,WlmLogMaxDirectorySize,WlmLogMaxFileSize,WlmLogPath")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMCallRouterSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExternalHostFqdn,ExternalServiceFqdn,IPAddressFamily,IPAddressFamilyConfigurable,MaxCallsAllowed,OutBuffer,OutVariable,Server,SipTcpListeningPort,SipTlsListeningPort,UMForwardingAddressTemplate,UMPodRedirectTemplate,UMStartupMode,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExternalHostFqdn,ExternalServiceFqdn,GrammarGenerationSchedule,IPAddressFamily,IPAddressFamilyConfigurable,IrmLogEnabled,IrmLogMaxAge,IrmLogMaxDirectorySize,IrmLogMaxFileSize,IrmLogPath,MaxCallsAllowed,OutBuffer,OutVariable,Status,UMForwardingAddressTemplate,UMPodRedirectTemplate,UMStartupMode,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OfflineAddressBookEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Exchange_Virtual_Directories
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalClientAuthenticationMethod,ExternalClientsRequireSsl,ExternalHostname,InternalClientAuthenticationMethod,InternalClientsRequireSsl,InternalHostname,Role,SSLOffloading,XropUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-ActiveSyncLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,EndDate,ErrorAction,ErrorVariable,Filename,Force,OutBuffer,OutVariable,OutputPath,OutputPrefix,StartDate,UseGMT,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceAutoblockThreshold", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AutodiscoverVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EcpVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedEncryptionVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MapiVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OabVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ShowMailboxVirtualDirectories")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OwaVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PowerShellVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PswsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-WebServicesVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ActiveSyncVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,ApplicationRoot,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalAuthenticationMethods,ExternalUrl,InstallProxySubDirectory,InternalAuthenticationMethods,InternalUrl,OutBuffer,OutVariable,Path,Role,Server,Verbose,WarningAction,WarningVariable,WebSiteName,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AutodiscoverVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,ApplicationRoot,BasicAuthentication,Confirm,Debug,DigestAuthentication,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,OAuthAuthentication,OutBuffer,OutVariable,Path,Role,Server,Verbose,WSSecurityAuthentication,WarningAction,WarningVariable,WebSiteName,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EcpVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalUrl,InternalUrl,OutBuffer,OutVariable,Path,Role,Server,Verbose,WarningAction,WarningVariable,WebSiteName,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HostedEncryptionVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalUrl,InternalUrl,OutBuffer,OutVariable,Path,Role,Server,Verbose,WarningAction,WarningVariable,WebSiteName,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MapiVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalUrl,InternalUrl,OutBuffer,OutVariable,Path,Role,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OabVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalUrl,InternalUrl,OutBuffer,OutVariable,Path,PollInterval,Recovery,RequireSSL,Role,Server,Verbose,WarningAction,WarningVariable,WebSiteName,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OwaVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,ApplicationRoot,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalAuthenticationMethods,ExternalUrl,InternalUrl,Name,OutBuffer,OutVariable,Path,Role,Server,Verbose,WarningAction,WarningVariable,WebSiteName,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PowerShellVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,BasicAuthentication,CertificateAuthentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExternalUrl,InternalUrl,LimitMaximumMemory,Name,OutBuffer,OutVariable,Path,RequireSSL,Role,Server,Verbose,WarningAction,WarningVariable,WebSiteName,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PswsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,BasicAuthentication,CertificateAuthentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExternalUrl,InternalUrl,LimitMaximumMemory,Name,OutBuffer,OutVariable,Path,Role,Server,Verbose,WarningAction,WarningVariable,WebSiteName,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-WebServicesVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppPoolId,AppPoolIdForManagement,ApplicationRoot,BasicAuthentication,Confirm,Debug,DigestAuthentication,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalUrl,Force,GzipLevel,InternalNLBBypassUrl,InternalUrl,MRSProxyEnabled,OAuthAuthentication,OutBuffer,OutVariable,Path,Role,Server,Verbose,WSSecurityAuthentication,WarningAction,WarningVariable,WebSiteName,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AutodiscoverVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-EcpVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HostedEncryptionVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MapiVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OwaVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PowerShellVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PswsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-WebServicesVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncDeviceAutoblockThreshold", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdminEmailInsert,BehaviorTypeIncidenceDuration,BehaviorTypeIncidenceLimit,Confirm,Debug,DeviceBlockDuration,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveSyncServer,BadItemReportingEnabled,BasicAuthEnabled,ClientCertAuth,CompressionEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalAuthenticationMethods,ExternalUrl,InstallIsapiFilter,InternalAuthenticationMethods,InternalUrl,MobileClientCertTemplateName,MobileClientCertificateAuthorityURL,MobileClientCertificateProvisioningEnabled,Name,OutBuffer,OutVariable,RemoteDocumentsActionForUnknownServers,RemoteDocumentsAllowedServers,RemoteDocumentsBlockedServers,RemoteDocumentsInternalDomainSuffixList,SendWatsonReport,Verbose,WarningAction,WarningVariable,WhatIf,WindowsAuthEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AutodiscoverVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BasicAuthentication,Confirm,Debug,DigestAuthentication,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,Identity,LiveIdBasicAuthentication,LiveIdNegotiateAuthentication,LiveIdSpNegoAuthentication,OutBuffer,OutVariable,Verbose,WSSecurityAuthentication,WarningAction,WarningVariable,WhatIf,WindowsAuthentication"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "OAuthAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ResetAutoBlockedDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-EcpVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdfsAuthentication,AdminEnabled,BasicAuthentication,Confirm,Debug,DigestAuthentication,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalAuthenticationMethods,ExternalUrl,FormsAuthentication,GzipLevel,Identity,InternalUrl,LiveIdAuthentication,OutBuffer,OutVariable,OwaOptionsEnabled,Verbose,WarningAction,WarningVariable,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedEncryptionVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedFileTypes,AllowedMimeTypes,AlwaysShowBcc,BlockedFileTypes,BlockedMimeTypes,CheckForForgottenAttachments,ComposeFontColor,ComposeFontName,ComposeFontSize,Confirm,Debug,DomainController,E4EConfigurationXML,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalAuthenticationMethods,ExternalUrl,ForceSaveFileTypes,ForceSaveMimeTypes,GzipLevel,HideMailTipsByDefault,Identity,InternalUrl,MailTipsLargeAudienceThreshold,MaxAttachmentSizeKB,MaxEmailStringSize,MaxEncryptedContentSizeKB,MaxFwdAllowed,MaxImageSizeKB,MaxMessageSizeInKb,MaxPortalStringSize,MaxRecipientsPerMessage,OutBuffer,OutVariable,PortalInactivityTimeout,TDSTimeOut,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MapiVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyDefaults,ExternalUrl,InternalUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OabVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BasicAuthentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalUrl,InternalUrl,OAuthAuthentication,OutBuffer,OutVariable,PollInterval,RequireSSL,Verbose,WarningAction,WarningVariable,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalClientsRequireSsl,InternalClientsRequireSsl,XropUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OwaVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActionForUnknownFileAndMIMETypes,ActiveSyncIntegrationEnabled,AdfsAuthentication,AllAddressListsEnabled,AllowOfflineOn,AllowedFileTypes,AllowedMimeTypes,AnonymousFeaturesEnabled,BasicAuthentication,BlockedFileTypes,BlockedMimeTypes,CalendarEnabled,ChangePasswordEnabled,ClientAuthCleanupLevel,Confirm,ContactsEnabled,Debug,DefaultClientLanguage,DefaultDomain,DefaultTheme,DelegateAccessEnabled,DigestAuthentication,DirectFileAccessOnPrivateComputersEnabled,DirectFileAccessOnPublicComputersEnabled,DisplayPhotosEnabled,DomainController,ErrorAction,ErrorVariable,ExchwebProxyDestination,ExplicitLogonEnabled,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalAuthenticationMethods,ExternalUrl,FailbackUrl,FilterWebBeaconsAndHtmlForms,ForceSaveAttachmentFilteringEnabled,ForceSaveFileTypes,ForceSaveMimeTypes,ForceWacViewingFirstOnPrivateComputers,ForceWacViewingFirstOnPublicComputers,ForceWebReadyDocumentViewingFirstOnPrivateComputers,ForceWebReadyDocumentViewingFirstOnPublicComputers,FormsAuthentication,GlobalAddressListEnabled,GzipLevel,IRMEnabled,InstantMessagingCertificateThumbprint,InstantMessagingEnabled,InstantMessagingServerName,InstantMessagingType,IntegratedFeaturesEnabled,InternalUrl,IsPublic,JournalEnabled,JunkEmailEnabled,LiveIdAuthentication,LogonAndErrorLanguage,LogonFormat,LogonPageLightSelectionEnabled,LogonPagePublicPrivateSelectionEnabled,NotesEnabled,NotificationInterval,OAuthAuthentication,OWALightEnabled,OrganizationEnabled,OutBuffer,OutVariable,OutboundCharset,PlacesEnabled,PremiumClientEnabled,PublicFoldersEnabled,RecoverDeletedItemsEnabled,RedirectToOptimalOWAServer,RemindersAndNotificationsEnabled,RemoteDocumentsActionForUnknownServers,RemoteDocumentsAllowedServers,RemoteDocumentsBlockedServers,RemoteDocumentsInternalDomainSuffixList,ReportJunkEmailEnabled,RulesEnabled,SMimeEnabled,SearchFoldersEnabled,SetPhotoEnabled,SetPhotoURL,SignaturesEnabled,SilverlightEnabled,SpellCheckerEnabled,TasksEnabled,TextMessagingEnabled,ThemeSelectionEnabled,UMIntegrationEnabled,UNCAccessOnPrivateComputersEnabled,UNCAccessOnPublicComputersEnabled,UseGB18030,UseISO885915,UserContextTimeout,UserDiagnosticEnabled,Verbose,VirtualDirectoryType,WSSAccessOnPrivateComputersEnabled,WSSAccessOnPublicComputersEnabled,WacViewingOnPrivateComputersEnabled,WacViewingOnPublicComputersEnabled,WarningAction,WarningVariable,WeatherEnabled,WebPartsFrameOptionsType,WebReadyDocumentViewingForAllSupportedTypes,WebReadyDocumentViewingOnPrivateComputersEnabled,WebReadyDocumentViewingOnPublicComputersEnabled,WebReadyDocumentViewingSupportedFileTypes,WebReadyDocumentViewingSupportedMimeTypes,WebReadyFileTypes,WebReadyMimeTypes,WhatIf,WindowsAuthentication"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "AllowCopyContactsToDeviceAddressBook")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PowerShellVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BasicAuthentication,CertificateAuthentication,Confirm,Debug,DomainController,EnableCertificateHeaderAuthModule,EnableDelegatedAuthModule,EnableSessionKeyRedirectionModule,ErrorAction,ErrorVariable,ExternalUrl,Identity,InternalUrl,LiveIdBasicAuthentication,LiveIdSpNegoAuthentication,OutBuffer,OutVariable,RequireSSL,Verbose,WarningAction,WarningVariable,WhatIf,WindowsAuthentication"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "LiveIdNegotiateAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PswsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BasicAuthentication,CertificateAuthentication,Confirm,Debug,DomainController,EnableCertificateHeaderAuthModule,ErrorAction,ErrorVariable,ExternalUrl,InternalUrl,LiveIdBasicAuthentication,LiveIdSpNegoAuthentication,OAuthAuthentication,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-WebServicesVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BasicAuthentication,CertificateAuthentication,Confirm,Debug,DigestAuthentication,DomainController,ErrorAction,ErrorVariable,ExtendedProtectionFlags,ExtendedProtectionSPNList,ExtendedProtectionTokenChecking,ExternalUrl,Force,GzipLevel,Identity,InternalNLBBypassUrl,InternalUrl,LiveIdBasicAuthentication,LiveIdNegotiateAuthentication,LiveIdSpNegoAuthentication,MRSProxyEnabled,OAuthAuthentication,OutBuffer,OutVariable,Verbose,WSSecurityAuthentication,WarningAction,WarningVariable,WhatIf,WindowsAuthentication")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class ExchangeCrossServiceIntegration
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"RichCoexistenceRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"RichCoexistenceRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,UsnForReconciliationSearch,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AccountPartition,Anr,Database,Debug,DomainController,ErrorAction,ErrorVariable,ExecutingUser,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeMailboxUrls,IncludeMemberSyncStatus,IncludeMembers,IncludePermissionsVersion,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,UsnForReconciliationSearch,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,ArchiveDatabase,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,UsnForReconciliationSearch,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,InactiveMailboxOnly,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SoftDeletedMailbox,SortBy,UsnForReconciliationSearch,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Capabilities,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Confirm,CopyOwnerToMember,DisplayName,ErrorAction,ErrorVariable,ManagedBy,MemberJoinRestriction,Members,Name,Notes,OutBuffer,OutVariable,PrimarySmtpAddress,SamAccountName,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox,Debug,DomainController,ExternalDirectoryObjectId,IgnoreNamingPolicy,MemberDepartRestriction,Organization,OrganizationalUnit,OverrideRecipientQuotas,RoomList,Type,Verbose"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassNestedModerationEnabled"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,AutoSubscribeNewGroupMembers,Confirm,Database,Debug,Description,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExecutingUser,ExternalDirectoryObjectId,FromSyncClient,Language,Members,ModernGroupType,Name,Organization,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,Owners,PrimarySmtpAddress,PublicToGroups,RecipientIdType,RequireSenderAuthenticationEnabled,SharePointResources,SharePointUrl,ValidationOrganization,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Alias,ArbitrationMailbox,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,ExternalEmailAddress,FirstName,Initials,LastName,MacAttachmentFormat,MessageBodyFormat,MessageFormat,Name,Organization,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Alias,ArbitrationMailbox,BypassLiveId,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,ExternalEmailAddress,FederatedIdentity,FirstName,ImmutableId,Initials,LastName,MacAttachmentFormat,MessageBodyFormat,MessageFormat,Name,NetID,Organization,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,RemotePowerShellEnabled,SKUAssigned,SKUCapability,SamAccountName,UsageLocation,UsePreferMessageFormat,UserPrincipalName,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"NewUserPasswordManagementPermissions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"NewUserResetPasswordOnNextLogonPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId,ImportLiveId,UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions"
					}, "ActiveSyncMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "AccountDisabled,AddOnSKUCapability,AddressBookPolicy,Arbitration,ArbitrationMailbox,ArchiveDatabase,ArchiveDomain,BypassLiveId,Database,Debug,DomainController,EnableRoomMailboxAccount,LinkedCredential,LinkedDomainController,LinkedMasterAccount,LinkedRoom,MailboxContainerGuid,NetID,Organization,OverrideRecipientQuotas,QueryBaseDNRestrictionEnabled,RemoteAccountPolicy,RemoteArchive,RetentionPolicy,RoomMailboxPassword,SKUAssigned,SKUCapability,SamAccountName,SharingPolicy,TargetAllMDBs,ThrottlingPolicy,UsageLocation,UserPrincipalName,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions",
						"PilotingOrganization_Restrictions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxRecoveryPermissions",
						"PilotingOrganization_Restrictions"
					}, "RemovedMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions",
						"PilotingOrganization_Restrictions"
					}, "ModeratedBy,ModerationEnabled,Office,Phone,PrimarySmtpAddress,ResourceCapacity,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"NewUserPasswordManagementPermissions",
						"PilotingOrganization_Restrictions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"NewUserResetPasswordOnNextLogonPermissions",
						"PilotingOrganization_Restrictions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"PublicFoldersEnabled"
					}, "HoldForMigration,IsExcludedFromServingHierarchy,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RecipientManagementPermissions"
					}, "Alias,Confirm,Discovery,DisplayName,Equipment,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,FederatedIdentity,FirstName,Force,ImmutableId,Initials,LastName,MailboxPlan,Name,OrganizationalUnit,OutBuffer,OutVariable,RemotePowerShellEnabled,Room,Shared,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId,ImportLiveId,UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"HotmailSyncPermissions"
					}, "DGroup,InternalFlags,Olc,Puid"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Eas"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregatedMailboxGuid,Authentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,IncrementalSyncInterval,Mailbox,Name,OutBuffer,OutVariable,Password,RemoteEmailAddress,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,TargetRootFolder,UserName,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Imap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Pop")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ForReconciliation,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExecutingUser,ForReconciliation,Force,FromSyncClient,Identity,OutBuffer,OutVariable,Permanent,RecipientIdType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ForReconciliation,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ForReconciliation,IgnoreDefaultScope,Verbose"),
					new RoleParameters(new string[]
					{
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreLegalHold,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "Permanent"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "EndDate,Identity,StartDate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AdminAuditLogAgeLimit,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssistantName,City,Company,CountryOrRegion,Department,DisplayName,Fax,FirstName,GeoCoordinates,HomePhone,Identity,Initials,LastName,Manager,MobilePhone,Name,Notes,Office,OtherFax,OtherHomePhone,OtherTelephone,Pager,Phone,PhoneticDisplayName,PostalCode,SeniorityIndex,StateOrProvince,StreetAddress,TelephoneAssistant,Title,WebPage"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AllowUMCallsFromNonUsers,Confirm,CreateDTMFMap,Debug,IgnoreDefaultScope,OutBuffer,OutVariable,PostOfficeBox,SimpleDisplayName,UMCallingLineIds,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,ArbitrationMailbox,BypassSecurityGroupManagerCheck,Confirm,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DisplayName,DomainController,EmailAddressPolicyEnabled,EmailAddresses,ErrorAction,ErrorVariable,ExpansionServer,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,IgnoreDefaultScope,IgnoreNamingPolicy,ManagedBy,MaxReceiveSize,MaxSendSize,MemberDepartRestriction,MemberJoinRestriction,Name,OutBuffer,OutVariable,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SamAccountName,SendOofMessageToOriginatorEnabled,SimpleDisplayName,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ForceUpgrade,GenerateExternalDirectoryObjectId"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "BypassNestedModerationEnabled"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "BypassModerationFromSendersOrMembers"),
					new RoleParameters(new string[]
					{
						"ResourceMailboxRestrictions",
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DisplayName,Identity,IsHierarchicalGroup,ManagedBy,Name,Notes,OutBuffer,OutVariable,PhoneticDisplayName,SeniorityIndex,SimpleDisplayName,Universal,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDefaultScope,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddOwners,AddedMembers,AutoSubscribeNewGroupMembers,ConfigurationActions,Confirm,Debug,Description,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExecutingUser,ExternalDirectoryObjectId,Force,ForcePublishExternalResources,FromSyncClient,Identity,Language,Name,OutBuffer,OutVariable,Owners,PermissionsVersion,PrimarySmtpAddress,RecipientIdType,RemoveOwners,RemovedMembers,RequireSenderAuthenticationEnabled,SharePointResources,SharePointUrl,SwitchToGroupType,Verbose,WarningAction,WarningVariable,WhatIf,YammerGroupEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,Name,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox,Confirm,CreateDTMFMap,Debug,DomainController,EmailAddressPolicyEnabled,ErrorAction,ErrorVariable,ForceUpgrade,GenerateExternalDirectoryObjectId,IgnoreDefaultScope,MacAttachmentFormat,MaxReceiveSize,MaxRecipientPerMessage,MaxSendSize,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,RemovePicture,RemoveSpokenName,SecondaryAddress,SecondaryDialPlan,SimpleDisplayName,UseMapiRichTextFormat,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "ModeratedBy,ModerationEnabled"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,ImmutableId,Name,NetID,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,ArbitrationMailbox,ArchiveGuid,ArchiveName,ArchiveQuota,ArchiveWarningQuota,BypassLiveId,CalendarVersionStoreDisabled,Confirm,CreateDTMFMap,Debug,DomainController,EmailAddressPolicyEnabled,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExchangeGuid,ForceUpgrade,IgnoreDefaultScope,JournalArchiveAddress,LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,MacAttachmentFormat,MaxReceiveSize,MaxSendSize,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RemovePicture,RemoveSpokenName,RetainDeletedItemsFor,RetentionComment,RetentionHoldEnabled,RetentionUrl,SKUAssigned,SKUCapability,SamAccountName,SecondaryAddress,SecondaryDialPlan,SimpleDisplayName,SingleItemRecoveryEnabled,StartDateForRetentionHold,UsageLocation,UseMapiRichTextFormat,UsePreferMessageFormat,UserPrincipalName,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "FederatedIdentity"),
					new RoleParameters(new string[]
					{
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddAggregatedAccount,AggregatedMailboxGuid,MailboxContainerGuid,RemoveAggregatedAccount,RetentionPolicy,UnifiedMailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternalFlags"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Authentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IncrementalSyncInterval,Mailbox,OutBuffer,OutVariable,Password,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,LEOEnabled,NetID,PhoneticDisplayName,SeniorityIndex,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveRelease,BusinessNetID,CopyShadowAttributes,EnableAccount,ErrorAction,ErrorVariable,GenerateExternalDirectoryObjectId,InPlaceHoldsRaw,LinkedCredential,LinkedDomainController,LinkedMasterAccount,MailboxRelease,OutBuffer,OutVariable,RemotePowerShellEnabled,SKUAssigned,UpgradeDetails,UpgradeMessage,UpgradeRequest,UpgradeStage,UpgradeStageTimeStamp,UpgradeStatus,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"OpenDomainProfileUpdatePermissions",
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "DisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "PostOfficeBox,SimpleDisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "City,CountryOrRegion,Fax,FirstName,GeoCoordinates,HomePhone,Initials,LastName,MobilePhone,Notes,Office,Pager,Phone,PostalCode,StateOrProvince,StreetAddress,WebPage"),
					new RoleParameters(new string[]
					{
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "AssistantName,Company,Department,Manager,Name,OtherFax,OtherHomePhone,OtherTelephone,TelephoneAssistant,Title"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "Arbitration,CertificateSubject,Confirm,Debug,DomainController,IgnoreDefaultScope,PublicFolder,ResetPasswordOnNextLogon,SamAccountName,UMCallingLineIds,UserPrincipalName,Verbose,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "AllowUMCallsFromNonUsers,CreateDTMFMap,UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "New-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Debug,Description,DisplayName,ErrorAction,ErrorVariable,ExecutingUser,FromGroupMailbox,IsPublic,Members,Organization,OutBuffer,OutVariable,Owners,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Remove-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddMembers,AddOwners,Debug,Description,DisplayName,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,PublishExchangeResources,RemoveMembers,RemoveOwners,SyncGroupMailbox,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class Federated_Sharing
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccessMethod,Confirm,Credentials,Debug,DomainController,ErrorAction,ErrorVariable,ForestName,Organization,OutBuffer,OutVariable,TargetAutodiscoverEpr,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-FederatedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,DomainName,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederatedDomainProof", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Thumbprint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederatedOrganizationIdentifier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeExtendedDomainInfo,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederationInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassAdditionalDomainValidation,Debug,DomainName,ErrorAction,ErrorVariable,Force,OutBuffer,OutVariable,TrustedHostnames,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ForeignConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OrgWideAccount,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdministratorProvisioningId,ApplicationIdentifier,ApplicationUri,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,MetadataUrl,Name,OutBuffer,OutVariable,SkipNamespaceProviderProvisioning,Thumbprint,UseLegacyProvisioningService,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ForeignConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddressSpaces,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IsScopedConnector,Name,OutBuffer,OutVariable,SourceTransportServers,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DiscoveryEndpoint,DomainController,Enabled,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,TargetAddressDomains,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveAccessEnabled,Confirm,Debug,DomainController,DomainNames,Enabled,ErrorAction,ErrorVariable,FreeBusyAccessEnabled,FreeBusyAccessLevel,FreeBusyAccessScope,MailTipsAccessEnabled,MailTipsAccessLevel,MailTipsAccessScope,MailboxMoveEnabled,Name,Organization,OrganizationContact,OutBuffer,OutVariable,PhotosEnabled,TargetApplicationUri,TargetAutodiscoverEpr,TargetOwaURL,TargetSharingEpr,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"MessageTrackingPermissions"
					}, "DeliveryReportEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Default,DomainController,Domains,Enabled,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FederatedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,DomainName,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ForeignConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OrgWideAccount,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FederatedOrganizationIdentifier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountNamespace,Confirm,Debug,DefaultDomain,DelegationFederationTrust,DomainController,Enabled,ErrorAction,ErrorVariable,Identity,OrganizationContact,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ApplicationUri,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,MetadataUrl,Name,OutBuffer,OutVariable,PublishFederationCertificate,RefreshMetadata,Thumbprint,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ForeignConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddressSpaces,Comment,Confirm,Debug,DomainController,DropDirectory,DropDirectoryQuota,Enabled,ErrorAction,ErrorVariable,Force,IsScopedConnector,MaxMessageSize,Name,OutBuffer,OutVariable,RelayDsnRequired,SourceTransportServers,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DiscoveryEndpoint,DomainController,Enabled,ErrorAction,ErrorVariable,Force,OutBuffer,OutVariable,TargetAddressDomains,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"CalendarVersionStoreEnabled",
						"EOPPremiumRestrictions"
					}, "CalendarVersionStoreEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "PublicComputersDetectionEnabled,PublicFolderMailboxesLockedForNewConnections,PublicFolderMailboxesMigrationComplete")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveAccessEnabled,Confirm,Debug,DomainController,DomainNames,Enabled,ErrorAction,ErrorVariable,Force,FreeBusyAccessEnabled,FreeBusyAccessLevel,FreeBusyAccessScope,MailTipsAccessEnabled,MailTipsAccessLevel,MailTipsAccessScope,MailboxMoveEnabled,Name,OrganizationContact,OutBuffer,OutVariable,PhotosEnabled,TargetApplicationUri,TargetAutodiscoverEpr,TargetOwaURL,TargetSharingEpr,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"MessageTrackingPermissions"
					}, "DeliveryReportEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Default,DomainController,Domains,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,UserIdentity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-FederationTrustCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,UserIdentity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class GALSynchronizationManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "TargetAllMDbs")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "AccountPartition,CatchAllRecipient,Debug,DomainController,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDeletedRecipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cookie,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Pages,RecipientType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Cookie,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,OrganizationalUnit,OutBuffer,OutVariable,Pages,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "AccountPartition,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Cookie,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,Pages,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Cookie,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,Pages,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Cookie,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,Pages,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Archive,Cookie,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,Pages,PublicFolder,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SoftDeletedMailbox,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,Alias,ArbitrationMailbox,BlockedSendersHash,Confirm,CopyOwnerToMember,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IgnoreNamingPolicy,IsHierarchicalGroup,ManagedBy,MemberDepartRestriction,MemberJoinRestriction,Notes,OnPremisesObjectId,OrganizationalUnit,OutBuffer,OutVariable,PhoneticDisplayName,PrimarySmtpAddress,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SafeRecipientsHash,SafeSendersHash,SamAccountName,SendOofMessageToOriginatorEnabled,SeniorityIndex,Type,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Members,Name,Organization"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassNestedModerationEnabled,ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,Alias,ArbitrationMailbox,AssistantName,BlockedSendersHash,City,Company,Confirm,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExternalEmailAddress,Fax,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,Initials,LastName,MacAttachmentFormat,Manager,MasterAccountSid,MessageBodyFormat,MessageFormat,MobilePhone,Name,Notes,Office,OnPremisesObjectId,Organization,OrganizationalUnit,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,PostalCode,PrimarySmtpAddress,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceType,SafeRecipientsHash,SafeSendersHash,SeniorityIndex,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WebPage,WhatIf"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AddOnSKUCapability,Alias,ArbitrationMailbox,ArchiveGuid,ArchiveName,AssistantName,BlockedSendersHash,City,Company,Confirm,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,EvictLiveId,ExchangeGuid,ExternalEmailAddress,Fax,FederatedIdentity,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,ImmutableId,ImportLiveId,Initials,IntendedMailboxPlanName,Languages,LastName,MacAttachmentFormat,Manager,MasterAccountSid,MessageBodyFormat,MessageFormat,MicrosoftOnlineServicesID,MobilePhone,Name,NetID,Notes,Office,OnPremisesObjectId,Organization,OrganizationalUnit,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Password,Phone,PhoneticDisplayName,Picture,PostalCode,PrimarySmtpAddress,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RemotePowerShellEnabled,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,ResourceType,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SeniorityIndex,SharePointUrl,SiteMailboxClosedTime,SiteMailboxOwners,SiteMailboxUsers,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UseExistingLiveId,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserPrincipalName,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WebPage,WhatIf,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AccountDisabled,ActiveSyncMailboxPolicy,AddOnSKUCapability,Alias,AntispamBypassEnabled,Arbitration,ArbitrationMailbox,ArchiveDatabase,ArchiveGuid,ArchiveName,AssistantName,BlockedSendersHash,City,Company,Confirm,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Database,Debug,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,EmailAddresses,Equipment,ErrorAction,ErrorVariable,EvictLiveId,Fax,FederatedIdentity,FirstName,Force,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HoldForMigration,HomePhone,ImmutableId,ImportLiveId,Initials,Languages,LastName,LinkedCredential,LinkedDomainController,LinkedMasterAccount,MailboxPlanName,ManagedFolderMailboxPolicy,ManagedFolderMailboxPolicyAllowed,Manager,MasterAccountSid,MicrosoftOnlineServicesID,MobilePhone,Name,NetID,Notes,Office,OnPremisesObjectId,Organization,OrganizationalUnit,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Password,Phone,PhoneticDisplayName,Picture,PostalCode,PrimarySmtpAddress,PublicFolder,QueryBaseDNRestrictionEnabled,RejectMessagesFrom,RejectMessagesFromDLMembers,RemoteAccountPolicy,RemotePowerShellEnabled,RemovedMailbox,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,ResourceWindowsLiveID,RetentionPolicy,Room,SCLDeleteThreshold,SCLJunkThreshold,SCLQuarantineThreshold,SCLRejectThreshold,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SeniorityIndex,Shared,SharingPolicy,SpokenName,StateOrProvince,StreetAddress,TargetAllMDbs,TelephoneAssistant,ThrottlingPolicy,Title,UseExistingLiveId,UseExistingResourceLiveId,UseMapiRichTextFormat,UserCertificate,UserPrincipalName,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WebPage,WhatIf,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DirSyncAuthorityMetadata")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisableWindowsLiveID,DomainController,ErrorAction,ErrorVariable,ForReconciliation,Identity,IgnoreDefaultScope,IgnoreLegalHold,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Arbitration,Confirm,Database,Debug,DisableWindowsLiveID,Disconnect,DomainController,ErrorAction,ErrorVariable,ForReconciliation,Identity,IgnoreDefaultScope,IgnoreLegalHold,OutBuffer,OutVariable,Permanent,PublicFolder,RemoveArbitrationMailboxWithOABsAllowed,RemoveLastArbitrationMailboxAllowed,StoreMailboxIdentity,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisableWindowsLiveID,DomainController,EnterpriseExchangeVersion,ErrorAction,ErrorVariable,FederatedIdentitySourceADAttribute,Identity,OutBuffer,OutVariable,PasswordFilePath,ProvisioningDomain,ResetPasswordOnNextLogon,Verbose,WarningAction,WarningVariable,WhatIf,WlidUseSMTPPrimary")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,ArbitrationMailbox,BlockedSendersHash,BypassSecurityGroupManagerCheck,Confirm,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,EmailAddressPolicyEnabled,EmailAddresses,ErrorAction,ErrorVariable,ExcludedFromBackSync,ExpansionServer,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IgnoreDefaultScope,IgnoreNamingPolicy,IsHierarchicalGroup,ManagedBy,MaxReceiveSize,MaxSendSize,MemberDepartRestriction,MemberJoinRestriction,Name,Notes,OnPremisesObjectId,OutBuffer,OutVariable,PhoneticDisplayName,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SafeRecipientsHash,SafeSendersHash,SamAccountName,SendOofMessageToOriginatorEnabled,SeniorityIndex,SimpleDisplayName,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,BypassNestedModerationEnabled,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DirSyncAuthorityMetadata")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,ArbitrationMailbox,AssistantName,BlockedSendersHash,City,Company,Confirm,CountryOrRegion,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,EmailAddressPolicyEnabled,EmailAddresses,ErrorAction,ErrorVariable,ExcludedFromBackSync,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,Fax,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,IgnoreDefaultScope,Initials,LastName,MacAttachmentFormat,Manager,MasterAccountSid,MaxReceiveSize,MaxRecipientPerMessage,MaxSendSize,MessageBodyFormat,MessageFormat,MobilePhone,Name,Notes,Office,OnPremisesObjectId,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,PostalCode,RawAcceptMessagesOnlyFrom,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceType,SafeRecipientsHash,SafeSendersHash,SecondaryAddress,SecondaryDialPlan,SeniorityIndex,SimpleDisplayName,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WebPage,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,AddOnSKUCapability,Alias,ArbitrationMailbox,ArchiveGuid,ArchiveName,AssistantName,BlockedSendersHash,City,Company,Confirm,CountryOrRegion,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,EmailAddressPolicyEnabled,EmailAddresses,ErrorAction,ErrorVariable,ExchangeGuid,ExcludedFromBackSync,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,Fax,FederatedIdentity,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,IgnoreDefaultScope,ImmutableId,Initials,IntendedMailboxPlanName,Languages,LastName,MacAttachmentFormat,Manager,MasterAccountSid,MaxReceiveSize,MaxSendSize,MessageBodyFormat,MessageFormat,MicrosoftOnlineServicesID,MobilePhone,Name,Notes,Office,OnPremisesObjectId,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,Picture,PostalCode,RawSiteMailboxOwners,RawSiteMailboxUsers,RecipientDisplayType,RecipientLimits,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,ResourceType,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SecondaryAddress,SeniorityIndex,SharePointUrl,SimpleDisplayName,SiteMailboxClosedTime,SiteMailboxOwners,SiteMailboxUsers,SoftDeletedMailUser,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserPrincipalName,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WebPage,WhatIf,WindowsEmailAddress,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "UMDtmfMap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,AddOnSKUCapability,Alias,AntispamBypassEnabled,ApplyMandatoryProperties,Arbitration,ArbitrationMailbox,ArchiveDomain,ArchiveGuid,ArchiveName,ArchiveQuota,ArchiveStatus,ArchiveWarningQuota,AssistantName,BlockedSendersHash,CalendarLoggingQuota,CalendarRepairDisabled,CalendarVersionStoreDisabled,City,Company,Confirm,CountryOrRegion,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DomainController,DowngradeHighPriorityMessagesEnabled,EmailAddressPolicyEnabled,EmailAddresses,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExcludedFromBackSync,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalOofOptions,Fax,FederatedIdentity,FirstName,Force,ForwardingSmtpAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,IgnoreDefaultScope,ImmutableId,Initials,IssueWarningQuota,Languages,LastName,LinkedCredential,LinkedDomainController,LinkedMasterAccount,MailboxPlanName,Manager,MasterAccountSid,MaxBlockedSenders,MaxReceiveSize,MaxSafeSenders,MaxSendSize,MicrosoftOnlineServicesID,MobilePhone,Name,Notes,Office,OfflineAddressBook,OnPremisesObjectId,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,Picture,PostalCode,ProhibitSendQuota,ProhibitSendReceiveQuota,PublicFolder,QueryBaseDNRestrictionEnabled,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RemoteAccountPolicy,RemoteRecipientType,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,RetainDeletedItemsFor,RetainDeletedItemsUntilBackup,RetentionHoldEnabled,RetentionPolicy,RulesQuota,SCLDeleteEnabled,SCLDeleteThreshold,SCLJunkEnabled,SCLJunkThreshold,SCLQuarantineEnabled,SCLQuarantineThreshold,SCLRejectEnabled,SCLRejectThreshold,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SecondaryAddress,SeniorityIndex,SharingPolicy,SimpleDisplayName,SingleItemRecoveryEnabled,SoftDeletedMailbox,SpokenName,StartDateForRetentionHold,StateOrProvince,StreetAddress,TelephoneAssistant,ThrottlingPolicy,Title,Type,UseDatabaseQuotaDefaults,UseDatabaseRetentionDefaults,UserCertificate,UserPrincipalName,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WebPage,WhatIf,WindowsEmailAddress,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,RetentionComment,RetentionUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ManagedFoldersPermissions"
					}, "ManagedFolderMailboxPolicy,ManagedFolderMailboxPolicyAllowed,RemoveManagedFolderAndPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "MessageTrackingReadStatusEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "UMDtmfMap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DirSyncAuthorityMetadata")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SyncDistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddedMembers,BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Members,OutBuffer,OutVariable,RemovedMembers,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SyncStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientData,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,MailboxCreationElapsedMilliseconds,NumberOfConnectionErrors,NumberOfExportSyncRuns,NumberOfIlmLogicErrors,NumberOfIlmOtherErrors,NumberOfImportSyncRuns,NumberOfLiveIdErrors,NumberOfMailboxesCreated,NumberOfMailboxesToCreate,NumberOfPermissionErrors,NumberOfSucessfulExportSyncRuns,NumberOfSucessfulImportSyncRuns,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Information_Rights_Management
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,TrustedPublishingDomain,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Default,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,Default,DomainController,ErrorAction,ErrorVariable,ExtranetCertificationUrl,ExtranetLicensingUrl,FileData,IntranetCertificationUrl,IntranetLicensingUrl,Name,Organization,OutBuffer,OutVariable,Password,RMSOnline,RMSOnlineAuthCertSubjectNameOverride,RMSOnlineAuthorTest,RMSOnlineConfig,RMSOnlineKeys,RMSOnlineOrgOverride,RefreshTemplates,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "RMSOnlineConfig,RMSOnlineKeys")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "ApplyRightsProtectionTemplate,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Force,FromDepartment,Name,Organization,OutBuffer,OutVariable,Priority,SentTo,SentToScope,UserCanOverride,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyOME,RemoveOME")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "JournalReportDecryptionEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ClientAccessServerEnabled,Confirm,Debug,DomainController,EDiscoverySuperUserEnabled,ErrorAction,ErrorVariable,ExternalLicensingEnabled,Force,Identity,InternalLicensingEnabled,LicensingLocation,OutBuffer,OutVariable,PublishingLocation,RMSOnlineKeySharingLocation,RefreshServerCertificates,SearchEnabled,ServiceLocation,TransportDecryptionSetting,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DisclaimerText,EmailText,Image,OTPEnabled,Organization,PortalText")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "ApplyRightsProtectionTemplate,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,FromDepartment,Identity,Name,OutBuffer,OutVariable,Priority,SentTo,SentToScope,UserCanOverride,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,Default,DomainController,ErrorAction,ErrorVariable,ExtranetCertificationUrl,ExtranetLicensingUrl,IntranetCertificationUrl,IntranetLicensingUrl,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"IRMPremiumFeaturesPermissions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyOME,RemoveOME")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RMSOnline,RMSOnlineAuthCertSubjectNameOverride,RMSOnlineOrgOverride,Recipient,Sender,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Journaling
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LawfulInterception,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LawfulInterception,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,LawfulInterception,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExpiryDate,FullReport,JournalEmailAddress,LawfulInterception,Name,Organization,OutBuffer,OutVariable,Recipient,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LawfulInterception,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "JournalArchivingEnabled,JournalingReportNdrTo")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Law_Enforcement_Requests
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Identity,LawfulInterception")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Identity,LawfulInterception")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "LawfulInterception")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "ExpiryDate,FullReport,JournalEmailAddress,LawfulInterception,Name,Recipient")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Identity,LawfulInterception")
				}, "c")
			};
		}

		private class Legal_Hold
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "InPlaceHoldIdentity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,ShowDeletionInProgressSearches,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ArbitrationMailbox,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox,LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,RetentionComment,RetentionUrl,SingleItemRecoveryEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,LitigationHoldEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Arbitration,ArbitrationMailbox,AuditLog,ClientExtensions,Confirm,Force,GMGen,MailRouting,Management,MessageTracking,Migration,OABGen,OMEncryption,RetentionPolicy,SingleItemRecoveryEnabled,SuiteServiceStorage,TenantUpgrade,UMDataStorage,UMGrammar"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "LitigationHoldDate,LitigationHoldDuration,LitigationHoldOwner,RetentionComment,RetentionUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ManagedFoldersPermissions"
					}, "RemoveManagedFolderAndPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "Arbitration,PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Mail_Enabled_Public_Folders
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,HiddenFromAddressListsEnabled,Identity,OutBuffer,OutVariable,OverrideRecipientQuotas,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,Server,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "Debug,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"PublicFoldersEnabled"
					}, "HoldForMigration,IsExcludedFromServingHierarchy,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RecipientManagementPermissions"
					}, "Name,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Alias,Confirm,Debug,DomainController,EmailAddresses,EntryId,ErrorAction,ErrorVariable,ExternalEmailAddress,HiddenFromAddressListsEnabled,Name,Organization,OutBuffer,OutVariable,OverrideRecipientQuotas,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"PublicFoldersEnabled"
					}, "PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,Confirm,Contacts,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Debug,DeliverToMailboxAndForward,DisplayName,DomainController,EmailAddressPolicyEnabled,EmailAddresses,EntryId,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,ForwardingAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IgnoreDefaultScope,MaxReceiveSize,MaxSendSize,Name,OutBuffer,OutVariable,PhoneticDisplayName,PublicFolderType,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled,SimpleDisplayName,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Mail_Recipient_Creation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "AuxArchive,AuxPrimary,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-JournalArchiving", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,InactiveMailboxOnly,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SoftDeletedMailbox,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DumpsterStatistics,ErrorAction,ErrorVariable,Identity,IncludePreExchange2013,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,AllMailboxPlanReleases,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssignmentMethod,ConfigWriteScope,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,Enabled,ErrorAction,ErrorVariable,Exclusive,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,GetEffectiveUsers,Identity,Organization,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientWriteScope,Role,RoleAssignee,RoleAssigneeType,Verbose,WarningAction,WarningVariable,WritableDatabase,WritableRecipient,WritableServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ProcessType,ResultSize,StartDate,Summary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Capabilities,Database,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemovedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Explicit,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,ThrottlingPolicy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ToolInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Trust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPrincipalNamesSuffix", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnit,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ConsumerMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlternateSupportEmailAddresses,Birthdate,BirthdayPrecision,Confirm,Database,Debug,EmailAddresses,ErrorAction,ErrorVariable,FblEnabled,FirstName,Gender,LastName,LocaleID,MakeExoPrimary,MakeExoSecondary,MigrationDryRun,NameVersion,Occupation,OptInUser,OutBuffer,OutVariable,PostalCode,Region,Repair,SkipMigration,Timezone,UsageLocation,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,IsIncrementalOnly,IsLinkRelated,IsRetriable,IsTemporary,IsTenantWideDivergence,IsValidationDivergence,ObjectId,OutBuffer,OutVariable,ServiceInstanceId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CertificateSubject,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,LinkedCredential,LinkedDomainController,LinkedMasterAccount,Name,Organization,OrganizationalUnit,OutBuffer,OutVariable,UserPrincipalName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Alias,ArbitrationMailbox,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalEmailAddress,FirstName,Initials,LastName,MacAttachmentFormat,MessageBodyFormat,MessageFormat,Name,Organization,OrganizationalUnit,OutBuffer,OutVariable,PrimarySmtpAddress,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,Alias,ArbitrationMailbox,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalEmailAddress,FederatedIdentity,FirstName,ImmutableId,Initials,LastName,MacAttachmentFormat,MailboxProvisioningConstraint,MailboxProvisioningPreferences,MessageBodyFormat,MessageFormat,Name,NetID,Organization,OrganizationalUnit,OutBuffer,OutVariable,PrimarySmtpAddress,RemotePowerShellEnabled,SKUAssigned,SKUCapability,SamAccountName,UsePreferMessageFormat,UserPrincipalName,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"NewUserPasswordManagementPermissions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"NewUserResetPasswordOnNextLogonPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId,ImportLiveId,UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions"
					}, "ActiveSyncMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditLog,MailboxProvisioningConstraint,MailboxProvisioningPreferences"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "AccountDisabled,AddOnSKUCapability,Arbitration,ArbitrationMailbox,ArchiveDatabase,ArchiveDomain,Database,Debug,DomainController,EnableRoomMailboxAccount,LinkedCredential,LinkedDomainController,LinkedMasterAccount,LinkedRoom,MailboxContainerGuid,NetID,Organization,QueryBaseDNRestrictionEnabled,RemoteAccountPolicy,RemoteArchive,RetentionPolicy,RoomMailboxPassword,SKUAssigned,SKUCapability,SamAccountName,SharingPolicy,TargetAllMDBs,ThrottlingPolicy,UserPrincipalName,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions",
						"PilotingOrganization_Restrictions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxRecoveryPermissions",
						"PilotingOrganization_Restrictions"
					}, "RemovedMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions",
						"PilotingOrganization_Restrictions"
					}, "ModeratedBy,ModerationEnabled,Office,OriginalNetID,Phone,PrimarySmtpAddress,ResourceCapacity,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"NewUserPasswordManagementPermissions",
						"PilotingOrganization_Restrictions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"NewUserResetPasswordOnNextLogonPermissions",
						"PilotingOrganization_Restrictions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"PublicFoldersEnabled"
					}, "HoldForMigration,IsExcludedFromServingHierarchy,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RecipientManagementPermissions"
					}, "Alias,Confirm,Discovery,DisplayName,Equipment,ErrorAction,ErrorVariable,FederatedIdentity,FirstName,Force,ImmutableId,Initials,LastName,MailboxPlan,Name,OrganizationalUnit,OutBuffer,OutVariable,RemotePowerShellEnabled,Room,Shared,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId,ImportLiveId,UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ConsumerMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RemoveExoPrimary,RemoveExoSecondary,SwitchToSecondary,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ForReconciliation,IgnoreDefaultScope,Verbose"),
					new RoleParameters(new string[]
					{
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreLegalHold,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "Permanent"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation,IgnoreLegalHold"),
					new RoleParameters(new string[]
					{
						"DestructiveAction",
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Permanent"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Arbitration,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,PublicFolder,RemoveArbitrationMailboxWithOABsAllowed,RemoveLastArbitrationMailboxAllowed,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RecipientManagementPermissions"
					}, "Disconnect"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ConsumerMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Repair")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,ErrorAction,ErrorVariable,Identity,IsIgnoredInHaltCondition,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "MailboxProvisioningConstraint,MailboxProvisioningPreferences")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MailboxProvisioningConstraint,MailboxProvisioningPreferences")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncServiceInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,ActiveInstanceSleepInterval,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,ForwardSyncConfigurationXML,IsEnabled,IsHaltRecoveryDisabled,IsHalted,IsMultiObjectCookieEnabled,IsNewCookieBlocked,IsUsedForTenantToServiceInstanceAssociation,MaxVersion,MinVersion,Name,NewTenantMaxVersion,NewTenantMinVersion,OutBuffer,OutVariable,PassiveInstanceSleepInterval,UseCentralConfig,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDefaultScope")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SoftDeletedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SoftDeletedFeatureManagementPermissions"
					}, "Confirm,DisplayName,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Password,SoftDeletedObject,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Mail_Recipients
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-RecipientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Trustee,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,NotificationEmailAddresses,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,NotificationEmailAddresses,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Connect-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveSyncMailboxPolicy,AddressBookPolicy,Alias,AllowLegacyDNMismatch,Archive,Confirm,Database,Debug,DomainController,Equipment,ErrorAction,ErrorVariable,Force,Identity,LinkedCredential,LinkedDomainController,LinkedMasterAccount,ManagedFolderMailboxPolicy,ManagedFolderMailboxPolicyAllowed,OutBuffer,OutVariable,RetentionPolicy,Room,Shared,User,ValidateOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,IgnoreLegalHold,IncludeSoftDeletedObjects,OutBuffer,OutVariable,PreventRecordingPreviousDatabase,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"RichCoexistenceRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "PreserveEmailAddresses"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Arbitration,Confirm,Debug,DisableArbitrationMailboxWithOABsAllowed,DisableLastArbitrationMailboxAllowed,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,IgnoreLegalHold,IncludeSoftDeletedObjects,OutBuffer,OutVariable,PreventRecordingPreviousDatabase,PublicFolder,RemoteArchive,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-ServiceEmailChannel", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Force")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Alias,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalEmailAddress,Identity,MacAttachmentFormat,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,Alias,Archive,ArchiveGuid,ArchiveName,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalEmailAddress,Identity,IncludeSoftDeletedObjects,JournalArchiveAddress,MacAttachmentFormat,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,OverrideRecipientQuotas,PreserveEmailAddresses,PrimarySmtpAddress,SKUAssigned,SKUCapability,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions"
					}, "ActiveSyncMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"RichCoexistenceRestrictions"
					}, "Archive,ArchiveName"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountDisabled,AddOnSKUCapability,AddressBookPolicy,Alias,Arbitration,ArchiveDatabase,ArchiveDomain,ArchiveGuid,AuditLog,Confirm,Database,Debug,Discovery,DisplayName,DomainController,Equipment,ErrorAction,ErrorVariable,Force,HoldForMigration,Identity,IncludeSoftDeletedObjects,LinkedCredential,LinkedDomainController,LinkedMasterAccount,LinkedRoom,MailboxPlan,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,PublicFolder,RemoteArchive,RetentionPolicy,Room,SKUAssigned,SKUCapability,Shared,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-ServiceEmailChannel", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,Monitoring,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,GetMailboxLog,Identity,Mailbox,NotificationEmailAddresses,OutBuffer,OutVariable,ShowRecoveryPassword,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveSyncDebugLogging,ProtocolSettings,RecalculateHasActiveSyncDevicePartnership"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SendLogsTo,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapPermissions"
					}, "GetImapProtocolLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopPermissions"
					}, "GetPopProtocolLog")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "DescriptionTimeFormat,DescriptionTimeZone,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LogonStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Database,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,ArchiveDatabase,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,InactiveMailboxOnly,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,Server,SoftDeletedMailbox,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DumpsterStatistics,ErrorAction,ErrorVariable,Identity,IncludePreExchange2013,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolderStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive,AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,FolderScope,Identity,IncludeAnalysis,IncludeOldestAndNewestItems,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Owner,ReadFromDomainController,ResultSize,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,AllMailboxPlanReleases,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,VerifyDefaultFolderNameLanguage,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRepairRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Database,Debug,Detailed,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,StoreMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive,AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CopyOnServer,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludePassive,IncludeQuarantineDetails,NoADLookup,OutBuffer,OutVariable,Server,StoreMailboxIdentity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssignmentMethod,ConfigWriteScope,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,Enabled,ErrorAction,ErrorVariable,Exclusive,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,GetEffectiveUsers,Identity,Organization,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientWriteScope,Role,RoleAssignee,RoleAssigneeType,Verbose,WarningAction,WarningVariable,WritableDatabase,WritableRecipient,WritableServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MergeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Mailbox,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,SourceMailbox,Status,Suspend,TargetMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MergeRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageCategory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeLocales,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdSite,DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,SLATargetTimespan,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdSite,DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,Monitoring,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync,GetMailboxLog,NotificationEmailAddresses,ShowRecoveryPassword"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions",
						"OfflineAddressBookEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PhysicalAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,Database,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExchangeServer,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Capabilities,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Trustee,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteAccountSyncCache", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ValidateCache,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemovedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SendAddress", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AddressId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,MaintenanceWindowDays,OutBuffer,OutVariable,ReportingDatabase,ReportingServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "AccountPartition,Anr,BypassOwnerCheck,Debug,DeletedSiteMailbox,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,SubscriptionType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ToolInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Trust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReadFromDomainController"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,Filter,IgnoreDefaultScope,ResultSize,SortBy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccountPartition,Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,Preview,ReadFromDomainController,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPrincipalNamesSuffix", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnit,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-ContactList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CSV,CSVData,CSVStream,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Invoke-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LinkedIn,Mailbox,OAuthVerifier,OutBuffer,OutVariable,RedirectUri,RequestSecret,RequestToken,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "AppAuthorizationCode,Facebook")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Mailbox,Name,OutBuffer,OutVariable,Password,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,ExternalIPAddresses,Features,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Confirm,Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Force,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUsername,Mailbox,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,ApplyCategory,BodyContainsWords,Confirm,CopyToFolder,DeleteMessage,ErrorAction,ErrorVariable,ExceptIfBodyContainsWords,ExceptIfFlaggedForAction,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromSubscription,ExceptIfHasAttachment,ExceptIfHasClassification,ExceptIfHeaderContainsWords,ExceptIfMessageTypeMatches,ExceptIfMyNameInCcBox,ExceptIfMyNameInToBox,ExceptIfMyNameInToOrCcBox,ExceptIfMyNameNotInToBox,ExceptIfReceivedAfterDate,ExceptIfReceivedBeforeDate,ExceptIfRecipientAddressContainsWords,ExceptIfSentOnlyToMe,ExceptIfSentTo,ExceptIfSubjectContainsWords,ExceptIfSubjectOrBodyContainsWords,ExceptIfWithImportance,ExceptIfWithSensitivity,ExceptIfWithinSizeRangeMaximum,ExceptIfWithinSizeRangeMinimum,FlaggedForAction,Force,ForwardAsAttachmentTo,ForwardTo,From,FromAddressContainsWords,FromMessageId,FromSubscription,HasAttachment,HasClassification,HeaderContainsWords,Mailbox,MarkAsRead,MarkImportance,MessageTypeMatches,MoveToFolder,MyNameInCcBox,MyNameInToBox,MyNameInToOrCcBox,MyNameNotInToBox,Name,Organization,OutBuffer,OutVariable,Priority,ReceivedAfterDate,ReceivedBeforeDate,RecipientAddressContainsWords,RedirectTo,SentOnlyToMe,SentTo,StopProcessingRules,SubjectContainsWords,SubjectOrBodyContainsWords,ValidateOnly,WarningAction,WarningVariable,WhatIf,WithImportance,WithSensitivity,WithinSizeRangeMaximum,WithinSizeRangeMinimum")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "EnableRoomMailboxAccount")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxRepairRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,CorruptionType,Database,Debug,DetectOnly,DomainController,ErrorAction,ErrorVariable,Force,Mailbox,OutBuffer,OutVariable,StoreMailbox,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IsDefault,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Force,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUsername,LeaveOnServer,Mailbox,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Hotmail"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Force,Mailbox,Name,OutBuffer,OutVariable,Password,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Imap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Pop")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"HotmailSyncPermissions"
					}, "DGroup,InternalFlags,Olc,Puid"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Eas"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregatedMailboxGuid,Authentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,IncrementalSyncInterval,Mailbox,Name,OutBuffer,OutVariable,Password,RemoteEmailAddress,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,TargetRootFolder,UserName,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Imap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Pop")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Instance,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccessRights,Confirm,Deny,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,InheritanceType,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxRepairRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MergeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OrganizationalContacts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RecipientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Trustee,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RemoteAccountSyncCache", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Repair-ContactProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FixConversationIndexTracking,FixDisplayName,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Reset-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,IncludeUserApproved,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MergeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendWhenReadyToComplete,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-MapiSubmitSystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-SystemProbeEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Attachment,Body,CC,Debug,ErrorAction,ErrorVariable,From,Html,OutBuffer,OutVariable,Port,ProbeGuid,SmtpPassword,SmtpServer,SmtpUser,Subject,TestContext,TimeStamp,To,UseSsl,UseXheader,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSyncDebugLogging,ActiveSyncEnabled,ActiveSyncMailboxPolicy,OWAforDevicesEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,DomainController,ECPEnabled,EmailAddresses,ErrorAction,ErrorVariable,IgnoreDefaultScope,ImapEnableExactRFC822Size,MAPIBlockOutlookNonCachedMode,MAPIBlockOutlookRpcHttp,MAPIBlockOutlookVersions,Name,OutBuffer,OutVariable,PopEnableExactRFC822Size,SamAccountName,ShowGalAsDefaultView,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EwsPermissions"
					}, "EwsAllowEntourage,EwsAllowList,EwsAllowMacOutlook,EwsAllowOutlook,EwsApplicationAccessPolicy,EwsBlockList,EwsEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapPermissions"
					}, "ImapEnabled,ImapForceICalForCalendarRetrievalOption,ImapMessagesRetrievalMimeFormat,ImapSuppressReadReceipt,ImapUseProtocolDefaults"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "OwaMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "OWAEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OutlookAnywherePermissions"
					}, "MAPIEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopPermissions"
					}, "PopEnabled,PopForceICalForCalendarRetrievalOption,PopMessagesRetrievalMimeFormat,PopSuppressReadReceipt,PopUseProtocolDefaults")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddAdditionalResponse,AddNewRequestsTentatively,AddOrganizerToSubject,AdditionalResponse,AllBookInPolicy,AllRequestInPolicy,AllRequestOutOfPolicy,AllowConflicts,AllowRecurringMeetings,AutomateProcessing,BookInPolicy,BookingWindowInDays,Confirm,ConflictPercentageAllowed,Debug,DeleteAttachments,DeleteComments,DeleteNonCalendarItems,DeleteSubject,DomainController,EnableResponseDetails,EnforceSchedulingHorizon,ErrorAction,ErrorVariable,ForwardRequestsToDelegates,IgnoreDefaultScope,MaximumConflictInstances,MaximumDurationInMinutes,OrganizerInfo,OutBuffer,OutVariable,RemoveForwardedMeetingNotifications,RemoveOldMeetingMessages,RemovePrivateProperty,RequestInPolicy,RequestOutOfPolicy,ResourceDelegates,ScheduleOnlyDuringWorkHours,TentativePendingApproval,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "ProcessExternalMeetingMessages")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LinkedIn,OAuthVerifier,OutBuffer,OutVariable,RedirectUri,RequestSecret,RequestToken,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "AppAuthorizationCode,Facebook")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ConsumerMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlternateSupportEmailAddresses,Birthdate,BirthdayPrecision,Confirm,Debug,EmailAddresses,ErrorAction,ErrorVariable,FblEnabled,FirstName,Gender,Identity,LastName,LocaleID,MakeExoPrimary,MakeExoSecondary,MigrationDryRun,Name,NameVersion,Occupation,OptInUser,OutBuffer,OutVariable,PostalCode,Region,Timezone,UsageLocation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssistantName,City,Company,CountryOrRegion,Department,DisplayName,Fax,FirstName,GeoCoordinates,HomePhone,Identity,Initials,LastName,Manager,MobilePhone,Name,Notes,Office,OtherFax,OtherHomePhone,OtherTelephone,Pager,Phone,PhoneticDisplayName,PostalCode,SeniorityIndex,StateOrProvince,StreetAddress,TelephoneAssistant,Title,WebPage"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,IgnoreDefaultScope,OutBuffer,OutVariable,PostOfficeBox,SimpleDisplayName,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Confirm,Debug,DisableAsPoison,DisplayName,DomainController,EnablePoisonSubscription,Enabled,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Password,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServers,Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,ExternalIPAddresses,Features,Name,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Confirm,Debug,DisableAsPoison,DisplayName,DomainController,EmailAddress,EnablePoisonSubscription,Enabled,ErrorAction,ErrorVariable,Force,Identity,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUserName,Mailbox,OutBuffer,OutVariable,ResendVerification,ValidateSecret,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowUMCallsFromNonUsers,AssistantName,CertificateSubject,City,Company,Confirm,CountryOrRegion,CreateDTMFMap,Debug,Department,DisplayName,DomainController,EmwsEnabled,ErrorAction,ErrorVariable,Fax,FirstName,GeoCoordinates,HomePhone,IgnoreDefaultScope,Initials,LastName,LinkedCredential,LinkedDomainController,LinkedMasterAccount,Manager,MobilePhone,Name,NetID,Notes,Office,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,PostOfficeBox,PostalCode,ResetPasswordOnNextLogon,SKUAssigned,SamAccountName,SeniorityIndex,SimpleDisplayName,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UserPrincipalName,Verbose,WarningAction,WarningVariable,WebPage,WhatIf,WindowsEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,Name,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EmailAddressPolicyEnabled,ErrorAction,ErrorVariable,ForceUpgrade,GenerateExternalDirectoryObjectId,IgnoreDefaultScope,MacAttachmentFormat,MaxReceiveSize,MaxRecipientPerMessage,MaxSendSize,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,RemovePicture,RemoveSpokenName,SecondaryAddress,SimpleDisplayName,UseMapiRichTextFormat,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "ModeratedBy,ModerationEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,ImmutableId,Name,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,ArchiveQuota,ArchiveWarningQuota,CalendarVersionStoreDisabled,Confirm,Debug,DomainController,EmailAddressPolicyEnabled,EndDateForRetentionHold,ErrorAction,ErrorVariable,ForceUpgrade,IgnoreDefaultScope,JournalArchiveAddress,LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,MacAttachmentFormat,MaxReceiveSize,MaxSendSize,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RemovePicture,RemoveSpokenName,RetainDeletedItemsFor,RetentionComment,RetentionHoldEnabled,RetentionUrl,SKUAssigned,SKUCapability,SamAccountName,SecondaryAddress,SimpleDisplayName,SingleItemRecoveryEnabled,StartDateForRetentionHold,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserPrincipalName,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "FederatedIdentity"),
					new RoleParameters(new string[]
					{
						"ResetUserPasswordManagementPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,Identity,ImmutableId,LitigationHoldEnabled,Name,Office,OriginalNetID,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressBookPolicy"),
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions",
						"RichCoexistenceRestrictions"
					}, "ArchiveName"),
					new RoleParameters(new string[]
					{
						"ChangeMailboxPlanAssignmentPermissions",
						"EOPPremiumRestrictions"
					}, "MailboxPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,AddAggregatedAccount,AddOnSKUCapability,AggregatedMailboxGuid,AntispamBypassEnabled,ApplyMandatoryProperties,Arbitration,ArbitrationMailbox,ArchiveDomain,ArchiveQuota,ArchiveStatus,ArchiveWarningQuota,AuditLog,CalendarLoggingQuota,CalendarRepairDisabled,CalendarVersionStoreDisabled,ClientExtensions,Confirm,Debug,DeliverToMailboxAndForward,DomainController,DowngradeHighPriorityMessagesEnabled,DumpsterMessagesPerFolderCountReceiveQuota,DumpsterMessagesPerFolderCountWarningQuota,EmailAddressPolicyEnabled,EnableRoomMailboxAccount,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExtendedPropertiesCountQuota,ExternalOofOptions,FolderHierarchyChildrenCountReceiveQuota,FolderHierarchyChildrenCountWarningQuota,FolderHierarchyDepthReceiveQuota,FolderHierarchyDepthWarningQuota,FoldersCountReceiveQuota,FoldersCountWarningQuota,Force,ForwardingSmtpAddress,GMGen,GrantSendOnBehalfTo,IgnoreDefaultScope,JournalArchiveAddress,Languages,LinkedCredential,LinkedDomainController,LinkedMasterAccount,MailRouting,MailboxContainerGuid,MailboxMessagesPerFolderCountReceiveQuota,MailboxMessagesPerFolderCountWarningQuota,Management,MaxBlockedSenders,MaxReceiveSize,MaxSafeSenders,MaxSendSize,MessageCopyForSendOnBehalfEnabled,MessageCopyForSentAsEnabled,MessageTracking,Migration,OABGen,OMEncryption,OfflineAddressBook,OutBuffer,OutVariable,QueryBaseDN,QueryBaseDNRestrictionEnabled,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RemoteAccountPolicy,RemoteRecipientType,RemoveAggregatedAccount,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,RetainDeletedItemsUntilBackup,RetentionHoldEnabled,RetentionPolicy,RoomMailboxPassword,RulesQuota,SCLDeleteEnabled,SCLDeleteThreshold,SCLJunkEnabled,SCLJunkThreshold,SCLQuarantineEnabled,SCLQuarantineThreshold,SCLRejectEnabled,SCLRejectThreshold,SKUAssigned,SKUCapability,SamAccountName,SecondaryAddress,SharingPolicy,SimpleDisplayName,SingleItemRecoveryEnabled,StartDateForRetentionHold,SuiteServiceStorage,TenantUpgrade,ThrottlingPolicy,Type,UMDataStorage,UMGrammar,UnifiedMailbox,UseDatabaseQuotaDefaults,UseDatabaseRetentionDefaults,UserCertificate,UserPrincipalName,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "LitigationHoldDate,LitigationHoldDuration,LitigationHoldOwner,RetentionComment,RetentionUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxQuotaPermissions"
					}, "IssueWarningQuota,ProhibitSendQuota,ProhibitSendReceiveQuota"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxSIRPermissions"
					}, "RetainDeletedItemsFor"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ManagedFoldersPermissions"
					}, "RemoveManagedFolderAndPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "MessageTrackingReadStatusEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"SetHiddenFromAddressListPermissions"
					}, "HiddenFromAddressListsEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "IsExcludedFromServingHierarchy,IsHierarchyReady,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "FederatedIdentity,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoReplyState,Confirm,Debug,DomainController,EndTime,ErrorAction,ErrorVariable,ExternalAudience,ExternalMessage,IgnoreDefaultScope,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "InternalMessage")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultReminderTime,DomainController,ErrorAction,ErrorVariable,FirstWeekOfYear,OutBuffer,OutVariable,ReminderSoundEnabled,RemindersEnabled,ShowWeekNumbers,TimeIncrement,Verbose,WarningAction,WarningVariable,WeatherEnabled,WeatherLocations,WeatherUnit,WeekStartDay,WhatIf,WorkingHoursEndTime,WorkingHoursStartTime,WorkingHoursTimeZone"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "WorkDays")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DetailLevel,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PublishDateRangeFrom,PublishDateRangeTo,PublishEnabled,ResetUrl,SearchableUrlEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BlockedSendersAndDomains,Confirm,ContactsTrusted,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IgnoreDefaultScope,OutBuffer,OutVariable,TrustedListsOnly,TrustedSendersAndDomains,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AfterMoveOrDeleteBehavior,AlwaysShowBcc,AlwaysShowFrom,AutoAddSignature,AutoAddSignatureOnMobile,CheckForForgottenAttachments,Confirm,ConversationSortOrder,Debug,DefaultFontColor,DefaultFontFlags,DefaultFontName,DefaultFontSize,DefaultFormat,DomainController,EmailComposeMode,EmptyDeletedItemsOnLogoff,ErrorAction,ErrorVariable,HideDeletedItems,IgnoreDefaultScope,NewItemNotification,OutBuffer,OutVariable,PreviewMarkAsReadBehavior,PreviewMarkAsReadDelaytime,ReadReceiptResponse,ShowConversationAsTree,SignatureHtml,SignatureText,SignatureTextOnMobile,UseDefaultSignatureOnMobile,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "SendAddressDefault")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,Alias,AntispamBypassEnabled,ApplyMandatoryProperties,ArchiveDomain,ArchiveName,ArchiveQuota,ArchiveStatus,ArchiveWarningQuota,AuditAdmin,AuditDelegate,AuditEnabled,AuditLogAgeLimit,CalendarLoggingQuota,CalendarRepairDisabled,CalendarVersionStoreDisabled,Confirm,CustomAttribute1,Database,Debug,DeliverToMailboxAndForward,DisplayName,DomainController,DowngradeHighPriorityMessagesEnabled,EmailAddressPolicyEnabled,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExternalOofOptions,Force,HiddenFromAddressListsEnabled,IgnoreDefaultScope,IsDefault,IsDefaultForPreviousVersion,LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,MailboxPlanRelease,ManagedFolderMailboxPolicy,MaxBlockedSenders,MaxReceiveSize,MaxSafeSenders,MaxSendSize,MessageTrackingReadStatusEnabled,Name,OfflineAddressBook,OutBuffer,OutVariable,QueryBaseDNRestrictionEnabled,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RemoteAccountPolicy,RemoteRecipientType,RequireSenderAuthenticationEnabled,ResetPasswordOnNextLogon,RetainDeletedItemsUntilBackup,RetentionComment,RetentionHoldEnabled,RetentionPolicy,RetentionUrl,RulesQuota,SCLDeleteEnabled,SCLDeleteThreshold,SCLJunkEnabled,SCLJunkThreshold,SCLQuarantineEnabled,SCLQuarantineThreshold,SCLRejectEnabled,SCLRejectThreshold,SKUCapability,SharingPolicy,SingleItemRecoveryEnabled,StartDateForRetentionHold,ThrottlingPolicy,UseDatabaseQuotaDefaults,UseDatabaseRetentionDefaults,UserCertificate,UserPrincipalName,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxQuotaPermissions"
					}, "IssueWarningQuota,ProhibitSendQuota,ProhibitSendReceiveQuota"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxSIRPermissions"
					}, "RetainDeletedItemsFor"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DateFormat,ErrorAction,ErrorVariable,Language,LocalizeDefaultFolderName,OutBuffer,OutVariable,TimeFormat,TimeZone,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CheckBeforeSend,Confirm,DictionaryLanguage,ErrorAction,ErrorVariable,IgnoreMixedDigits,IgnoreUppercase,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MergeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IncrementalSyncInterval,InternalFlags,IsAdministrativeCredential,LargeItemLimit,OutBuffer,OutVariable,OutlookAnywhereHostName,Priority,RehomeRequest,RemoteCredential,RemoteSourceMailboxServerLegacyDN,SkipMerging,StartAfter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DisableFacebook,DomainController,InstantMessagingType,JunkEmailEnabled,SMimeEnabled,UNCAccessOnPrivateComputersEnabled,UNCAccessOnPublicComputersEnabled,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "FacebookEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "ActionForUnknownFileAndMIMETypes,ActiveSyncIntegrationEnabled,AllAddressListsEnabled,AllowCopyContactsToDeviceAddressBook,AllowOfflineOn,AllowedFileTypes,AllowedMimeTypes,BlockedFileTypes,BlockedMimeTypes,CalendarEnabled,ChangePasswordEnabled,Confirm,ContactsEnabled,DefaultClientLanguage,DefaultTheme,DelegateAccessEnabled,DirectFileAccessOnPrivateComputersEnabled,DirectFileAccessOnPublicComputersEnabled,DisplayPhotosEnabled,ErrorAction,ErrorVariable,ExplicitLogonEnabled,ForceSaveAttachmentFilteringEnabled,ForceSaveFileTypes,ForceSaveMimeTypes,ForceWacViewingFirstOnPrivateComputers,ForceWacViewingFirstOnPublicComputers,ForceWebReadyDocumentViewingFirstOnPrivateComputers,ForceWebReadyDocumentViewingFirstOnPublicComputers,GlobalAddressListEnabled,GroupCreationEnabled,IRMEnabled,Identity,InstantMessagingEnabled,IsDefault,JournalEnabled,LinkedInEnabled,LogonAndErrorLanguage,Name,NotesEnabled,OWALightEnabled,OrganizationEnabled,OutBuffer,OutVariable,OutboundCharset,PhoneticSupportEnabled,PlacesEnabled,PremiumClientEnabled,PublicFoldersEnabled,RecoverDeletedItemsEnabled,RemindersAndNotificationsEnabled,ReportJunkEmailEnabled,RulesEnabled,SearchFoldersEnabled,SetPhotoEnabled,SetPhotoURL,SignaturesEnabled,SilverlightEnabled,SkipCreateUnifiedGroupCustomSharepointClassification,SpellCheckerEnabled,TasksEnabled,TextMessagingEnabled,ThemeSelectionEnabled,UMIntegrationEnabled,UseGB18030,UseISO885915,UserDiagnosticEnabled,WSSAccessOnPrivateComputersEnabled,WSSAccessOnPublicComputersEnabled,WacExternalServicesEnabled,WacOMEXEnabled,WacViewingOnPrivateComputersEnabled,WacViewingOnPublicComputersEnabled,WarningAction,WarningVariable,WeatherEnabled,WebPartsFrameOptionsType,WebReadyDocumentViewingForAllSupportedTypes,WebReadyDocumentViewingOnPrivateComputersEnabled,WebReadyDocumentViewingOnPublicComputersEnabled,WebReadyDocumentViewingSupportedFileTypes,WebReadyDocumentViewingSupportedMimeTypes,WebReadyFileTypes,WebReadyMimeTypes,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DisableAsPoison,DisplayName,DomainController,EmailAddress,EnablePoisonSubscription,Enabled,ErrorAction,ErrorVariable,Force,Identity,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUserName,LeaveOnServer,Mailbox,OutBuffer,OutVariable,ResendVerification,ValidateSecret,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RemoteAccountSyncCache", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternalFlags"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Authentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IncrementalSyncInterval,Mailbox,OutBuffer,OutVariable,Password,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,LEOEnabled,NetID,PhoneticDisplayName,SeniorityIndex,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveRelease,BusinessNetID,CopyShadowAttributes,EnableAccount,ErrorAction,ErrorVariable,GenerateExternalDirectoryObjectId,InPlaceHoldsRaw,LinkedCredential,LinkedDomainController,LinkedMasterAccount,MailboxRelease,OutBuffer,OutVariable,RemotePowerShellEnabled,SKUAssigned,UpgradeDetails,UpgradeMessage,UpgradeRequest,UpgradeStage,UpgradeStageTimeStamp,UpgradeStatus,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"OpenDomainProfileUpdatePermissions",
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "DisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "PostOfficeBox,SimpleDisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "City,CountryOrRegion,Fax,FirstName,GeoCoordinates,HomePhone,Initials,LastName,MobilePhone,Notes,Office,Pager,Phone,PostalCode,StateOrProvince,StreetAddress,WebPage"),
					new RoleParameters(new string[]
					{
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "AssistantName,Company,Department,Manager,Name,OtherFax,OtherHomePhone,OtherTelephone,TelephoneAssistant,Title"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "CertificateSubject,Confirm,Debug,DomainController,IgnoreDefaultScope,PublicFolder,ResetPasswordOnNextLogon,SamAccountName,UserPrincipalName,Verbose,WhatIf,WindowsEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,PictureData,PictureStream,Preview,Save,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MergeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MAPIConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,Debug,EnableSoftDeletedRecipientLogon,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OAuthConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Mailbox,OutBuffer,OutVariable,ReloadConfig,Service,TargetUri,UseCachedToken,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,ForceUpgrade,OnPremisesCredentials,OutBuffer,OutVariable,SuppressOAuthWarning,TenantCredentials,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Mail_Tips
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccessMethod,Confirm,Credentials,Debug,DomainController,ErrorAction,ErrorVariable,ForestName,Organization,OutBuffer,OutVariable,TargetAutodiscoverEpr,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Name,TargetAddressDomains")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DomainNames,MailTipsAccessEnabled,MailTipsAccessLevel,MailTipsAccessScope,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OrgWideAccount,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AVAuthenticationService,Confirm,CustomerFeedbackEnabled,Debug,DomainController,ErrorAction,ErrorVariable,ForwardSyncLiveIdBusinessInstance,Identity,Industry,MailTipsAllTipsEnabled,MailTipsGroupMetricsEnabled,MailTipsMailboxSourcedTipsEnabled,OutBuffer,OutVariable,PublicComputersDetectionEnabled,PublicFolderMailboxesLockedForNewConnections,PublicFolderMailboxesMigrationComplete,SIPAccessService,SIPSessionBorderController,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipsExternalRecipientsTipsEnabled,MailTipsLargeAudienceThreshold")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "MailTipsAccessEnabled,MailTipsAccessLevel,MailTipsAccessScope")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Mailbox_Import_Export
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Mailbox,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxExportRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Mailbox,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxImportRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ProcessType,ResultSize,StartDate,Summary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AssociatedMessagesCopyOption,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,ConflictResolutionOption,ContentCodePage,Debug,DomainController,ErrorAction,ErrorVariable,ExcludeDumpster,ExcludeFolders,FilePath,IncludeFolders,InternalFlags,IsArchive,LargeItemLimit,Mailbox,Name,OutBuffer,OutVariable,Priority,RemoteCredential,RemoteHostName,SkipMerging,SourceRootFolder,Suspend,SuspendComment,TargetRootFolder,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,Priority,RehomeRequest,RemoteCredential,RemoteHostName,SkipMerging,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Mailbox_Search
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,InactiveMailboxOnly,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Mailbox,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxExportRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,ShowDeletionInProgressSearches,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ProcessType,ResultSize,StartDate,Summary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "ErrorAction,ErrorVariable,GetChildren,Identity,Mailbox,OutBuffer,OutVariable,Recurse,ResidentFolders,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SearchMessagePermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Resume,StatisticsStartIndex,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SearchMessagePermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Message_Tracking
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccessMethod,Confirm,Credentials,Debug,DomainController,ErrorAction,ErrorVariable,ForestName,Organization,OutBuffer,OutVariable,TargetAutodiscoverEpr,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,End,ErrorAction,ErrorVariable,EventId,InternalMessageId,MessageId,MessageSubject,OutBuffer,OutVariable,Recipients,Reference,ResultSize,Sender,Server,Start,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,Debug,DetailLevel,DoNotResolve,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecipientPathFilter,Recipients,ReportTemplate,ResultSize,Status,TraceLevel,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Name,TargetAddressDomains")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DomainNames,Name"),
					new RoleParameters(new string[]
					{
						"MessageTrackingPermissions"
					}, "DeliveryReportEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,Confirm,Debug,DoNotResolve,DomainController,ErrorAction,ErrorVariable,Identity,MessageEntryId,MessageId,OutBuffer,OutVariable,Recipients,ResultSize,Sender,Subject,TraceLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OrgWideAccount,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"MessageTrackingPermissions"
					}, "DeliveryReportEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Migration
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Complete-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-MigrationReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,CsvStream,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Partition,RowCount,StartingRowIndex,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-RecipientDataProperty", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Picture,SpokenName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,Endpoint,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitErrorsTo,Organization,OutBuffer,OutVariable,Partition,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchStatus,Confirm,ConnectionSettings,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Partition,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxGuid,Organization,OutBuffer,OutVariable,Partition,ResultSize,Status,StatusSummary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUserStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitSkippedItemsTo,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ProcessType,ResultSize,StartDate,Summary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,HasPermanentError,Identity,Lockdown,OutBuffer,OutVariable,RelocationLastError,RelocationStateRequested,RelocationStatusDetailsSource,SourceStateOnly,StaleLockdown,Suspended,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-RecipientDataProperty", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,Identity,OutBuffer,OutVariable,Picture,SpokenName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "ArchiveOnly,AutoComplete,BadItemLimit,LargeItemLimit,Local,PrimaryOnly,SkipSteps,SourceEndpoint,SourcePublicFolderDatabase,TargetDeliveryDomain,TargetEndpoint"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "AllowIncrementalSyncs,AllowUnknownColumnsInCSV,AutoRetryCount,AutoStart,CSVData,CompleteAfter,Confirm,Debug,DisableOnCopy,DisallowExistingUsers,DomainController,ErrorAction,ErrorVariable,ExcludeFolders,Locale,Name,NotificationEmails,Organization,OutBuffer,OutVariable,Partition,ReportInterval,StartAfter,TargetArchiveDatabases,TargetDatabases,TimeZone,UserIds,Users,Verbose,WarningAction,WarningVariable,WhatIf,XO1")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "Autodiscover,EmailAddress,ExchangeOutlookAnywhere,ExchangeRemoteMove,ExchangeServer,MailboxPermission,NspiServer,PSTImport,PublicFolder,PublicFolderDatabaseServerLegacyDN,RPCProxyServer,SourceMailboxLegacyDN,TestMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Credentials,Debug,DomainController,ErrorAction,ErrorVariable,MaxConcurrentIncrementalSyncs,MaxConcurrentMigrations,Name,Organization,OutBuffer,OutVariable,Partition,RemoteServer,SkipVerification,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Authentication,Security"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapMigrationPermissions"
					}, "IMAP,Port")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoCompletionEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeTenantModeEnabled,OutBuffer,OutVariable,RelocationStateRequested,SafeLockdownSchedule,TargetAccountPartition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MigrationUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Complete,Confirm,Debug,DeprovisionedTarget,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveGuid,ArchiveName,ExchangeGuid")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "BadItemLimit,LargeItemLimit,SourcePublicFolderDatabase"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "AllowIncrementalSyncs,AllowUnknownColumnsInCSV,AutoRetryCount,CSVData,CompleteAfter,Confirm,Debug,DisallowExistingUsers,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,Organization,OutBuffer,OutVariable,Partition,ReportInterval,StartAfter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MigrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Features,Identity,MaxConcurrentMigrations,MaxNumberOfBatches,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "EmailAddress,ExchangeServer,NspiServer,SourceMailboxLegacyDN,TestMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Authentication,Confirm,Credentials,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxPermission,MaxConcurrentIncrementalSyncs,MaxConcurrentMigrations,Organization,OutBuffer,OutVariable,Partition,RPCProxyServer,RemoteServer,Security,SkipVerification,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapMigrationPermissions"
					}, "Port")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Authentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IncrementalSyncInterval,Mailbox,OutBuffer,OutVariable,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoCompletionEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeTenantModeEnabled,OutBuffer,OutVariable,RelocationStateRequested,ResetPermanentError,ResetStartSyncTime,ResetTransitionCounter,Resume,RollbackGls,SafeLockdownSchedule,Suspend,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Partition,Validate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MigrationServerAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "PublicFolder,PublicFolderDatabaseServerLegacyDN"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Authentication,Autodiscover,Confirm,Credentials,Debug,EmailAddress,Endpoint,ErrorAction,ErrorVariable,ExchangeOutlookAnywhere,ExchangeRemoteMove,ExchangeServer,Imap,MailboxPermission,Organization,OutBuffer,OutVariable,PSTImport,Partition,RPCProxyServer,Security,SourceMailboxLegacyDN,TestMailbox,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapMigrationPermissions"
					}, "FilePath,Port,RemoteServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Monitoring
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Add-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ColumnIndex,Debug,ErrorAction,ErrorVariable,Kind,SearchStrategy,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Add-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Name,SchedulerJob,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Add-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Name,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,RetrievePasswords,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,RetrieveConnectionString,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Datamart,Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,Recurrence,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,SchedulerJob,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,ReadPublisher,ResultSize,UploaderLog,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-DataMiningPIIValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "PiiData,PiiType")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ClusterAuthHost,ClusterPath,Credential1,Credential1Expiration,Credential2,Credential2Expiration,Debug,ErrorAction,ErrorVariable,Name,Scope,Verbose,WarningAction,WarningVariable,WhatIf,WorkingClusterDirectory")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConnectionString,Debug,Description,ErrorAction,ErrorVariable,Name,Owner,Scope,Team,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Datamart,Debug,Description,Enabled,ErrorAction,ErrorVariable,Name,RetentionDays,Scheduler,SkipInvalidLines,UpdateFrequency,UpdateStartTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,MaxRequestsPerMinute,RetentionDays,Scope,Timeout,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,Enabled,ErrorAction,ErrorVariable,MaxConsecutiveDays,MostRecentFirst,Name,Owner,Priority,Recurrence,RetentionDays,SchemaScript,Scope,Script,StrictStreamSelection,Team,Timeout,UpdateFrequency,UpdateStartTime,VCPercentageAllocation,Verbose,WaitForJobsToFinish,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Parent,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BatchFileSizeInMB,BatchLineProcessingCount,CosmosCluster,Debug,DiskSpaceThreshold,ErrorAction,ErrorVariable,PIIScrubbingEnabled,Scope,SecurityLogEncryptionEnabled,SourceLogRetention,TransformWaitTime,UploadsEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "New-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommentHeader,CosmosTransformer,Debug,Description,DestinationPath,DynamicPath,Enabled,ErrorAction,ErrorVariable,FileExtension,Format,Name,Partitioner,RetentionDays,Scope,SourcePath,TransformationPath,Transformer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Remove-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ClusterAuthHost,ClusterPath,Credential1,Credential1Expiration,Credential2,Credential2Expiration,Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf,WorkingClusterDirectory")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConnectionString,Debug,Description,ErrorAction,ErrorVariable,Identity,Owner,Team,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,Enabled,ErrorAction,ErrorVariable,Identity,RetentionDays,Scheduler,SkipInvalidLines,UpdateFrequency,UpdateStartTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Kind,Strategy,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,Scope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosCluster,Debug,ErrorAction,ErrorVariable,MaxRequestsPerMinute,RetentionDays,Scope,Timeout,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,Enabled,ErrorAction,ErrorVariable,Identity,MaxConsecutiveDays,MostRecentFirst,Owner,Priority,Recurrence,RetentionDays,SchemaScript,Script,StrictStreamSelection,Team,Timeout,UpdateFrequency,UpdateStartTime,VCPercentageAllocation,Verbose,WaitForJobsToFinish,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BatchFileSizeInMB,BatchLineProcessingCount,CosmosCluster,Debug,DiskSpaceThreshold,ErrorAction,ErrorVariable,PIIScrubbingEnabled,Scope,SecurityLogEncryptionEnabled,SourceLogRetention,TransformWaitTime,UploadsEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommentHeader,CosmosTransformer,Debug,Description,DestinationPath,DynamicPath,Enabled,ErrorAction,ErrorVariable,FileExtension,Format,Identity,Partitioner,RetentionDays,SourcePath,TransformationPath,Transformer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Set-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Data,Debug,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-BlackBoxMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Test-CAMomConnectorAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Test-CentralAdminAuditAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Test-CentralAdminServiceAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Dump-ProvisioningCache", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Application,CacheKeys,Confirm,CurrentOrganization,Debug,ErrorAction,ErrorVariable,GlobalCache,Organizations,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-ActiveSyncLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,EndDate,ErrorAction,ErrorVariable,Filename,Force,OutBuffer,OutVariable,OutputPath,OutputPrefix,StartDate,UseGMT,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FailedContentIndexDocuments", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,Debug,DomainController,EndDate,ErrorAction,ErrorCode,ErrorVariable,FailureMode,Identity,MailboxDatabase,OutBuffer,OutVariable,ResultSize,Server,StartDate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DumpsterStatistics,ErrorAction,ErrorVariable,Identity,IncludePreExchange2013,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-StoreUsageStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CopyOnServer,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludePassive,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbeEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,IncludeSimulator,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Invoke-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EncryptedSystemProbeGuid", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,TimeStamp,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CreationTime,Debug,DomainController,ErrorAction,ErrorVariable,EventCategoryId,EventInstanceId,EventSource,EventTime,InsertionStrings,NotificationRecipients,Organization,OutBuffer,OutVariable,PeriodicKey,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Extension,Identity,MimeType,Name,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OrganizationalContacts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Repair-ContactProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FixConversationIndexTracking,FixDisplayName,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Reset-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,IncludeUserApproved,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Reset-ProvisioningCache", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Application,CacheKeys,Confirm,CurrentOrganization,Debug,ErrorAction,ErrorVariable,GlobalCache,Organizations,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-MapiSubmitSystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-SystemProbeEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Attachment,Body,CC,Debug,ErrorAction,ErrorVariable,From,Html,OutBuffer,OutVariable,Port,ProbeGuid,SmtpPassword,SmtpServer,SmtpUser,Subject,TestContext,TimeStamp,To,UseSsl,UseXheader,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ActiveDirectoryConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,SearchLatencyThresholdInMilliseconds,TargetDC,TotalTimeoutInMinutes,UseADDriver,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ActiveSyncConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowUnsecureAccess,ClientAccessServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LightMode,MailboxCredential,MailboxServer,MonitoringContext,MonitoringInstance,OutBuffer,OutVariable,ResetTestAccountCredentials,Timeout,TrustAnySSLCertificate,URL,UseAutodiscoverForClientAccessServer,UserType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ArchiveConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IncludeArchiveMRMConfiguration,MessageId,OutBuffer,OutVariable,UserSmtp,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-AssistantHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IncludeCrashDump,MaxProcessingTimeInMinutes,MonitoringContext,OutBuffer,OutVariable,ResolveProblems,ServerName,Verbose,WarningAction,WarningVariable,WatermarkBehindWarningThreholdInMinutes,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-CalendarConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LightMode,MailboxServer,MonitoringContext,OutBuffer,OutVariable,ResetTestAccountCredentials,TestType,Timeout,TrustAnySSLCertificate,UserType,Verbose,VirtualDirectoryName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-DataCenterDKMAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-EcpConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LightMode,MailboxServer,MonitoringContext,OutBuffer,OutVariable,RSTEndPoint,ResetTestAccountCredentials,TestType,Timeout,TrustAnySSLCertificate,UserType,Verbose,VirtualDirectoryName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-EcpConnectivity2", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowUnsecureAccess,ClientAccessServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LightMode,MailboxCredential,MailboxServer,MonitoringContext,OutBuffer,OutVariable,RequestTimeout,ResetTestAccountCredentials,TestType,Timeout,TrustAnySSLCertificate,Url,UserType,Verbose,VirtualDirectoryName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-EdgeSyncEhf", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ConnectorId,Debug,DomainController,ErrorAction,ErrorVariable,MonitoringContext,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-EdgeSyncMserv", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EmailAddresses,ErrorAction,ErrorVariable,Mailboxes,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-EdgeSynchronization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExcludeRecipientTest,FullCompareMode,MaxReportSize,MonitoringContext,OutBuffer,OutVariable,TargetServer,Verbose,VerifyRecipient,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ExchangeNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,InsertionStrings,Organization,OutBuffer,OutVariable,PeriodicKey,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ExchangeSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IndexingTimeoutInSeconds,MailboxDatabase,MonitoringContext,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-GlobalLocatorService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-IPAllowListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-IPBlockListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RMSOnline,Recipient,Sender,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ImapConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServer,Confirm,ConnectionType,Debug,DomainController,ErrorAction,ErrorVariable,LightMode,MailboxCredential,MailboxServer,MonitoringContext,OutBuffer,OutVariable,PerConnectionTimeout,PortClientAccessServer,ResetTestAccountCredentials,Timeout,TrustAnySSLCertificate,UserType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-LinkedInConnect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthorizationCallbackUrl,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-LiveIdAuthentication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IgnoreLowPasswordConfidence,LiveIdXmlAuth,MailboxCredential,MonitoringContext,OutBuffer,OutVariable,PreferOfflineAuth,Server,SyncADBackendOnly,TestFailOver,TestLegacyAPI,UserType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MAPIConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveDirectoryTimeout,AllConnectionsTimeout,Archive,Confirm,CopyOnServer,Database,Debug,DomainController,EnableSoftDeletedRecipientLogon,ErrorAction,ErrorVariable,Identity,IncludePassive,MonitoringContext,OutBuffer,OutVariable,PerConnectionTimeout,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MRSHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MRSProxyCredentials,MRSProxyServer,MaxQueueScanAgeSeconds,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-Mailflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveDirectoryTimeout,AutoDiscoverTargetMailboxServer,Confirm,Debug,DomainController,ErrorAction,ErrorLatency,ErrorVariable,ExecutionTimeout,Identity,MonitoringContext,OutBuffer,OutVariable,TargetDatabase,TargetEmailAddress,TargetEmailAddressDisplayName,TargetMailboxServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MigrationServerAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Authentication,Autodiscover,Confirm,Credentials,Debug,EmailAddress,Endpoint,ErrorAction,ErrorVariable,ExchangeOutlookAnywhere,ExchangeRemoteMove,ExchangeServer,Imap,MailboxPermission,Organization,OutBuffer,OutVariable,PSTImport,Partition,RPCProxyServer,Security,SourceMailboxLegacyDN,TestMailbox,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapMigrationPermissions"
					}, "FilePath,Port,RemoteServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OAuthConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Mailbox,OrganizationDomain,OutBuffer,OutVariable,ReloadConfig,Service,TargetUri,UseCachedToken,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,UserIdentity,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OutlookConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,ErrorAction,ErrorVariable,Hostname,MailboxId,OutBuffer,OutVariable,ProbeIdentity,RunFromServerId,TimeOutSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OutlookWebServices", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoDiscoverServer,ClientAccessServer,Confirm,Debug,ErrorAction,ErrorVariable,Identity,MailboxCredential,MonitoringContext,OutBuffer,OutVariable,TrustAnySSLCertificate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-PopConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServer,Confirm,ConnectionType,Debug,DomainController,ErrorAction,ErrorVariable,LightMode,MailboxCredential,MailboxServer,MonitoringContext,OutBuffer,OutVariable,PerConnectionTimeout,PortClientAccessServer,ResetTestAccountCredentials,Timeout,TrustAnySSLCertificate,UserType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-PowerShellConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Authentication,ClientAccessServer,Confirm,ConnectionUri,Debug,DomainController,ErrorAction,ErrorVariable,MailboxServer,MonitoringContext,OutBuffer,OutVariable,ResetTestAccountCredentials,TestCredential,TestType,TrustAnySSLCertificate,UserType,Verbose,VirtualDirectoryName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ReplicationHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveDirectoryTimeout,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MonitoringContext,OutBuffer,OutVariable,OutputObjects,TransientEventSuppressionWindow,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-SenderId", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,HelloDomain,IPAddress,OutBuffer,OutVariable,PurportedResponsibleDomain,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ServiceHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveDirectoryTimeout,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,RequestorIdentity,SharePointUrl,UseAppTokenOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-SmtpConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MonitoringContext,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-TenantMonitoringPerfCounters", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CounterNameForAttempts,CounterNameForSuccesses,Debug,ErrorAction,ErrorVariable,EventId,MinimumCountForAlert,OutBuffer,OutVariable,SuccessThresholdPercentage,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-TopologyService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADServerRole,Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OperationType,OutBuffer,OutVariable,PartitionFqdn,Server,TargetDomainController,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-UMConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CallRouter,CertificateThumbprint,Confirm,Debug,DiagDtmfDurationInMilisecs,DiagDtmfSequence,DiagInitialSilenceInMilisecs,DiagInterDtmfDiffGapInMilisecs,DiagInterDtmfGapInMilisecs,DomainController,ErrorAction,ErrorVariable,From,ListenPort,MediaSecured,MonitoringContext,OutBuffer,OutVariable,PIN,Phone,RemotePort,ResetPIN,Secured,TUILogon,TUILogonAll,Timeout,UMDialPlan,UMIPGateway,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-WebServicesConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoDiscoverServer,ClientAccessServer,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LightMode,MailboxCredential,MonitoringContext,OutBuffer,OutVariable,TrustAnySSLCertificate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-FfoCentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SaveAndSendMosAlertEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ShdCadenceDate")
				}, "c")
			};
		}

		private class Move_Mailboxes
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Complete-OrganizationUpgrade", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CapacitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Database,DatabaseAvailabilityGroup,Debug,ErrorAction,ErrorVariable,Forest,OutBuffer,OutVariable,Refresh,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigName,Database,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Force,GenericScopeName,GenericScopeValue,GenericScopes,Identity,Organization,OutBuffer,OutVariable,Process,Server,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,EnableMailboxCounting,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DumpsterStatistics,ErrorAction,ErrorVariable,Identity,IncludePreExchange2013,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Flags,HighPriority,Identity,IncludeSoftDeletedObjects,MoveStatus,Offline,Organization,OrganizationalUnit,OutBuffer,OutVariable,Protect,RemoteHostName,ResultSize,SortBy,SourceDatabase,Suspend,SuspendWhenReadyToComplete,TargetDatabase,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MoveRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,MailboxGuid,MoveRequestQueue,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ProcessType,ResultSize,StartDate,Summary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Database,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Description,DisabledUpgradeStages,DomainController,Enabled,ErrorAction,ErrorVariable,MaxMailboxes,Name,OutBuffer,OutVariable,Priority,SourceVersion,StartDate,TargetVersion,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AllowLargeItems,ArchiveDomain,ArchiveOnly,ArchiveTargetDatabase,BadItemLimit,BatchName,CheckInitialProvisioningSetting,CompleteAfter,CompletedRequestAgeLimit,Confirm,Debug,DoNotPreserveMailboxSignature,DomainController,ErrorAction,ErrorVariable,ForceOffline,ForcePull,ForcePush,Identity,IgnoreRuleLimitErrors,IgnoreTenantMigrationPolicies,IncrementalSyncInterval,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,PreventCompletion,PrimaryOnly,Priority,Protect,Remote,RemoteArchiveTargetDatabase,RemoteCredential,RemoteGlobalCatalog,RemoteHostName,RemoteLegacy,RemoteOrganizationName,RemoteTargetDatabase,SkipMoving,StartAfter,Suspend,SuspendComment,SuspendWhenReadyToComplete,TargetDatabase,TargetDeliveryDomain,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxGuid,MoveRequestQueue,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendWhenReadyToComplete,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MailboxRelease")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddScope,ClearHistory,ConfigName,ConfigPairs,ConfigValue,Confirm,CreateSettingsGroup,Debug,Disable,DisableGroup,DomainController,EnableGroup,ErrorAction,ErrorVariable,ExpirationDate,Force,GenericScopeName,GenericScopeValue,GroupName,GuidMatch,Identity,MaxVersion,MinVersion,NameMatch,OutBuffer,OutVariable,Priority,Reason,RemoveScope,RemoveSetting,RemoveSettingsGroup,Scope,ScopeFilter,ScopeId,SettingsGroup,UpdateScope,UpdateSetting,UpdateSettingsGroup,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CompleteUpgradeStatus,Confirm,Debug,Description,DisabledUpgradeStages,DomainController,Enabled,ErrorAction,ErrorVariable,MaxMailboxes,Name,OutBuffer,OutVariable,Priority,StartDate,StartUpgradeStatus,Status,UpgradeOrganizationMailboxesStatus,UpgradeUserMailboxesStatus,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveGuid,ArchiveName,ExchangeGuid")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "SkipMailboxProvisioningConstraintValidation,TenantUpgrade")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "RemoteDatabaseGuid,RemoteHostName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,ArchiveTargetDatabase,BadItemLimit,BatchName,CompleteAfter,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreRuleLimitErrors,IncrementalSyncInterval,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,PreventCompletion,Priority,Protect,RemoteCredential,RemoteGlobalCatalog,RemoteHostName,SkipMoving,StartAfter,SuspendWhenReadyToComplete,TargetDatabase,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,MailboxRelease,OutBuffer,OutVariable,PilotMailboxRelease,PreviousMailboxRelease,UpgradeConstraints,UpgradeConstraintsDisabled,UpgradeDetails,UpgradeE14MbxCountForCurrentStage,UpgradeE14RequestCountForCurrentStage,UpgradeLastE14CountsUpdateTime,UpgradeMessage,UpgradeRequest,UpgradeStage,UpgradeStageTimeStamp,UpgradeStatus,UpgradeUnitsOverride,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveRelease,MailboxRelease,UpgradeDetails,UpgradeMessage,UpgradeRequest,UpgradeStage,UpgradeStageTimeStamp,UpgradeStatus")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-OrganizationPilot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-OrganizationUpgrade", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthoritativeOnly,ConfigOnly,Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MAPIConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "EnableSoftDeletedRecipientLogon")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class My_Custom_Apps
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Url"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "FileData,FileStream")
				}, "c")
			};
		}

		private class My_Marketplace_Apps
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DownloadOnly,Etoken,MarketplaceAssetID,MarketplaceQueryMarket,MarketplaceServicesUrl")
				}, "c")
			};
		}

		private class My_ReadWriteMailbox_Apps
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AllowReadWriteMailbox")
				}, "c")
			};
		}

		private class MyAddressInformation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "PostOfficeBox"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "City,CountryOrRegion,Fax,GeoCoordinates,Office,Phone,PostalCode,StateOrProvince,StreetAddress")
				}, "c")
			};
		}

		private class MyBaseOptions
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Force")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,GetMailboxLog,Identity,Mailbox,OutBuffer,OutVariable,ShowRecoveryPassword,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveSyncDebugLogging,ProtocolSettings,RecalculateHasActiveSyncDevicePartnership"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "DescriptionTimeFormat,DescriptionTimeZone,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GetChildren,Identity,MailFolderOnly,OutBuffer,OutVariable,Recurse,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,VerifyDefaultFolderNameLanguage,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageCategory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeLocales,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecipientPathFilter,Recipients,ReportTemplate,ResultSize,Status,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync,GetMailboxLog,ShowRecoveryPassword"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,AuthenticationType,BookmarkDisplayName,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,OutBuffer,OutVariable,Properties,PropertySet,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SendAddress", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AddressId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SupervisionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions",
						"ViewSupervisionListPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Preview,ReadFromDomainController,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-ContactList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CSV,CSVData,CSVStream,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LinkedIn,Mailbox,OAuthVerifier,OutBuffer,OutVariable,RedirectUri,RequestSecret,RequestToken,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "AppAuthorizationCode,Facebook")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,ApplyCategory,BodyContainsWords,Confirm,CopyToFolder,DeleteMessage,ErrorAction,ErrorVariable,ExceptIfBodyContainsWords,ExceptIfFlaggedForAction,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromSubscription,ExceptIfHasAttachment,ExceptIfHasClassification,ExceptIfHeaderContainsWords,ExceptIfMessageTypeMatches,ExceptIfMyNameInCcBox,ExceptIfMyNameInToBox,ExceptIfMyNameInToOrCcBox,ExceptIfMyNameNotInToBox,ExceptIfReceivedAfterDate,ExceptIfReceivedBeforeDate,ExceptIfRecipientAddressContainsWords,ExceptIfSentOnlyToMe,ExceptIfSentTo,ExceptIfSubjectContainsWords,ExceptIfSubjectOrBodyContainsWords,ExceptIfWithImportance,ExceptIfWithSensitivity,ExceptIfWithinSizeRangeMaximum,ExceptIfWithinSizeRangeMinimum,FlaggedForAction,Force,ForwardAsAttachmentTo,ForwardTo,From,FromAddressContainsWords,FromMessageId,FromSubscription,HasAttachment,HasClassification,HeaderContainsWords,MarkAsRead,MarkImportance,MessageTypeMatches,MoveToFolder,MyNameInCcBox,MyNameInToBox,MyNameInToOrCcBox,MyNameNotInToBox,Name,OutBuffer,OutVariable,Priority,ReceivedAfterDate,ReceivedBeforeDate,RecipientAddressContainsWords,RedirectTo,SentOnlyToMe,SentTo,StopProcessingRules,SubjectContainsWords,SubjectOrBodyContainsWords,ValidateOnly,WarningAction,WarningVariable,WhatIf,WithImportance,WithSensitivity,WithinSizeRangeMaximum,WithinSizeRangeMinimum")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Body,BodyFormat,Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Subject,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Parent,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,MessageEntryId,MessageId,OutBuffer,OutVariable,Recipients,ResultSize,Sender,Subject,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSyncDebugLogging"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ShowGalAsDefaultView,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapPermissions"
					}, "ImapForceICalForCalendarRetrievalOption,ImapMessagesRetrievalMimeFormat,ImapSuppressReadReceipt,ImapUseProtocolDefaults"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopPermissions"
					}, "PopForceICalForCalendarRetrievalOption,PopMessagesRetrievalMimeFormat,PopSuppressReadReceipt,PopUseProtocolDefaults")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddAdditionalResponse,AddNewRequestsTentatively,AddOrganizerToSubject,AdditionalResponse,AllBookInPolicy,AllRequestInPolicy,AllRequestOutOfPolicy,AllowConflicts,AllowRecurringMeetings,AutomateProcessing,BookInPolicy,BookingWindowInDays,Confirm,ConflictPercentageAllowed,DeleteAttachments,DeleteComments,DeleteNonCalendarItems,DeleteSubject,EnableResponseDetails,EnforceSchedulingHorizon,ErrorAction,ErrorVariable,ForwardRequestsToDelegates,IgnoreDefaultScope,MaximumConflictInstances,MaximumDurationInMinutes,OrganizerInfo,OutBuffer,OutVariable,RemoveForwardedMeetingNotifications,RemoveOldMeetingMessages,RemovePrivateProperty,RequestInPolicy,RequestOutOfPolicy,ResourceDelegates,ScheduleOnlyDuringWorkHours,TentativePendingApproval,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "ProcessExternalMeetingMessages")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,LinkedIn,OAuthVerifier,OutBuffer,OutVariable,RedirectUri,RequestSecret,RequestToken,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "AppAuthorizationCode,Facebook")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,UserCertificate,UserSMimeCertificate"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,DeliverToMailboxAndForward,ErrorAction,ErrorVariable,ExternalOofOptions,ForwardingSmtpAddress,GrantSendOnBehalfTo,Languages,MessageCopyForSendOnBehalfEnabled,MessageCopyForSentAsEnabled,OutBuffer,OutVariable,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled,UserCertificate,UserSMimeCertificate,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoReplyState,Confirm,EndTime,ErrorAction,ErrorVariable,ExternalAudience,ExternalMessage,IgnoreDefaultScope,OutBuffer,OutVariable,StartTime,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "InternalMessage")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DefaultReminderTime,ErrorAction,ErrorVariable,FirstWeekOfYear,OutBuffer,OutVariable,ReminderSoundEnabled,RemindersEnabled,ShowWeekNumbers,TimeIncrement,WarningAction,WarningVariable,WeatherEnabled,WeatherLocations,WeatherUnit,WeekStartDay,WhatIf,WorkingHoursEndTime,WorkingHoursStartTime,WorkingHoursTimeZone"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "WorkDays")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DetailLevel,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PublishDateRangeFrom,PublishDateRangeTo,PublishEnabled,ResetUrl,SearchableUrlEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BlockedSendersAndDomains,ContactsTrusted,Enabled,ErrorAction,ErrorVariable,IgnoreDefaultScope,OutBuffer,OutVariable,TrustedListsOnly,TrustedSendersAndDomains,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AfterMoveOrDeleteBehavior,AlwaysShowBcc,AlwaysShowFrom,AutoAddSignature,AutoAddSignatureOnMobile,CheckForForgottenAttachments,Confirm,ConversationSortOrder,DefaultFontColor,DefaultFontFlags,DefaultFontName,DefaultFontSize,DefaultFormat,EmailComposeMode,EmptyDeletedItemsOnLogoff,ErrorAction,ErrorVariable,HideDeletedItems,IgnoreDefaultScope,NewItemNotification,OutBuffer,OutVariable,PreviewMarkAsReadBehavior,PreviewMarkAsReadDelaytime,ReadReceiptResponse,ShowConversationAsTree,SignatureHtml,SignatureText,SignatureTextOnMobile,UseDefaultSignatureOnMobile,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "SendAddressDefault")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DateFormat,ErrorAction,ErrorVariable,Language,LocalizeDefaultFolderName,OutBuffer,OutVariable,TimeFormat,TimeZone,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CheckBeforeSend,Confirm,DictionaryLanguage,ErrorAction,ErrorVariable,IgnoreMixedDigits,IgnoreUppercase,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,PictureData,PictureStream,Preview,Save,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class MyContactInformation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "PostOfficeBox"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "City,CountryOrRegion,Fax,GeoCoordinates,HomePhone,MobilePhone,Office,Pager,Phone,PostalCode,StateOrProvince,StreetAddress,WebPage")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c")
			};
		}

		private class MyDiagnostics
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-MailboxDiagnosticLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,ComponentName,Confirm,Credential,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProperties,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticAnalysis", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CalendarLogs,Credential,Debug,DetailLevel,DomainController,ErrorAction,ErrorVariable,GlobalObjectId,LogLocation,OutBuffer,OutVariable,OutputAs,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,Latest,LogLocation,MeetingID,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,StartDate,Subject,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeHidden")
				}, "c")
			};
		}

		private class MyDisplayName
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DisplayName,Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "SimpleDisplayName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"OpenDomainProfileUpdatePermissions",
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "DisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "SimpleDisplayName")
				}, "c")
			};
		}

		private class MyDistributionGroupMembership
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,ManagedBy,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,AuthenticationType,BookmarkDisplayName,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,OutBuffer,OutVariable,Properties,PropertySet,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class MyDistributionGroups
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,ManagedBy,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,AuthenticationType,BookmarkDisplayName,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,OutBuffer,OutVariable,Properties,PropertySet,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Confirm,CopyOwnerToMember,DisplayName,ErrorAction,ErrorVariable,ManagedBy,MemberJoinRestriction,Members,Name,Notes,OutBuffer,OutVariable,PrimarySmtpAddress,SamAccountName,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,Confirm,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddressPolicyEnabled,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,GrantSendOnBehalfTo,Identity,ManagedBy,MemberJoinRestriction,Name,OutBuffer,OutVariable,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,SamAccountName,SendOofMessageToOriginatorEnabled,SimpleDisplayName,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "BypassModerationFromSendersOrMembers")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"ResourceMailboxRestrictions"
					}, "MailTip,MailTipTranslations")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DisplayName,Identity,ManagedBy,Name,Notes,OutBuffer,OutVariable,PhoneticDisplayName,SeniorityIndex,SimpleDisplayName,Universal,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Members,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class MyMailSubscriptions
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,SubscriptionType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Mailbox,Name,OutBuffer,OutVariable,Password,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Confirm,Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Force,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUsername,Mailbox,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Force,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUsername,LeaveOnServer,Mailbox,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Hotmail"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DisplayName,DomainController,EmailAddress,ErrorAction,ErrorVariable,Force,Mailbox,Name,OutBuffer,OutVariable,Password,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Imap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Pop")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"HotmailSyncPermissions"
					}, "DGroup,InternalFlags,Olc,Puid"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Eas"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregatedMailboxGuid,Authentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,IncrementalSyncInterval,Mailbox,Name,OutBuffer,OutVariable,Password,RemoteEmailAddress,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,TargetRootFolder,UserName,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Imap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Pop")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Confirm,Debug,DisableAsPoison,DisplayName,DomainController,EnablePoisonSubscription,Enabled,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Password,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Confirm,Debug,DisableAsPoison,DisplayName,DomainController,EmailAddress,EnablePoisonSubscription,Enabled,ErrorAction,ErrorVariable,Force,Identity,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUserName,Mailbox,OutBuffer,OutVariable,ResendVerification,ValidateSecret,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DisableAsPoison,DisplayName,DomainController,EmailAddress,EnablePoisonSubscription,Enabled,ErrorAction,ErrorVariable,Force,Identity,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUserName,LeaveOnServer,Mailbox,OutBuffer,OutVariable,ResendVerification,ValidateSecret,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternalFlags"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Authentication,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,IncrementalSyncInterval,Mailbox,OutBuffer,OutVariable,Password,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class MyMailboxDelegation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "GrantSendOnBehalfTo")
				}, "c")
			};
		}

		private class MyMobileInformation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MobilePhone,Pager")
				}, "c")
			};
		}

		private class MyName
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "FirstName,Initials,LastName,Notes")
				}, "c")
			};
		}

		private class MyPersonalInformation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "HomePhone,WebPage")
				}, "c")
			};
		}

		private class MyProfileInformation
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DisplayName,Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "SimpleDisplayName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"OpenDomainProfileUpdatePermissions",
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "DisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "SimpleDisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "FirstName,Initials,LastName,Notes")
				}, "c")
			};
		}

		private class MyRetentionPolicies
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IncludeSystemTags,Mailbox,OptionalInMailbox,OutBuffer,OutVariable,Types,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,MessageClass,OptionalInMailbox,OutBuffer,OutVariable,RetentionId,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class MyTeamMailboxes
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Anr,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SendMeEmail,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,SharePointUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ShowInMyClient,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestorIdentity,UseAppTokenOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class MyTextMessaging
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Compare-TextMessagingVerificationCode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,VerificationCode,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"SMSPermissions"
					}, "SendTextMessageNotificationTo"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"UserMailboxAccessPermissions"
					}, "Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-TextMessagingVerificationCode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CalendarNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "CalendarUpdateNotification,CalendarUpdateSendDuringWorkHour,Confirm,DailyAgendaNotification,DailyAgendaNotificationSendTime,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,MeetingReminderNotification,MeetingReminderSendDuringWorkHour,NextDays,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"UserMailboxAccessPermissions"
					}, "Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,CountryRegionId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,MobileOperatorId,NotificationPhoneNumber,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMSMSMsgWaitingPermissions"
					}, "UMSMSNotificationOption")
				}, "c")
			};
		}

		private class MyVoiceMail
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,KeyMappings,Name,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,Identity,KeyMappings,Name,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AirSyncNumbers"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMCloudServicePermissions"
					}, "PhoneNumber,PhoneProviderId,VerifyGlobalRoutingEntry"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,ImListMigrationCompleted,MissedCallNotificationEnabled,OutBuffer,OutVariable,PinlessAccessToVoiceMailEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,DefaultPlayOnPhoneNumber,ErrorAction,ErrorVariable,FolderToReadEmailsFrom,Greeting,Identity,OutBuffer,OutVariable,ReadOldestUnreadVoiceMessagesFirst,ReceivedVoiceMailPreviewEnabled,SentVoiceMailPreviewEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Pin,PinExpired,SendEmail,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PhoneticDisplayName,SeniorityIndex")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AwayVoicemailGreeting,CallAnsweringRuleId,Confirm,DefaultVoicemailGreeting,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,PhoneNumber,UMMailbox,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class NetworkingManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Backup-DhcpServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Folder,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpReservation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScopeLeases", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScopeReservations", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CentralAdminLoadBalancer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActualVersion,BackEndSnatAddresses,Confirm,Debug,DesiredVersion,ErrorAction,ErrorVariable,FrontEndSnatAddresses,GFSID,Interfaces,ManagementIP,Name,NetworkDeviceType,OutBuffer,OutVariable,Rack,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Location,Name,OutBuffer,OutVariable,Resolution,Verbose,WarningAction,WarningVariable,WhatIf,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-DhcpReservation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-DhcpScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddressRange,Comment,Confirm,DHCPServer,Debug,DnsServers,DomainName,ErrorAction,ErrorVariable,ExclusionRanges,Identity,LeaseTime,Name,OutBuffer,OutVariable,RouterAddress,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Location,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-DhcpReservation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-DhcpScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Restore-DhcpServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Folder,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,ServiceFrontDoor")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminPod", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,NetworkType,PodFrontDoor,ServiceFrontDoor,StaticIpConfig")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminVirtualMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowSetLastActiveMemberDown,Confirm,Debug,DesiredStatus,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SkipMinimumRequiredServerNumberCheck,SkipMinimumRequiredServerPercentageCheck,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminVlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityState,Confirm,DHCPServer,Datacenter,Debug,ErrorAction,ErrorVariable,GFSID,GNSNumber,Identity,Location,Name,OutBuffer,OutVariable,ProvisioningState,RouterIP,RoutingGroup,Subnet,SubnetMask,Verbose,VlanType,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Location,Name,OutBuffer,OutVariable,Resolution,Verbose,WarningAction,WarningVariable,WhatIf,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DhcpReservation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DHCPServer,Debug,DnsServers,DomainName,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RouterAddress,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DhcpScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Confirm,DHCPServer,Debug,DnsServers,DomainName,ErrorAction,ErrorVariable,Identity,LeaseTime,Name,OutBuffer,OutVariable,RouterAddress,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DhcpServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthState,Debug,DnsServers,DomainName,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class OperatorScripts
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("", "CreateCSSRBACRoleAndAssignment.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "role,groupName")
				}, "s"),
				new RoleCmdlet("", "UpdateThrottlingPolicy.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "")
				}, "s"),
				new RoleCmdlet("", "Upgrade-Organization.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Phase,Organization,Mailbox,LogFile,Resume,MoveLimit,RetryLimit,RetryInterval,ErrorLimit,BadItemLimit,Cleanup,Report,EnableVerboseLogging")
				}, "s"),
				new RoleCmdlet("", "UpgradeRBAC.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Organization,ProgramId,OfferId,SkipVersionCheck,WhatIf,RunFromNonCASBox,Help")
				}, "s"),
				new RoleCmdlet("", "Write-BugIdsToEscalations.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Escalations,DBServer")
				}, "s"),
				new RoleCmdlet("", "Write-ExternalMonitorAlert.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Datacenter,Computer,Database,EventId,EventType,Message,Site,Source,Team,Actionable,Urgency")
				}, "s"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLogTimeStamp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Credential,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class Org_Custom_Apps
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,OrganizationApp,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Url"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultStateForUser,DomainController,Enabled,ErrorAction,ErrorVariable,OrganizationApp,OutBuffer,OutVariable,ProvidedTo,UserList,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AllowReadWriteMailbox,FileData,FileStream")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OrganizationApp,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultStateForUser,DomainController,Enabled,ErrorAction,ErrorVariable,Force,Name,Organization,OrganizationApp,OutBuffer,OutVariable,ProvidedTo,UserList,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Org_Marketplace_Apps
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,OrganizationApp,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DownloadOnly,Etoken,MarketplaceAssetID,MarketplaceQueryMarket,MarketplaceServicesUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultStateForUser,DomainController,Enabled,ErrorAction,ErrorVariable,OrganizationApp,OutBuffer,OutVariable,ProvidedTo,UserList,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AllowReadWriteMailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OrganizationApp,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultStateForUser,DomainController,Enabled,ErrorAction,ErrorVariable,Force,Name,Organization,OrganizationApp,OutBuffer,OutVariable,ProvidedTo,UserList,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Organization_Client_Access
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-AutoDiscoverConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DeleteConfig,DomainController,ErrorAction,ErrorVariable,MultipleExchangeDeployments,OutBuffer,OutVariable,PreferredSourceFqdn,SourceForestCredential,TargetForestCredential,TargetForestDomainController,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Monitoring")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceClass", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncOrganizationSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ProtocolSettings"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessArray", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Monitoring")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RpcClientAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ToolInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AccessLevel,Characteristic,Confirm,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,QueryString,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthScheme,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TargetUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppSecret,ApplicationIdentifier,AuthMetadataUrl,AuthorizationEndpoint,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IssuerIdentifier,Name,OutBuffer,OutVariable,TokenIssuingEndpoint,TrustAnySSLCertificate,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ClientAccessArray", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ArrayDefinition,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ServerCount,Site,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,AnyOfAuthenticationTypes,AnyOfClientIPAddressesOrRanges,AnyOfProtocols,AnyOfSourceTcpPortNumbers,Confirm,DatacenterAdminsOnly,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptAnyOfAuthenticationTypes,ExceptAnyOfClientIPAddressesOrRanges,ExceptAnyOfProtocols,ExceptAnyOfSourceTcpPortNumbers,ExceptUserIsMemberOf,ExceptUsernameMatchesAnyOfPatterns,Name,Organization,OutBuffer,OutVariable,Priority,UserIsMemberOf,UserRecipientFilter,UsernameMatchesAnyOfPatterns,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OutlookProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptSecurityIdentifierInformation,ActAsPermissions,AppOnlyPermissions,ApplicationIdentifier,AuthMetadataUrl,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IssuerIdentifier,LinkedAccount,Name,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDeviceClass", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ClientAccessArray", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DatacenterAdminsOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OutlookProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AccessLevel,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncOrganizationSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AddDeviceFilterRule,AddDeviceFilterRuleForAllDevices,AdminMailRecipients,AllowAccessForUnSupportedPlatform,Confirm,DefaultAccessLevel,DeviceFilterCharacteristic,DeviceFilterName,DeviceFilterOperator,DeviceFilterRuleName,DeviceFilterValue,ErrorAction,ErrorVariable,Identity,OtaNotificationMailInsert,OutBuffer,OutVariable,RemoveDeviceFilter,RemoveDeviceFilterRule,UserMailInsert,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuthConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CertificateThumbprint,ClearPreviousCertificate,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,NewCertificateEffectiveDate,NewCertificateThumbprint,Organization,OutBuffer,OutVariable,PublishCertificate,Realm,Server,ServiceName,SkipImmediateCertificateDeployment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TargetUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppSecret,ApplicationIdentifier,AuthMetadataUrl,AuthorizationEndpoint,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IsDefaultAuthorizationEndpoint,IssuerIdentifier,Name,OutBuffer,OutVariable,RefreshAuthMetadata,TokenIssuingEndpoint,TrustAnySSLCertificate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSyncAllowedDeviceIDs,ActiveSyncBlockedDeviceIDs"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ClientAccessArray", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ArrayDefinition,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ServerCount,Site,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,AnyOfAuthenticationTypes,AnyOfClientIPAddressesOrRanges,AnyOfProtocols,AnyOfSourceTcpPortNumbers,Confirm,DatacenterAdminsOnly,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptAnyOfAuthenticationTypes,ExceptAnyOfClientIPAddressesOrRanges,ExceptAnyOfProtocols,ExceptAnyOfSourceTcpPortNumbers,ExceptUserIsMemberOf,ExceptUsernameMatchesAnyOfPatterns,Identity,Name,OutBuffer,OutVariable,Priority,UserIsMemberOf,UserRecipientFilter,UsernameMatchesAnyOfPatterns,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OutlookProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CertPrincipalName,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,OutlookProviderFlags,RequiredClientVersions,Server,TTL,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptSecurityIdentifierInformation,ActAsPermissions,AppOnlyPermissions,ApplicationIdentifier,AuthMetadataUrl,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IssuerIdentifier,LinkedAccount,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RpcClientAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BlockedClientVersions,Confirm,Debug,DomainController,EncryptionRequired,ErrorAction,ErrorVariable,MaximumConnections,Name,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthenticationType,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Protocol,RemoteAddress,RemotePort,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Organization_Configuration
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccessMethod,Confirm,Credentials,Debug,DomainController,ErrorAction,ErrorVariable,ForestName,Organization,OutBuffer,OutVariable,TargetAutodiscoverEpr,UseServiceAccount,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-GlobalMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyVersion,Confirm,Debug,DomainController,Duration,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,PropertyValue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-OrganizationCustomization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ConfigCustomizationsPermissions"
					}, "Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,IsPartnerHosted,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSecondaryPartitions,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeAlternateServiceAccountCredentialPassword")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExecutionUnit,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveInRuntime,ExecutionUnit,MaxCompletionTime,MaxQueuedTime,MinCompletionTime,MinQueuedTime,TaskId,TaskState,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExecutionUnit,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DevicePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpSensitiveInformationType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeAssistanceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigName,Database,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Force,GenericScopeName,GenericScopeValue,GenericScopes,Identity,Organization,OutBuffer,OutVariable,Process,Server,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,UseOfflineGLS,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,ShowDomainNames,UseOfflineGLS,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SmimeConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,HasPermanentError,Identity,Lockdown,OutBuffer,OutVariable,RelocationLastError,RelocationStateRequested,RelocationStatusDetailsSource,SourceStateOnly,StaleLockdown,Suspended,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Install-UnifiedCompliancePrerequisite", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ForceInitialize,LoadOnly,Organization,PolicyCenterSiteOwner,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnabledForProvisioning,ErrorAction,ErrorVariable,LocalForest,Name,OutBuffer,OutVariable,Secondary,Trust,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,Verbose,WarningAction,WarningVariable,WhatIf,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditOperation,Debug,DomainController,ErrorAction,ErrorVariable,Organization,Verbose,WarningAction,WarningVariable,WhatIf,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthScheme,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TargetUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OrgWideAccount,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,FullSync,Identity,Organization,OutBuffer,OutVariable,SyncChangeInfos,SyncNow,SyncSvcUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Priority,SerializedData,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IsEnabled,MaxRunningTasks,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Name,Organization,SharePointBinding,Type,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowJailbroken,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,Organization,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,Policy,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Name,Organization,SharePointBinding,Type,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,Organization,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,Policy,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,Force,Organization,Type,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyPolicyTo,BlockUnsupportedDevices,Debug,DomainController,ErrorAction,ExclusionList,Organization,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,Force,Name,OneDriveBinding,Organization,SharePointBinding,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessScopeIs,BlockAccess,Comment,ContentContainsSensitiveInformation,ContentPropertyContainsWords,Debug,Disabled,DomainController,ErrorAction,Name,Organization,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Flight,Force,MaxVersion,MinVersion,Name,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainFlags,DomainInUse,DomainName,DomainType,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountForest,Confirm,Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,PrimarySite,ResourceForest,SmtpNextHopDomain,TenantContainerCN,TenantFlags,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Name,Organization,SharePointBinding,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,ContentDateFrom,ContentDateTo,ContentMatchQuery,Debug,Disabled,DomainController,ErrorAction,HoldContent,HoldDurationDisplayHint,Name,Organization,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MinorPartnerId,OutBuffer,OutVariable,PartnerId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Component,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Force,MaxVersion,MinVersion,Name,OutBuffer,OutVariable,Parameters,Reason,Section,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoCompletionEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeTenantModeEnabled,OutBuffer,OutVariable,RelocationStateRequested,SafeLockdownSchedule,TargetAccountPartition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,ForceDeletion,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,ForceDeletion,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-CompletedDarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MaxCompletionTime,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Complete,Confirm,Debug,DeprovisionedTarget,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnabledForProvisioning,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Trust,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuditConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,Verbose,WarningAction,WarningVariable,WhatIf,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditOperation,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TargetUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OrgWideAccount,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Priority,TaskId,TaskState,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IsEnabled,MaxRunningTasks,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Identity,Name,RemoveExchangeBinding,RemoveSharePointBinding,SharePointBinding,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowJailbroken,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,Enabled,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,Identity,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Identity,Name,RemoveExchangeBinding,RemoveSharePointBinding,SharePointBinding,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,Enabled,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,Identity,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,Force,Identity,Name,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyPolicyTo,BlockUnsupportedDevices,Debug,DomainController,Enabled,ExclusionList,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddOneDriveBinding,AddSharePointBinding,Comment,Debug,DomainController,Enabled,ErrorAction,Force,Identity,Name,RemoveOneDriveBinding,RemoveSharePointBinding,RetryDistribution,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessScopeIs,BlockAccess,Comment,ContentContainsSensitiveInformation,ContentPropertyContainsWords,Debug,Disabled,DomainController,ErrorAction,Identity,Name,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeAssistanceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CommunityLinkDisplayEnabled,CommunityURL,Confirm,ControlPanelFeedbackEnabled,ControlPanelFeedbackURL,ControlPanelHelpURL,Debug,DomainController,ErrorAction,ErrorVariable,ExchangeHelpAppOnline,ManagementConsoleFeedbackEnabled,ManagementConsoleFeedbackURL,ManagementConsoleHelpURL,OWAFeedbackEnabled,OWAFeedbackURL,OWAHelpURL,OWALightFeedbackEnabled,OWALightFeedbackURL,OWALightHelpURL,OutBuffer,OutVariable,PrivacyLinkDisplayEnabled,PrivacyStatementURL,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveAccountPageURL,WindowsLiveAccountURLEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddScope,ClearHistory,ConfigName,ConfigPairs,ConfigValue,Confirm,CreateSettingsGroup,Debug,Disable,DisableGroup,DomainController,EnableGroup,ErrorAction,ErrorVariable,ExpirationDate,Force,GenericScopeName,GenericScopeValue,GroupName,GuidMatch,Identity,MaxVersion,MinVersion,NameMatch,OutBuffer,OutVariable,Priority,Reason,RemoveScope,RemoveSetting,RemoveSettingsGroup,Scope,ScopeFilter,ScopeId,SettingsGroup,UpdateScope,UpdateSetting,UpdateSettingsGroup,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Identity,MaxVersion,MinVersion,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainFlags,DomainInUse,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountForest,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,PrimarySite,ResourceForest,SmtpNextHopDomain,TenantContainerCN,TenantFlags,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddExchangeBinding,AddSharePointBinding,Comment,Debug,DomainController,Enabled,ErrorAction,Force,Identity,Name,RemoveExchangeBinding,RemoveSharePointBinding,RetryDistribution,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,ContentDateFrom,ContentDateTo,ContentMatchQuery,Debug,Disabled,DomainController,ErrorAction,HoldContent,HoldDurationDisplayHint,Identity,Name,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Confirm,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,MinorPartnerId,OutBuffer,OutVariable,PartnerId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "IsDehydrated,IsStaticConfigurationShared,IsUpdatingServicePlan,OfferId,ProgramId,RemoveSharedConfigurations,ServicePlan,TargetServicePlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClearPreviousSharedConfigurations,Confirm,Debug,DefaultMovePriority,DefaultPublicFolderIssueWarningQuota,DefaultPublicFolderProhibitPostQuota,DomainController,EnableAsSharedConfiguration,ErrorAction,ErrorVariable,Force,IOwnMigrationStatus,IOwnMigrationStatusReport,IOwnMigrationTenant,Identity,ImmutableConfiguration,IsHotmailMigration,MSOSyncEnabled,MaxAddressBookPolicies,MaxOfflineAddressBooks,OutBuffer,OutVariable,SharedConfiguration,SyncMBXAndDLToMServ,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"CalendarVersionStoreEnabled",
						"EOPPremiumRestrictions"
					}, "CalendarVersionStoreEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AVAuthenticationService,AccountPartition,ActivityBasedAuthenticationTimeoutEnabled,ActivityBasedAuthenticationTimeoutInterval,ActivityBasedAuthenticationTimeoutWithSingleSignOnEnabled,AppsForOfficeEnabled,Confirm,CustomerFeedbackEnabled,Debug,DomainController,ErrorAction,ErrorVariable,ExchangeNotificationEnabled,ExchangeNotificationRecipients,ForwardSyncLiveIdBusinessInstance,HybridConfigurationStatus,Identity,Industry,IntuneManagedStatus,IsExcludedFromOffboardMigration,IsExcludedFromOnboardMigration,IsFfoMigrationInProgress,IsGuidPrefixedLegacyDnDisabled,IsMailboxForcedReplicationDisabled,IsProcessEhaMigratedMessagesEnabled,IsSyncPropertySetUpgradeAllowed,MailTipsAllTipsEnabled,MailTipsGroupMetricsEnabled,MailTipsMailboxSourcedTipsEnabled,ManagedFolderHomepage,MaxConcurrentMigrations,MicrosoftExchangeRecipientEmailAddressPolicyEnabled,MicrosoftExchangeRecipientEmailAddresses,MicrosoftExchangeRecipientPrimarySmtpAddress,MicrosoftExchangeRecipientReplyRecipient,OAuth2ClientProfileEnabled,OrganizationSummary,OutBuffer,OutVariable,ReleaseTrack,RmsoSubscriptionStatus,SCLJunkThreshold,SIPAccessService,SIPSessionBorderController,SharePointUrl,TenantRelocationsAllowed,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EwsPermissions"
					}, "EwsAllowEntourage,EwsAllowList,EwsAllowMacOutlook,EwsAllowOutlook,EwsApplicationAccessPolicy,EwsBlockList,EwsEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipsExternalRecipientsTipsEnabled,MailTipsLargeAudienceThreshold"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "ReadTrackingEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "DefaultPublicFolderAgeLimit,DefaultPublicFolderDeletedItemRetention,DefaultPublicFolderIssueWarningQuota,DefaultPublicFolderMaxItemSize,DefaultPublicFolderMovedItemRetention,DefaultPublicFolderProhibitPostQuota,PublicFolderMigrationComplete,PublicFoldersEnabled,PublicFoldersLockedForMigration,RemotePublicFolderMailboxes"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "SiteMailboxCreationURL")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EheDecryptEnabled,EheEnabled,EhfAdminAccountSyncEnabled,EhfConfigSyncEnabled,ErrorAction,ErrorVariable,GatewayIPAddresses,IPSafelistingSyncEnabled,IPSkiplistingEnabled,InternalServerIPAddresses,MailFlowPartner,MigrationInProgress,OutBuffer,OutVariable,PartnerConnectorDomain,PartnerRoutingDomain,PerimeterOrgId,RMSOFwdSyncEnabled,RouteOutboundViaEhfEnabled,RouteOutboundViaFfoFrontendEnabled,SafelistingUIMode,SyncToHotmailEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResourcePropertySchema,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Identity,MaxVersion,MinVersion,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SmimeConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Identity,OWAAllowUserChoiceOfSigningCertificate,OWAAlwaysEncrypt,OWAAlwaysSign,OWABCCEncryptedEmailForking,OWACRLConnectionTimeout,OWACRLRetrievalTimeout,OWACheckCRLOnSend,OWAClearSign,OWACopyRecipientHeaders,OWADLExpansionTimeout,OWADisableCRLCheck,OWAEncryptTemporaryBuffers,OWAEncryptionAlgorithms,OWAForceSMIMEClientUpgrade,OWAIncludeCertificateChainAndRootCertificate,OWAIncludeCertificateChainWithoutRootCertificate,OWAIncludeSMIMECapabilitiesInMessage,OWAOnlyUseSmartCard,OWASenderCertificateAttributesToDisplay,OWASignedEmailCertificateInclusion,OWASigningAlgorithms,OWATripleWrapSignedEncryptedMail,OWAUseKeyIdentifier,OWAUseSecondaryProxiesWhenFindingCertificates,SMIMECertificateIssuingCA,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoCompletionEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeTenantModeEnabled,OutBuffer,OutVariable,RelocationStateRequested,ResetPermanentError,ResetStartSyncTime,ResetTransitionCounter,Resume,RollbackGls,SafeLockdownSchedule,Suspend,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-UnifiedPolicySynchronization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DeleteObjectId,FullSync,ObjectType,Organization,UpdateObjectId,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,Debug,ErrorAction,ErrorVariable,FullSync,Identity,Organization,OutBuffer,OutVariable,Server,Target,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Organization_Transport_Settings
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADSite", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AdSiteLink", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSyncServiceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridMailflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridMailflowDatacenterIPs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Original,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SystemMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,DsnCode,ErrorAction,ErrorVariable,Internal,Language,OutBuffer,OutVariable,QuotaMessageType,Text,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SystemMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADSite", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,HubSiteEnabled,InboundMailEnabled,MinorPartnerId,OutBuffer,OutVariable,PartnerId,ResponsibleForSites,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AdSiteLink", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExchangeCost,MaxMessageSize,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HybridMailflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"FFOMigrationInProgress_Restrictions"
					}, "CentralizedTransportEnabled,CertificateSubject,Confirm,Debug,ErrorAction,ErrorVariable,InboundIPs,OnPremisesFQDN,Organization,OutBuffer,OutVariable,OutboundDomains,SecureMailEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SystemMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,Original,OutBuffer,OutVariable,Text,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressBookPolicyRoutingEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AgentGeneratedMessageLoopDetectionInSmtpEnabled,AgentGeneratedMessageLoopDetectionInSubmissionEnabled,AnonymousSenderToRecipientRatePerHour,ClearCategories,Confirm,ConvertDisclaimerWrapperToEml,DSNConversionMode,Debug,DiagnosticsAggregationServicePort,DomainController,ErrorAction,ErrorVariable,ExternalDelayDsnEnabled,ExternalDsnDefaultLanguage,ExternalDsnLanguageDetectionEnabled,ExternalDsnMaxMessageAttachSize,ExternalDsnReportingAuthority,ExternalDsnSendHtml,ExternalPostmasterAddress,Force,HeaderPromotionModeSetting,HygieneSuite,Identity,InternalDelayDsnEnabled,InternalDsnDefaultLanguage,InternalDsnLanguageDetectionEnabled,InternalDsnMaxMessageAttachSize,InternalDsnReportingAuthority,InternalDsnSendHtml,InternalSMTPServers,JournalArchivingEnabled,JournalingReportNdrTo,MaxAllowedAgentGeneratedMessageDepth,MaxAllowedAgentGeneratedMessageDepthPerAgent,MaxDumpsterSizePerDatabase,MaxDumpsterTime,MaxReceiveSize,MaxRecipientEnvelopeLimit,MaxRetriesForLocalSiteShadow,MaxRetriesForRemoteSiteShadow,MaxSendSize,MigrationEnabled,OpenDomainRoutingEnabled,OutBuffer,OutVariable,QueueDiagnosticsAggregationInterval,RejectMessageOnShadowFailure,Rfc2231EncodingEnabled,SafetyNetHoldTime,ShadowHeartbeatFrequency,ShadowHeartbeatRetryCount,ShadowHeartbeatTimeoutInterval,ShadowMessageAutoDiscardInterval,ShadowMessagePreferenceSetting,ShadowRedundancyEnabled,ShadowResubmitTimeSpan,SupervisionTags,TLSReceiveDomainSecureList,TLSSendDomainSecureList,TransportRuleAttachmentTextScanLimit,TransportRuleCollectionAddedRecipientsLimit,TransportRuleCollectionRegexCharsLimit,TransportRuleLimit,TransportRuleMinProductVersion,TransportRuleRegexValidationTimeout,TransportRuleSizeLimit,Verbose,VerifySecureSubmitEnabled,VoicemailJournalingEnabled,WarningAction,WarningVariable,WhatIf,Xexch50Enabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OAuthConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Mailbox,OrganizationDomain,OutBuffer,OutVariable,ReloadConfig,Service,TargetUri,UseCachedToken,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,UserIdentity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class POP3_And_IMAP4_Protocols
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ImapSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PopSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallRouterSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ImapSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthenticatedConnectionTimeout,Banner,CalendarItemRetrievalOption,Confirm,Debug,DomainController,EnableExactRFC822Size,EnableGSSAPIAndNTLMAuth,EnforceCertificateErrors,ErrorAction,ErrorVariable,ExtendedProtectionPolicy,ExternalConnectionSettings,InternalConnectionSettings,LiveIdBasicAuthReplacement,LogFileLocation,LogFileRollOverSettings,LogPerFileSizeQuota,LoginType,MaxCommandSize,MaxConnectionFromSingleIP,MaxConnections,MaxConnectionsPerUser,MessageRetrievalMimeFormat,OutBuffer,OutVariable,OwaServerUrl,PreAuthenticatedConnectionTimeout,ProtocolLogEnabled,ProxyTargetPort,SSLBindings,Server,ShowHiddenFoldersEnabled,SuppressReadReceipt,UnencryptedOrTLSBindings,Verbose,WarningAction,WarningVariable,WhatIf,X509CertificateName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PopSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthenticatedConnectionTimeout,Banner,CalendarItemRetrievalOption,Confirm,Debug,DomainController,EnableExactRFC822Size,EnableGSSAPIAndNTLMAuth,EnforceCertificateErrors,ErrorAction,ErrorVariable,ExtendedProtectionPolicy,ExternalConnectionSettings,InternalConnectionSettings,LiveIdBasicAuthReplacement,LogFileLocation,LogFileRollOverSettings,LogPerFileSizeQuota,LoginType,MaxCommandSize,MaxConnectionFromSingleIP,MaxConnections,MaxConnectionsPerUser,MessageRetrievalMimeFormat,MessageRetrievalSortOrder,OutBuffer,OutVariable,OwaServerUrl,PreAuthenticatedConnectionTimeout,ProtocolLogEnabled,ProxyTargetPort,SSLBindings,Server,SuppressReadReceipt,UnencryptedOrTLSBindings,Verbose,WarningAction,WarningVariable,WhatIf,X509CertificateName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class PartnerDelegatedTenantManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccessMethod,Confirm,Credentials,Debug,DomainController,ErrorAction,ErrorVariable,ForestName,OutBuffer,OutVariable,TargetAutodiscoverEpr,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-FederatedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DomainName,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Overwrite,Parameters,ParentRoleEntry,Role,Type,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-RecipientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Trustee,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,Member,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddSecondaryDomainPermissions",
						"EOPPremiumRestrictions"
					}, "AuthenticationType,Confirm,DomainController,DomainName,DomainType,ErrorAction,ErrorVariable,IsDataCenter,LiveIdInstanceType,MakeDefault,Name,OutBoundOnly,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainOwnershipVerified")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-SupervisionListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Confirm,Entry,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Tag,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,NotificationEmailAddresses,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,NotificationEmailAddresses,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Compare-TextMessagingVerificationCode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,VerificationCode,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Complete-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-JournalArchiving", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreLegalHold,IncludeSoftDeletedObjects,OutBuffer,OutVariable,PreventRecordingPreviousDatabase,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"RichCoexistenceRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "PreserveEmailAddresses"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Arbitration,Confirm,Debug,DisableArbitrationMailboxWithOABsAllowed,DisableLastArbitrationMailboxAllowed,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,IgnoreLegalHold,IncludeSoftDeletedObjects,OutBuffer,OutVariable,PreventRecordingPreviousDatabase,PublicFolder,RemoteArchive,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Immediate,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDefaultScope"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,KeepProperties,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Alias,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Force")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Alias,Confirm,Debug,DisplayName,ErrorAction,ErrorVariable,ExternalEmailAddress,Identity,MacAttachmentFormat,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,OverrideRecipientQuotas,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,HiddenFromAddressListsEnabled,Identity,OutBuffer,OutVariable,OverrideRecipientQuotas,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,Alias,Archive,ArchiveGuid,ArchiveName,BypassModerationCheck,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalEmailAddress,Identity,IncludeSoftDeletedObjects,JournalArchiveAddress,MacAttachmentFormat,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,OverrideRecipientQuotas,PreserveEmailAddresses,SKUAssigned,SKUCapability,UsageLocation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"RichCoexistenceRestrictions"
					}, "Archive,ArchiveName"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountDisabled,AddOnSKUCapability,Alias,ArchiveDatabase,ArchiveDomain,ArchiveGuid,BypassModerationCheck,Confirm,Debug,DisplayName,DomainController,Equipment,ErrorAction,ErrorVariable,Force,HoldForMigration,Identity,IncludeSoftDeletedObjects,OutBuffer,OutVariable,OverrideRecipientQuotas,PublicFolder,RemoteArchive,Room,SKUAssigned,SKUCapability,Shared,TargetAllMDbs,UsageLocation,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-OrganizationCustomization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ConfigCustomizationsPermissions"
					}, "Confirm,Debug,DomainController,EnableFileLogging,ErrorAction,ErrorVariable,Identity,IsDataCenter,IsPartnerHosted,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mode,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AutomaticSpeechRecognitionEnabled,Confirm,ErrorAction,ErrorVariable,Extensions,Identity,NotifyEmail,OutBuffer,OutVariable,PilotNumber,Pin,PinExpired,SIPResourceIdentifier,UMMailboxPolicy,ValidateOnly,VoiceMailAnalysisEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-DlpPolicyCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-MailboxDiagnosticLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,ComponentName,Confirm,ErrorAction,ErrorVariable,ExtendedProperties,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-MigrationReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,CsvStream,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RowCount,StartingRowIndex,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-TransportRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Format,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-UMCallDataRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ClientStream,Confirm,Date,ErrorAction,ErrorVariable,OutBuffer,OutVariable,UMDialPlan,UMIPGateway,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-UMMailboxPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CustomAwayGreeting,CustomVoicemailGreeting,DefaultAwayGreeting,DefaultVoicemailGreeting,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TestPhoneticDisplayName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-UMPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AfterHoursWelcomeGreeting,AfterHoursWelcomeGreetingAndMenu,BusinessHours,BusinessHoursWelcomeGreeting,BusinessHoursWelcomeGreetingAndMenu,BusinessLocation,TestBusinessName,TestMenuKeyMapping"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PromptFileName,UMAutoAttendant,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceClass", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,GetMailboxLog,Identity,Mailbox,NotificationEmailAddresses,OutBuffer,OutVariable,ShowRecoveryPassword,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncOrganizationSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"AddressListsEnabled",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Container,SearchText")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OrganizationApp,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "CreatedAfter,CreatedBefore,Debug,ErrorAction,ErrorVariable,Identity,ResultSize,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveSyncDebugLogging,ProtocolSettings,RecalculateHasActiveSyncDevicePartnership"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticAnalysis", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CalendarLogs,DetailLevel,ErrorAction,ErrorVariable,GlobalObjectId,LogLocation,OutBuffer,OutVariable,OutputAs,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AggregationType,Confirm,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectionByClientTypeDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectionByClientTypeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConsumerMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,MservDataOnly,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OrganizationalUnit,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsAVConferenceTimeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsActiveUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsClientDeviceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsConferenceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsP2PAVTimeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsP2PSessionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExecutionUnit,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveInRuntime,ExecutionUnit,MaxCompletionTime,MaxQueuedTime,MinCompletionTime,MinQueuedTime,TaskId,TaskState,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExecutionUnit,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ClassificationRuleCollectionIdentity,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DataClassificationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DevicePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,ManagedBy,OrganizationalUnit,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Credential,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Actor,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetectionsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpPolicyTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpSensitiveInformationType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,ManagedBy,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,EnableMailboxCounting,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivityByDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivityByUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivitySummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FailedContentIndexDocuments", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,EndDate,ErrorAction,ErrorCode,ErrorVariable,FailureMode,Identity,OutBuffer,OutVariable,ResultSize,StartDate,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederatedDomainProof", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Thumbprint,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederatedOrganizationIdentifier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IncludeExtendedDomainInfo,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederationInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassAdditionalDomainValidation,DomainName,ErrorAction,ErrorVariable,Force,OutBuffer,OutVariable,TrustedHostnames,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FfoMigrationReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "DefaultOnly,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "OrganizationalUnit")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GroupActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,Debug,ErrorAction,ErrorVariable,ExecutingUser,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeMailboxUrls,IncludeMemberSyncStatus,IncludeMembers,IncludePermissionsVersion,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,ErrorAction,ErrorVariable,JobId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedOutboundSpamFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "AggregationType,Confirm,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridMailflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridMailflowDatacenterIPs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "AggregationType,Confirm,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeHidden"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "DescriptionTimeFormat,DescriptionTimeZone,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OrganizationGuid,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LicenseVsUsageSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LogonStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSOTenantSyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailDlpPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailMalwareReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MalwareName,MessageId,MessageTraceId,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailSpamReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailTransportRuleReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailFilterListReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,ProbeTag,SelectionTarget,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Category,Debug,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficTopReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Arbitration,Debug,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,InactiveMailboxOnly,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,SoftDeletedMailbox,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAuditBypassAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolderStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive,AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity,IncludeAnalysis,IncludeOldestAndNewestItems")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BatchName,ErrorAction,ErrorVariable,Identity,Mailbox,Name,OutBuffer,OutVariable,ResultSize,Status,Suspend,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxImportRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Diagnostic,DiagnosticArgument,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Owner,ReadFromDomainController,ResultSize,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllMailboxPlanReleases,Credential,Debug,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,VerifyDefaultFolderNameLanguage,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "InPlaceHoldIdentity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,ShowDeletionInProgressSearches,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive,AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IncludeMoveHistory,IncludeMoveReport,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxUsageDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,IncludeInvalidPolicies,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,Location,OfferId,OutBuffer,OutVariable,ProgramId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cmdlet,CmdletParameters,Debug,ErrorAction,ErrorVariable,GetChildren,Identity,OutBuffer,OutVariable,Recurse,RoleType,Script,ScriptParameters,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssignmentMethod,ConfigWriteScope,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,Enabled,ErrorAction,ErrorVariable,Exclusive,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,GetEffectiveUsers,Identity,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientWriteScope,Role,RoleAssignee,RoleAssigneeType,Verbose,WarningAction,WarningVariable,WritableRecipient")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PSSnapinName,Parameters,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Exclusive,Identity,Orphan,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageCategory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IncludeLocales,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportingPeriod,SLATargetTimespan,StartDate,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportingPeriod,StartDate,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Expression,FromIP,MessageId,MessageTraceId,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Status,ToIP,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTraceDetail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,EndDate,ErrorAction,ErrorVariable,Event,Expression,MessageId,MessageTraceId,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,DetailLevel,DoNotResolve,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecipientPathFilter,Recipients,ReportTemplate,ResultSize,Status,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,Endpoint,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitErrorsTo,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchStatus,Confirm,ConnectionSettings,Diagnostic,DiagnosticArgument,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Type,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxGuid,OutBuffer,OutVariable,ResultSize,Status,StatusSummary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUserStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitSkippedItemsTo,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceDashboardSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceDetailsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Page,PageSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync,GetMailboxLog,NotificationEmailAddresses,ShowRecoveryPassword"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BatchName,Debug,ErrorAction,ErrorVariable,Flags,HighPriority,Identity,IncludeSoftDeletedObjects,MoveStatus,Offline,OrganizationalUnit,OutBuffer,OutVariable,Protect,RemoteHostName,ResultSize,SortBy,Suspend,SuspendWhenReadyToComplete,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MoveRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MsoFullSyncOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MxRecordReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,ProbeTag,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ProcessType,ResultSize,StartDate,Summary,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientBrowserDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Browser,BrowserVersion,Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientBrowserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Browser,Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientOSDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OperatingSystem,OperatingSystemVersion,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientOSReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OS,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions",
						"OfflineAddressBookEnabled"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable,Identity,IncludeContainers,OutBuffer,OutVariable,ResultSize,SearchText,SingleNodeOnly,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "ErrorAction,ErrorVariable,Identity,IsTransportRuleScoped,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutboundConnectorReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,ProbeTag,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PartnerClientExpiringSubscriptionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PartnerCustomerUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,ErrorAction,ErrorVariable,Identity,Locale,Original,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "ErrorAction,ErrorVariable,GetChildren,Identity,Mailbox,OutBuffer,OutVariable,Recurse,ResidentFolders,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderClientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderItemStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IncludeDumpsterInfo,IncludeHierarchyInfo,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "BatchName,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,ResultSize,Status,Suspend,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxMigrationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Diagnostic,DiagnosticArgument,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "BatchName,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,ResultSize,Status,Suspend,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMigrationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Diagnostic,DiagnosticArgument,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "BatchName,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,ResultSize,Status,Suspend,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMoveRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Diagnostic,DiagnosticArgument,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QuarantineMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Confirm,Debug,Direction,Domain,DomainController,EndExpiresDate,EndReceivedDate,ErrorAction,ErrorVariable,Identity,MessageId,OutBuffer,OutVariable,Page,PageSize,RecipientAddress,Reported,SenderAddress,StartExpiresDate,StartReceivedDate,Subject,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QuarantineMessageHeader", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,TrustedPublishingDomain,Type,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Default,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,AuthenticationType,BookmarkDisplayName,Capabilities,Credential,Debug,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Trustee,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemovedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IncludeSystemTags,Mailbox,OptionalInMailbox,OutBuffer,OutVariable,Types,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ShowPartnerLinked,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOActiveUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOOneDriveForBusinessFileActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOOneDriveForBusinessUserStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOSkyDriveProDeployedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOSkyDriveProStorageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOTeamSiteDeployedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOTeamSiteStorageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOTenantStorageMetricReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardClientDeviceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Category,Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardClientOSReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Category,Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardClientOutlookReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Category,Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardMetricsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SendAddress", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AddressId,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportingPeriod,StartDate,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceDeliveryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,ProbeTag,Recipient,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,MaintenanceWindowDays,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Anr,BypassOwnerCheck,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SendMeEmail,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SmimeConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-StaleMailboxDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-StaleMailboxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,SubscriptionType,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SupervisionListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Credential,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions",
						"ViewSupervisionListPermissions"
					}, "Identity,Tag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SupervisionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "DisplayDetails,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions",
						"ViewSupervisionListPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDeletedRecipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cookie,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Pages,RecipientType,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Cookie,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeSoftDeletedObjects,ManagedBy,OrganizationalUnit,OutBuffer,OutVariable,Pages,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Cookie,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeSoftDeletedObjects,ManagedBy,OrganizationalUnit,OutBuffer,OutVariable,Pages,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Cookie,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,Pages,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Cookie,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,Pages,ResultSize,SoftDeletedMailUser,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Cookie,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeSoftDeletedMailbox,MailboxPlan,OrganizationalUnit,OutBuffer,OutVariable,Pages,PublicFolder,RecipientTypeDetails,ResultSize,SoftDeletedMailbox,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Diagnostic,DiagnosticArgument,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,SoftDeletedUser,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Explicit,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,ThrottlingPolicyScope,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ThrottlingPolicy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ToolInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions"
					}, "DlpPolicy"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,State,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRuleAction", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRulePredicate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallDataRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,GroupBy,OutBuffer,OutVariable,UMDialPlan,UMIPGateway,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMHuntGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,IncludeSimulator,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,IgnoreErrors,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,OrganizationalUnit,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Debug,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OrganizationalUnit,OutBuffer,OutVariable,Preview,ReadFromDomainController,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-ContactList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CSV,CSVData,CSVStream,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-DlpPolicyCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,FileData,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-DlpPolicyTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,FileData,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Default,DomainController,ErrorAction,ErrorVariable,ExtranetCertificationUrl,ExtranetLicensingUrl,FileData,IntranetCertificationUrl,IntranetLicensingUrl,Name,OutBuffer,OutVariable,Password,RMSOnline,RMSOnlineConfig,RMSOnlineKeys,RefreshTemplates,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-TransportRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,FileData,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-UMPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PromptFileData,PromptFileName,PromptFileStream,UMAutoAttendant,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Install-UnifiedCompliancePrerequisite", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ForceInitialize,LoadOnly,PolicyCenterSiteOwner,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Invoke-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "AuthenticationType,CatchAllRecipient,Confirm,Debug,DomainName,DomainType,ErrorAction,ErrorVariable,InitialDomain,LiveIdInstanceType,MailFlowPartner,MatchSubDomains,Name,OutBuffer,OutVariable,OutboundOnly,SkipDnsProvisioning,SkipDomainNameValidation,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AccessLevel,Characteristic,Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,QueryString,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimpleDevicePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericDevicePasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePasswordEnabled,DevicePasswordExpiration,DevicePasswordHistory,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,IrmEnabled,IsDefault,IsDefaultPolicy,MaxAttachmentSize,MaxCalendarAgeFilter,MaxDevicePasswordFailedAttempts,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeDeviceLock,MinDevicePasswordComplexCharacters,MinDevicePasswordLength,Name,OutBuffer,OutVariable,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,Confirm,ErrorAction,ErrorVariable,GlobalAddressList,Name,OfflineAddressBook,OutBuffer,OutVariable,RoomList,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,Container,DisplayName,ErrorAction,ErrorVariable,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AdminAuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Cmdlets,Confirm,EndDate,ErrorAction,ErrorVariable,ExternalAccess,Name,ObjectIds,OutBuffer,OutVariable,Parameters,StartDate,StatusMailRecipients,UserIds,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DownloadOnly,Etoken,MarketplaceAssetID,MarketplaceQueryMarket,MarketplaceServicesUrl,Url"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DefaultStateForUser,Enabled,ErrorAction,ErrorVariable,OrganizationApp,OutBuffer,OutVariable,ProvidedTo,UserList,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AllowReadWriteMailbox,FileData,FileStream,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Verbose,WarningAction,WarningVariable,WhatIf,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditOperation,Debug,DomainController,ErrorAction,ErrorVariable,Verbose,WarningAction,WarningVariable,WhatIf,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppSecret,ApplicationIdentifier,AuthMetadataUrl,AuthorizationEndpoint,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IssuerIdentifier,Name,OutBuffer,OutVariable,TokenIssuingEndpoint,TrustAnySSLCertificate,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OrgWideAccount,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,FileData,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,AnyOfAuthenticationTypes,AnyOfClientIPAddressesOrRanges,AnyOfProtocols,AnyOfSourceTcpPortNumbers,Confirm,DatacenterAdminsOnly,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptAnyOfAuthenticationTypes,ExceptAnyOfClientIPAddressesOrRanges,ExceptAnyOfProtocols,ExceptAnyOfSourceTcpPortNumbers,ExceptUserIsMemberOf,ExceptUsernameMatchesAnyOfPatterns,Name,OutBuffer,OutVariable,Priority,UserIsMemberOf,UserRecipientFilter,UsernameMatchesAnyOfPatterns,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,FullSync,Identity,OutBuffer,OutVariable,SyncChangeInfos,SyncNow,SyncSvcUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,LinkedIn,Mailbox,OAuthVerifier,OutBuffer,OutVariable,RedirectUri,RequestSecret,RequestToken,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "AppAuthorizationCode,Facebook")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Priority,SerializedData,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IsEnabled,MaxRunningTasks,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ClassificationRuleCollectionIdentity,Confirm,Description,ErrorAction,ErrorVariable,Fingerprints,Locale,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Name,SharePointBinding,Type,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowJailbroken,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,Policy,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Name,SharePointBinding,Type,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,Policy,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,Force,Type,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyPolicyTo,BlockUnsupportedDevices,Debug,DomainController,ErrorAction,ExclusionList,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Confirm,CopyOwnerToMember,DisplayName,ErrorAction,ErrorVariable,ManagedBy,MemberJoinRestriction,Members,Name,Notes,OutBuffer,OutVariable,PrimarySmtpAddress,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ExternalDirectoryObjectId,IgnoreNamingPolicy,MemberDepartRestriction,OrganizationalUnit,OverrideRecipientQuotas,RoomList,Type"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassNestedModerationEnabled"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,Force,Name,OneDriveBinding,SharePointBinding,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessScopeIs,BlockAccess,Comment,ContentContainsSensitiveInformation,ContentPropertyContainsWords,Debug,Disabled,DomainController,ErrorAction,Name,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Description,ErrorAction,ErrorVariable,Mode,Name,OutBuffer,OutVariable,Parameters,State,Template,TemplateData,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Alias,ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,DisplayName,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,IncludedRecipients,Name,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,RecipientContainer,RecipientFilter,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Fingerprint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Description,ErrorAction,ErrorVariable,FileData,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,ErrorAction,ErrorVariable,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,AutoSubscribeNewGroupMembers,Confirm,Database,Description,DisplayName,EmailAddresses,ErrorAction,ErrorVariable,ExecutingUser,ExternalDirectoryObjectId,FromSyncClient,Language,Members,ModernGroupType,Name,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,Owners,PrimarySmtpAddress,PublicToGroups,RecipientIdType,RequireSenderAuthenticationEnabled,SharePointResources,SharePointUrl,ValidationOrganization,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Name,SharePointBinding,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,ContentDateFrom,ContentDateTo,ContentMatchQuery,Debug,Disabled,DomainController,ErrorAction,HoldContent,HoldDurationDisplayHint,Name,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AdminDisplayName,Confirm,Debug,DirectoryBasedEdgeBlockMode,DomainController,EnableSafeList,ErrorAction,ErrorVariable,IPAllowList,IPBlockList,IgnoreDehydratedFlag,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AddXHeaderValue,AdminDisplayName,BulkThreshold,Confirm,Debug,DomainController,DownloadLink,EnableEndUserSpamNotifications,EnableLanguageBlockList,EnableRegionBlockList,EndUserSpamNotificationCustomFromAddress,EndUserSpamNotificationCustomFromName,EndUserSpamNotificationCustomSubject,EndUserSpamNotificationFrequency,EndUserSpamNotificationLanguage,EndUserSpamNotificationLimit,ErrorAction,ErrorVariable,FalsePositiveAdditionalRecipients,HighConfidenceSpamAction,IgnoreDehydratedFlag,IncreaseScoreWithBizOrInfoUrls,IncreaseScoreWithImageLinks,IncreaseScoreWithNumericIps,IncreaseScoreWithRedirectToOtherPort,LanguageBlockList,MarkAsSpamBulkMail,MarkAsSpamEmbedTagsInHtml,MarkAsSpamEmptyMessages,MarkAsSpamFormTagsInHtml,MarkAsSpamFramesInHtml,MarkAsSpamFromAddressAuthFail,MarkAsSpamJavaScriptInHtml,MarkAsSpamNdrBackscatter,MarkAsSpamObjectTagsInHtml,MarkAsSpamSensitiveWordList,MarkAsSpamSpfRecordHardFail,MarkAsSpamWebBugsInHtml,ModifySubjectValue,Name,OutBuffer,OutVariable,QuarantineRetentionPeriod,RedirectToRecipients,RegionBlockList,SpamAction,TestModeAction,TestModeBccToRecipients,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,HostedContentFilterPolicy,Name,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "DisplayName,EmailAddress,ErrorAction,ErrorVariable,Mailbox,Name,OutBuffer,OutVariable,Password,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,ExternalIPAddresses,Features,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Confirm,DisplayName,EmailAddress,ErrorAction,ErrorVariable,Force,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUsername,Mailbox,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AssociatedAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RequireTls,RestrictDomainsToCertificate,RestrictDomainsToIPAddresses,SenderDomains,SenderIPAddresses,TlsSenderCertificateName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,ApplyCategory,BodyContainsWords,Confirm,CopyToFolder,DeleteMessage,ErrorAction,ErrorVariable,ExceptIfBodyContainsWords,ExceptIfFlaggedForAction,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromSubscription,ExceptIfHasAttachment,ExceptIfHasClassification,ExceptIfHeaderContainsWords,ExceptIfMessageTypeMatches,ExceptIfMyNameInCcBox,ExceptIfMyNameInToBox,ExceptIfMyNameInToOrCcBox,ExceptIfMyNameNotInToBox,ExceptIfReceivedAfterDate,ExceptIfReceivedBeforeDate,ExceptIfRecipientAddressContainsWords,ExceptIfSentOnlyToMe,ExceptIfSentTo,ExceptIfSubjectContainsWords,ExceptIfSubjectOrBodyContainsWords,ExceptIfWithImportance,ExceptIfWithSensitivity,ExceptIfWithinSizeRangeMaximum,ExceptIfWithinSizeRangeMinimum,FlaggedForAction,Force,ForwardAsAttachmentTo,ForwardTo,From,FromAddressContainsWords,FromMessageId,FromSubscription,HasAttachment,HasClassification,HeaderContainsWords,Mailbox,MarkAsRead,MarkImportance,MessageTypeMatches,MoveToFolder,MyNameInCcBox,MyNameInToBox,MyNameInToOrCcBox,MyNameNotInToBox,Name,OutBuffer,OutVariable,Priority,ReceivedAfterDate,ReceivedBeforeDate,RecipientAddressContainsWords,RedirectTo,SentOnlyToMe,SentTo,StopProcessingRules,SubjectContainsWords,SubjectOrBodyContainsWords,ValidateOnly,WarningAction,WarningVariable,WhatIf,WithImportance,WithSensitivity,WithinSizeRangeMaximum,WithinSizeRangeMinimum")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DiscoveryEndpoint,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,TargetAddressDomains,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Enabled,ErrorAction,ErrorVariable,JournalEmailAddress,Name,OutBuffer,OutVariable,Recipient,Scope,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MSOTenantSyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Alias,Confirm,Debug,DisplayName,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,ExternalEmailAddress,FirstName,Initials,LastName,MacAttachmentFormat,MessageBodyFormat,MessageFormat,Name,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Body,BodyFormat,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Subject,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,Alias,BypassLiveId,Confirm,Debug,DisplayName,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,ExternalEmailAddress,FederatedIdentity,FirstName,ImmutableId,Initials,LastName,MacAttachmentFormat,MailboxProvisioningConstraint,MailboxProvisioningPreferences,MessageBodyFormat,MessageFormat,Name,NetID,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,PrimarySmtpAddress,RemotePowerShellEnabled,SKUAssigned,SKUCapability,SamAccountName,UsageLocation,UsePreferMessageFormat,UserPrincipalName,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"NewUserPasswordManagementPermissions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"NewUserResetPasswordOnNextLogonPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId,ImportLiveId,UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions"
					}, "ActiveSyncMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MailboxProvisioningConstraint,MailboxProvisioningPreferences"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "AddOnSKUCapability,ArchiveDatabase,ArchiveDomain,BypassLiveId,Debug,EnableRoomMailboxAccount,MailboxContainerGuid,NetID,OverrideRecipientQuotas,RemoteAccountPolicy,RemoteArchive,RetentionPolicy,RoomMailboxPassword,SKUAssigned,SKUCapability,TargetAllMDBs,UsageLocation,UserPrincipalName,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions",
						"PilotingOrganization_Restrictions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxRecoveryPermissions",
						"PilotingOrganization_Restrictions"
					}, "RemovedMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions",
						"PilotingOrganization_Restrictions"
					}, "ModeratedBy,ModerationEnabled,Office,OriginalNetID,Phone,PrimarySmtpAddress,ResourceCapacity,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"NewUserPasswordManagementPermissions",
						"PilotingOrganization_Restrictions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"NewUserResetPasswordOnNextLogonPermissions",
						"PilotingOrganization_Restrictions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"PublicFoldersEnabled"
					}, "HoldForMigration,IsExcludedFromServingHierarchy,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RecipientManagementPermissions"
					}, "Alias,Confirm,Discovery,DisplayName,Equipment,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,FederatedIdentity,FirstName,Force,ImmutableId,Initials,LastName,MailboxPlan,Name,OrganizationalUnit,OutBuffer,OutVariable,RemotePowerShellEnabled,Room,Shared,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId,ImportLiveId,UseExistingLiveId,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxAuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,EndDate,ErrorAction,ErrorVariable,ExternalAccess,LogonTypes,Mailboxes,Name,Operations,OutBuffer,OutVariable,ShowDetails,StartDate,StatusMailRecipients,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AssociatedMessagesCopyOption,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,ConflictResolutionOption,ContentCodePage,ErrorAction,ErrorVariable,ExcludeDumpster,ExcludeFolders,FilePath,IncludeFolders,IsArchive,LargeItemLimit,Mailbox,Name,OutBuffer,OutVariable,RemoteCredential,RemoteHostName,SkipMerging,SourceRootFolder,Suspend,SuspendComment,TargetRootFolder,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Action,AdminDisplayName,BypassInboundMessages,BypassOutboundMessages,Confirm,CustomAlertText,CustomExternalBody,CustomExternalSubject,CustomFromAddress,CustomFromName,CustomInternalBody,CustomInternalSubject,CustomNotifications,Debug,DomainController,EnableExternalSenderAdminNotifications,EnableExternalSenderNotifications,EnableInternalSenderAdminNotifications,EnableInternalSenderNotifications,ErrorAction,ErrorVariable,ExternalSenderAdminAddress,IgnoreDehydratedFlag,InternalSenderAdminAddress,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,MalwareFilterPolicy,Name,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Description,ErrorAction,ErrorVariable,Force,Name,OutBuffer,OutVariable,Parent,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Delegating,ErrorAction,ErrorVariable,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,Force,Name,OutBuffer,OutVariable,Policy,RecipientOrganizationalUnitScope,RecipientRelativeWriteScope,Role,SecurityGroup,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Exclusive,Force,Name,OutBuffer,OutVariable,RecipientRestrictionFilter,RecipientRoot,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClassificationID,Confirm,DisplayName,DisplayPrecedence,ErrorAction,ErrorVariable,Locale,Name,OutBuffer,OutVariable,PermissionMenuVisible,RecipientDescription,RetainClassificationEnabled,SenderDescription,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "ArchiveOnly,AutoComplete,BadItemLimit,LargeItemLimit,Local,PrimaryOnly,SkipSteps,SourceEndpoint,SourcePublicFolderDatabase,TargetDeliveryDomain,TargetEndpoint"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "AllowIncrementalSyncs,AllowUnknownColumnsInCSV,AutoRetryCount,AutoStart,CSVData,CompleteAfter,Confirm,Debug,DisableOnCopy,DisallowExistingUsers,DomainController,ErrorAction,ErrorVariable,ExcludeFolders,Locale,Name,NotificationEmails,OutBuffer,OutVariable,ReportInterval,StartAfter,TargetArchiveDatabases,TargetDatabases,TimeZone,UserIds,Users,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "Autodiscover,EmailAddress,ExchangeOutlookAnywhere,ExchangeRemoteMove,ExchangeServer,MailboxPermission,NspiServer,PSTImport,PublicFolder,PublicFolderDatabaseServerLegacyDN,RPCProxyServer,SourceMailboxLegacyDN,TestMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Credentials,DomainController,ErrorAction,ErrorVariable,MaxConcurrentIncrementalSyncs,MaxConcurrentMigrations,Name,OutBuffer,OutVariable,RemoteServer,SkipVerification,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Authentication,Security"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapMigrationPermissions"
					}, "IMAP,Port")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions"
					}, "AllowGooglePushNotifications,AllowMicrosoftPushNotifications"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimplePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericPasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,IrmEnabled,IsDefault,MaxAttachmentSize,MaxCalendarAgeFilter,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeLock,MaxPasswordFailedAttempts,MinPasswordComplexCharacters,MinPasswordLength,Name,OutBuffer,OutVariable,PasswordEnabled,PasswordExpiration,PasswordHistory,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,AllowLargeItems,ArchiveDomain,ArchiveOnly,ArchiveTargetDatabase,BadItemLimit,BatchName,CheckInitialProvisioningSetting,CompleteAfter,CompletedRequestAgeLimit,Confirm,Debug,ErrorAction,ErrorVariable,ForceOffline,ForcePull,ForcePush,Identity,IgnoreRuleLimitErrors,IgnoreTenantMigrationPolicies,IncrementalSyncInterval,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,PreventCompletion,PrimaryOnly,Priority,Remote,RemoteArchiveTargetDatabase,RemoteCredential,RemoteGlobalCatalog,RemoteHostName,RemoteLegacy,RemoteOrganizationName,RemoteTargetDatabase,SkipMoving,StartAfter,Suspend,SuspendComment,SuspendWhenReadyToComplete,TargetDatabase,TargetDeliveryDomain,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,Confirm,DiffRetentionPeriod,ErrorAction,ErrorVariable,IsDefault,Name,OutBuffer,OutVariable,Versions,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,HybridDomains,InboundConnector,Name,OrganizationGuid,OrganizationName,OrganizationRelationship,OutBuffer,OutVariable,OutboundConnector,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CompanyTags,PersistedCapabilities,RMSOnlineConfig,RMSOnlineKeys")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveAccessEnabled,Confirm,DomainNames,Enabled,ErrorAction,ErrorVariable,FreeBusyAccessEnabled,FreeBusyAccessLevel,FreeBusyAccessScope,MailTipsAccessEnabled,MailTipsAccessLevel,MailTipsAccessScope,MailboxMoveEnabled,Name,OrganizationContact,OutBuffer,OutVariable,PhotosEnabled,TargetApplicationUri,TargetAutodiscoverEpr,TargetOwaURL,TargetSharingEpr,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"MessageTrackingPermissions"
					}, "DeliveryReportEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AllAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Enabled,ErrorAction,ErrorVariable,IsTransportRuleScoped,Name,OutBuffer,OutVariable,RecipientDomains,RouteAllMessagesViaOnPremises,SmartHosts,TlsDomain,TlsSettings,UseMXRecord,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "ApplyRightsProtectionTemplate,Confirm,Enabled,ErrorAction,ErrorVariable,Force,FromDepartment,Name,OutBuffer,OutVariable,Priority,SentTo,SentToScope,UserCanOverride,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IsDefault,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptSecurityIdentifierInformation,ActAsPermissions,AppOnlyPermissions,ApplicationIdentifier,AuthMetadataUrl,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IssuerIdentifier,LinkedAccount,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Value,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Confirm,DisplayName,EmailAddress,ErrorAction,ErrorVariable,Force,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUsername,LeaveOnServer,Mailbox,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,EformsLocaleId,ErrorAction,ErrorVariable,Mailbox,Name,OutBuffer,OutVariable,Path,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,AuthenticationMethod,BadItemLimit,BatchName,CSVData,CSVStream,CompletedRequestAgeLimit,Confirm,ErrorAction,ErrorVariable,InternalFlags,LargeItemLimit,Name,OutBuffer,OutVariable,OutlookAnywhereHostName,Priority,RemoteCredential,RemoteMailboxLegacyDN,RemoteMailboxServerLegacyDN,SkipMerging,Suspend,SuspendComment,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,AllowLargeItems,BadItemLimit,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Folders,InternalFlags,Name,OutBuffer,OutVariable,Priority,Suspend,SuspendComment,SuspendWhenReadyToComplete,TargetMailbox,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,MaxSyncAccounts,Name,OutBuffer,OutVariable,PollingInterval,SyncNowAllowed,TimeBeforeDormant,TimeBeforeInactive,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DomainName,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,IsDefault,IsDefaultArbitrationMailbox,Name,OutBuffer,OutVariable,RetentionId,RetentionPolicyTagLinks,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AgeLimitForRetention,Comment,Confirm,ErrorAction,ErrorVariable,IsDefaultAutoGroupPolicyTag,IsDefaultModeratedRecipientsPolicyTag,LocalizedComment,LocalizedRetentionPolicyTagName,ManagedFolderToUpgrade,MessageClass,MustDisplayCommentEnabled,Name,OutBuffer,OutVariable,RetentionAction,RetentionEnabled,RetentionId,SystemTag,Type,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,IsDefault,Name,OutBuffer,OutVariable,Roles,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ValidationOrganization"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Description,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,Force,LinkedPartnerGroupId,LinkedPartnerOrganizationId,ManagedBy,Name,OutBuffer,OutVariable,PartnerManaged,Roles,WarningAction,WarningVariable,WellKnownObjectGuid,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions",
						"RoleGroupMembershipRestrictions"
					}, "Members")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Extension,Identity,MimeType,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Default,Domains,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Alias,DisplayName,ErrorAction,ErrorVariable,Force,Name,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,SharePointUrl,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "AliasPrefix,Confirm,DefaultAliasPrefixEnabled,ErrorAction,ErrorVariable,IsDefault,IssueWarningQuota,MaxReceiveSize,Name,OutBuffer,OutVariable,ProhibitSendReceiveQuota,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Hotmail"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,DisplayName,EmailAddress,ErrorAction,ErrorVariable,Force,Mailbox,Name,OutBuffer,OutVariable,Password,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Imap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Pop")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,Alias,BlockedSendersHash,Confirm,CopyOwnerToMember,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IgnoreNamingPolicy,IsDirSynced,IsHierarchicalGroup,ManagedBy,MemberDepartRestriction,MemberJoinRestriction,Notes,OnPremisesObjectId,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,PhoneticDisplayName,PrimarySmtpAddress,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SafeRecipientsHash,SafeSendersHash,SendOofMessageToOriginatorEnabled,SeniorityIndex,SipAddresses,SmtpAndX500Addresses,Type,ValidationOrganization,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Members,Name"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassNestedModerationEnabled,ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,DirSyncAuthorityMetadata,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,IsDirSynced,Name,OnPremisesObjectId,OutBuffer,OutVariable,Type,ValidationOrganization,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,Alias,AssistantName,BlockedSendersHash,C,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,ExternalEmailAddress,Fax,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,Initials,IsDirSynced,LastName,MacAttachmentFormat,Manager,MasterAccountSid,MessageBodyFormat,MessageFormat,MobilePhone,Name,Notes,Office,OnPremisesObjectId,OrganizationalUnit,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,OverrideRecipientQuotas,Pager,Phone,PhoneticDisplayName,PostalCode,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceType,SafeRecipientsHash,SafeSendersHash,SeniorityIndex,SipAddresses,SmtpAndX500Addresses,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,ValidationOrganization,WarningAction,WarningVariable,WebPage,WhatIf"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Alias,Confirm,EmailAddresses,EntryId,ErrorAction,ErrorVariable,ExternalEmailAddress,HiddenFromAddressListsEnabled,Name,OutBuffer,OutVariable,OverrideRecipientQuotas,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AccountDisabled,AddOnSKUCapability,Alias,ArchiveGuid,ArchiveName,AssistantName,AuditAdminOperations,AuditDelegateAdminOperations,AuditDelegateOperations,AuditOwnerOperations,BlockedSendersHash,BypassAudit,BypassLiveId,C,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,ElcMailboxFlags,EmailAddresses,EndDateForRetentionHold,ErrorAction,ErrorVariable,EvictLiveId,ExchangeGuid,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,ExternalEmailAddress,Fax,FederatedIdentity,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,ImmutableId,ImportLiveId,InPlaceHoldsRaw,Initials,IntendedMailboxPlanName,IsCalculatedTargetAddress,IsDirSynced,Languages,LastName,LitigationHoldDate,LitigationHoldOwner,MacAttachmentFormat,MailboxAuditEnabled,MailboxAuditLogAgeLimit,Manager,MasterAccountSid,MessageBodyFormat,MessageFormat,MicrosoftOnlineServicesID,MobilePhone,Name,NetID,Notes,Office,OnPremisesObjectId,OrganizationalUnit,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,OverrideRecipientQuotas,Pager,Password,Phone,PhoneticDisplayName,Picture,PostalCode,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,ReleaseTrack,RemotePowerShellEnabled,RemoteRecipientType,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,ResourceMetaData,ResourcePropertiesDisplay,ResourceSearchProperties,ResourceType,RetentionComment,RetentionUrl,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SeniorityIndex,SharePointUrl,SipAddresses,SiteMailboxClosedTime,SiteMailboxOwners,SiteMailboxUsers,SmtpAndX500Addresses,StartDateForRetentionHold,StateOrProvince,StreetAddress,StsRefreshTokensValidFrom,TelephoneAssistant,Title,UsageLocation,UseExistingLiveId,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,ValidationOrganization,WarningAction,WarningVariable,WebPage,WhatIf,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AccountDisabled,ActiveSyncMailboxPolicy,AddOnSKUCapability,Alias,AntispamBypassEnabled,Archive,ArchiveGuid,ArchiveName,AssistantName,BlockedSendersHash,BypassLiveId,C,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,Equipment,ErrorAction,ErrorVariable,EvictLiveId,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalDirectoryObjectId,Fax,FederatedIdentity,FirstName,Force,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HoldForMigration,HomePhone,ImmutableId,ImportLiveId,InPlaceHoldsRaw,Initials,IsDirSynced,Languages,LastName,MailboxPlanName,ManagedFolderMailboxPolicy,ManagedFolderMailboxPolicyAllowed,Manager,MasterAccountSid,MicrosoftOnlineServicesID,MobilePhone,Name,NetID,Notes,Office,OnPremisesObjectId,OrganizationalUnit,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,OverrideRecipientQuotas,Pager,Password,Phone,PhoneticDisplayName,Picture,PostalCode,PublicFolder,RejectMessagesFrom,RejectMessagesFromDLMembers,ReleaseTrack,RemoteAccountPolicy,RemotePowerShellEnabled,RemoteRecipientType,RemovedMailbox,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,ResourceWindowsLiveID,RetentionPolicy,Room,SCLDeleteThreshold,SCLJunkThreshold,SCLQuarantineThreshold,SCLRejectThreshold,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SeniorityIndex,Shared,SharingPolicy,SipAddresses,SmtpAndX500Addresses,SpokenName,StateOrProvince,StreetAddress,StsRefreshTokensValidFrom,TargetAllMDbs,TelephoneAssistant,ThrottlingPolicy,Title,UsageLocation,UseExistingLiveId,UseExistingResourceLiveId,UseMapiRichTextFormat,UserCertificate,UserPrincipalName,UserSMimeCertificate,ValidationOrganization,WarningAction,WarningVariable,WebPage,WhatIf,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Eas"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregatedMailboxGuid,Authentication,Confirm,ErrorAction,ErrorVariable,Force,IncrementalSyncInterval,Mailbox,Name,OutBuffer,OutVariable,Password,RemoteEmailAddress,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,TargetRootFolder,UserName,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Imap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Pop")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountDisabled,Confirm,DirSyncAuthorityMetadata,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,IsDirSynced,Name,NetID,OnPremisesObjectId,OutBuffer,OutVariable,ReleaseTrack,RemoteRecipientType,StsRefreshTokensValidFrom,UsageLocation,ValidationOrganization,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions"
					}, "DlpPolicy,ExceptIfMessageContainsDataClassifications,MessageContainsDataClassifications,NotifySender"),
					new RoleParameters(new string[]
					{
						"IRMPremiumFeaturesPermissions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyRightsProtectionTemplate"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ActivationDate,AdComparisonAttribute,AdComparisonOperator,AddManagerAsRecipientType,AddToRecipients,AnyOfCcHeader,AnyOfCcHeaderMemberOf,AnyOfRecipientAddressContainsWords,AnyOfRecipientAddressMatchesPatterns,AnyOfToCcHeader,AnyOfToCcHeaderMemberOf,AnyOfToHeader,AnyOfToHeaderMemberOf,ApplyClassification,ApplyHtmlDisclaimerFallbackAction,ApplyHtmlDisclaimerLocation,ApplyHtmlDisclaimerText,ApplyOME,AttachmentContainsWords,AttachmentExtensionMatchesWords,AttachmentHasExecutableContent,AttachmentIsPasswordProtected,AttachmentIsUnsupported,AttachmentMatchesPatterns,AttachmentNameMatchesPatterns,AttachmentProcessingLimitExceeded,AttachmentPropertyContainsWords,AttachmentSizeOver,BetweenMemberOf1,BetweenMemberOf2,BlindCopyTo,Comments,Confirm,ContentCharacterSetContainsWords,CopyTo,DeleteMessage,Disconnect,Enabled,ErrorAction,ErrorVariable,ExceptIfAdComparisonAttribute,ExceptIfAdComparisonOperator,ExceptIfAnyOfCcHeader,ExceptIfAnyOfCcHeaderMemberOf,ExceptIfAnyOfRecipientAddressContainsWords,ExceptIfAnyOfRecipientAddressMatchesPatterns,ExceptIfAnyOfToCcHeader,ExceptIfAnyOfToCcHeaderMemberOf,ExceptIfAnyOfToHeader,ExceptIfAnyOfToHeaderMemberOf,ExceptIfAttachmentContainsWords,ExceptIfAttachmentExtensionMatchesWords,ExceptIfAttachmentHasExecutableContent,ExceptIfAttachmentIsPasswordProtected,ExceptIfAttachmentIsUnsupported,ExceptIfAttachmentMatchesPatterns,ExceptIfAttachmentNameMatchesPatterns,ExceptIfAttachmentProcessingLimitExceeded,ExceptIfAttachmentPropertyContainsWords,ExceptIfAttachmentSizeOver,ExceptIfBetweenMemberOf1,ExceptIfBetweenMemberOf2,ExceptIfContentCharacterSetContainsWords,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromAddressMatchesPatterns,ExceptIfFromMemberOf,ExceptIfFromScope,ExceptIfHasClassification,ExceptIfHasNoClassification,ExceptIfHasSenderOverride,ExceptIfHeaderContainsMessageHeader,ExceptIfHeaderContainsWords,ExceptIfHeaderMatchesMessageHeader,ExceptIfHeaderMatchesPatterns,ExceptIfManagerAddresses,ExceptIfManagerForEvaluatedUser,ExceptIfMessageSizeOver,ExceptIfMessageTypeMatches,ExceptIfRecipientADAttributeContainsWords,ExceptIfRecipientADAttributeMatchesPatterns,ExceptIfRecipientAddressContainsWords,ExceptIfRecipientAddressMatchesPatterns,ExceptIfRecipientDomainIs,ExceptIfRecipientInSenderList,ExceptIfSCLOver,ExceptIfSenderADAttributeContainsWords,ExceptIfSenderADAttributeMatchesPatterns,ExceptIfSenderDomainIs,ExceptIfSenderInRecipientList,ExceptIfSenderIpRanges,ExceptIfSenderManagementRelationship,ExceptIfSentTo,ExceptIfSentToMemberOf,ExceptIfSentToScope,ExceptIfSubjectContainsWords,ExceptIfSubjectMatchesPatterns,ExceptIfSubjectOrBodyContainsWords,ExceptIfSubjectOrBodyMatchesPatterns,ExceptIfWithImportance,ExpiryDate,From,FromAddressContainsWords,FromAddressMatchesPatterns,FromMemberOf,FromScope,GenerateIncidentReport,GenerateNotification,HasClassification,HasNoClassification,HasSenderOverride,HeaderContainsMessageHeader,HeaderContainsWords,HeaderMatchesMessageHeader,HeaderMatchesPatterns,IncidentReportContent,IncidentReportOriginalMail,LogEventText,ManagerAddresses,ManagerForEvaluatedUser,MessageSizeOver,MessageTypeMatches,Mode,ModerateMessageByManager,ModerateMessageByUser,Name,OutBuffer,OutVariable,PrependSubject,Priority,Quarantine,RecipientADAttributeContainsWords,RecipientADAttributeMatchesPatterns,RecipientAddressContainsWords,RecipientAddressMatchesPatterns,RecipientDomainIs,RecipientInSenderList,RedirectMessageTo,RejectMessageEnhancedStatusCode,RejectMessageReasonText,RemoveHeader,RemoveOME,RouteMessageOutboundConnector,RouteMessageOutboundRequireTls,RuleErrorAction,RuleSubType,SCLOver,SenderADAttributeContainsWords,SenderADAttributeMatchesPatterns,SenderAddressLocation,SenderDomainIs,SenderInRecipientList,SenderIpRanges,SenderManagementRelationship,SentTo,SentToMemberOf,SentToScope,SetAuditSeverity,SetHeaderName,SetHeaderValue,SetSCL,SmtpRejectMessageRejectStatusCode,SmtpRejectMessageRejectText,StopRuleProcessing,SubjectContainsWords,SubjectMatchesPatterns,SubjectOrBodyContainsWords,SubjectOrBodyMatchesPatterns,UseLegacyRegex,WarningAction,WarningVariable,WhatIf,WithImportance")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,DTMFFallbackAutoAttendant,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PilotIdentifierList,SpeechEnabled,Status,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,KeyMappings,Mailbox,Name,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DefaultOutboundCallingLineId,GlobalCallRoutingScheme,SipResourceIdentifierRequired"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "FaxEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AccessTelephoneNumbers,Confirm,CountryOrRegionCode,DefaultLanguage,ErrorAction,ErrorVariable,GenerateUMMailboxPolicy,Name,NumberOfDigitsInExtension,OutBuffer,OutVariable,URIType,VoIPSecurity,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMHuntGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PilotIdentifier,UMDialPlan,UMIPGateway,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "GlobalCallRoutingScheme"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Address,Confirm,ErrorAction,ErrorVariable,IPAddressFamily,Name,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Release-QuarantineMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReleaseToAll,ReportFalsePositive,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDeviceClass", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Recursive,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OrganizationApp,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,ForceDeletion,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,ForceDeletion,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DatacenterAdminsOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-CompletedDarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MaxCompletionTime,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-CompliancePolicySyncNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable,ForReconciliation,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable,Identity,Member,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DlpPolicyTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FederatedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DomainName,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExecutingUser,ForReconciliation,Force,FromSyncClient,Identity,OutBuffer,OutVariable,Permanent,RecipientIdType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ForceDeletion,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,ForReconciliation,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ForReconciliation,Verbose"),
					new RoleParameters(new string[]
					{
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreLegalHold,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "Permanent"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation,IgnoreLegalHold"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,PublicFolder,RemoveArbitrationMailboxWithOABsAllowed,RemoveLastArbitrationMailboxAllowed,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RecipientManagementPermissions"
					}, "Disconnect"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccessRights,Confirm,Deny,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,InheritanceType,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Recurse,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MigrationUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Async,AuthoritativeOnly,Confirm,ErrorAction,ErrorVariable,ForReconciliation,Force,IsDatacenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OrganizationalContacts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Recurse,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderClientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RecipientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessRights,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Trustee,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions",
						"RoleGroupMembershipRestrictions"
					}, "BypassSecurityGroupManagerCheck,Confirm,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,RemoveWellKnownObjectGuid,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,Member,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController"),
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,IsDataCenter,OutBuffer,OutVariable,SkipRecipients,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SupervisionListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Confirm,Entry,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RemoveAll,Tag,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassSecurityGroupManagerCheck,Confirm,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DisableWindowsLiveID,DomainController,ErrorAction,ErrorVariable,ForReconciliation,Identity,IgnoreDefaultScope,IgnoreLegalHold,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RecipientManagementPermissions"
					}, "Permanent"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DisableWindowsLiveID,Disconnect,DomainController,ErrorAction,ErrorVariable,ForReconciliation,Identity,IgnoreDefaultScope,IgnoreLegalHold,OutBuffer,OutVariable,Permanent,PublicFolder,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "KeepWindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,KeepWindowsLiveID,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RecipientManagementPermissions"
					}, "Permanent")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMHuntGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMMailboxPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CustomAwayGreeting,CustomVoicemailGreeting,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Repair-ContactProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FixConversationIndexTracking,FixDisplayName,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Reset-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,IncludeUserApproved,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendWhenReadyToComplete,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Cmdlets,EndDate,ErrorAction,ErrorVariable,ExternalAccess,IsSuccess,ObjectIds,OutBuffer,OutVariable,Parameters,ResultSize,StartDate,StartIndex,UserIds,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MailboxAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "EndDate,ErrorAction,ErrorVariable,ExternalAccess,Identity,LogonTypes,Mailboxes,Operations,OutBuffer,OutVariable,ResultSize,ShowDetails,StartDate,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,Confirm,DoNotResolve,ErrorAction,ErrorVariable,Identity,MessageEntryId,MessageId,OutBuffer,OutVariable,Recipients,ResultSize,Sender,Subject,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-MapiSubmitSystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-TextMessagingVerificationCode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "PreferredServer,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "BlockLiveIdProvisioningCalls,CatchAllRecipient,Confirm,DomainController,DomainType,DualProvisioningEnabled,EnableNego2Authentication,ErrorAction,IsCoexistenceDomain,LiveIdInstanceType,MatchSubDomains,OutboundOnly,PendingCompletion,PendingRemoval,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AccessLevel,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimpleDevicePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericDevicePasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePasswordEnabled,DevicePasswordExpiration,DevicePasswordHistory,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,Identity,IrmEnabled,IsDefault,IsDefaultPolicy,MaxAttachmentSize,MaxCalendarAgeFilter,MaxDevicePasswordFailedAttempts,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeDeviceLock,MinDevicePasswordComplexCharacters,MinDevicePasswordLength,Name,OutBuffer,OutVariable,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncOrganizationSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AddDeviceFilterRule,AddDeviceFilterRuleForAllDevices,AdminMailRecipients,AllowAccessForUnSupportedPlatform,Confirm,DefaultAccessLevel,DeviceFilterCharacteristic,DeviceFilterName,DeviceFilterOperator,DeviceFilterRuleName,DeviceFilterValue,ErrorAction,ErrorVariable,Identity,OtaNotificationMailInsert,OutBuffer,OutVariable,RemoveDeviceFilter,RemoveDeviceFilterRule,UserMailInsert,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,Confirm,ErrorAction,ErrorVariable,GlobalAddressList,Identity,Name,OfflineAddressBook,OutBuffer,OutVariable,RoomList,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,DisplayName,ErrorAction,ErrorVariable,Identity,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AdminAuditLogAgeLimit,AdminAuditLogCmdlets,AdminAuditLogEnabled,AdminAuditLogExcludedCmdlets,AdminAuditLogParameters,Confirm,ErrorAction,ErrorVariable,Force,LogLevel,Name,OutBuffer,OutVariable,TestCmdletLoggingEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DefaultStateForUser,Enabled,ErrorAction,ErrorVariable,Force,Name,OrganizationApp,OutBuffer,OutVariable,ProvidedTo,UserList,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuditConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Verbose,WarningAction,WarningVariable,WhatIf,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditOperation,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuthConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CertificateThumbprint,ClearPreviousCertificate,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,NewCertificateEffectiveDate,NewCertificateThumbprint,OutBuffer,OutVariable,PublishCertificate,Realm,Server,ServiceName,SkipImmediateCertificateDeployment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppSecret,ApplicationIdentifier,AuthMetadataUrl,AuthorizationEndpoint,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IsDefaultAuthorizationEndpoint,IssuerIdentifier,Name,OutBuffer,OutVariable,RefreshAuthMetadata,TokenIssuingEndpoint,TrustAnySSLCertificate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OrgWideAccount,OutBuffer,OutVariable,PerUserAccount,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSyncAllowedDeviceIDs,ActiveSyncBlockedDeviceIDs,ActiveSyncDebugLogging,ActiveSyncEnabled,ActiveSyncMailboxPolicy,OWAforDevicesEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DisplayName,ECPEnabled,EmailAddresses,ErrorAction,ErrorVariable,IgnoreDefaultScope,Name,OutBuffer,OutVariable,ShowGalAsDefaultView,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EwsPermissions"
					}, "EwsAllowEntourage,EwsAllowList,EwsAllowMacOutlook,EwsAllowOutlook,EwsApplicationAccessPolicy,EwsBlockList,EwsEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapPermissions"
					}, "ImapEnabled,ImapForceICalForCalendarRetrievalOption,ImapMessagesRetrievalMimeFormat,ImapSuppressReadReceipt,ImapUseProtocolDefaults"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "OwaMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "OWAEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OutlookAnywherePermissions"
					}, "MAPIEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopPermissions"
					}, "PopEnabled,PopForceICalForCalendarRetrievalOption,PopMessagesRetrievalMimeFormat,PopSuppressReadReceipt,PopUseProtocolDefaults")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CalendarNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "CalendarUpdateNotification,CalendarUpdateSendDuringWorkHour,Confirm,DailyAgendaNotification,DailyAgendaNotificationSendTime,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,MeetingReminderNotification,MeetingReminderSendDuringWorkHour,NextDays,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddAdditionalResponse,AddNewRequestsTentatively,AddOrganizerToSubject,AdditionalResponse,AllBookInPolicy,AllRequestInPolicy,AllRequestOutOfPolicy,AllowConflicts,AllowRecurringMeetings,AutomateProcessing,BookInPolicy,BookingWindowInDays,Confirm,ConflictPercentageAllowed,DeleteAttachments,DeleteComments,DeleteNonCalendarItems,DeleteSubject,EnableResponseDetails,EnforceSchedulingHorizon,ErrorAction,ErrorVariable,ForwardRequestsToDelegates,IgnoreDefaultScope,MaximumConflictInstances,MaximumDurationInMinutes,OrganizerInfo,OutBuffer,OutVariable,RemoveForwardedMeetingNotifications,RemoveOldMeetingMessages,RemovePrivateProperty,RequestInPolicy,RequestOutOfPolicy,ResourceDelegates,ScheduleOnlyDuringWorkHours,TentativePendingApproval,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "ProcessExternalMeetingMessages")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,FileData,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,AnyOfAuthenticationTypes,AnyOfClientIPAddressesOrRanges,AnyOfProtocols,AnyOfSourceTcpPortNumbers,Confirm,DatacenterAdminsOnly,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptAnyOfAuthenticationTypes,ExceptAnyOfClientIPAddressesOrRanges,ExceptAnyOfProtocols,ExceptAnyOfSourceTcpPortNumbers,ExceptUserIsMemberOf,ExceptUsernameMatchesAnyOfPatterns,Identity,Name,OutBuffer,OutVariable,Priority,UserIsMemberOf,UserRecipientFilter,UsernameMatchesAnyOfPatterns,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,LinkedIn,OAuthVerifier,OutBuffer,OutVariable,RedirectUri,RequestSecret,RequestToken,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "AppAuthorizationCode,Facebook")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ConsumerMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlternateSupportEmailAddresses,Birthdate,BirthdayPrecision,Confirm,Debug,EmailAddresses,ErrorAction,ErrorVariable,FblEnabled,FirstName,Gender,Identity,LastName,LocaleID,MakeExoPrimary,MakeExoSecondary,MigrationDryRun,Name,NameVersion,Occupation,OptInUser,OutBuffer,OutVariable,PostalCode,Region,Timezone,UsageLocation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AssistantName,City,Company,CountryOrRegion,Department,DisplayName,Fax,FirstName,GeoCoordinates,HomePhone,Identity,Initials,LastName,Manager,MobilePhone,Name,Notes,Office,OtherFax,OtherHomePhone,OtherTelephone,Pager,Phone,PhoneticDisplayName,PostalCode,SeniorityIndex,StateOrProvince,StreetAddress,TelephoneAssistant,Title,WebPage"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AllowUMCallsFromNonUsers,Confirm,CreateDTMFMap,Debug,IgnoreDefaultScope,OutBuffer,OutVariable,PostOfficeBox,SimpleDisplayName,UMCallingLineIds,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CurrentOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreSiteCheck,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Priority,TaskId,TaskState,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IsEnabled,MaxRunningTasks,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Description,ErrorAction,ErrorVariable,Fingerprints,Identity,IsDefault,Locale,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DataClassificationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,DistinctFunctions,DistinctRegExes,ErrorAction,ErrorVariable,FingerprintThreshold,Identity,KeywordLength,MaxAnyBlocks,MaxFingerprints,MaxNestedAnyBlocks,MaxRulePackageSize,MaxRulePackages,Name,NumberOfKeywords,OutBuffer,OutVariable,RegExGrammarLimit,RegExLength,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Identity,Name,RemoveExchangeBinding,RemoveSharePointBinding,SharePointBinding,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowJailbroken,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,Enabled,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,Identity,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,ExchangeBinding,Force,Identity,Name,RemoveExchangeBinding,RemoveSharePointBinding,SharePointBinding,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountName,AccountUserName,AllowAppStore,AllowAssistantWhileLocked,AllowConvenienceLogon,AllowDiagnosticSubmission,AllowMove,AllowPassbookWhileLocked,AllowRecentAddressSyncing,AllowScreenshot,AllowSimplePassword,AllowVideoConferencing,AllowVoiceAssistant,AllowVoiceDialing,AllowiCloudBackup,AllowiCloudDocSync,AllowiCloudPhotoSync,AntiVirusSignatureStatus,AntiVirusStatus,AppsRating,AutoUpdateStatus,BluetoothEnabled,CameraEnabled,ContentType,DaysToSync,Debug,DomainController,EmailAddress,EnableRemovableStorage,Enabled,ErrorAction,ExchangeActiveSyncHost,FirewallStatus,ForceAppStorePassword,ForceEncryptedBackup,Identity,MaxPasswordAttemptsBeforeWipe,MaxPasswordGracePeriod,MoviesRating,PasswordComplexity,PasswordExpirationDays,PasswordHistoryCount,PasswordMinComplexChars,PasswordMinimumLength,PasswordQuality,PasswordRequired,PasswordTimeout,PhoneMemoryEncrypted,RegionRatings,SmartScreenEnabled,SyncSchedule,SystemSecurityTLS,TVShowsRating,TargetGroups,UseOnlyInEmail,UseSMIME,UseSSL,UserAccountControlStatus,Verbose,WLANEnabled,WorkFoldersSyncUrl")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Debug,DomainController,Enabled,ErrorAction,Force,Identity,Name,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyPolicyTo,BlockUnsupportedDevices,Debug,DomainController,Enabled,ExclusionList,Identity,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,BypassSecurityGroupManagerCheck,Confirm,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,IgnoreNamingPolicy,ManagedBy,MemberDepartRestriction,MemberJoinRestriction,Name,OutBuffer,OutVariable,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SendOofMessageToOriginatorEnabled,SimpleDisplayName,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ForceUpgrade,GenerateExternalDirectoryObjectId"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "BypassNestedModerationEnabled"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "BypassModerationFromSendersOrMembers"),
					new RoleParameters(new string[]
					{
						"ResourceMailboxRestrictions",
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddOneDriveBinding,AddSharePointBinding,Comment,Debug,DomainController,Enabled,ErrorAction,Force,Identity,Name,RemoveOneDriveBinding,RemoveSharePointBinding,RetryDistribution,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccessScopeIs,BlockAccess,Comment,ContentContainsSensitiveInformation,ContentPropertyContainsWords,Debug,Disabled,DomainController,ErrorAction,Identity,Name,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Description,ErrorAction,ErrorVariable,Identity,Mode,Name,OutBuffer,OutVariable,State,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ForceUpgrade,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IncludedRecipients,ManagedBy,Name,Notes,PhoneticDisplayName,RecipientContainer,RecipientFilter,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,SendOofMessageToOriginatorEnabled,SimpleDisplayName,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"ResourceMailboxRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "MailboxRelease")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FederatedOrganizationIdentifier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountNamespace,Confirm,DefaultDomain,DelegationFederationTrust,Enabled,ErrorAction,ErrorVariable,Identity,OrganizationContact,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,ErrorAction,ErrorVariable,Identity,IncludedRecipients,Name,OutBuffer,OutVariable,RecipientFilter,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DisplayName,Identity,IsHierarchicalGroup,ManagedBy,Name,Notes,OutBuffer,OutVariable,PhoneticDisplayName,SeniorityIndex,SimpleDisplayName,Universal,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddOwners,AddedMembers,AutoSubscribeNewGroupMembers,ConfigurationActions,Confirm,Debug,Description,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExecutingUser,ExternalDirectoryObjectId,Force,ForcePublishExternalResources,FromSyncClient,Identity,Language,Name,OutBuffer,OutVariable,Owners,PermissionsVersion,PrimarySmtpAddress,RecipientIdType,RemoveOwners,RemovedMembers,RequireSenderAuthenticationEnabled,SharePointResources,SharePointUrl,SwitchToGroupType,Verbose,WarningAction,WarningVariable,WhatIf,YammerGroupEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddExchangeBinding,AddSharePointBinding,Comment,Debug,DomainController,Enabled,ErrorAction,Force,Identity,Name,RemoveExchangeBinding,RemoveSharePointBinding,RetryDistribution,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,ContentDateFrom,ContentDateTo,ContentMatchQuery,Debug,Disabled,DomainController,ErrorAction,HoldContent,HoldDurationDisplayHint,Identity,Name,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AdminDisplayName,Confirm,Debug,DirectoryBasedEdgeBlockMode,DomainController,EnableSafeList,ErrorAction,ErrorVariable,IPAllowList,IPBlockList,Identity,IgnoreDehydratedFlag,MakeDefault,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AddXHeaderValue,AdminDisplayName,BulkThreshold,Confirm,Debug,DomainController,DownloadLink,EnableEndUserSpamNotifications,EnableLanguageBlockList,EnableRegionBlockList,EndUserSpamNotificationCustomFromAddress,EndUserSpamNotificationCustomFromName,EndUserSpamNotificationCustomSubject,EndUserSpamNotificationFrequency,EndUserSpamNotificationLanguage,EndUserSpamNotificationLimit,ErrorAction,ErrorVariable,FalsePositiveAdditionalRecipients,HighConfidenceSpamAction,Identity,IgnoreDehydratedFlag,IncreaseScoreWithBizOrInfoUrls,IncreaseScoreWithImageLinks,IncreaseScoreWithNumericIps,IncreaseScoreWithRedirectToOtherPort,LanguageBlockList,MakeDefault,MarkAsSpamBulkMail,MarkAsSpamEmbedTagsInHtml,MarkAsSpamEmptyMessages,MarkAsSpamFormTagsInHtml,MarkAsSpamFramesInHtml,MarkAsSpamFromAddressAuthFail,MarkAsSpamJavaScriptInHtml,MarkAsSpamNdrBackscatter,MarkAsSpamObjectTagsInHtml,MarkAsSpamSensitiveWordList,MarkAsSpamSpfRecordHardFail,MarkAsSpamWebBugsInHtml,ModifySubjectValue,Name,OutBuffer,OutVariable,QuarantineRetentionPeriod,RedirectToRecipients,RegionBlockList,SpamAction,TestModeAction,TestModeBccToRecipients,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,HostedContentFilterPolicy,Identity,Name,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedOutboundSpamFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AdminDisplayName,BccSuspiciousOutboundAdditionalRecipients,BccSuspiciousOutboundMail,BlockUnlistedDomains,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Name,NotifyOutboundSpam,NotifyOutboundSpamRecipients,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "Confirm,DisplayName,Enabled,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Password,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServers,Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,ExternalIPAddresses,Features,Name,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HybridMailflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"FFOMigrationInProgress_Restrictions"
					}, "CentralizedTransportEnabled,CertificateSubject,Confirm,ErrorAction,ErrorVariable,InboundIPs,OnPremisesFQDN,OutBuffer,OutVariable,OutboundDomains,SecureMailEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "JournalReportDecryptionEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ClientAccessServerEnabled,Confirm,DomainController,EDiscoverySuperUserEnabled,ErrorAction,ErrorVariable,ExternalLicensingEnabled,Force,InternalLicensingEnabled,LicensingLocation,OutBuffer,OutVariable,PublishingLocation,RMSOnlineKeySharingLocation,SearchEnabled,ServiceLocation,TransportDecryptionSetting,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "Confirm,DisplayName,EmailAddress,Enabled,ErrorAction,ErrorVariable,Force,Identity,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUserName,Mailbox,OutBuffer,OutVariable,ResendVerification,ValidateSecret,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AssociatedAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RequireTls,RestrictDomainsToCertificate,RestrictDomainsToIPAddresses,SenderDomains,SenderIPAddresses,TlsSenderCertificateName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DiscoveryEndpoint,Enabled,ErrorAction,ErrorVariable,Force,OutBuffer,OutVariable,TargetAddressDomains,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CertificateSubject,Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,Name,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox,Confirm,CreateDTMFMap,Debug,EmailAddressPolicyEnabled,ErrorAction,ErrorVariable,ForceUpgrade,GenerateExternalDirectoryObjectId,IgnoreDefaultScope,MacAttachmentFormat,MaxReceiveSize,MaxRecipientPerMessage,MaxSendSize,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,RemovePicture,RemoveSpokenName,SecondaryAddress,SecondaryDialPlan,SimpleDisplayName,UseMapiRichTextFormat,UsePreferMessageFormat,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "ModeratedBy,ModerationEnabled"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"PublicFoldersEnabled"
					}, "PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,ArbitrationMailbox,Confirm,Contacts,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DeliverToMailboxAndForward,DisplayName,EmailAddressPolicyEnabled,EmailAddresses,EntryId,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,ForwardingAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IgnoreDefaultScope,MaxReceiveSize,MaxSendSize,Name,OutBuffer,OutVariable,PhoneticDisplayName,PublicFolderType,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled,SimpleDisplayName,UMDtmfMap,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,Identity,ImmutableId,Name,NetID,PrimarySmtpAddress,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddOnSKUCapability,ArchiveGuid,ArchiveName,ArchiveQuota,ArchiveWarningQuota,BypassLiveId,CalendarVersionStoreDisabled,Confirm,CreateDTMFMap,Debug,EmailAddressPolicyEnabled,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExchangeGuid,ForceUpgrade,IgnoreDefaultScope,JournalArchiveAddress,LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,MacAttachmentFormat,MailboxProvisioningConstraint,MailboxProvisioningPreferences,MaxReceiveSize,MaxSendSize,MessageBodyFormat,MessageFormat,OutBuffer,OutVariable,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RemovePicture,RemoveSpokenName,RetainDeletedItemsFor,RetentionComment,RetentionHoldEnabled,RetentionUrl,SKUAssigned,SKUCapability,SamAccountName,SecondaryAddress,SecondaryDialPlan,SimpleDisplayName,SingleItemRecoveryEnabled,StartDateForRetentionHold,UsageLocation,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "FederatedIdentity"),
					new RoleParameters(new string[]
					{
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap"),
					new RoleParameters(new string[]
					{
						"UserLiveIdManagementPermissions"
					}, "WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DisplayName,EmailAddresses,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,Identity,ImmutableId,LitigationHoldEnabled,Name,NetID,Office,OriginalNetID,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressBookPolicy"),
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions",
						"RichCoexistenceRestrictions"
					}, "ArchiveName"),
					new RoleParameters(new string[]
					{
						"ChangeMailboxPlanAssignmentPermissions",
						"EOPPremiumRestrictions"
					}, "MailboxPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,AddOnSKUCapability,ApplyMandatoryProperties,Arbitration,ArbitrationMailbox,ArchiveDomain,ArchiveQuota,ArchiveStatus,ArchiveWarningQuota,AuditAdmin,AuditDelegate,AuditEnabled,AuditLog,AuditLogAgeLimit,AuditOwner,BypassLiveId,CalendarLoggingQuota,CalendarRepairDisabled,CalendarVersionStoreDisabled,ClientExtensions,Confirm,Debug,DeliverToMailboxAndForward,DomainController,DumpsterMessagesPerFolderCountReceiveQuota,DumpsterMessagesPerFolderCountWarningQuota,EmailAddressPolicyEnabled,EnableRoomMailboxAccount,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExtendedPropertiesCountQuota,ExternalOofOptions,FolderHierarchyChildrenCountReceiveQuota,FolderHierarchyChildrenCountWarningQuota,FolderHierarchyDepthReceiveQuota,FolderHierarchyDepthWarningQuota,FoldersCountReceiveQuota,FoldersCountWarningQuota,Force,ForwardingSmtpAddress,GMGen,GrantSendOnBehalfTo,IgnoreDefaultScope,ImListMigrationCompleted,JournalArchiveAddress,Languages,LinkedCredential,MailRouting,MailboxMessagesPerFolderCountReceiveQuota,MailboxMessagesPerFolderCountWarningQuota,MailboxProvisioningConstraint,MailboxProvisioningPreferences,Management,MessageCopyForSendOnBehalfEnabled,MessageCopyForSentAsEnabled,MessageTracking,Migration,OABGen,OMEncryption,OutBuffer,OutVariable,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RemoteAccountPolicy,RemoteRecipientType,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,RetainDeletedItemsUntilBackup,RetentionHoldEnabled,RetentionPolicy,RoomMailboxPassword,RulesQuota,SKUAssigned,SKUCapability,SecondaryAddress,SharingPolicy,SimpleDisplayName,SingleItemRecoveryEnabled,SkipMailboxProvisioningConstraintValidation,StartDateForRetentionHold,SuiteServiceStorage,TenantUpgrade,Type,UMDataStorage,UMGrammar,UsageLocation,UseDatabaseQuotaDefaults,UseDatabaseRetentionDefaults,UserCertificate,UserSMimeCertificate,Verbose,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "LitigationHoldDate,LitigationHoldDuration,LitigationHoldOwner,RetentionComment,RetentionUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxQuotaPermissions"
					}, "IssueWarningQuota,ProhibitSendQuota,ProhibitSendReceiveQuota"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxSIRPermissions"
					}, "RetainDeletedItemsFor"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ManagedFoldersPermissions"
					}, "RemoveManagedFolderAndPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "MessageTrackingReadStatusEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PropertiesMasteredOnPremiseRestrictions",
						"SetHiddenFromAddressListPermissions"
					}, "HiddenFromAddressListsEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "DefaultPublicFolderMailbox,IsExcludedFromServingHierarchy,IsHierarchyReady,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "FederatedIdentity,Password,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CreateDTMFMap,UMDtmfMap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserLiveIdManagementPermissions"
					}, "EvictLiveId"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAuditBypassAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuditBypassEnabled,Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoReplyState,Confirm,EndTime,ErrorAction,ErrorVariable,ExternalAudience,ExternalMessage,IgnoreDefaultScope,OutBuffer,OutVariable,StartTime,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "InternalMessage")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DefaultReminderTime,ErrorAction,ErrorVariable,FirstWeekOfYear,OutBuffer,OutVariable,ReminderSoundEnabled,RemindersEnabled,ShowWeekNumbers,TimeIncrement,WarningAction,WarningVariable,WeatherEnabled,WeatherLocations,WeatherUnit,WeekStartDay,WhatIf,WorkingHoursEndTime,WorkingHoursStartTime,WorkingHoursTimeZone"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "WorkDays")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DetailLevel,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PublishDateRangeFrom,PublishDateRangeTo,PublishEnabled,ResetUrl,SearchableUrlEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,ErrorAction,ErrorVariable,LargeItemLimit,OutBuffer,OutVariable,RemoteCredential,RemoteHostName,SkipMerging,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BlockedSendersAndDomains,Confirm,ContactsTrusted,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IgnoreDefaultScope,OutBuffer,OutVariable,TrustedListsOnly,TrustedSendersAndDomains,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AfterMoveOrDeleteBehavior,AlwaysShowBcc,AlwaysShowFrom,AutoAddSignature,AutoAddSignatureOnMobile,CheckForForgottenAttachments,Confirm,ConversationSortOrder,DefaultFontColor,DefaultFontFlags,DefaultFontName,DefaultFontSize,DefaultFormat,EmailComposeMode,EmptyDeletedItemsOnLogoff,ErrorAction,ErrorVariable,HideDeletedItems,IgnoreDefaultScope,NewItemNotification,OutBuffer,OutVariable,PreviewMarkAsReadBehavior,PreviewMarkAsReadDelaytime,ReadReceiptResponse,ShowConversationAsTree,SignatureHtml,SignatureText,SignatureTextOnMobile,UseDefaultSignatureOnMobile,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "SendAddressDefault")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Alias,ApplyMandatoryProperties,ArchiveDomain,ArchiveName,ArchiveQuota,ArchiveStatus,ArchiveWarningQuota,AuditAdmin,AuditDelegate,AuditEnabled,AuditLogAgeLimit,CalendarLoggingQuota,CalendarRepairDisabled,CalendarVersionStoreDisabled,Confirm,CustomAttribute1,Debug,DeliverToMailboxAndForward,DisplayName,DomainController,EmailAddressPolicyEnabled,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExternalOofOptions,Force,HiddenFromAddressListsEnabled,IgnoreDefaultScope,IsDefault,IsDefaultForPreviousVersion,Name,OutBuffer,OutVariable,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RemoteAccountPolicy,RemoteRecipientType,RequireSenderAuthenticationEnabled,ResetPasswordOnNextLogon,RetainDeletedItemsUntilBackup,RulesQuota,SharingPolicy,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxQuotaPermissions"
					}, "IssueWarningQuota,ProhibitSendQuota,ProhibitSendReceiveQuota"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailboxSIRPermissions"
					}, "RetainDeletedItemsFor"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DateFormat,ErrorAction,ErrorVariable,Language,LocalizeDefaultFolderName,OutBuffer,OutVariable,TimeFormat,TimeZone,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "RemoteDatabaseGuid,RemoteHostName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CheckBeforeSend,Confirm,DictionaryLanguage,ErrorAction,ErrorVariable,IgnoreMixedDigits,IgnoreUppercase,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Action,AdminDisplayName,BypassInboundMessages,BypassOutboundMessages,Confirm,CustomAlertText,CustomExternalBody,CustomExternalSubject,CustomFromAddress,CustomFromName,CustomInternalBody,CustomInternalSubject,CustomNotifications,Debug,DomainController,EnableExternalSenderAdminNotifications,EnableExternalSenderNotifications,EnableInternalSenderAdminNotifications,EnableInternalSenderNotifications,ErrorAction,ErrorVariable,ExternalSenderAdminAddress,Identity,IgnoreDehydratedFlag,InternalSenderAdminAddress,MakeDefault,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,Identity,MalwareFilterPolicy,Name,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Enabled,ErrorAction,ErrorVariable,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,Force,Identity,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientRelativeWriteScope,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "AddParameter,Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Parameters,RemoveParameter,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,Name,OutBuffer,OutVariable,RecipientRestrictionFilter,RecipientRoot,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClassificationID,Confirm,DisplayName,DisplayPrecedence,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PermissionMenuVisible,RecipientDescription,RetainClassificationEnabled,SenderDescription,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "BadItemLimit,LargeItemLimit,SourcePublicFolderDatabase"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "AllowIncrementalSyncs,AllowUnknownColumnsInCSV,AutoRetryCount,CSVData,CompleteAfter,Confirm,DisallowExistingUsers,ErrorAction,ErrorVariable,Identity,NotificationEmails,OutBuffer,OutVariable,ReportInterval,StartAfter,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MigrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Features,MaxConcurrentMigrations,MaxNumberOfBatches,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "EmailAddress,ExchangeServer,NspiServer,SourceMailboxLegacyDN,TestMailbox"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Authentication,Confirm,Credentials,ErrorAction,ErrorVariable,Identity,MailboxPermission,MaxConcurrentIncrementalSyncs,MaxConcurrentMigrations,OutBuffer,OutVariable,RPCProxyServer,RemoteServer,Security,SkipVerification,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapMigrationPermissions"
					}, "Port")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions"
					}, "AllowGooglePushNotifications,AllowMicrosoftPushNotifications"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimplePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericPasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,Identity,IrmEnabled,IsDefault,MaxAttachmentSize,MaxCalendarAgeFilter,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeLock,MaxPasswordFailedAttempts,MinPasswordComplexCharacters,MinPasswordLength,Name,OutBuffer,OutVariable,PasswordEnabled,PasswordExpiration,PasswordHistory,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptLargeDataLoss,ArchiveTargetDatabase,BadItemLimit,BatchName,CompleteAfter,CompletedRequestAgeLimit,Confirm,Debug,ErrorAction,ErrorVariable,IgnoreRuleLimitErrors,IncrementalSyncInterval,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,PreventCompletion,Priority,RemoteCredential,RemoteGlobalCatalog,RemoteHostName,SkipMoving,StartAfter,SuspendWhenReadyToComplete,TargetDatabase,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NotificationEmails,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DisclaimerText,EmailText,Image,OTPEnabled,PortalText")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressLists,ApplyMandatoryProperties,ConfiguredAttributes,Confirm,DiffRetentionPeriod,ErrorAction,ErrorVariable,Identity,IsDefault,Name,OutBuffer,OutVariable,Schedule,UseDefaultAttributes,Versions,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,HybridDomains,InboundConnector,OrganizationName,OrganizationRelationship,OutBuffer,OutVariable,OutboundConnector,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddRelocationConstraint,RelocationConstraintExpirationInDays,RelocationConstraintType,RemoveRelocationConstraint"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssociateWithServiceInstance,CompanyTags,Confirm,Debug,DefaultMovePriority,DirSyncStatus,DomainController,ErrorAction,ErrorVariable,ExcludedFromBackSync,ExcludedFromForwardSyncEDU2BPOS,ExternalDirectoryOrganizationId,Force,IOwnMigrationStatus,IOwnMigrationStatusReport,IOwnMigrationTenant,IsDirSyncRunning,IsHotmailMigration,IsLicensingEnforced,Location,MSOSyncEnabled,MailboxRelease,MaxAddressBookPolicies,MaxOfflineAddressBooks,OrganizationStatus,OutBuffer,OutVariable,PersistedCapabilities,PilotMailboxRelease,PreviousMailboxRelease,SyncMBXAndDLToMServ,UpgradeConstraints,UpgradeConstraintsDisabled,UpgradeDetails,UpgradeE14MbxCountForCurrentStage,UpgradeE14RequestCountForCurrentStage,UpgradeLastE14CountsUpdateTime,UpgradeMessage,UpgradeRequest,UpgradeStage,UpgradeStageTimeStamp,UpgradeStatus,UpgradeUnitsOverride,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"CalendarVersionStoreEnabled",
						"EOPPremiumRestrictions"
					}, "CalendarVersionStoreEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActivityBasedAuthenticationTimeoutEnabled,ActivityBasedAuthenticationTimeoutInterval,ActivityBasedAuthenticationTimeoutWithSingleSignOnEnabled,AppsForOfficeEnabled,ByteEncoderTypeFor7BitCharsets,Confirm,DistributionGroupDefaultOU,DistributionGroupNameBlockedWordsList,DistributionGroupNamingPolicy,DomainController,ErrorAction,ErrorVariable,ExchangeNotificationEnabled,ExchangeNotificationRecipients,ForwardSyncLiveIdBusinessInstance,HierarchicalAddressBookRoot,HybridConfigurationStatus,Identity,IntuneManagedStatus,MailTipsAllTipsEnabled,MailTipsGroupMetricsEnabled,MailTipsMailboxSourcedTipsEnabled,OAuth2ClientProfileEnabled,OutBuffer,OutVariable,PreferredInternetCodePageForShiftJis,PublicComputersDetectionEnabled,PublicFolderMailboxesLockedForNewConnections,PublicFolderMailboxesMigrationComplete,ReleaseTrack,RequiredCharsetCoverage,RmsoSubscriptionStatus,SharePointUrl,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EwsPermissions"
					}, "EwsAllowEntourage,EwsAllowList,EwsAllowMacOutlook,EwsAllowOutlook,EwsApplicationAccessPolicy,EwsBlockList,EwsEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTipsExternalRecipientsTipsEnabled,MailTipsLargeAudienceThreshold"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "ReadTrackingEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "DefaultPublicFolderAgeLimit,DefaultPublicFolderDeletedItemRetention,DefaultPublicFolderIssueWarningQuota,DefaultPublicFolderMaxItemSize,DefaultPublicFolderMovedItemRetention,DefaultPublicFolderProhibitPostQuota,PublicFoldersEnabled,RemotePublicFolderMailboxes"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "SiteMailboxCreationURL")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveAccessEnabled,Confirm,DomainNames,Enabled,ErrorAction,ErrorVariable,Force,FreeBusyAccessEnabled,FreeBusyAccessLevel,FreeBusyAccessScope,MailTipsAccessEnabled,MailTipsAccessLevel,MailTipsAccessScope,MailboxMoveEnabled,Name,OrganizationContact,OutBuffer,OutVariable,PhotosEnabled,TargetApplicationUri,TargetAutodiscoverEpr,TargetOwaURL,TargetSharingEpr,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"MessageTrackingPermissions"
					}, "DeliveryReportEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DirSyncStatusAck,DomainController,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AllAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Enabled,ErrorAction,ErrorVariable,IsTransportRuleScoped,Name,OutBuffer,OutVariable,RecipientDomains,RouteAllMessagesViaOnPremises,SmartHosts,TlsDomain,TlsSettings,UseMXRecord,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "ApplyRightsProtectionTemplate,Confirm,ErrorAction,ErrorVariable,Force,FromDepartment,Identity,Name,OutBuffer,OutVariable,Priority,SentTo,SentToScope,UserCanOverride,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DisableFacebook,InstantMessagingType"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "FacebookEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "ActionForUnknownFileAndMIMETypes,ActiveSyncIntegrationEnabled,AllAddressListsEnabled,AllowCopyContactsToDeviceAddressBook,AllowOfflineOn,AllowedFileTypes,AllowedMimeTypes,BlockedFileTypes,BlockedMimeTypes,CalendarEnabled,ChangePasswordEnabled,Confirm,ContactsEnabled,DefaultClientLanguage,DefaultTheme,DelegateAccessEnabled,DirectFileAccessOnPrivateComputersEnabled,DirectFileAccessOnPublicComputersEnabled,DisplayPhotosEnabled,ErrorAction,ErrorVariable,ExplicitLogonEnabled,ForceSaveAttachmentFilteringEnabled,ForceSaveFileTypes,ForceSaveMimeTypes,ForceWacViewingFirstOnPrivateComputers,ForceWacViewingFirstOnPublicComputers,ForceWebReadyDocumentViewingFirstOnPrivateComputers,ForceWebReadyDocumentViewingFirstOnPublicComputers,GlobalAddressListEnabled,GroupCreationEnabled,IRMEnabled,Identity,InstantMessagingEnabled,IsDefault,JournalEnabled,LinkedInEnabled,LogonAndErrorLanguage,Name,NotesEnabled,OWALightEnabled,OrganizationEnabled,OutBuffer,OutVariable,OutboundCharset,PhoneticSupportEnabled,PlacesEnabled,PremiumClientEnabled,PublicFoldersEnabled,RecoverDeletedItemsEnabled,RemindersAndNotificationsEnabled,ReportJunkEmailEnabled,RulesEnabled,SearchFoldersEnabled,SetPhotoEnabled,SetPhotoURL,SignaturesEnabled,SilverlightEnabled,SkipCreateUnifiedGroupCustomSharepointClassification,SpellCheckerEnabled,TasksEnabled,TextMessagingEnabled,ThemeSelectionEnabled,UMIntegrationEnabled,UseGB18030,UseISO885915,UserDiagnosticEnabled,WSSAccessOnPrivateComputersEnabled,WSSAccessOnPublicComputersEnabled,WacExternalServicesEnabled,WacOMEXEnabled,WacViewingOnPrivateComputersEnabled,WacViewingOnPublicComputersEnabled,WarningAction,WarningVariable,WeatherEnabled,WebPartsFrameOptionsType,WebReadyDocumentViewingForAllSupportedTypes,WebReadyDocumentViewingOnPrivateComputersEnabled,WebReadyDocumentViewingOnPublicComputersEnabled,WebReadyDocumentViewingSupportedFileTypes,WebReadyDocumentViewingSupportedMimeTypes,WebReadyFileTypes,WebReadyMimeTypes,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptSecurityIdentifierInformation,ActAsPermissions,AppOnlyPermissions,ApplicationIdentifier,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IssuerIdentifier,LinkedAccount,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,EheDecryptEnabled,EheEnabled,EhfAdminAccountSyncEnabled,EhfConfigSyncEnabled,GatewayIPAddresses,IPSafelistingSyncEnabled,IPSkiplistingEnabled,InternalServerIPAddresses,MailFlowPartner,MigrationInProgress,PartnerConnectorDomain,PartnerRoutingDomain,PerimeterOrgId,RMSOFwdSyncEnabled,RouteOutboundViaEhfEnabled,RouteOutboundViaFfoFrontendEnabled,SafelistingUIMode,SyncToHotmailEnabled,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Value,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "Confirm,DisplayName,EmailAddress,Enabled,ErrorAction,ErrorVariable,Force,Identity,IncomingAuth,IncomingPassword,IncomingPort,IncomingSecurity,IncomingServer,IncomingUserName,LeaveOnServer,Mailbox,OutBuffer,OutVariable,ResendVerification,ValidateSecret,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AgeLimit,Confirm,EformsLocaleId,ErrorAction,ErrorVariable,Force,Identity,IssueWarningQuota,MailEnabled,MailRecipientGuid,MaxItemSize,Name,OutBuffer,OutVariable,OverrideContentMailbox,Path,PerUserReadStateEnabled,ProhibitPostQuota,RetainDeletedItemsFor,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternalFlags"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,BadItemLimit,CompletedRequestAgeLimit,Confirm,ErrorAction,ErrorVariable,Identity,LargeItemLimit,OutBuffer,OutVariable,Priority,RehomeRequest,SkipMerging,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternalFlags"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,AuthenticationMethod,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,ErrorAction,ErrorVariable,Identity,LargeItemLimit,OutBuffer,OutVariable,OutlookAnywhereHostName,PreventCompletion,Priority,RehomeRequest,RemoteCredential,RemoteMailboxLegacyDN,RemoteMailboxServerLegacyDN,SkipMerging,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,BadItemLimit,CompletedRequestAgeLimit,Confirm,ErrorAction,ErrorVariable,Identity,LargeItemLimit,OutBuffer,OutVariable,Priority,SuspendWhenReadyToComplete,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Type,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Default,ErrorAction,ErrorVariable,ExtranetCertificationUrl,ExtranetLicensingUrl,IntranetCertificationUrl,IntranetLicensingUrl,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ContactCountQuota,DistributionListCountQuota,DomainController,ErrorAction,MailPublicFolderCountQuota,MailUserCountQuota,MailboxCountQuota,PublicFolderMailboxCountQuota,TeamMailboxCountQuota")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,MaxSyncAccounts,Name,OutBuffer,OutVariable,PollingInterval,SyncNowAllowed,TimeBeforeDormant,TimeBeforeInactive,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowedOOFType,AutoForwardEnabled,AutoReplyEnabled,ByteEncoderTypeFor7BitCharsets,CharacterSet,Confirm,ContentType,DeliveryReportEnabled,DisplaySenderName,ErrorAction,ErrorVariable,Identity,IsInternal,LineWrapSize,MeetingForwardNotificationEnabled,NDRDiagnosticInfoEnabled,NDREnabled,Name,NonMimeCharacterSet,OutBuffer,OutVariable,PreferredInternetCodePageForShiftJis,RequiredCharsetCoverage,TNEFEnabled,TargetDeliveryDomain,TrustedMailInboundEnabled,TrustedMailOutboundEnabled,UseSimpleDisplayName,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Force,IsDefault,IsDefaultArbitrationMailbox,Name,OutBuffer,OutVariable,RetentionId,RetentionPolicyTagLinks,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AgeLimitForRetention,Comment,Confirm,ErrorAction,ErrorVariable,Force,Identity,LegacyManagedFolder,LocalizedComment,LocalizedRetentionPolicyTagName,Mailbox,MessageClass,MustDisplayCommentEnabled,Name,OptionalInMailbox,OutBuffer,OutVariable,RetentionAction,RetentionEnabled,RetentionId,SystemTag,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Identity,IsDefault,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassSecurityGroupManagerCheck,Confirm,Description,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,Force,ManagedBy,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WellKnownObjectGuid,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthenticationType,Confirm,DomainController,ErrorAction,ErrorVariable,IsDataCenter,MakeDefault,OutBoundOnly,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Default,Domains,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Active,DisplayName,ErrorAction,ErrorVariable,Force,Members,OutBuffer,OutVariable,Owners,RemoveDuplicateMessages,SharePointUrl,ShowInMyClient,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "AliasPrefix,Confirm,DefaultAliasPrefixEnabled,ErrorAction,ErrorVariable,Identity,IsDefault,IssueWarningQuota,MaxReceiveSize,Name,OutBuffer,OutVariable,ProhibitSendReceiveQuota,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SmimeConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Identity,OWAAllowUserChoiceOfSigningCertificate,OWAAlwaysEncrypt,OWAAlwaysSign,OWABCCEncryptedEmailForking,OWACRLConnectionTimeout,OWACRLRetrievalTimeout,OWACheckCRLOnSend,OWAClearSign,OWACopyRecipientHeaders,OWADLExpansionTimeout,OWADisableCRLCheck,OWAEncryptTemporaryBuffers,OWAEncryptionAlgorithms,OWAForceSMIMEClientUpgrade,OWAIncludeCertificateChainAndRootCertificate,OWAIncludeCertificateChainWithoutRootCertificate,OWAIncludeSMIMECapabilitiesInMessage,OWAOnlyUseSmartCard,OWASenderCertificateAttributesToDisplay,OWASignedEmailCertificateInclusion,OWASigningAlgorithms,OWATripleWrapSignedEncryptedMail,OWAUseKeyIdentifier,OWAUseSecondaryProxiesWhenFindingCertificates,SMIMECertificateIssuingCA,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SupervisionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "AntiBullyingPolicyEnabled,BadWordsList,BadWordsPolicyEnabled,ClosedCampusInboundDomainExceptions,ClosedCampusInboundGroupExceptions,ClosedCampusInboundPolicyEnabled,ClosedCampusOutboundDomainExceptions,ClosedCampusOutboundGroupExceptions,ClosedCampusOutboundPolicyEnabled,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DisableWindowsLiveID,EnterpriseExchangeVersion,ErrorAction,ErrorVariable,FederatedIdentitySourceADAttribute,OutBuffer,OutVariable,PasswordFilePath,ProvisioningDomain,ResetPasswordOnNextLogon,WarningAction,WarningVariable,WhatIf,WlidUseSMTPPrimary")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PrimarySmtpAddress"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,BlockedSendersHash,Confirm,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,IgnoreNamingPolicy,IncludeSoftDeletedObjects,IsDirSynced,IsHierarchicalGroup,ManagedBy,MemberDepartRestriction,MemberJoinRestriction,Name,Notes,OnPremisesObjectId,OutBuffer,OutVariable,PhoneticDisplayName,RawAcceptMessagesOnlyFrom,RawCoManagedBy,RawGrantSendOnBehalfTo,RawManagedBy,RawMembers,RawRejectMessagesFrom,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReportToManagerEnabled,ReportToOriginatorEnabled,RequireSenderAuthenticationEnabled,RoomList,SafeRecipientsHash,SafeSendersHash,SendOofMessageToOriginatorEnabled,SeniorityIndex,SimpleDisplayName,SipAddresses,SmtpAndX500Addresses,Type,WarningAction,WarningVariable,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,BypassNestedModerationEnabled,ModeratedBy,ModerationEnabled,RawBypassModerationFrom,RawModeratedBy,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,DirSyncAuthorityMetadata,DisplayName,DomainController,ErrorAction,ErrorVariable,IgnoreDefaultScope,IsDirSynced,Name,OnPremisesObjectId,OutBuffer,OutVariable,Type,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,Alias,AssistantName,BlockedSendersHash,C,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,Fax,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,IgnoreDefaultScope,Initials,IsDirSynced,LastName,MacAttachmentFormat,Manager,MasterAccountSid,MaxReceiveSize,MaxRecipientPerMessage,MaxSendSize,MessageBodyFormat,MessageFormat,MobilePhone,Name,Notes,Office,OnPremisesObjectId,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,PostalCode,RawAcceptMessagesOnlyFrom,RawBypassModerationFrom,RawGrantSendOnBehalfTo,RawModeratedBy,RawRejectMessagesFrom,RecipientDisplayType,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceType,SafeRecipientsHash,SafeSendersHash,SecondaryAddress,SecondaryDialPlan,SeniorityIndex,SimpleDisplayName,SipAddresses,SmtpAndX500Addresses,StateOrProvince,StreetAddress,TelephoneAssistant,Title,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,WarningAction,WarningVariable,WebPage,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,AccountDisabled,AddOnSKUCapability,Alias,ArchiveGuid,ArchiveName,AssistantName,AuditAdminOperations,AuditDelegateAdminOperations,AuditDelegateOperations,AuditOwnerOperations,BlockedSendersHash,BypassAudit,BypassLiveId,C,CalendarVersionStoreDisabled,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,ElcMailboxFlags,EmailAddresses,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExchangeGuid,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalEmailAddress,Fax,FederatedIdentity,FirstName,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,IgnoreDefaultScope,ImmutableId,InPlaceHoldsRaw,Initials,IntendedMailboxPlanName,IsCalculatedTargetAddress,IsDirSynced,Languages,LastName,LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,MacAttachmentFormat,MailboxAuditEnabled,MailboxAuditLogAgeLimit,Manager,MasterAccountSid,MaxReceiveSize,MaxSendSize,MessageBodyFormat,MessageFormat,MicrosoftOnlineServicesID,MobilePhone,Name,NetID,Notes,Office,OnPremisesObjectId,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,Picture,PostalCode,RawAcceptMessagesOnlyFrom,RawBypassModerationFrom,RawForwardingAddress,RawGrantSendOnBehalfTo,RawModeratedBy,RawRejectMessagesFrom,RawSiteMailboxOwners,RawSiteMailboxUsers,RecipientDisplayType,RecipientLimits,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReleaseTrack,RemoteRecipientType,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,ResourceMetaData,ResourcePropertiesDisplay,ResourceSearchProperties,ResourceType,RetainDeletedItemsFor,RetentionComment,RetentionHoldEnabled,RetentionUrl,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SecondaryAddress,SeniorityIndex,SharePointUrl,SimpleDisplayName,SingleItemRecoveryEnabled,SipAddresses,SiteMailboxClosedTime,SiteMailboxOwners,SiteMailboxUsers,SmtpAndX500Addresses,SoftDeletedMailUser,StartDateForRetentionHold,StateOrProvince,StreetAddress,StsRefreshTokensValidFrom,TelephoneAssistant,Title,UsageLocation,UseMapiRichTextFormat,UsePreferMessageFormat,UserCertificate,UserSMimeCertificate,WarningAction,WarningVariable,WebPage,WhatIf,WindowsEmailAddress,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "UMDtmfMap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,AccountDisabled,AddOnSKUCapability,Alias,AntispamBypassEnabled,ApplyMandatoryProperties,ArchiveDomain,ArchiveGuid,ArchiveName,ArchiveQuota,ArchiveStatus,ArchiveWarningQuota,AssistantName,BlockedSendersHash,BypassLiveId,C,CalendarLoggingQuota,CalendarRepairDisabled,CalendarVersionStoreDisabled,City,Co,Company,Confirm,CountryCode,CountryOrRegion,CreateDTMFMap,CustomAttribute1,CustomAttribute10,CustomAttribute11,CustomAttribute12,CustomAttribute13,CustomAttribute14,CustomAttribute15,CustomAttribute2,CustomAttribute3,CustomAttribute4,CustomAttribute5,CustomAttribute6,CustomAttribute7,CustomAttribute8,CustomAttribute9,DeliverToMailboxAndForward,Department,DirSyncAuthorityMetadata,DirSyncId,DisplayName,DoNotCheckAcceptedDomains,DomainController,DowngradeHighPriorityMessagesEnabled,EmailAddresses,EndDateForRetentionHold,ErrorAction,ErrorVariable,ExtensionCustomAttribute1,ExtensionCustomAttribute2,ExtensionCustomAttribute3,ExtensionCustomAttribute4,ExtensionCustomAttribute5,ExternalOofOptions,Fax,FederatedIdentity,FirstName,Force,ForwardingSmtpAddress,GrantSendOnBehalfTo,HiddenFromAddressListsEnabled,HomePhone,IgnoreDefaultScope,ImmutableId,InPlaceHoldsRaw,Initials,IsDirSynced,IssueWarningQuota,Languages,LastName,LinkedCredential,LinkedMasterAccount,MailboxPlanName,Manager,MasterAccountSid,MaxBlockedSenders,MaxReceiveSize,MaxSafeSenders,MaxSendSize,MicrosoftOnlineServicesID,MobilePhone,Name,NetID,Notes,Office,OfflineAddressBook,OnPremisesObjectId,OtherFax,OtherHomePhone,OtherTelephone,OutBuffer,OutVariable,Pager,Phone,PhoneticDisplayName,Picture,PostalCode,ProhibitSendQuota,ProhibitSendReceiveQuota,PublicFolder,QueryBaseDNRestrictionEnabled,RawAcceptMessagesOnlyFrom,RawBypassModerationFrom,RawForwardingAddress,RawGrantSendOnBehalfTo,RawModeratedBy,RawRejectMessagesFrom,RecipientLimits,RecoverableItemsQuota,RecoverableItemsWarningQuota,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,ReleaseTrack,RemoteAccountPolicy,RemoteRecipientType,RemovePicture,RemoveSpokenName,RequireSenderAuthenticationEnabled,ResourceCapacity,ResourceCustom,RetainDeletedItemsFor,RetainDeletedItemsUntilBackup,RetentionHoldEnabled,RetentionPolicy,RulesQuota,SCLDeleteEnabled,SCLDeleteThreshold,SCLJunkEnabled,SCLJunkThreshold,SCLQuarantineEnabled,SCLQuarantineThreshold,SCLRejectEnabled,SCLRejectThreshold,SKUAssigned,SKUCapability,SafeRecipientsHash,SafeSendersHash,SamAccountName,SecondaryAddress,SeniorityIndex,SharingPolicy,SimpleDisplayName,SingleItemRecoveryEnabled,SipAddresses,SmtpAndX500Addresses,SoftDeletedMailbox,SpokenName,StartDateForRetentionHold,StateOrProvince,StreetAddress,StsRefreshTokensValidFrom,TelephoneAssistant,ThrottlingPolicy,Title,Type,UsageLocation,UserCertificate,UserPrincipalName,UserSMimeCertificate,WarningAction,WarningVariable,WebPage,WhatIf,WindowsEmailAddress,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,RetentionComment,RetentionUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ManagedFoldersPermissions"
					}, "ManagedFolderMailboxPolicy,ManagedFolderMailboxPolicyAllowed,RemoveManagedFolderAndPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "MessageTrackingReadStatusEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ModeratedRecipientsPermissions"
					}, "BypassModerationFrom,BypassModerationFromDLMembers,BypassModerationFromSendersOrMembers,ModeratedBy,ModerationEnabled,SendModerationNotifications"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "RoleAssignmentPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "UMDtmfMap"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Authentication,Confirm,ErrorAction,ErrorVariable,Force,Identity,IncrementalSyncInterval,Mailbox,OutBuffer,OutVariable,Password,RemoteServerName,RemoteServerPort,Security,SkipMerging,SmtpServerName,SmtpServerPort,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountDisabled,Confirm,DirSyncAuthorityMetadata,DisplayName,DomainController,ErrorAction,ErrorVariable,IgnoreDefaultScope,IsDirSynced,Name,NetID,OnPremisesObjectId,OutBuffer,OutVariable,RemoteRecipientType,SoftDeletedUser,StsRefreshTokensValidFrom,UsageLocation,WarningAction,WarningVariable,WhatIf,WindowsLiveID"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions"
					}, "MicrosoftOnlineServicesID,ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Confirm,CountryRegionId,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,MobileOperatorId,NotificationPhoneNumber,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "AddressBookPolicyRoutingEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnonymousSenderToRecipientRatePerHour,ClearCategories,Confirm,ConvertDisclaimerWrapperToEml,DSNConversionMode,DiagnosticsAggregationServicePort,ErrorAction,ErrorVariable,ExternalDelayDsnEnabled,ExternalDsnDefaultLanguage,ExternalDsnLanguageDetectionEnabled,ExternalDsnMaxMessageAttachSize,ExternalDsnReportingAuthority,ExternalDsnSendHtml,ExternalPostmasterAddress,Force,HeaderPromotionModeSetting,InternalDelayDsnEnabled,InternalDsnDefaultLanguage,InternalDsnLanguageDetectionEnabled,InternalDsnMaxMessageAttachSize,InternalDsnReportingAuthority,InternalDsnSendHtml,JournalArchivingEnabled,JournalingReportNdrTo,MigrationEnabled,OutBuffer,OutVariable,Rfc2231EncodingEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions"
					}, "DlpPolicy,ExceptIfMessageContainsDataClassifications,MessageContainsDataClassifications,NotifySender"),
					new RoleParameters(new string[]
					{
						"IRMPremiumFeaturesPermissions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyRightsProtectionTemplate,Identity"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ActivationDate,AdComparisonAttribute,AdComparisonOperator,AddManagerAsRecipientType,AddToRecipients,AnyOfCcHeader,AnyOfCcHeaderMemberOf,AnyOfRecipientAddressContainsWords,AnyOfRecipientAddressMatchesPatterns,AnyOfToCcHeader,AnyOfToCcHeaderMemberOf,AnyOfToHeader,AnyOfToHeaderMemberOf,ApplyClassification,ApplyHtmlDisclaimerFallbackAction,ApplyHtmlDisclaimerLocation,ApplyHtmlDisclaimerText,ApplyOME,AttachmentContainsWords,AttachmentExtensionMatchesWords,AttachmentHasExecutableContent,AttachmentIsPasswordProtected,AttachmentIsUnsupported,AttachmentMatchesPatterns,AttachmentNameMatchesPatterns,AttachmentProcessingLimitExceeded,AttachmentPropertyContainsWords,AttachmentSizeOver,BetweenMemberOf1,BetweenMemberOf2,BlindCopyTo,Comments,Confirm,ContentCharacterSetContainsWords,CopyTo,DeleteMessage,Disconnect,ErrorAction,ErrorVariable,ExceptIfAdComparisonAttribute,ExceptIfAdComparisonOperator,ExceptIfAnyOfCcHeader,ExceptIfAnyOfCcHeaderMemberOf,ExceptIfAnyOfRecipientAddressContainsWords,ExceptIfAnyOfRecipientAddressMatchesPatterns,ExceptIfAnyOfToCcHeader,ExceptIfAnyOfToCcHeaderMemberOf,ExceptIfAnyOfToHeader,ExceptIfAnyOfToHeaderMemberOf,ExceptIfAttachmentContainsWords,ExceptIfAttachmentExtensionMatchesWords,ExceptIfAttachmentHasExecutableContent,ExceptIfAttachmentIsPasswordProtected,ExceptIfAttachmentIsUnsupported,ExceptIfAttachmentMatchesPatterns,ExceptIfAttachmentNameMatchesPatterns,ExceptIfAttachmentProcessingLimitExceeded,ExceptIfAttachmentPropertyContainsWords,ExceptIfAttachmentSizeOver,ExceptIfBetweenMemberOf1,ExceptIfBetweenMemberOf2,ExceptIfContentCharacterSetContainsWords,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromAddressMatchesPatterns,ExceptIfFromMemberOf,ExceptIfFromScope,ExceptIfHasClassification,ExceptIfHasNoClassification,ExceptIfHasSenderOverride,ExceptIfHeaderContainsMessageHeader,ExceptIfHeaderContainsWords,ExceptIfHeaderMatchesMessageHeader,ExceptIfHeaderMatchesPatterns,ExceptIfManagerAddresses,ExceptIfManagerForEvaluatedUser,ExceptIfMessageSizeOver,ExceptIfMessageTypeMatches,ExceptIfRecipientADAttributeContainsWords,ExceptIfRecipientADAttributeMatchesPatterns,ExceptIfRecipientAddressContainsWords,ExceptIfRecipientAddressMatchesPatterns,ExceptIfRecipientDomainIs,ExceptIfRecipientInSenderList,ExceptIfSCLOver,ExceptIfSenderADAttributeContainsWords,ExceptIfSenderADAttributeMatchesPatterns,ExceptIfSenderDomainIs,ExceptIfSenderInRecipientList,ExceptIfSenderIpRanges,ExceptIfSenderManagementRelationship,ExceptIfSentTo,ExceptIfSentToMemberOf,ExceptIfSentToScope,ExceptIfSubjectContainsWords,ExceptIfSubjectMatchesPatterns,ExceptIfSubjectOrBodyContainsWords,ExceptIfSubjectOrBodyMatchesPatterns,ExceptIfWithImportance,ExpiryDate,From,FromAddressContainsWords,FromAddressMatchesPatterns,FromMemberOf,FromScope,GenerateIncidentReport,GenerateNotification,HasClassification,HasNoClassification,HasSenderOverride,HeaderContainsMessageHeader,HeaderContainsWords,HeaderMatchesMessageHeader,HeaderMatchesPatterns,IncidentReportContent,IncidentReportOriginalMail,LogEventText,ManagerAddresses,ManagerForEvaluatedUser,MessageSizeOver,MessageTypeMatches,Mode,ModerateMessageByManager,ModerateMessageByUser,Name,OutBuffer,OutVariable,PrependSubject,Priority,Quarantine,RecipientADAttributeContainsWords,RecipientADAttributeMatchesPatterns,RecipientAddressContainsWords,RecipientAddressMatchesPatterns,RecipientDomainIs,RecipientInSenderList,RedirectMessageTo,RejectMessageEnhancedStatusCode,RejectMessageReasonText,RemoveHeader,RemoveOME,RouteMessageOutboundConnector,RouteMessageOutboundRequireTls,RuleErrorAction,RuleSubType,SCLOver,SenderADAttributeContainsWords,SenderADAttributeMatchesPatterns,SenderAddressLocation,SenderDomainIs,SenderInRecipientList,SenderIpRanges,SenderManagementRelationship,SentTo,SentToMemberOf,SentToScope,SetAuditSeverity,SetHeaderName,SetHeaderValue,SetSCL,SmtpRejectMessageRejectStatusCode,SmtpRejectMessageRejectText,StopRuleProcessing,SubjectContainsWords,SubjectMatchesPatterns,SubjectOrBodyContainsWords,SubjectOrBodyMatchesPatterns,WarningAction,WarningVariable,WhatIf,WithImportance")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "AfterHoursKeyMapping,AfterHoursKeyMappingEnabled,AfterHoursMainMenuCustomPromptEnabled,AfterHoursMainMenuCustomPromptFilename,AfterHoursTransferToOperatorEnabled,AfterHoursWelcomeGreetingEnabled,AfterHoursWelcomeGreetingFilename,AllowDialPlanSubscribers,AllowExtensions,AllowedInCountryOrRegionGroups,AllowedInternationalGroups,BusinessHoursKeyMapping,BusinessHoursKeyMappingEnabled,BusinessHoursMainMenuCustomPromptEnabled,BusinessHoursMainMenuCustomPromptFilename,BusinessHoursSchedule,BusinessHoursTransferToOperatorEnabled,BusinessHoursWelcomeGreetingEnabled,BusinessHoursWelcomeGreetingFilename,BusinessLocation,BusinessName,CallSomeoneEnabled,Confirm,ContactAddressList,ContactRecipientContainer,ContactScope,DTMFFallbackAutoAttendant,DefaultMailbox,ErrorAction,ErrorVariable,ForceUpgrade,ForwardCallsToDefaultMailbox,HolidaySchedule,Identity,InfoAnnouncementEnabled,InfoAnnouncementFilename,Language,MatchedNameSelectionMethod,Name,NameLookupEnabled,OperatorExtension,OutBuffer,OutVariable,PilotIdentifierList,SendVoiceMsgEnabled,SpeechEnabled,StarOutToDialPlanEnabled,TimeZone,TimeZoneName,WarningAction,WarningVariable,WeekStartDay,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,Identity,KeyMappings,Mailbox,Name,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DefaultOutboundCallingLineId"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "FaxEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AccessTelephoneNumbers,AllowDialPlanSubscribers,AllowExtensions,AllowHeuristicADCallingLineIdResolution,AllowedInCountryOrRegionGroups,AllowedInternationalGroups,AudioCodec,AutomaticSpeechRecognitionEnabled,CallSomeoneEnabled,ConfiguredInCountryOrRegionGroups,ConfiguredInternationalGroups,Confirm,ContactAddressList,ContactRecipientContainer,ContactScope,CountryOrRegionCode,DefaultLanguage,DialByNamePrimary,DialByNameSecondary,EquivalentDialPlanPhoneContexts,ErrorAction,ErrorVariable,Extension,ForceUpgrade,InCountryOrRegionNumberFormat,InfoAnnouncementEnabled,InfoAnnouncementFilename,InputFailuresBeforeDisconnect,InternationalAccessCode,InternationalNumberFormat,LegacyPromptPublishingPoint,LogonFailuresBeforeDisconnect,MatchedNameSelectionMethod,MaxCallDuration,MaxRecordingDuration,Name,NationalNumberPrefix,NumberingPlanFormats,OperatorExtension,OutBuffer,OutVariable,OutsideLineAccessCode,PilotIdentifierList,RecordingIdleTimeout,SendVoiceMsgEnabled,TUIPromptEditingEnabled,UMAutoAttendant,VoIPSecurity,WarningAction,WarningVariable,WelcomeGreetingEnabled,WelcomeGreetingFilename,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPersonalAutoAttendantPermissions"
					}, "CallAnsweringRulesEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Address,Confirm,DelayedSourcePartyInfoEnabled,ErrorAction,ErrorVariable,IPAddressFamily,MessageWaitingIndicatorAllowed,Name,OutBuffer,OutVariable,OutcallsAllowed,Port,Simulator,Status,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMCloudServicePermissions"
					}, "PhoneNumber,PhoneProviderId,VerifyGlobalRoutingEntry"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "FaxEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMOutDialingPermissions"
					}, "PlayOnPhoneEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "OperatorNumber,UMMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AllowUMCallsFromNonUsers,AnonymousCallersCanLeaveMessages,AutomaticSpeechRecognitionEnabled,CallAnsweringAudioCodec,Confirm,ErrorAction,ErrorVariable,ImListMigrationCompleted,MissedCallNotificationEnabled,Name,OutBuffer,OutVariable,PinlessAccessToVoiceMailEnabled,SubscriberAccessEnabled,TUIAccessToCalendarEnabled,TUIAccessToEmailEnabled,VoiceMailAnalysisEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPersonalAutoAttendantPermissions"
					}, "CallAnsweringRulesEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMSMSMsgWaitingPermissions"
					}, "UMSMSNotificationOption")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,DefaultPlayOnPhoneNumber,ErrorAction,ErrorVariable,FolderToReadEmailsFrom,Greeting,Identity,OutBuffer,OutVariable,ReadOldestUnreadVoiceMessagesFirst,ReceivedVoiceMailPreviewEnabled,SentVoiceMailPreviewEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,LockedOut,NotifyEmail,OutBuffer,OutVariable,Pin,PinExpired,SendEmail,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "AllowFax,FaxMessageText,FaxServerURI"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMOutDialingPermissions"
					}, "AllowDialPlanSubscribers,AllowExtensions,AllowedInCountryOrRegionGroups,AllowedInternationalGroups"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AllowAutomaticSpeechRecognition,AllowCommonPatterns,AllowMessageWaitingIndicator,AllowPlayOnPhone,AllowVoiceMailPreview,AllowVoiceResponseToOtherMessageTypes,ForceUpgrade,MaxGreetingDuration,MaxLogonAttempts,MinPINLength,Name,PINHistoryCount,PINLifetime,ProtectAuthenticatedVoiceMail,ProtectUnauthenticatedVoiceMail,ProtectedVoiceMailText,RequireProtectedPlayOnPhone,SourceForestPolicyNames,UMDialPlan,VoiceMailPreviewPartnerAddress,VoiceMailPreviewPartnerAssignedID,VoiceMailPreviewPartnerMaxDeliveryDelay,VoiceMailPreviewPartnerMaxMessageDuration"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AllowMissedCallNotifications,AllowPinlessVoiceMailAccess,AllowSubscriberAccess,AllowTUIAccessToCalendar,AllowTUIAccessToDirectory,AllowTUIAccessToEmail,AllowTUIAccessToPersonalContacts,AllowVoiceMailAnalysis,Confirm,ErrorAction,ErrorVariable,InformCallerOfVoiceMailAnalysis,LogonFailuresBeforePINReset,OutBuffer,OutVariable,ResetPINText,UMEnabledText,VoiceMailText,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPersonalAutoAttendantPermissions"
					}, "AllowCallAnsweringRules"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMSMSMsgWaitingPermissions"
					}, "AllowSMSNotification")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,LEOEnabled,PhoneticDisplayName,SeniorityIndex"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArchiveRelease,BusinessNetID,CopyShadowAttributes,ErrorAction,ErrorVariable,GenerateExternalDirectoryObjectId,InPlaceHoldsRaw,MailboxRelease,OutBuffer,OutVariable,RemotePowerShellEnabled,SKUAssigned,UpgradeDetails,UpgradeMessage,UpgradeRequest,UpgradeStage,UpgradeStageTimeStamp,UpgradeStatus,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"OpenDomainProfileUpdatePermissions",
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "DisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "PostOfficeBox,SimpleDisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "City,CountryOrRegion,Fax,FirstName,GeoCoordinates,HomePhone,Initials,LastName,MobilePhone,Notes,Office,Pager,Phone,PostalCode,StateOrProvince,StreetAddress,WebPage"),
					new RoleParameters(new string[]
					{
						"PropertiesMasteredOnPremiseRestrictions",
						"RecipientManagementPermissions"
					}, "AssistantName,Company,Department,Manager,Name,OtherFax,OtherHomePhone,OtherTelephone,TelephoneAssistant,Title"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "Confirm,Debug,IgnoreDefaultScope,PublicFolder,ResetPasswordOnNextLogon,Verbose,WhatIf,WindowsEmailAddress"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "AllowUMCallsFromNonUsers,CreateDTMFMap,UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,PictureData,PictureStream,Preview,Save,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "DLPPolicy,Debug,DeliveryStatus,Direction,EndDate,ErrorAction,ErrorVariable,Locale,MessageID,NotifyAddress,OriginalClientIP,OutBuffer,OutVariable,RecipientAddress,ReportTitle,ReportType,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SearchMessagePermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Resume,StatisticsStartIndex,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-ManagedFolderAssistant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,EHAHiddenFolderCleanup,ErrorAction,ErrorVariable,HoldCleanup,Identity,InactiveMailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Validate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-MsoFullSync", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-RetentionAutoTagLearning", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Clear,Confirm,CrossValidate,ErrorAction,ErrorVariable,Identity,NumberOfSegments,OutBuffer,OutVariable,Train,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AwayVoicemailGreeting,CallAnsweringRuleId,Confirm,DefaultVoicemailGreeting,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PhoneNumber,UMMailbox,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-UnifiedPolicySynchronization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DeleteObjectId,FullSync,ObjectType,UpdateObjectId,Verbose,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,ErrorAction,ErrorVariable,JobId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SearchMessagePermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ActiveDirectoryConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,SearchLatencyThresholdInMilliseconds,TargetDC,TotalTimeoutInMinutes,UseADDriver,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ArchiveConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IncludeArchiveMRMConfiguration,MessageId,OutBuffer,OutVariable,UserSmtp,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthenticationType,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Protocol,RemoteAddress,RemotePort,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ExchangeSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,ErrorAction,ErrorVariable,Identity,IndexingTimeoutInSeconds,MonitoringContext,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-FederationTrustCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-GlobalLocatorService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OutBuffer,OutVariable,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RMSOnline,Recipient,Sender,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-LinkedInConnect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthorizationCallbackUrl,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-LiveIdAuthentication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,IgnoreLowPasswordConfidence,MailboxCredential,MonitoringContext,OutBuffer,OutVariable,PreferOfflineAuth,Server,UserType,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MAPIConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,EnableSoftDeletedRecipientLogon,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MigrationServerAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions"
					}, "PublicFolder,PublicFolderDatabaseServerLegacyDN"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Authentication,Autodiscover,Confirm,Credentials,Debug,EmailAddress,Endpoint,ErrorAction,ErrorVariable,ExchangeOutlookAnywhere,ExchangeRemoteMove,ExchangeServer,Imap,MailboxPermission,OutBuffer,OutVariable,PSTImport,RPCProxyServer,Security,SourceMailboxLegacyDN,TestMailbox,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapMigrationPermissions"
					}, "FilePath,Port,RemoteServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OAuthConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppOnly,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Mailbox,OrganizationDomain,OutBuffer,OutVariable,ReloadConfig,Service,TargetUri,UseCachedToken,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UserIdentity,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OutlookConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,ErrorAction,ErrorVariable,Hostname,MailboxId,OutBuffer,OutVariable,ProbeIdentity,RunFromServerId,TimeOutSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestorIdentity,SharePointUrl,UseAppTokenOnly,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-TopologyService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADServerRole,Confirm,Debug,ErrorAction,ErrorVariable,MonitoringContext,OperationType,OutBuffer,OutVariable,PartitionFqdn,Server,TargetDomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SoftDeletedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SoftDeletedFeatureManagementPermissions"
					}, "Confirm,DisplayName,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Password,SoftDeletedObject,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassLiveId,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassLiveId,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Undo-SyncSoftDeletedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassLiveId,Confirm,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Password,SoftDeletedObject,Verbose,WarningAction,WarningVariable,WhatIf,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,ErrorAction,ErrorVariable,Identity,Members,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ForceUpgrade,OnPremisesCredentials,OutBuffer,OutVariable,SuppressOAuthWarning,TenantCredentials,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-PublicFolderMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,ErrorAction,ErrorVariable,FullSync,Identity,InvokeSynchronizer,OutBuffer,OutVariable,ReconcileFolders,SuppressStatus,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,Members,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-ServicePlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigOnly,Confirm,DomainController,ErrorAction,Identity,IncludeUserUpdatePhase,OfferId,ProgramId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,ErrorAction,ErrorVariable,FullSync,Identity,OutBuffer,OutVariable,Target,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SyncDistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddedMembers,Confirm,DomainController,ErrorAction,ErrorVariable,IncludeSoftDeletedObjects,Members,OutBuffer,OutVariable,RawMembers,RemovedMembers,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"GroupAsGroupSyncPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SyncStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientData,Confirm,DomainController,ErrorAction,ErrorVariable,MailboxCreationElapsedMilliseconds,NumberOfConnectionErrors,NumberOfExportSyncRuns,NumberOfIlmLogicErrors,NumberOfIlmOtherErrors,NumberOfImportSyncRuns,NumberOfLiveIdErrors,NumberOfMailboxesCreated,NumberOfMailboxesToCreate,NumberOfPermissionErrors,NumberOfSucessfulExportSyncRuns,NumberOfSucessfulImportSyncRuns,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "New-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Debug,Description,DisplayName,ErrorAction,ErrorVariable,ExecutingUser,FromGroupMailbox,IsPublic,Members,OutBuffer,OutVariable,Owners,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Remove-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddMembers,AddOwners,Debug,Description,DisplayName,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PublishExchangeResources,RemoveMembers,RemoveOwners,SyncGroupMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Test-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,WhatIf"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "TransportRules")
				}, "c")
			};
		}

		private class Personally_Identifiable_Information
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-MailboxDiagnosticLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,ComponentName,Confirm,Credential,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProperties,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,Latest,LogLocation,MeetingID,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,StartDate,Subject,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Actor,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetectionsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailDlpPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteAccountSyncCache", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ValidateCache,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SendAddress", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AddressId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccountPartition,Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,Preview,ReadFromDomainController,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-CacheItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CacheKey,CacheType,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class Public_Folders
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AccountPartition,Database,Debug,DomainController,ErrorAction,ErrorVariable,ExecutingUser,Filter,Identity,IncludeMailboxUrls,IncludeMemberSyncStatus,IncludeMembers,IncludePermissionsVersion,Organization,OutBuffer,OutVariable,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,Server,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,IncludeNotPromotedProperties,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAssociationReplicationState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GetChildren,Identity,Mailbox,Organization,OutBuffer,OutVariable,Recurse,ResidentFolders,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderClientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderItemStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeDumpsterInfo,IncludeHierarchyInfo,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxMigrationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMigrationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMoveRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,AutoSubscribeNewGroupMembers,Confirm,Database,Debug,Description,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExecutingUser,ExternalDirectoryObjectId,FromSyncClient,Language,Members,ModernGroupType,Name,Organization,OutBuffer,OutVariable,OverrideRecipientQuotas,Owners,PrimarySmtpAddress,PublicToGroups,RecipientIdType,RequireSenderAuthenticationEnabled,SharePointResources,SharePointUrl,ValidationOrganization,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "Debug,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"PublicFoldersEnabled"
					}, "HoldForMigration,IsExcludedFromServingHierarchy,PublicFolder"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PilotingOrganization_Restrictions",
						"RecipientManagementPermissions"
					}, "Name,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,EformsLocaleId,ErrorAction,ErrorVariable,Mailbox,Name,Organization,OutBuffer,OutVariable,Path,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,AuthenticationMethod,BadItemLimit,BatchName,CSVData,CSVStream,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,InternalFlags,LargeItemLimit,Name,Organization,OutBuffer,OutVariable,OutlookAnywhereHostName,Priority,RemoteCredential,RemoteMailboxLegacyDN,RemoteMailboxServerLegacyDN,SkipMerging,Suspend,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,AllowLargeItems,BadItemLimit,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Folders,InternalFlags,Name,Organization,OutBuffer,OutVariable,Priority,Suspend,SuspendComment,SuspendWhenReadyToComplete,TargetMailbox,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExecutingUser,ForReconciliation,Force,FromSyncClient,Identity,OutBuffer,OutVariable,Permanent,RecipientIdType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Recurse,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderClientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddOwners,AddedMembers,AutoSubscribeNewGroupMembers,ConfigurationActions,Confirm,Debug,Description,DisplayName,DomainController,EmailAddresses,ErrorAction,ErrorVariable,ExecutingUser,ExternalDirectoryObjectId,Force,ForcePublishExternalResources,FromSyncClient,Identity,Language,Name,OutBuffer,OutVariable,Owners,PermissionsVersion,PrimarySmtpAddress,RecipientIdType,RemoveOwners,RemovedMembers,RequireSenderAuthenticationEnabled,SharePointResources,SharePointUrl,SwitchToGroupType,Verbose,WarningAction,WarningVariable,WhatIf,YammerGroupEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "DefaultPublicFolderMailbox,IsExcludedFromServingHierarchy,IsHierarchyReady,PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CurrentVersion,Debug,DomainController,ErrorAction,ErrorVariable,ExternalId,GroupSmtpAddress,Identity,IgnoreDefaultScope,IsAutoSubscribed,IsMember,IsPin,JoinDate,JoinedBy,LastSyncError,LastVisitedDate,LegacyDn,OutBuffer,OutVariable,PinDate,ReplicateMasteredData,ShouldEscalate,SyncAttempts,SyncedSchemaVersion,SyncedVersion,UpdateSlavedData,UserSmtpAddress,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAssociationReplicationState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,NextReplicationTime,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "SharePointUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "DefaultPublicFolderAgeLimit,DefaultPublicFolderDeletedItemRetention,DefaultPublicFolderIssueWarningQuota,DefaultPublicFolderMaxItemSize,DefaultPublicFolderMovedItemRetention,DefaultPublicFolderProhibitPostQuota,PublicFolderMigrationComplete,PublicFoldersEnabled,PublicFoldersLockedForMigration,RemotePublicFolderMailboxes")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AgeLimit,Confirm,Debug,DomainController,EformsLocaleId,ErrorAction,ErrorVariable,Force,Identity,IssueWarningQuota,MailEnabled,MailRecipientGuid,MaxItemSize,Name,OutBuffer,OutVariable,OverrideContentMailbox,Path,PerUserReadStateEnabled,ProhibitPostQuota,RetainDeletedItemsFor,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternalFlags"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,BadItemLimit,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeItemLimit,OutBuffer,OutVariable,Priority,RehomeRequest,SkipMerging,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternalFlags"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,AuthenticationMethod,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,LargeItemLimit,OutBuffer,OutVariable,OutlookAnywhereHostName,PreventCompletion,Priority,RehomeRequest,RemoteCredential,RemoteMailboxLegacyDN,RemoteMailboxServerLegacyDN,SkipMerging,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AcceptLargeDataLoss,BadItemLimit,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,InternalFlags,LargeItemLimit,OutBuffer,OutVariable,Priority,SuspendWhenReadyToComplete,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-MailboxAssociationReplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Resume,StatisticsStartIndex,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-PublicFolderMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FullSync,Identity,InvokeSynchronizer,OutBuffer,OutVariable,ReconcileFolders,SuppressStatus,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "New-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Debug,Description,DisplayName,ErrorAction,ErrorVariable,ExecutingUser,FromGroupMailbox,IsPublic,Members,Organization,OutBuffer,OutVariable,Owners,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Remove-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddMembers,AddOwners,Debug,Description,DisplayName,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,PublishExchangeResources,RemoveMembers,RemoveOwners,SyncGroupMailbox,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class Receive_Connectors
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "AccountPartition,CatchAllRecipient,Debug,DomainController,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ReceiveConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ReceiveConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdvertiseClientSettings,AuthMechanism,Banner,BinaryMimeEnabled,Bindings,ChunkingEnabled,Client,Comment,Confirm,ConnectionInactivityTimeout,ConnectionTimeout,Custom,Debug,DefaultDomain,DeliveryStatusNotificationEnabled,DomainController,DomainSecureEnabled,EightBitMimeEnabled,EnableAuthGSSAPI,Enabled,EnhancedStatusCodesEnabled,ErrorAction,ErrorVariable,ExtendedProtectionPolicy,Fqdn,Internal,Internet,LiveCredentialEnabled,LongAddressesEnabled,MaxAcknowledgementDelay,MaxHeaderSize,MaxHopCount,MaxInboundConnection,MaxInboundConnectionPerSource,MaxInboundConnectionPercentagePerSource,MaxLocalHopCount,MaxLogonFailures,MaxMessageSize,MaxProtocolErrors,MaxRecipientsPerMessage,MessageRateLimit,MessageRateSource,Name,OrarEnabled,OutBuffer,OutVariable,Partner,PermissionGroups,PipeliningEnabled,ProtocolLoggingLevel,ProxyEnabled,RemoteIPRanges,RequireEHLODomain,RequireTLS,Server,ServiceDiscoveryFqdn,SizeEnabled,SuppressXAnonymousTls,TarpitInterval,TlsCertificateName,TlsDomainCapabilities,TlsSenderCertificateName,TransportRole,Usage,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ReceiveConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ReceiveConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AdvertiseClientSettings,AuthMechanism,Banner,BareLinefeedRejectionEnabled,BinaryMimeEnabled,Bindings,ChunkingEnabled,Comment,Confirm,ConnectionInactivityTimeout,ConnectionTimeout,Debug,DefaultDomain,DeliveryStatusNotificationEnabled,DomainController,DomainSecureEnabled,EightBitMimeEnabled,EnableAuthGSSAPI,Enabled,EnhancedStatusCodesEnabled,ErrorAction,ErrorVariable,ExtendedProtectionPolicy,Fqdn,LiveCredentialEnabled,LongAddressesEnabled,MaxAcknowledgementDelay,MaxHeaderSize,MaxHopCount,MaxInboundConnection,MaxInboundConnectionPerSource,MaxInboundConnectionPercentagePerSource,MaxLocalHopCount,MaxLogonFailures,MaxMessageSize,MaxProtocolErrors,MaxRecipientsPerMessage,MessageRateLimit,MessageRateSource,Name,OrarEnabled,OutBuffer,OutVariable,PermissionGroups,PipeliningEnabled,ProtocolLoggingLevel,ProxyEnabled,RemoteIPRanges,RequireEHLODomain,RequireTLS,ServiceDiscoveryFqdn,SizeEnabled,SmtpUtf8Enabled,SuppressXAnonymousTls,TarpitInterval,TlsCertificateName,TlsDomainCapabilities,TlsSenderCertificateName,TransportRole,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Recipient_Policies
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Monitoring")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ProtocolSettings"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DetailsTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeMailboxSettingOnlyPolicy,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Monitoring")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientTemplateProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Explicit,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,ThrottlingPolicy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimpleDevicePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericDevicePasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePasswordEnabled,DevicePasswordExpiration,DevicePasswordHistory,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,IrmEnabled,IsDefault,IsDefaultPolicy,MaxAttachmentSize,MaxCalendarAgeFilter,MaxDevicePasswordFailedAttempts,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeDeviceLock,MinDevicePasswordComplexCharacters,MinDevicePasswordLength,Name,Organization,OutBuffer,OutVariable,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,MobileOTAUpdateMode,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,ExternalIPAddresses,Features,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions"
					}, "AllowGooglePushNotifications,AllowMicrosoftPushNotifications"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimplePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericPasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,IrmEnabled,IsDefault,MaxAttachmentSize,MaxCalendarAgeFilter,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeLock,MaxPasswordFailedAttempts,MinPasswordComplexCharacters,MinPasswordLength,Name,Organization,OutBuffer,OutVariable,PasswordEnabled,PasswordExpiration,PasswordHistory,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,MobileOTAUpdateMode,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IsDefault,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RecipientTemplateProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,MaxSyncAccounts,Name,Organization,OutBuffer,OutVariable,PollingInterval,SyncNowAllowed,TimeBeforeDormant,TimeBeforeInactive,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnonymousCutoffBalance,AnonymousMaxBurst,AnonymousMaxConcurrency,AnonymousRechargeRate,ComplianceMaxExpansionDGRecipients,ComplianceMaxExpansionNestedDGs,Confirm,CpaCutoffBalance,CpaMaxBurst,CpaMaxConcurrency,CpaRechargeRate,Debug,DiscoveryMaxConcurrency,DiscoveryMaxKeywords,DiscoveryMaxKeywordsPerPage,DiscoveryMaxMailboxes,DiscoveryMaxMailboxesResultsOnly,DiscoveryMaxPreviewSearchMailboxes,DiscoveryMaxRefinerResults,DiscoveryMaxSearchQueueDepth,DiscoveryMaxStatsSearchMailboxes,DiscoveryPreviewSearchResultsPageSize,DiscoverySearchTimeoutPeriod,DomainController,EasCutoffBalance,EasMaxBurst,EasMaxConcurrency,EasMaxDeviceDeletesPerMonth,EasMaxDevices,EasMaxInactivityForDeviceCleanup,EasRechargeRate,ErrorAction,ErrorVariable,EwsCutoffBalance,EwsMaxBurst,EwsMaxConcurrency,EwsMaxSubscriptions,EwsRechargeRate,ExchangeMaxCmdlets,ForwardeeLimit,ImapCutoffBalance,ImapMaxBurst,ImapMaxConcurrency,ImapRechargeRate,IsServiceAccount,MessageRateLimit,Name,Organization,OutBuffer,OutVariable,OutlookServiceCutoffBalance,OutlookServiceMaxBurst,OutlookServiceMaxConcurrency,OutlookServiceMaxSocketConnectionsPerDevice,OutlookServiceMaxSocketConnectionsPerUser,OutlookServiceMaxSubscriptions,OutlookServiceRechargeRate,OwaCutoffBalance,OwaMaxBurst,OwaMaxConcurrency,OwaRechargeRate,OwaVoiceCutoffBalance,OwaVoiceMaxBurst,OwaVoiceMaxConcurrency,OwaVoiceRechargeRate,PopCutoffBalance,PopMaxBurst,PopMaxConcurrency,PopRechargeRate,PowerShellCutoffBalance,PowerShellMaxBurst,PowerShellMaxCmdletQueueDepth,PowerShellMaxCmdlets,PowerShellMaxCmdletsTimePeriod,PowerShellMaxConcurrency,PowerShellMaxDestructiveCmdlets,PowerShellMaxDestructiveCmdletsTimePeriod,PowerShellMaxOperations,PowerShellMaxRunspaces,PowerShellMaxRunspacesTimePeriod,PowerShellMaxTenantConcurrency,PowerShellMaxTenantRunspaces,PowerShellRechargeRate,PswsMaxConcurrency,PswsMaxRequest,PswsMaxRequestTimePeriod,PushNotificationCutoffBalance,PushNotificationMaxBurst,PushNotificationMaxBurstPerDevice,PushNotificationMaxConcurrency,PushNotificationRechargeRate,PushNotificationRechargeRatePerDevice,PushNotificationSamplingPeriodPerDevice,RcaCutoffBalance,RcaMaxBurst,RcaMaxConcurrency,RcaRechargeRate,RecipientRateLimit,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOStandardRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "EncryptionRecipientCutoffBalance,EncryptionRecipientMaxBurst,EncryptionRecipientMaxConcurrency,EncryptionRecipientRechargeRate,EncryptionSenderCutoffBalance,EncryptionSenderMaxBurst,EncryptionSenderMaxConcurrency,EncryptionSenderRechargeRate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAMailboxPolicyPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RecipientTemplateProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimpleDevicePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericDevicePasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePasswordEnabled,DevicePasswordExpiration,DevicePasswordHistory,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,Identity,IrmEnabled,IsDefault,IsDefaultPolicy,MaxAttachmentSize,MaxCalendarAgeFilter,MaxDevicePasswordFailedAttempts,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeDeviceLock,MinDevicePasswordComplexCharacters,MinDevicePasswordLength,Name,OutBuffer,OutVariable,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,MobileOTAUpdateMode,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ConditionalCompany,ConditionalCustomAttribute1,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalDepartment,ConditionalStateOrProvince,Confirm,Debug,DisabledEmailAddressTemplates,DomainController,EnabledEmailAddressTemplates,EnabledPrimarySMTPAddressTemplate,ErrorAction,ErrorVariable,ForceUpgrade,IncludedRecipients,Name,OutBuffer,OutVariable,Priority,RecipientContainer,RecipientFilter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServers,Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,Name,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions"
					}, "AllowGooglePushNotifications,AllowMicrosoftPushNotifications"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "AllowApplePushNotifications,AllowBluetooth,AllowBrowser,AllowCamera,AllowConsumerEmail,AllowDesktopSync,AllowExternalDeviceManagement,AllowHTMLEmail,AllowInternetSharing,AllowIrDA,AllowMobileOTAUpdate,AllowNonProvisionableDevices,AllowPOPIMAPEmail,AllowRemoteDesktop,AllowSMIMEEncryptionAlgorithmNegotiation,AllowSMIMESoftCerts,AllowSimplePassword,AllowStorageCard,AllowTextMessaging,AllowUnsignedApplications,AllowUnsignedInstallationPackages,AllowWiFi,AlphanumericPasswordRequired,ApprovedApplicationList,AttachmentsEnabled,Confirm,DeviceEncryptionEnabled,DevicePolicyRefreshInterval,ErrorAction,ErrorVariable,Identity,IrmEnabled,IsDefault,MaxAttachmentSize,MaxCalendarAgeFilter,MaxEmailAgeFilter,MaxEmailBodyTruncationSize,MaxEmailHTMLBodyTruncationSize,MaxInactivityTimeLock,MaxPasswordFailedAttempts,MinPasswordComplexCharacters,MinPasswordLength,Name,OutBuffer,OutVariable,PasswordEnabled,PasswordExpiration,PasswordHistory,PasswordRecoveryEnabled,RequireDeviceEncryption,RequireEncryptedSMIMEMessages,RequireEncryptionSMIMEAlgorithm,RequireManualSyncWhenRoaming,RequireSignedSMIMEAlgorithm,RequireSignedSMIMEMessages,RequireStorageCardEncryption,UNCAccessEnabled,UnapprovedInROMApplicationList,WSSAccessEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,MobileOTAUpdateMode,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DisableFacebook,DomainController,InstantMessagingType,JunkEmailEnabled,SMimeEnabled,UNCAccessOnPrivateComputersEnabled,UNCAccessOnPublicComputersEnabled,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"OwaFacebookEnabledRestrictions"
					}, "FacebookEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "ActionForUnknownFileAndMIMETypes,ActiveSyncIntegrationEnabled,AllAddressListsEnabled,AllowCopyContactsToDeviceAddressBook,AllowOfflineOn,AllowedFileTypes,AllowedMimeTypes,BlockedFileTypes,BlockedMimeTypes,CalendarEnabled,ChangePasswordEnabled,Confirm,ContactsEnabled,DefaultClientLanguage,DefaultTheme,DelegateAccessEnabled,DirectFileAccessOnPrivateComputersEnabled,DirectFileAccessOnPublicComputersEnabled,DisplayPhotosEnabled,ErrorAction,ErrorVariable,ExplicitLogonEnabled,ForceSaveAttachmentFilteringEnabled,ForceSaveFileTypes,ForceSaveMimeTypes,ForceWacViewingFirstOnPrivateComputers,ForceWacViewingFirstOnPublicComputers,ForceWebReadyDocumentViewingFirstOnPrivateComputers,ForceWebReadyDocumentViewingFirstOnPublicComputers,GlobalAddressListEnabled,GroupCreationEnabled,IRMEnabled,Identity,InstantMessagingEnabled,IsDefault,JournalEnabled,LinkedInEnabled,LogonAndErrorLanguage,Name,NotesEnabled,OWALightEnabled,OrganizationEnabled,OutBuffer,OutVariable,OutboundCharset,PhoneticSupportEnabled,PlacesEnabled,PremiumClientEnabled,PublicFoldersEnabled,RecoverDeletedItemsEnabled,RemindersAndNotificationsEnabled,ReportJunkEmailEnabled,RulesEnabled,SearchFoldersEnabled,SetPhotoEnabled,SetPhotoURL,SignaturesEnabled,SilverlightEnabled,SkipCreateUnifiedGroupCustomSharepointClassification,SpellCheckerEnabled,TasksEnabled,TextMessagingEnabled,ThemeSelectionEnabled,UMIntegrationEnabled,UseGB18030,UseISO885915,UserDiagnosticEnabled,WSSAccessOnPrivateComputersEnabled,WSSAccessOnPublicComputersEnabled,WacExternalServicesEnabled,WacOMEXEnabled,WacViewingOnPrivateComputersEnabled,WacViewingOnPublicComputersEnabled,WarningAction,WarningVariable,WeatherEnabled,WebPartsFrameOptionsType,WebReadyDocumentViewingForAllSupportedTypes,WebReadyDocumentViewingOnPrivateComputersEnabled,WebReadyDocumentViewingOnPublicComputersEnabled,WebReadyDocumentViewingSupportedFileTypes,WebReadyDocumentViewingSupportedMimeTypes,WebReadyFileTypes,WebReadyMimeTypes,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ContactCountQuota,Debug,DistributionListCountQuota,DomainController,ErrorAction,ErrorVariable,IgnoreDehydratedFlag,MailPublicFolderCountQuota,MailUserCountQuota,MailboxCountQuota,OutBuffer,OutVariable,PublicFolderMailboxCountQuota,TeamMailboxCountQuota,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RecipientTemplateProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultDistributionListOU,DefaultIssueWarningQuota,DefaultMaxReceiveSize,DefaultMaxSendSize,DefaultProhibitSendQuota,DefaultProhibitSendReceiveQuota,DefaultRulesQuota,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,MaxSyncAccounts,Name,OutBuffer,OutVariable,PollingInterval,SyncNowAllowed,TimeBeforeDormant,TimeBeforeInactive,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnonymousCutoffBalance,AnonymousMaxBurst,AnonymousMaxConcurrency,AnonymousRechargeRate,ComplianceMaxExpansionDGRecipients,ComplianceMaxExpansionNestedDGs,Confirm,CpaCutoffBalance,CpaMaxBurst,CpaMaxConcurrency,CpaRechargeRate,Debug,DiscoveryMaxConcurrency,DiscoveryMaxKeywords,DiscoveryMaxKeywordsPerPage,DiscoveryMaxMailboxes,DiscoveryMaxMailboxesResultsOnly,DiscoveryMaxPreviewSearchMailboxes,DiscoveryMaxRefinerResults,DiscoveryMaxSearchQueueDepth,DiscoveryMaxStatsSearchMailboxes,DiscoveryPreviewSearchResultsPageSize,DiscoverySearchTimeoutPeriod,DomainController,EasCutoffBalance,EasMaxBurst,EasMaxConcurrency,EasMaxDeviceDeletesPerMonth,EasMaxDevices,EasMaxInactivityForDeviceCleanup,EasRechargeRate,ErrorAction,ErrorVariable,EwsCutoffBalance,EwsMaxBurst,EwsMaxConcurrency,EwsMaxSubscriptions,EwsRechargeRate,ExchangeMaxCmdlets,Force,ForceSettingGlobal,ForwardeeLimit,IgnoreDehydratedFlag,ImapCutoffBalance,ImapMaxBurst,ImapMaxConcurrency,ImapRechargeRate,IsServiceAccount,MessageRateLimit,Name,OutBuffer,OutVariable,OutlookServiceCutoffBalance,OutlookServiceMaxBurst,OutlookServiceMaxConcurrency,OutlookServiceMaxSocketConnectionsPerDevice,OutlookServiceMaxSocketConnectionsPerUser,OutlookServiceMaxSubscriptions,OutlookServiceRechargeRate,OwaCutoffBalance,OwaMaxBurst,OwaMaxConcurrency,OwaRechargeRate,OwaVoiceCutoffBalance,OwaVoiceMaxBurst,OwaVoiceMaxConcurrency,OwaVoiceRechargeRate,PopCutoffBalance,PopMaxBurst,PopMaxConcurrency,PopRechargeRate,PowerShellCutoffBalance,PowerShellMaxBurst,PowerShellMaxCmdletQueueDepth,PowerShellMaxCmdlets,PowerShellMaxCmdletsTimePeriod,PowerShellMaxConcurrency,PowerShellMaxDestructiveCmdlets,PowerShellMaxDestructiveCmdletsTimePeriod,PowerShellMaxOperations,PowerShellMaxRunspaces,PowerShellMaxRunspacesTimePeriod,PowerShellMaxTenantConcurrency,PowerShellMaxTenantRunspaces,PowerShellRechargeRate,PswsMaxConcurrency,PswsMaxRequest,PswsMaxRequestTimePeriod,PushNotificationCutoffBalance,PushNotificationMaxBurst,PushNotificationMaxBurstPerDevice,PushNotificationMaxConcurrency,PushNotificationRechargeRate,PushNotificationRechargeRatePerDevice,PushNotificationSamplingPeriodPerDevice,RcaCutoffBalance,RcaMaxBurst,RcaMaxConcurrency,RcaRechargeRate,RecipientRateLimit,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOStandardRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "EncryptionRecipientCutoffBalance,EncryptionRecipientMaxBurst,EncryptionRecipientMaxConcurrency,EncryptionRecipientRechargeRate,EncryptionSenderCutoffBalance,EncryptionSenderMaxBurst,EncryptionSenderMaxConcurrency,EncryptionSenderRechargeRate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDefaultScope,OutBuffer,OutVariable,ThrottlingPolicy,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Remote_and_Accepted_Domains
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddSecondaryDomainPermissions",
						"EOPPremiumRestrictions"
					}, "AuthenticationType,Confirm,Debug,DomainController,DomainName,DomainType,ErrorAction,ErrorVariable,IsDataCenter,LiveIdInstanceType,MakeDefault,Name,Organization,OutBoundOnly,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainOwnershipVerified")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "AccountPartition,CatchAllRecipient,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "OrganizationGuid")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsTransportRuleScoped,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AuthenticationType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-X400AuthoritativeDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "AuthenticationType,CatchAllRecipient,Confirm,Debug,DomainController,DomainName,DomainType,ErrorAction,ErrorVariable,InitialDomain,LiveIdInstanceType,MailFlowPartner,MatchSubDomains,Name,Organization,OutBuffer,OutVariable,OutboundOnly,SkipDnsProvisioning,SkipDomainNameValidation,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AssociatedAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,RequireTls,RestrictDomainsToCertificate,RestrictDomainsToIPAddresses,SenderDomains,SenderIPAddresses,TlsSenderCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,HybridDomains,InboundConnector,Name,Organization,OrganizationGuid,OrganizationName,OrganizationRelationship,OutBuffer,OutVariable,OutboundConnector,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AllAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IsTransportRuleScoped,Name,Organization,OutBuffer,OutVariable,RecipientDomains,RouteAllMessagesViaOnPremises,SmartHosts,TlsDomain,TlsSettings,UseMXRecord,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,DomainName,ErrorAction,ErrorVariable,Name,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-X400AuthoritativeDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf,X400DomainName,X400ExternalRelay")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DomainController"),
					new RoleParameters(new string[]
					{
						"DangerousAction",
						"EOPPremiumRestrictions"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Force,Identity,IsDataCenter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-X400AuthoritativeDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,InitialDomain"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "AddressBookEnabled,AuthenticationType,CatchAllRecipient,Confirm,Debug,DomainController,DomainType,EnableNego2Authentication,ErrorAction,ErrorVariable,LiveIdInstanceType,MailFlowPartner,MakeDefault,MatchSubDomains,Name,OutBuffer,OutVariable,OutboundOnly,PendingCompletion,PendingRemoval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AssociatedAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RequireTls,RestrictDomainsToCertificate,RestrictDomainsToIPAddresses,SenderDomains,SenderIPAddresses,TlsSenderCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,HybridDomains,InboundConnector,OrganizationName,OrganizationRelationship,OutBuffer,OutVariable,OutboundConnector,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ByteEncoderTypeFor7BitCharsets,PreferredInternetCodePageForShiftJis,RequiredCharsetCoverage")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "AllAcceptedDomains,BypassValidation,CloudServicesMailEnabled,Comment,Confirm,ConnectorSource,ConnectorType,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IsTransportRuleScoped,Name,OutBuffer,OutVariable,RecipientDomains,RouteAllMessagesViaOnPremises,SmartHosts,TlsDomain,TlsSettings,UseMXRecord,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AllowedOOFType,AutoForwardEnabled,AutoReplyEnabled,ByteEncoderTypeFor7BitCharsets,CharacterSet,Confirm,ContentType,Debug,DeliveryReportEnabled,DisplaySenderName,DomainController,ErrorAction,ErrorVariable,Identity,IsInternal,LineWrapSize,MeetingForwardNotificationEnabled,NDRDiagnosticInfoEnabled,NDREnabled,Name,NonMimeCharacterSet,OutBuffer,OutVariable,PreferredInternetCodePageForShiftJis,RequiredCharsetCoverage,TNEFEnabled,TargetDeliveryDomain,TrustedMailInboundEnabled,TrustedMailOutboundEnabled,UseSimpleDisplayName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SecondaryDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthenticationType,Confirm,Debug,ErrorAction,ErrorVariable,IsDataCenter,MakeDefault,OutBoundOnly,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-X400AuthoritativeDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf,X400DomainName,X400ExternalRelay")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Reporting
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdSite,DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,SLATargetTimespan,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdSite,DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,Debug,DetailLevel,DoNotResolve,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecipientPathFilter,Recipients,ReportTemplate,ResultSize,Status,TraceLevel,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PhysicalAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,Database,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExchangeServer,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,Confirm,Debug,DoNotResolve,DomainController,ErrorAction,ErrorVariable,Identity,MessageEntryId,MessageId,OutBuffer,OutVariable,Recipients,ResultSize,Sender,Subject,TraceLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Reset_Password
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "RoomMailboxPassword"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "PublicFolder,ResetPasswordOnNextLogon")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Retention_Management
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-MailboxDiagnosticLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,ComponentName,Confirm,Credential,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProperties,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "DomainController,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticAnalysis", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CalendarLogs,Credential,Debug,DetailLevel,DomainController,ErrorAction,ErrorVariable,GlobalObjectId,LogLocation,OutBuffer,OutVariable,OutputAs,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeHidden")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,RecipientType,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemovedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,IncludeSystemTags,Mailbox,OptionalInMailbox,Organization,OutBuffer,OutVariable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures",
						"PilotingOrganization_Restrictions"
					}, "EnableRoomMailboxAccount")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDehydratedFlag,IsDefault,IsDefaultArbitrationMailbox,Name,Organization,OutBuffer,OutVariable,RetentionId,RetentionPolicyTagLinks,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AgeLimitForRetention,Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDehydratedFlag,IsDefaultAutoGroupPolicyTag,IsDefaultModeratedRecipientsPolicyTag,LocalizedComment,LocalizedRetentionPolicyTagName,ManagedFolderToUpgrade,MessageClass,MustDisplayCommentEnabled,Name,Organization,OutBuffer,OutVariable,RetentionAction,RetentionEnabled,RetentionId,SystemTag,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "EndDateForRetentionHold,LitigationHoldDate,LitigationHoldEnabled,LitigationHoldOwner,RetentionComment,RetentionHoldEnabled,RetentionUrl,SingleItemRecoveryEnabled,StartDateForRetentionHold")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,LitigationHoldEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,EnableRoomMailboxAccount,EndDateForRetentionHold,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RetentionHoldEnabled,RetentionPolicy,SingleItemRecoveryEnabled,StartDateForRetentionHold,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "LitigationHoldDate,LitigationHoldDuration,LitigationHoldOwner,RetentionComment,RetentionUrl"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ManagedFoldersPermissions"
					}, "RemoveManagedFolderAndPolicy")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,IgnoreDehydratedFlag,IsDefault,IsDefaultArbitrationMailbox,Name,OutBuffer,OutVariable,RetentionId,RetentionPolicyTagLinks,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AgeLimitForRetention,Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,LegacyManagedFolder,LocalizedComment,LocalizedRetentionPolicyTagName,Mailbox,MessageClass,MustDisplayCommentEnabled,Name,OptionalInMailbox,OutBuffer,OutVariable,RetentionAction,RetentionEnabled,RetentionId,SystemTag,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-ManagedFolderAssistant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EHAHiddenFolderCleanup,ErrorAction,ErrorVariable,HoldCleanup,Identity,InactiveMailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-RetentionAutoTagLearning", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Clear,Confirm,CrossValidate,Debug,DomainController,ErrorAction,ErrorVariable,Identity,NumberOfSegments,OutBuffer,OutVariable,Train,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-ManagedFolderAssistant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Role_Management
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Overwrite,PSSnapinName,Parameters,ParentRoleEntry,Role,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,Member,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cmdlet,CmdletParameters,Debug,DomainController,ErrorAction,ErrorVariable,GetChildren,Identity,Organization,OutBuffer,OutVariable,Recurse,RoleType,Script,ScriptParameters,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssignmentMethod,ConfigWriteScope,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,Enabled,ErrorAction,ErrorVariable,Exclusive,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,GetEffectiveUsers,Identity,Organization,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientWriteScope,Role,RoleAssignee,RoleAssigneeType,Verbose,WarningAction,WarningVariable,WritableDatabase,WritableRecipient,WritableServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PSSnapinName,Parameters,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Exclusive,Identity,Organization,Orphan,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,ShowPartnerLinked,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Force,Name,Organization,OutBuffer,OutVariable,Parent,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,ErrorAction,ErrorVariable,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,Force,Name,Organization,OutBuffer,OutVariable,Policy,RecipientOrganizationalUnitScope,RecipientRelativeWriteScope,Role,SecurityGroup,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,DatabaseList,DatabaseRestrictionFilter,Debug,DomainController,ErrorAction,ErrorVariable,Exclusive,Force,Name,Organization,OutBuffer,OutVariable,PartnerDelegatedTenantRestrictionFilter,RecipientRestrictionFilter,RecipientRoot,ServerList,ServerRestrictionFilter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,IsDefault,Name,Organization,OutBuffer,OutVariable,Roles,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Description,DisplayName,DomainController,ErrorAction,ErrorVariable,ExternalDirectoryObjectId,Force,LinkedCredential,LinkedDomainController,LinkedForeignGroup,LinkedPartnerGroupId,LinkedPartnerOrganizationId,ManagedBy,Name,Organization,OutBuffer,OutVariable,PartnerManaged,RecipientOrganizationalUnitScope,Roles,SamAccountName,Verbose,WarningAction,WarningVariable,WellKnownObjectGuid,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions",
						"RoleGroupMembershipRestrictions"
					}, "Members")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Recurse,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ForReconciliation"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions",
						"RoleGroupMembershipRestrictions"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,RemoveWellKnownObjectGuid,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,Member,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,Force,Identity,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientRelativeWriteScope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "AddParameter,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Parameters,RemoveParameter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,DatabaseRestrictionFilter,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,Name,OutBuffer,OutVariable,PartnerDelegatedTenantRestrictionFilter,RecipientRestrictionFilter,RecipientRoot,ServerRestrictionFilter,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RoleAssignmentPolicyPermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Identity,IsDefault,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,Description,DisplayName,DomainController,ErrorAction,ErrorVariable,Force,LinkedCredential,LinkedDomainController,LinkedForeignGroup,ManagedBy,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WellKnownObjectGuid,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,Members,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Security_Group_Creation_and_Membership
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Identity,Member")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Identity,IgnoreDefaultScope")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Confirm,CopyOwnerToMember,DisplayName,ErrorAction,ErrorVariable,ManagedBy,MemberJoinRestriction,Members,Name,Notes,OutBuffer,OutVariable,PrimarySmtpAddress,SamAccountName,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ArbitrationMailbox,Debug,DomainController,MemberDepartRestriction,Organization,OrganizationalUnit,RoomList,Type,Verbose"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions"
					}, "BypassNestedModerationEnabled"),
					new RoleParameters(new string[]
					{
						"ModeratedRecipientsPermissions",
						"ResourceMailboxRestrictions"
					}, "ModeratedBy,ModerationEnabled,SendModerationNotifications")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Identity,Member")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Identity,RoomList")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassSecurityGroupManagerCheck")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BypassSecurityGroupManagerCheck,Identity,Members")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Send_Connectors
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FrontendTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IntraOrgConnectorProtocolLoggingLevel,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ReceiveConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SendConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerComponentState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Component,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SendConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddressSpaces,AuthenticationCredential,CloudServicesMailEnabled,Comment,Confirm,ConnectionInactivityTimeOut,Custom,DNSRoutingEnabled,Debug,DomainController,DomainSecureEnabled,Enabled,ErrorAction,ErrorPolicies,ErrorVariable,Force,ForceHELO,Fqdn,FrontendProxyEnabled,IgnoreSTARTTLS,Internal,Internet,IsScopedConnector,MaxMessageSize,Name,OutBuffer,OutVariable,Partner,Port,ProtocolLoggingLevel,RequireOorg,RequireTLS,SmartHostAuthMechanism,SmartHosts,SmtpMaxMessagesPerConnection,SourceIPAddress,SourceTransportServers,TlsAuthLevel,TlsCertificateName,TlsDomain,Usage,UseExternalDNSServersEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SendConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-MapiSubmitSystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternetMessageIdOfTheMessageToDeleteFromOutbox,RecipientEmailAddress,SenderEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SendConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AddressSpaces,AuthenticationCredential,CloudServicesMailEnabled,Comment,Confirm,ConnectionInactivityTimeOut,DNSRoutingEnabled,Debug,DomainController,DomainSecureEnabled,Enabled,ErrorAction,ErrorPolicies,ErrorVariable,Force,ForceHELO,Fqdn,FrontendProxyEnabled,IgnoreSTARTTLS,IsScopedConnector,MaxMessageSize,Name,OutBuffer,OutVariable,Port,ProtocolLoggingLevel,RequireOorg,RequireTLS,SmartHostAuthMechanism,SmartHosts,SmtpMaxMessagesPerConnection,SourceIPAddress,SourceTransportServers,TlsAuthLevel,TlsCertificateName,TlsDomain,UseExternalDNSServersEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Supervision
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-SupervisionListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Confirm,Debug,DomainController,Entry,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Tag,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SupervisionListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions",
						"ViewSupervisionListPermissions"
					}, "Identity,Tag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SupervisionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Debug,DisplayDetails,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions",
						"ViewSupervisionListPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SupervisionListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Confirm,Debug,DomainController,Entry,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RemoveAll,Tag,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SupervisionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "AntiBullyingPolicyEnabled,BadWordsList,BadWordsPolicyEnabled,ClosedCampusInboundDomainExceptions,ClosedCampusInboundGroupExceptions,ClosedCampusInboundPolicyEnabled,ClosedCampusOutboundDomainExceptions,ClosedCampusOutboundGroupExceptions,ClosedCampusOutboundPolicyEnabled,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Support_Diagnostics
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-MailboxDiagnosticLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,ComponentName,Confirm,Credential,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedProperties,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AgentLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Location,OutBuffer,OutVariable,StartDate,TransportService,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticAnalysis", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CalendarLogs,Credential,Debug,DetailLevel,DomainController,ErrorAction,ErrorVariable,GlobalObjectId,LogLocation,OutBuffer,OutVariable,OutputAs,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,Latest,LogLocation,MeetingID,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,StartDate,Subject,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigName,Database,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Force,GenericScopeName,GenericScopeValue,GenericScopes,Identity,Organization,OutBuffer,OutVariable,Process,Server,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FailedContentIndexDocuments", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,Debug,DomainController,EndDate,ErrorAction,ErrorCode,ErrorVariable,FailureMode,Identity,MailboxDatabase,OutBuffer,OutVariable,ResultSize,Server,StartDate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeHidden")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,InactiveMailboxOnly,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedMailbox,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QueueDigest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Dag,Debug,DetailsLevel,ErrorAction,ErrorVariable,Filter,Forest,GroupBy,IncludeE14Servers,Mtrt,OutBuffer,OutVariable,ResultSize,Server,Site,Timeout,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-StoreUsageStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CopyOnServer,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludePassive,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-WindowsLiveIdApplicationIdentity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AppId,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Uri,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-WindowsLiveIdNamespace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Namespace,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Invoke-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Extension,Identity,MimeType,Name,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OrganizationalContacts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Repair-ContactProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FixConversationIndexTracking,FixDisplayName,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Reset-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,IncludeUserApproved,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MigrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Features,Identity,MaxConcurrentMigrations,MaxNumberOfBatches,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-LinkedInConnect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthorizationCallbackUrl,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-CalendarValidationResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,FailureCategoryType,Identity,IncludeAnalysis,IntervalEndDate,IntervalStartDate,Location,MaxThreads,MeetingID,OnlyReportErrors,OutBuffer,OutVariable,Subject")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-Constraint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Endpoint,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-DatabaseEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CopyOnServer,Debug,DomainController,ErrorAction,ErrorVariable,EventNames,Identity,IncludeMoveDestinationEvents,IncludePassive,MailboxGuid,OutBuffer,OutVariable,ResultSize,Server,StartCounter,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-DatabaseEventWatermark", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConsumerGuid,CopyOnServer,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludePassive,MailboxGuid,OutBuffer,OutVariable,ResultSize,Server,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-ExchangeDiagnosticInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Argument,AsJob,Component,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Process,Server,Unlimited,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-FolderRestriction", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Database,Debug,DomainController,ErrorAction,ErrorVariable,FolderEntryId,MailboxGuid,OutBuffer,OutVariable,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-GroupBlackout", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Endpoint,Group")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-GroupCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Endpoint,Group")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-MailboxActivityLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-SymphonyGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Endpoint,Name")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-TenantReadiness", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Endpoint,TenantID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-UpgradeWorkItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Endpoint,ForestName,ResultSize,Status,Tenant,TenantTier,Type,WorkItemID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-WebDnsRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Thumbprint,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Repair-Migration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Add,Attachment,BatchId,CacheEntry,Confirm,ConstraintExpiryDate,Debug,DeleteSubscription,DisableSubscription,ErrorAction,ErrorVariable,ExtendedProperty,Feature,FlushSubscription,FolderId,Force,Organization,OutBuffer,OutVariable,Partition,Property,PropertyType,PropertyValue,Remove,RemoveSyncSubscription,ReportId,ResumeSubscription,Revert,Status,StoreObjectId,SubscriptionId,SyncSubscription,Update,UpdateSyncSubscription,UpgradeConstraint,UserId,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-Constraint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Comment,Constraints,Endpoint,FixByDate,IsBlocking,Name,Owner,Status")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-GroupBlackout", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BlackoutIntervals,CertPassword,CertPath,CertSubject,EndDate,Endpoint,GroupBlackouts,GroupName,Reason,StartDate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-GroupCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityBlocks,CertPassword,CertPath,CertSubject,Endpoint,GroupCapacities,GroupName,StartDate,UpgradeUnits")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-SymphonyGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Endpoint,Group,Groups,Region")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-TenantReadiness", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Constraints,Endpoint,Group,IsReady,StartDate,TenantID,TenantReadinesses,UpgradeUnits,UseDefaultCapacity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Set-UpgradeWorkItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertPassword,CertPath,CertSubject,Comment,CompletedCount,Endpoint,HandlerState,Identity,Status,StatusDetailsUri,Tenant,TotalCount")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Test-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Arbitration,Confirm,Debug,DeliverMessage,ErrorAction,ErrorVariable,InboxRules,MessageFileData,Options,OutBuffer,OutVariable,Recipients,SendReportTo,Sender,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Team_Mailboxes
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "AccountPartition,Anr,BypassOwnerCheck,Debug,DeletedSiteMailbox,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,SendMeEmail,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Alias,Database,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Force,Name,Organization,OrganizationalUnit,OutBuffer,OutVariable,OverrideRecipientQuotas,SharePointUrl,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "AliasPrefix,Confirm,Debug,DefaultAliasPrefixEnabled,DomainController,ErrorAction,ErrorVariable,IgnoreDehydratedFlag,IsDefault,IssueWarningQuota,MaxReceiveSize,Name,Organization,OutBuffer,OutVariable,ProhibitSendReceiveQuota,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "SiteMailboxCreationURL")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Active,Debug,DisplayName,DomainController,ErrorAction,ErrorVariable,Force,Members,OutBuffer,OutVariable,Owners,RemoveDuplicateMessages,SharePointUrl,ShowInMyClient,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "AliasPrefix,Confirm,Debug,DefaultAliasPrefixEnabled,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,IsDefault,IssueWarningQuota,MaxReceiveSize,Name,OutBuffer,OutVariable,ProhibitSendReceiveQuota,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,RequestorIdentity,UseAppTokenOnly,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,Debug,ErrorAction,ErrorVariable,FullSync,Identity,Organization,OutBuffer,OutVariable,Server,Target,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Transport_Agents
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-TransportAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TransportService,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-TransportAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TransportService,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TransportService,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportPipeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Install-TransportAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssemblyPath,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,TransportAgentFactory,TransportService,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Priority,TransportService,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Uninstall-TransportAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TransportService,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Transport_Hygiene
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ContentFilterPhrase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Influence,OutBuffer,OutVariable,Phrase,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-IPAllowListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,ErrorAction,ErrorVariable,ExpirationTime,IPAddress,IPRange,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-IPAllowListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnyMatch,BitmaskMatch,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IPAddressesMatch,LookupDomain,Name,OutBuffer,OutVariable,Priority,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-IPBlockListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,ErrorAction,ErrorVariable,ExpirationTime,IPAddress,IPRange,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-IPBlockListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnyMatch,BitmaskMatch,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IPAddressesMatch,LookupDomain,Name,OutBuffer,OutVariable,Priority,RejectionResponse,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-AntispamUpdates", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SpamSignatureUpdatesEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AgentLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Location,OutBuffer,OutVariable,StartDate,TransportService,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ContentFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ContentFilterPhrase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Phrase,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FrontendTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable,Identity,IntraOrgConnectorProtocolLoggingLevel,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedOutboundSpamFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,ResultSize,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,ResultSize,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,IncludeInvalidPolicies,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterRecoveryItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilteringServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QuarantineMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Confirm,Debug,Direction,Domain,DomainController,EndExpiresDate,EndReceivedDate,ErrorAction,ErrorVariable,Identity,MessageId,Organization,OutBuffer,OutVariable,Page,PageSize,RecipientAddress,Reported,SenderAddress,StartExpiresDate,StartReceivedDate,Subject,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QuarantineMessageHeader", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SenderFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SenderIdConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SenderReputationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerComponentState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Component,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportProcessingQuotaConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportProcessingQuotaDigest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AdminDisplayName,Confirm,Debug,DirectoryBasedEdgeBlockMode,DomainController,EnableSafeList,ErrorAction,ErrorVariable,IPAllowList,IPBlockList,IgnoreDehydratedFlag,Name,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AddXHeaderValue,AdminDisplayName,BulkThreshold,Confirm,Debug,DomainController,DownloadLink,EnableEndUserSpamNotifications,EnableLanguageBlockList,EnableRegionBlockList,EndUserSpamNotificationCustomFromAddress,EndUserSpamNotificationCustomFromName,EndUserSpamNotificationCustomSubject,EndUserSpamNotificationFrequency,EndUserSpamNotificationLanguage,EndUserSpamNotificationLimit,ErrorAction,ErrorVariable,FalsePositiveAdditionalRecipients,HighConfidenceSpamAction,IgnoreDehydratedFlag,IncreaseScoreWithBizOrInfoUrls,IncreaseScoreWithImageLinks,IncreaseScoreWithNumericIps,IncreaseScoreWithRedirectToOtherPort,LanguageBlockList,MarkAsSpamBulkMail,MarkAsSpamEmbedTagsInHtml,MarkAsSpamEmptyMessages,MarkAsSpamFormTagsInHtml,MarkAsSpamFramesInHtml,MarkAsSpamFromAddressAuthFail,MarkAsSpamJavaScriptInHtml,MarkAsSpamNdrBackscatter,MarkAsSpamObjectTagsInHtml,MarkAsSpamSensitiveWordList,MarkAsSpamSpfRecordHardFail,MarkAsSpamWebBugsInHtml,ModifySubjectValue,Name,Organization,OutBuffer,OutVariable,QuarantineRetentionPeriod,RedirectToRecipients,RegionBlockList,SpamAction,TestModeAction,TestModeBccToRecipients,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,HostedContentFilterPolicy,Name,Organization,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Action,AdminDisplayName,BypassInboundMessages,BypassOutboundMessages,Confirm,CustomAlertText,CustomExternalBody,CustomExternalSubject,CustomFromAddress,CustomFromName,CustomInternalBody,CustomInternalSubject,CustomNotifications,Debug,DomainController,EnableExternalSenderAdminNotifications,EnableExternalSenderNotifications,EnableInternalSenderAdminNotifications,EnableInternalSenderNotifications,ErrorAction,ErrorVariable,ExternalSenderAdminAddress,IgnoreDehydratedFlag,InternalSenderAdminAddress,Name,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,MalwareFilterPolicy,Name,Organization,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Release-QuarantineMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ReleaseToAll,ReportFalsePositive,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ContentFilterPhrase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Phrase,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-IPAllowListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-IPAllowListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-IPBlockListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-IPBlockListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MalwareFilterRecoveryItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TransportProcessingQuotaOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MalwareFilterRecoveryItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Remove,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ContentFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassedRecipients,BypassedSenderDomains,BypassedSenders,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,OutlookEmailPostmarkValidationEnabled,QuarantineMailbox,RejectionResponse,SCLDeleteEnabled,SCLDeleteThreshold,SCLQuarantineEnabled,SCLQuarantineThreshold,SCLRejectEnabled,SCLRejectThreshold,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FrontendTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AntispamAgentsEnabled,Confirm,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AdminDisplayName,Confirm,Debug,DirectoryBasedEdgeBlockMode,DomainController,EnableSafeList,ErrorAction,ErrorVariable,IPAllowList,IPBlockList,Identity,IgnoreDehydratedFlag,MakeDefault,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AddXHeaderValue,AdminDisplayName,BulkThreshold,Confirm,Debug,DomainController,DownloadLink,EnableEndUserSpamNotifications,EnableLanguageBlockList,EnableRegionBlockList,EndUserSpamNotificationCustomFromAddress,EndUserSpamNotificationCustomFromName,EndUserSpamNotificationCustomSubject,EndUserSpamNotificationFrequency,EndUserSpamNotificationLanguage,EndUserSpamNotificationLimit,ErrorAction,ErrorVariable,FalsePositiveAdditionalRecipients,HighConfidenceSpamAction,Identity,IgnoreDehydratedFlag,IncreaseScoreWithBizOrInfoUrls,IncreaseScoreWithImageLinks,IncreaseScoreWithNumericIps,IncreaseScoreWithRedirectToOtherPort,LanguageBlockList,MakeDefault,MarkAsSpamBulkMail,MarkAsSpamEmbedTagsInHtml,MarkAsSpamEmptyMessages,MarkAsSpamFormTagsInHtml,MarkAsSpamFramesInHtml,MarkAsSpamFromAddressAuthFail,MarkAsSpamJavaScriptInHtml,MarkAsSpamNdrBackscatter,MarkAsSpamObjectTagsInHtml,MarkAsSpamSensitiveWordList,MarkAsSpamSpfRecordHardFail,MarkAsSpamWebBugsInHtml,ModifySubjectValue,Name,OutBuffer,OutVariable,QuarantineRetentionPeriod,RedirectToRecipients,RegionBlockList,SpamAction,TestModeAction,TestModeBccToRecipients,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,HostedContentFilterPolicy,Identity,Name,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HostedOutboundSpamFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "AdminDisplayName,BccSuspiciousOutboundAdditionalRecipients,BccSuspiciousOutboundMail,BlockUnlistedDomains,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Name,NotifyOutboundSpam,NotifyOutboundSpamRecipients,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IPAllowListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IPAllowListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnyMatch,BitmaskMatch,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IPAddressesMatch,LookupDomain,Name,OutBuffer,OutVariable,Priority,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IPAllowListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IPBlockListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,MachineEntryRejectionResponse,OutBuffer,OutVariable,StaticEntryRejectionResponse,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IPBlockListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnyMatch,BitmaskMatch,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IPAddressesMatch,LookupDomain,Name,OutBuffer,OutVariable,Priority,RejectionResponse,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-IPBlockListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassedRecipients,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Action,AdminDisplayName,BypassInboundMessages,BypassOutboundMessages,Confirm,CustomAlertText,CustomExternalBody,CustomExternalSubject,CustomFromAddress,CustomFromName,CustomInternalBody,CustomInternalSubject,CustomNotifications,Debug,DomainController,EnableExternalSenderAdminNotifications,EnableExternalSenderNotifications,EnableInternalSenderAdminNotifications,EnableInternalSenderNotifications,ErrorAction,ErrorVariable,ExternalSenderAdminAddress,Identity,IgnoreDehydratedFlag,InternalSenderAdminAddress,MakeDefault,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Comments,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExceptIfRecipientDomainIs,ExceptIfSentTo,ExceptIfSentToMemberOf,Identity,MalwareFilterPolicy,Name,OutBuffer,OutVariable,Priority,RecipientDomainIs,SentTo,SentToMemberOf,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MalwareFilteringServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassFiltering,Confirm,Debug,DeferAttempts,DeferWaitTime,DomainController,ErrorAction,ErrorVariable,ForceRescan,MinimumSuccessfulEngineScans,OutBuffer,OutVariable,PrimaryUpdatePath,ScanErrorAction,ScanTimeout,SecondaryUpdatePath,UpdateFrequency,UpdateTimeout,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RecipientFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BlockListEnabled,BlockedRecipients,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,RecipientValidationEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SenderFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Action,BlankSenderBlockingEnabled,BlockedDomains,BlockedDomainsAndSubdomains,BlockedSenders,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,RecipientBlockedSenderAction,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SenderIdConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BypassedRecipients,BypassedSenderDomains,Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OutBuffer,OutVariable,SpoofedDomainAction,TempErrorAction,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SenderReputationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExternalMailEnabled,InternalMailEnabled,OpenProxyDetectionEnabled,OutBuffer,OutVariable,ProxyServerName,ProxyServerPort,ProxyServerType,SenderBlockingEnabled,SenderBlockingPeriod,SrlBlockThreshold,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ServerComponentState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Component,Confirm,ErrorAction,ErrorVariable,LocalOnly,OutBuffer,OutVariable,RemoteOnly,Requester,State,TimeoutInSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportProcessingQuotaConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AmWeight,AsWeight,CalculationEnabled,CalculationFrequency,CostThreshold,Debug,ErrorAction,ErrorVariable,EtrWeight,OutBuffer,OutVariable,RelativeCostThreshold,ThrottleFactor,ThrottlingEnabled,TimeWindow,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportProcessingQuotaOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Throttle,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AntispamAgentsEnabled,Confirm,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AntispamAgentsEnabled,Confirm,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-IPAllowListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-IPBlockListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-SenderId", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,HelloDomain,IPAddress,OutBuffer,OutVariable,PurportedResponsibleDomain,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SafeList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EnsureJunkEmailRule,ErrorAction,ErrorVariable,Identity,IncludeDomains,OutBuffer,OutVariable,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Transport_Queues
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InterceptorRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BookmarkIndex,BookmarkObject,Debug,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmark,IncludeComponentLatencyInfo,IncludeRecipientInfo,OutBuffer,OutVariable,Queue,ResultSize,ReturnPageInfo,SearchForward,Server,SortOrder,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Queue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BookmarkIndex,BookmarkObject,Debug,ErrorAction,ErrorVariable,Exclude,Filter,Identity,Include,IncludeBookmark,OutBuffer,OutVariable,ResultSize,ReturnPageInfo,SearchForward,Server,SortOrder,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ReceiveConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InterceptorRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Action,Condition,Confirm,CreatedBy,CustomResponseCode,CustomResponseString,Dag,Debug,Description,DomainController,ErrorAction,ErrorVariable,Event,ExpireTime,Forest,Identity,Name,OutBuffer,OutVariable,Path,Server,Site,Source,TimeInterval,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Redirect-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Target,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-InterceptorRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf,WithNDR")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-Queue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Retry-Queue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Resubmit,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,OutboundIpPool,Resubmit,Server,Verbose,WarningAction,WarningVariable,WhatIf,WithNDR")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-Queue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Transport_Rules
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mode,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-JournalRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-TransportRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Format,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeLocales,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,TrustedPublishingDomain,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Default,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ResultSize,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRuleAction", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRulePredicate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-JournalRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-TransportRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FileData,Force,Identity,MigrationSource,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClassificationID,Confirm,Debug,DisplayName,DisplayPrecedence,DomainController,ErrorAction,ErrorVariable,Locale,Name,Organization,OutBuffer,OutVariable,PermissionMenuVisible,RecipientDescription,RetainClassificationEnabled,SenderDescription,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"IRMPremiumFeaturesPermissions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyRightsProtectionTemplate"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ActivationDate,AdComparisonAttribute,AdComparisonOperator,AddManagerAsRecipientType,AddToRecipients,AnyOfCcHeader,AnyOfCcHeaderMemberOf,AnyOfRecipientAddressContainsWords,AnyOfRecipientAddressMatchesPatterns,AnyOfToCcHeader,AnyOfToCcHeaderMemberOf,AnyOfToHeader,AnyOfToHeaderMemberOf,ApplyClassification,ApplyHtmlDisclaimerFallbackAction,ApplyHtmlDisclaimerLocation,ApplyHtmlDisclaimerText,ApplyOME,AttachmentContainsWords,AttachmentExtensionMatchesWords,AttachmentHasExecutableContent,AttachmentIsPasswordProtected,AttachmentIsUnsupported,AttachmentMatchesPatterns,AttachmentNameMatchesPatterns,AttachmentProcessingLimitExceeded,AttachmentPropertyContainsWords,AttachmentSizeOver,BetweenMemberOf1,BetweenMemberOf2,BlindCopyTo,Comments,Confirm,ContentCharacterSetContainsWords,CopyTo,Debug,DeleteMessage,Disconnect,DomainController,Enabled,ErrorAction,ErrorVariable,ExceptIfAdComparisonAttribute,ExceptIfAdComparisonOperator,ExceptIfAnyOfCcHeader,ExceptIfAnyOfCcHeaderMemberOf,ExceptIfAnyOfRecipientAddressContainsWords,ExceptIfAnyOfRecipientAddressMatchesPatterns,ExceptIfAnyOfToCcHeader,ExceptIfAnyOfToCcHeaderMemberOf,ExceptIfAnyOfToHeader,ExceptIfAnyOfToHeaderMemberOf,ExceptIfAttachmentContainsWords,ExceptIfAttachmentExtensionMatchesWords,ExceptIfAttachmentHasExecutableContent,ExceptIfAttachmentIsPasswordProtected,ExceptIfAttachmentIsUnsupported,ExceptIfAttachmentMatchesPatterns,ExceptIfAttachmentNameMatchesPatterns,ExceptIfAttachmentProcessingLimitExceeded,ExceptIfAttachmentPropertyContainsWords,ExceptIfAttachmentSizeOver,ExceptIfBetweenMemberOf1,ExceptIfBetweenMemberOf2,ExceptIfContentCharacterSetContainsWords,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromAddressMatchesPatterns,ExceptIfFromMemberOf,ExceptIfFromScope,ExceptIfHasClassification,ExceptIfHasNoClassification,ExceptIfHasSenderOverride,ExceptIfHeaderContainsMessageHeader,ExceptIfHeaderContainsWords,ExceptIfHeaderMatchesMessageHeader,ExceptIfHeaderMatchesPatterns,ExceptIfManagerAddresses,ExceptIfManagerForEvaluatedUser,ExceptIfMessageSizeOver,ExceptIfMessageTypeMatches,ExceptIfRecipientADAttributeContainsWords,ExceptIfRecipientADAttributeMatchesPatterns,ExceptIfRecipientAddressContainsWords,ExceptIfRecipientAddressMatchesPatterns,ExceptIfRecipientDomainIs,ExceptIfRecipientInSenderList,ExceptIfSCLOver,ExceptIfSenderADAttributeContainsWords,ExceptIfSenderADAttributeMatchesPatterns,ExceptIfSenderDomainIs,ExceptIfSenderInRecipientList,ExceptIfSenderIpRanges,ExceptIfSenderManagementRelationship,ExceptIfSentTo,ExceptIfSentToMemberOf,ExceptIfSentToScope,ExceptIfSubjectContainsWords,ExceptIfSubjectMatchesPatterns,ExceptIfSubjectOrBodyContainsWords,ExceptIfSubjectOrBodyMatchesPatterns,ExceptIfWithImportance,ExpiryDate,From,FromAddressContainsWords,FromAddressMatchesPatterns,FromMemberOf,FromScope,GenerateIncidentReport,GenerateNotification,HasClassification,HasNoClassification,HasSenderOverride,HeaderContainsMessageHeader,HeaderContainsWords,HeaderMatchesMessageHeader,HeaderMatchesPatterns,IncidentReportContent,IncidentReportOriginalMail,LogEventText,ManagerAddresses,ManagerForEvaluatedUser,MessageSizeOver,MessageTypeMatches,Mode,ModerateMessageByManager,ModerateMessageByUser,Name,Organization,OutBuffer,OutVariable,PrependSubject,Priority,Quarantine,RecipientADAttributeContainsWords,RecipientADAttributeMatchesPatterns,RecipientAddressContainsWords,RecipientAddressMatchesPatterns,RecipientDomainIs,RecipientInSenderList,RedirectMessageTo,RejectMessageEnhancedStatusCode,RejectMessageReasonText,RemoveHeader,RemoveOME,RouteMessageOutboundConnector,RouteMessageOutboundRequireTls,RuleErrorAction,RuleSubType,SCLOver,SenderADAttributeContainsWords,SenderADAttributeMatchesPatterns,SenderAddressLocation,SenderDomainIs,SenderInRecipientList,SenderIpRanges,SenderManagementRelationship,SentTo,SentToMemberOf,SentToScope,SetAuditSeverity,SetHeaderName,SetHeaderValue,SetSCL,SmtpRejectMessageRejectStatusCode,SmtpRejectMessageRejectText,StopRuleProcessing,SubjectContainsWords,SubjectMatchesPatterns,SubjectOrBodyContainsWords,SubjectOrBodyMatchesPatterns,UseLegacyRegex,Verbose,WarningAction,WarningVariable,WhatIf,WithImportance")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClassificationID,Confirm,Debug,DisplayName,DisplayPrecedence,DomainController,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PermissionMenuVisible,RecipientDescription,RetainClassificationEnabled,SenderDescription,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "DisclaimerText,EmailText,Image,OTPEnabled,Organization,PortalText")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Organization,Type")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"IRMPremiumFeaturesPermissions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ApplyRightsProtectionTemplate,Identity"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "ActivationDate,AdComparisonAttribute,AdComparisonOperator,AddManagerAsRecipientType,AddToRecipients,AnyOfCcHeader,AnyOfCcHeaderMemberOf,AnyOfRecipientAddressContainsWords,AnyOfRecipientAddressMatchesPatterns,AnyOfToCcHeader,AnyOfToCcHeaderMemberOf,AnyOfToHeader,AnyOfToHeaderMemberOf,ApplyClassification,ApplyHtmlDisclaimerFallbackAction,ApplyHtmlDisclaimerLocation,ApplyHtmlDisclaimerText,ApplyOME,AttachmentContainsWords,AttachmentExtensionMatchesWords,AttachmentHasExecutableContent,AttachmentIsPasswordProtected,AttachmentIsUnsupported,AttachmentMatchesPatterns,AttachmentNameMatchesPatterns,AttachmentProcessingLimitExceeded,AttachmentPropertyContainsWords,AttachmentSizeOver,BetweenMemberOf1,BetweenMemberOf2,BlindCopyTo,Comments,Confirm,ContentCharacterSetContainsWords,CopyTo,Debug,DeleteMessage,Disconnect,DomainController,ErrorAction,ErrorVariable,ExceptIfAdComparisonAttribute,ExceptIfAdComparisonOperator,ExceptIfAnyOfCcHeader,ExceptIfAnyOfCcHeaderMemberOf,ExceptIfAnyOfRecipientAddressContainsWords,ExceptIfAnyOfRecipientAddressMatchesPatterns,ExceptIfAnyOfToCcHeader,ExceptIfAnyOfToCcHeaderMemberOf,ExceptIfAnyOfToHeader,ExceptIfAnyOfToHeaderMemberOf,ExceptIfAttachmentContainsWords,ExceptIfAttachmentExtensionMatchesWords,ExceptIfAttachmentHasExecutableContent,ExceptIfAttachmentIsPasswordProtected,ExceptIfAttachmentIsUnsupported,ExceptIfAttachmentMatchesPatterns,ExceptIfAttachmentNameMatchesPatterns,ExceptIfAttachmentProcessingLimitExceeded,ExceptIfAttachmentPropertyContainsWords,ExceptIfAttachmentSizeOver,ExceptIfBetweenMemberOf1,ExceptIfBetweenMemberOf2,ExceptIfContentCharacterSetContainsWords,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromAddressMatchesPatterns,ExceptIfFromMemberOf,ExceptIfFromScope,ExceptIfHasClassification,ExceptIfHasNoClassification,ExceptIfHasSenderOverride,ExceptIfHeaderContainsMessageHeader,ExceptIfHeaderContainsWords,ExceptIfHeaderMatchesMessageHeader,ExceptIfHeaderMatchesPatterns,ExceptIfManagerAddresses,ExceptIfManagerForEvaluatedUser,ExceptIfMessageSizeOver,ExceptIfMessageTypeMatches,ExceptIfRecipientADAttributeContainsWords,ExceptIfRecipientADAttributeMatchesPatterns,ExceptIfRecipientAddressContainsWords,ExceptIfRecipientAddressMatchesPatterns,ExceptIfRecipientDomainIs,ExceptIfRecipientInSenderList,ExceptIfSCLOver,ExceptIfSenderADAttributeContainsWords,ExceptIfSenderADAttributeMatchesPatterns,ExceptIfSenderDomainIs,ExceptIfSenderInRecipientList,ExceptIfSenderIpRanges,ExceptIfSenderManagementRelationship,ExceptIfSentTo,ExceptIfSentToMemberOf,ExceptIfSentToScope,ExceptIfSubjectContainsWords,ExceptIfSubjectMatchesPatterns,ExceptIfSubjectOrBodyContainsWords,ExceptIfSubjectOrBodyMatchesPatterns,ExceptIfWithImportance,ExpiryDate,From,FromAddressContainsWords,FromAddressMatchesPatterns,FromMemberOf,FromScope,GenerateIncidentReport,GenerateNotification,HasClassification,HasNoClassification,HasSenderOverride,HeaderContainsMessageHeader,HeaderContainsWords,HeaderMatchesMessageHeader,HeaderMatchesPatterns,IncidentReportContent,IncidentReportOriginalMail,LogEventText,ManagerAddresses,ManagerForEvaluatedUser,MessageSizeOver,MessageTypeMatches,Mode,ModerateMessageByManager,ModerateMessageByUser,Name,OutBuffer,OutVariable,PrependSubject,Priority,Quarantine,RecipientADAttributeContainsWords,RecipientADAttributeMatchesPatterns,RecipientAddressContainsWords,RecipientAddressMatchesPatterns,RecipientDomainIs,RecipientInSenderList,RedirectMessageTo,RejectMessageEnhancedStatusCode,RejectMessageReasonText,RemoveHeader,RemoveOME,RouteMessageOutboundConnector,RouteMessageOutboundRequireTls,RuleErrorAction,RuleSubType,SCLOver,SenderADAttributeContainsWords,SenderADAttributeMatchesPatterns,SenderAddressLocation,SenderDomainIs,SenderInRecipientList,SenderIpRanges,SenderManagementRelationship,SentTo,SentToMemberOf,SentToScope,SetAuditSeverity,SetHeaderName,SetHeaderValue,SetSCL,SmtpRejectMessageRejectStatusCode,SmtpRejectMessageRejectText,StopRuleProcessing,SubjectContainsWords,SubjectMatchesPatterns,SubjectOrBodyContainsWords,SubjectOrBodyMatchesPatterns,Verbose,WarningAction,WarningVariable,WhatIf,WithImportance")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Test-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,WhatIf"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "TransportRules")
				}, "c")
			};
		}

		private class UM_Mailboxes
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IgnoreDefaultScope,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,KeepProperties,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IgnoreDefaultScope,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AutomaticSpeechRecognitionEnabled,Confirm,ErrorAction,ErrorVariable,Extensions,Identity,NotifyEmail,OutBuffer,OutVariable,PilotNumber,Pin,PinExpired,SIPResourceIdentifier,UMMailboxPolicy,ValidateOnly,VoiceMailAnalysisEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,AllMailboxPlanReleases,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OrganizationalUnit,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemovedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IgnoreDefaultScope,Organization,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,IgnoreErrors,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,Organization,OrganizationalUnit,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,KeyMappings,Mailbox,Name,Organization,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AllowUMCallsFromNonUsers,CreateDTMFMap,UMCallingLineIds"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CreateDTMFMap,Identity"),
					new RoleParameters(new string[]
					{
						"ResourceMailboxRestrictions",
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "CreateDTMFMap"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CreateDTMFMap,UMCallingLineIds,UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "CreateDTMFMap,SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "CreateDTMFMap,SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,IgnoreDefaultScope,ImListMigrationCompleted,OutBuffer,OutVariable,SecondaryAddress,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "SecondaryDialPlan"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CreateDTMFMap,UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,Identity,KeyMappings,Mailbox,Name,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AirSyncNumbers,Debug,DomainController,IgnoreDefaultScope,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMCloudServicePermissions"
					}, "PhoneNumber,PhoneProviderId,VerifyGlobalRoutingEntry"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "FaxEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMOutDialingPermissions"
					}, "PlayOnPhoneEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "OperatorNumber,UMMailboxPolicy"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AllowUMCallsFromNonUsers,AnonymousCallersCanLeaveMessages,AutomaticSpeechRecognitionEnabled,CallAnsweringAudioCodec,Confirm,ErrorAction,ErrorVariable,ImListMigrationCompleted,MissedCallNotificationEnabled,Name,OutBuffer,OutVariable,PinlessAccessToVoiceMailEnabled,SubscriberAccessEnabled,TUIAccessToCalendarEnabled,TUIAccessToEmailEnabled,VoiceMailAnalysisEnabled,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPersonalAutoAttendantPermissions"
					}, "CallAnsweringRulesEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMSMSMsgWaitingPermissions"
					}, "UMSMSNotificationOption")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,DefaultPlayOnPhoneNumber,ErrorAction,ErrorVariable,FolderToReadEmailsFrom,Greeting,Identity,OutBuffer,OutVariable,ReadOldestUnreadVoiceMessagesFirst,ReceivedVoiceMailPreviewEnabled,SentVoiceMailPreviewEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IgnoreDefaultScope,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,LockedOut,NotifyEmail,OutBuffer,OutVariable,Pin,PinExpired,SendEmail,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PhoneticDisplayName,SeniorityIndex"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "Confirm,Debug,DomainController,IgnoreDefaultScope,PublicFolder,UMCallingLineIds,Verbose,WhatIf"),
					new RoleParameters(new string[]
					{
						"UMPermissions"
					}, "AllowUMCallsFromNonUsers,CreateDTMFMap,UMDtmfMap")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AwayVoicemailGreeting,CallAnsweringRuleId,Confirm,DefaultVoicemailGreeting,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,PhoneNumber,UMMailbox,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class UM_Prompts
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-UMPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AfterHoursWelcomeGreeting,AfterHoursWelcomeGreetingAndMenu,BusinessHours,BusinessHoursWelcomeGreeting,BusinessHoursWelcomeGreetingAndMenu,BusinessLocation,Debug,DomainController,TestBusinessName,TestMenuKeyMapping,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PromptFileName,UMAutoAttendant,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Import-UMPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PromptFileData,PromptFileName,PromptFileStream,UMAutoAttendant,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "AfterHoursMainMenuCustomPromptEnabled,AfterHoursMainMenuCustomPromptFilename,AfterHoursWelcomeGreetingEnabled,AfterHoursWelcomeGreetingFilename,BusinessHoursMainMenuCustomPromptEnabled,BusinessHoursMainMenuCustomPromptFilename,BusinessHoursWelcomeGreetingEnabled,BusinessHoursWelcomeGreetingFilename,Confirm,ErrorAction,ErrorVariable,Identity,InfoAnnouncementEnabled,InfoAnnouncementFilename,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,InfoAnnouncementEnabled,InfoAnnouncementFilename,WarningAction,WarningVariable,WelcomeGreetingEnabled,WelcomeGreetingFilename,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class UnScoped_Role_Management
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Overwrite,PSSnapinName,Parameters,ParentRoleEntry,Role,Type,UnScopedTopLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cmdlet,CmdletParameters,Debug,DomainController,ErrorAction,ErrorVariable,GetChildren,Identity,Organization,OutBuffer,OutVariable,Recurse,RoleType,Script,ScriptParameters,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssignmentMethod,ConfigWriteScope,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,Enabled,ErrorAction,ErrorVariable,Exclusive,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,GetEffectiveUsers,Identity,Organization,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientWriteScope,Role,RoleAssignee,RoleAssigneeType,Verbose,WarningAction,WarningVariable,WritableDatabase,WritableRecipient,WritableServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PSSnapinName,Parameters,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,Description,DomainController,ErrorAction,ErrorVariable,Force,Name,Organization,OutBuffer,OutVariable,Parent,UnScopedTopLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,ErrorAction,ErrorVariable,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,Force,Name,Organization,OutBuffer,OutVariable,Policy,RecipientOrganizationalUnitScope,RecipientRelativeWriteScope,Role,SecurityGroup,UnScopedTopLevel,User,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Recurse,UnScopedTopLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "Confirm,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,Force,Identity,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientRelativeWriteScope,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"RBACManagementPermissions"
					}, "AddParameter,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Parameters,RemoveParameter,UnScopedTopLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class Unified_Messaging
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Immediate,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Immediate,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-UMCallDataRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ClientStream,Confirm,Date,Debug,DomainController,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,UMDialPlan,UMIPGateway,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-UMMailboxPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CustomAwayGreeting,CustomVoicemailGreeting,Debug,DefaultAwayGreeting,DefaultVoicemailGreeting,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TestPhoneticDisplayName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"AddressListsEnabled",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Container,SearchText"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,DomainName,ErrorAction,ErrorVariable,Identity,Instance,OutBuffer,OutVariable,Server,Thumbprint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,AllMailboxPlanReleases,Credential,Debug,DomainController,ErrorAction,Filter,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,SortBy,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMActiveCalls", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DialPlan,DomainController,ErrorAction,ErrorVariable,IPGateway,InstanceServer,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallDataRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Mailbox,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GroupBy,Organization,OutBuffer,OutVariable,UMDialPlan,UMIPGateway,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMHuntGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,IncludeSimulator,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IgnoreDefaultScope,Organization,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,IgnoreErrors,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,Organization,OrganizationalUnit,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,DTMFFallbackAutoAttendant,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PilotIdentifierList,SharedUMDialPlan,SpeechEnabled,Status,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DefaultOutboundCallingLineId,DomainController,GlobalCallRoutingScheme,Organization,SipResourceIdentifierRequired,SubscriberType,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "FaxEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AccessTelephoneNumbers,Confirm,CountryOrRegionCode,DefaultLanguage,ErrorAction,ErrorVariable,GenerateUMMailboxPolicy,Name,NumberOfDigitsInExtension,OutBuffer,OutVariable,URIType,VoIPSecurity,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMHuntGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,PilotIdentifier,UMDialPlan,UMIPGateway,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,GlobalCallRoutingScheme,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Address,Confirm,ErrorAction,ErrorVariable,IPAddressFamily,Name,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,SharedUMDialPlan,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMHuntGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMMailboxPrompt", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,CustomAwayGreeting,CustomVoicemailGreeting,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IsHotmailMigration,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "AfterHoursKeyMapping,AfterHoursKeyMappingEnabled,AfterHoursMainMenuCustomPromptEnabled,AfterHoursMainMenuCustomPromptFilename,AfterHoursTransferToOperatorEnabled,AfterHoursWelcomeGreetingEnabled,AfterHoursWelcomeGreetingFilename,AllowDialPlanSubscribers,AllowExtensions,AllowedInCountryOrRegionGroups,AllowedInternationalGroups,BusinessHoursKeyMapping,BusinessHoursKeyMappingEnabled,BusinessHoursMainMenuCustomPromptEnabled,BusinessHoursMainMenuCustomPromptFilename,BusinessHoursSchedule,BusinessHoursTransferToOperatorEnabled,BusinessHoursWelcomeGreetingEnabled,BusinessHoursWelcomeGreetingFilename,BusinessLocation,BusinessName,CallSomeoneEnabled,Confirm,ContactAddressList,ContactRecipientContainer,ContactScope,DTMFFallbackAutoAttendant,DefaultMailbox,ErrorAction,ErrorVariable,ForceUpgrade,ForwardCallsToDefaultMailbox,HolidaySchedule,Identity,InfoAnnouncementEnabled,InfoAnnouncementFilename,Language,MatchedNameSelectionMethod,Name,NameLookupEnabled,OperatorExtension,OutBuffer,OutVariable,PilotIdentifierList,SendVoiceMsgEnabled,SpeechEnabled,StarOutToDialPlanEnabled,TimeZone,TimeZoneName,WarningAction,WarningVariable,WeekStartDay,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMCallRouterSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExternalHostFqdn,ExternalServiceFqdn,IPAddressFamily,IPAddressFamilyConfigurable,MaxCallsAllowed,OutBuffer,OutVariable,Server,SipTcpListeningPort,SipTlsListeningPort,UMForwardingAddressTemplate,UMPodRedirectTemplate,UMStartupMode,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DefaultOutboundCallingLineId,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "FaxEnabled"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AccessTelephoneNumbers,AllowDialPlanSubscribers,AllowExtensions,AllowHeuristicADCallingLineIdResolution,AllowedInCountryOrRegionGroups,AllowedInternationalGroups,AudioCodec,AutomaticSpeechRecognitionEnabled,CallSomeoneEnabled,ConfiguredInCountryOrRegionGroups,ConfiguredInternationalGroups,Confirm,ContactAddressList,ContactRecipientContainer,ContactScope,CountryOrRegionCode,DefaultLanguage,DialByNamePrimary,DialByNameSecondary,EquivalentDialPlanPhoneContexts,ErrorAction,ErrorVariable,Extension,ForceUpgrade,InCountryOrRegionNumberFormat,InfoAnnouncementEnabled,InfoAnnouncementFilename,InputFailuresBeforeDisconnect,InternationalAccessCode,InternationalNumberFormat,LegacyPromptPublishingPoint,LogonFailuresBeforeDisconnect,MatchedNameSelectionMethod,MaxCallDuration,MaxRecordingDuration,Name,NationalNumberPrefix,NumberingPlanFormats,OperatorExtension,OutBuffer,OutVariable,OutsideLineAccessCode,PilotIdentifierList,RecordingIdleTimeout,SendVoiceMsgEnabled,TUIPromptEditingEnabled,UMAutoAttendant,VoIPSecurity,WarningAction,WarningVariable,WelcomeGreetingEnabled,WelcomeGreetingFilename,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPersonalAutoAttendantPermissions"
					}, "CallAnsweringRulesEnabled")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ForceUpgrade,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Address,Confirm,DelayedSourcePartyInfoEnabled,ErrorAction,ErrorVariable,IPAddressFamily,MessageWaitingIndicatorAllowed,Name,OutBuffer,OutVariable,OutcallsAllowed,Port,Simulator,Status,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMFaxPermissions"
					}, "AllowFax,FaxMessageText,FaxServerURI"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMOutDialingPermissions"
					}, "AllowDialPlanSubscribers,AllowExtensions,AllowedInCountryOrRegionGroups,AllowedInternationalGroups"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "AllowAutomaticSpeechRecognition,AllowCommonPatterns,AllowMessageWaitingIndicator,AllowPlayOnPhone,AllowVoiceMailPreview,AllowVoiceResponseToOtherMessageTypes,ForceUpgrade,MaxGreetingDuration,MaxLogonAttempts,MinPINLength,Name,PINHistoryCount,PINLifetime,ProtectAuthenticatedVoiceMail,ProtectUnauthenticatedVoiceMail,ProtectedVoiceMailText,RequireProtectedPlayOnPhone,SourceForestPolicyNames,UMDialPlan,VoiceMailPreviewPartnerAddress,VoiceMailPreviewPartnerAssignedID,VoiceMailPreviewPartnerMaxDeliveryDelay,VoiceMailPreviewPartnerMaxMessageDuration"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AllowMissedCallNotifications,AllowPinlessVoiceMailAccess,AllowSubscriberAccess,AllowTUIAccessToCalendar,AllowTUIAccessToDirectory,AllowTUIAccessToEmail,AllowTUIAccessToPersonalContacts,AllowVoiceMailAnalysis,Confirm,ErrorAction,ErrorVariable,InformCallerOfVoiceMailAnalysis,LogonFailuresBeforePINReset,OutBuffer,OutVariable,ResetPINText,UMEnabledText,VoiceMailText,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPersonalAutoAttendantPermissions"
					}, "AllowCallAnsweringRules"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMSMSMsgWaitingPermissions"
					}, "AllowSMSNotification")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,ExternalHostFqdn,ExternalServiceFqdn,GrammarGenerationSchedule,IPAddressFamily,IPAddressFamilyConfigurable,MaxCallsAllowed,OutBuffer,OutVariable,Status,UMForwardingAddressTemplate,UMPodRedirectTemplate,UMStartupMode,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-UMConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CallRouter,CertificateThumbprint,Confirm,Debug,DiagDtmfDurationInMilisecs,DiagDtmfSequence,DiagInitialSilenceInMilisecs,DiagInterDtmfDiffGapInMilisecs,DiagInterDtmfGapInMilisecs,DomainController,ErrorAction,ErrorVariable,From,ListenPort,MediaSecured,MonitoringContext,OutBuffer,OutVariable,PIN,Phone,RemotePort,ResetPIN,Secured,TUILogon,TUILogonAll,Timeout,UMDialPlan,UMIPGateway,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class User_Options
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,NotificationEmailAddresses,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Clear-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,NotificationEmailAddresses,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Force")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,GetMailboxLog,Identity,Mailbox,NotificationEmailAddresses,OutBuffer,OutVariable,ShowRecoveryPassword,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveSyncDebugLogging,ProtocolSettings,RecalculateHasActiveSyncDevicePartnership"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "DescriptionTimeFormat,DescriptionTimeZone,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,VerifyDefaultFolderNameLanguage,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CopyOnServer,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludePassive,IncludeQuarantineDetails,NoADLookup,OutBuffer,OutVariable,Server,StoreMailboxIdentity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageCategory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeLocales,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync,GetMailboxLog,NotificationEmailAddresses,ShowRecoveryPassword"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AccountPartition,Anr,Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,Preview,ReadFromDomainController,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DownloadOnly,Etoken,MarketplaceAssetID,MarketplaceQueryMarket,MarketplaceServicesUrl,Url"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AllowReadWriteMailbox,FileData,FileStream,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,ExternalIPAddresses,Features,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"InboxRuleCreationRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,ApplyCategory,BodyContainsWords,Confirm,DeleteMessage,ErrorAction,ErrorVariable,ExceptIfBodyContainsWords,ExceptIfFlaggedForAction,ExceptIfFrom,ExceptIfFromAddressContainsWords,ExceptIfFromSubscription,ExceptIfHasAttachment,ExceptIfHasClassification,ExceptIfHeaderContainsWords,ExceptIfMessageTypeMatches,ExceptIfMyNameInCcBox,ExceptIfMyNameInToBox,ExceptIfMyNameInToOrCcBox,ExceptIfMyNameNotInToBox,ExceptIfReceivedAfterDate,ExceptIfReceivedBeforeDate,ExceptIfRecipientAddressContainsWords,ExceptIfSentOnlyToMe,ExceptIfSentTo,ExceptIfSubjectContainsWords,ExceptIfSubjectOrBodyContainsWords,ExceptIfWithImportance,ExceptIfWithSensitivity,ExceptIfWithinSizeRangeMaximum,ExceptIfWithinSizeRangeMinimum,FlaggedForAction,Force,ForwardAsAttachmentTo,ForwardTo,From,FromAddressContainsWords,FromMessageId,FromSubscription,HasAttachment,HasClassification,HeaderContainsWords,Mailbox,MarkAsRead,MarkImportance,MessageTypeMatches,MyNameInCcBox,MyNameInToBox,MyNameInToOrCcBox,MyNameNotInToBox,Name,Organization,OutBuffer,OutVariable,Priority,ReceivedAfterDate,ReceivedBeforeDate,RecipientAddressContainsWords,RedirectTo,SentOnlyToMe,SentTo,StopProcessingRules,SubjectContainsWords,SubjectOrBodyContainsWords,ValidateOnly,WarningAction,WarningVariable,WhatIf,WithImportance,WithSensitivity,WithinSizeRangeMaximum,WithinSizeRangeMinimum")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Body,BodyFormat,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Subject,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,KeyMappings,Mailbox,Name,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "AlwaysDeleteOutlookRulesBlob,Confirm,ErrorAction,ErrorVariable,Force,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSyncDebugLogging"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ShowGalAsDefaultView,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapPermissions"
					}, "ImapForceICalForCalendarRetrievalOption,ImapMessagesRetrievalMimeFormat,ImapSuppressReadReceipt,ImapUseProtocolDefaults"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopPermissions"
					}, "PopForceICalForCalendarRetrievalOption,PopMessagesRetrievalMimeFormat,PopSuppressReadReceipt,PopUseProtocolDefaults")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AddAdditionalResponse,AddNewRequestsTentatively,AddOrganizerToSubject,AdditionalResponse,AllBookInPolicy,AllRequestInPolicy,AllRequestOutOfPolicy,AllowConflicts,AllowRecurringMeetings,AutomateProcessing,BookInPolicy,BookingWindowInDays,Confirm,ConflictPercentageAllowed,Debug,DeleteAttachments,DeleteComments,DeleteNonCalendarItems,DeleteSubject,DomainController,EnableResponseDetails,EnforceSchedulingHorizon,ErrorAction,ErrorVariable,ForwardRequestsToDelegates,IgnoreDefaultScope,MaximumConflictInstances,MaximumDurationInMinutes,OrganizerInfo,OutBuffer,OutVariable,RemoveForwardedMeetingNotifications,RemoveOldMeetingMessages,RemovePrivateProperty,RequestInPolicy,RequestOutOfPolicy,ResourceDelegates,ScheduleOnlyDuringWorkHours,TentativePendingApproval,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "ProcessExternalMeetingMessages")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ClientAccessServers,Confirm,Debug,DomainController,Domains,EdgeTransportServers,ErrorAction,ErrorVariable,ExternalIPAddresses,Features,Name,OnPremisesSmartHost,OutBuffer,OutVariable,ReceivingTransportServers,SendingTransportServers,ServiceInstance,TlsCertificateName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,UserCertificate,UserSMimeCertificate"),
					new RoleParameters(new string[]
					{
						"MailTipsPermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"ResetUserPasswordManagementPermissions"
					}, "Password,ResetPasswordOnNextLogon")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DisplayName,Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AcceptMessagesOnlyFrom,AcceptMessagesOnlyFromDLMembers,AcceptMessagesOnlyFromSendersOrMembers,DeliverToMailboxAndForward,ErrorAction,ErrorVariable,ExternalOofOptions,ForwardingSmtpAddress,GrantSendOnBehalfTo,Languages,MessageCopyForSendOnBehalfEnabled,MessageCopyForSentAsEnabled,OutBuffer,OutVariable,RejectMessagesFrom,RejectMessagesFromDLMembers,RejectMessagesFromSendersOrMembers,RequireSenderAuthenticationEnabled,RoomMailboxPassword,SimpleDisplayName,UserCertificate,UserSMimeCertificate,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MailTipsPermissions"
					}, "MailTip,MailTipTranslations"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ResetUserPasswordManagementPermissions"
					}, "Password"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ForwardingAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AutoReplyState,Confirm,Debug,DomainController,EndTime,ErrorAction,ErrorVariable,ExternalAudience,ExternalMessage,IgnoreDefaultScope,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "InternalMessage")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DefaultReminderTime,DomainController,ErrorAction,ErrorVariable,FirstWeekOfYear,OutBuffer,OutVariable,ReminderSoundEnabled,RemindersEnabled,ShowWeekNumbers,TimeIncrement,Verbose,WarningAction,WarningVariable,WeatherEnabled,WeatherLocations,WeatherUnit,WeekStartDay,WhatIf,WorkingHoursEndTime,WorkingHoursStartTime,WorkingHoursTimeZone"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OrganizationalAffinityPermissions"
					}, "WorkDays")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DetailLevel,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PublishDateRangeFrom,PublishDateRangeTo,PublishEnabled,ResetUrl,SearchableUrlEnabled,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BlockedSendersAndDomains,Confirm,ContactsTrusted,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,IgnoreDefaultScope,OutBuffer,OutVariable,TrustedListsOnly,TrustedSendersAndDomains,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AfterMoveOrDeleteBehavior,AlwaysShowBcc,AlwaysShowFrom,AutoAddSignature,AutoAddSignatureOnMobile,CheckForForgottenAttachments,Confirm,ConversationSortOrder,Debug,DefaultFontColor,DefaultFontFlags,DefaultFontName,DefaultFontSize,DefaultFormat,DomainController,EmailComposeMode,EmptyDeletedItemsOnLogoff,ErrorAction,ErrorVariable,HideDeletedItems,IgnoreDefaultScope,NewItemNotification,OutBuffer,OutVariable,PreviewMarkAsReadBehavior,PreviewMarkAsReadDelaytime,ReadReceiptResponse,ShowConversationAsTree,SignatureHtml,SignatureText,SignatureTextOnMobile,UseDefaultSignatureOnMobile,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "SendAddressDefault")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,DateFormat,Debug,DomainController,ErrorAction,ErrorVariable,Language,LocalizeDefaultFolderName,OutBuffer,OutVariable,TimeFormat,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CheckBeforeSend,Confirm,Debug,DictionaryLanguage,DomainController,ErrorAction,ErrorVariable,IgnoreMixedDigits,IgnoreUppercase,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MSOIdPermissions"
					}, "ReleaseTrack")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "CallerIds,CallersCanInterruptGreeting,CheckAutomaticReplies,Confirm,ErrorAction,ErrorVariable,ExtensionsDialed,Identity,KeyMappings,Mailbox,Name,OutBuffer,OutVariable,Priority,ScheduleStatus,TimeOfDay,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,DefaultPlayOnPhoneNumber,ErrorAction,ErrorVariable,FolderToReadEmailsFrom,Greeting,Identity,OutBuffer,OutVariable,ReadOldestUnreadVoiceMessagesFirst,ReceivedVoiceMailPreviewEnabled,SentVoiceMailPreviewEnabled,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Pin,PinExpired,SendEmail,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,PhoneticDisplayName,SeniorityIndex"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ErrorAction,ErrorVariable,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"OpenDomainProfileUpdatePermissions",
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "DisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions"
					}, "PostOfficeBox,SimpleDisplayName"),
					new RoleParameters(new string[]
					{
						"ProfileUpdatePermissions",
						"PropertiesMasteredOnPremiseRestrictions"
					}, "City,CountryOrRegion,Fax,FirstName,GeoCoordinates,HomePhone,Initials,LastName,MobilePhone,Notes,Office,Pager,Phone,PostalCode,StateOrProvince,StreetAddress,WebPage"),
					new RoleParameters(new string[]
					{
						"RecipientManagementPermissions"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-UserPhoto", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Cancel,Confirm,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,PictureData,PictureStream,Preview,Save,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "AwayVoicemailGreeting,CallAnsweringRuleId,Confirm,DefaultVoicemailGreeting,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,PhoneNumber,UMMailbox,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-UMPhoneSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Write-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Comment,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}

		private class View_Only_Audit_Logs
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "CreatedAfter,CreatedBefore,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAuditBypassAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AdminAuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Cmdlets,Confirm,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,Name,ObjectIds,Organization,OutBuffer,OutVariable,Parameters,StartDate,StatusMailRecipients,UserIds,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxAuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,LogonTypes,Mailboxes,Name,Operations,Organization,OutBuffer,OutVariable,ShowDetails,StartDate,StatusMailRecipients,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-AdminAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Cmdlets,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,Identity,IsSuccess,ObjectIds,OutBuffer,OutVariable,Parameters,ResultSize,StartDate,StartIndex,UserIds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MailboxAuditLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExternalAccess,Identity,LogonTypes,Mailboxes,Operations,Organization,OutBuffer,OutVariable,ResultSize,ShowDetails,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class View_Only_Configuration
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-GlobalMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyVersion,Confirm,Debug,DomainController,Duration,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,PropertyValue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Add-ServerMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ApplyVersion,Confirm,Debug,Duration,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,PropertyValue,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-ExchangePiiMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailboxQuarantine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-ExchangePiiMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-ActiveSyncLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,EndDate,ErrorAction,ErrorVariable,Filename,Force,OutBuffer,OutVariable,OutputPath,OutputPrefix,StartDate,UseGMT,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-AutoDiscoverConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DeleteConfig,DomainController,ErrorAction,ErrorVariable,MultipleExchangeDeployments,OutBuffer,OutVariable,PreferredSourceFqdn,SourceForestCredential,TargetForestCredential,TargetForestDomainController,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-JournalRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-TransportRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Format,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Export-UMCallDataRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ClientStream,Confirm,Date,Debug,DomainController,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,UMDialPlan,UMIPGateway,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADSite", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "AccountPartition,CatchAllRecipient,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AccountPartition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSecondaryPartitions,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceAutoblockThreshold", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceClass", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncOrganizationSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AdSiteLink", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"AddressListsEnabled",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Container,SearchText"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AdminAuditLogConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AgentLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Location,OutBuffer,OutVariable,StartDate,TransportService,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-App", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,OrganizationApp,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Identity,Mailbox")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Organization,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuditLogSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "CreatedAfter,CreatedBefore,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthRedirect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AuthServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AutodiscoverVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityAddressSpace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AvailabilityConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-BposPlacementConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-BposServiceInstanceInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CapacitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Database,DatabaseAvailabilityGroup,Debug,ErrorAction,ErrorVariable,Forest,OutBuffer,OutVariable,Refresh,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClassificationRuleCollection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessArray", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ClientAccessServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeAlternateServiceAccountCredentialStatus,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CmdletExtensionAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Assembly,Debug,DomainController,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConsumerMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,MservDataOnly,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ContentFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ContentFilterPhrase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Phrase,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DCPerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExecutionUnit,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ActiveInRuntime,ExecutionUnit,MaxCompletionTime,MaxQueuedTime,MinCompletionTime,MinQueuedTime,TaskId,TaskState,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DarTaskAggregate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ExecutionUnit,TaskType,TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DataClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "ClassificationRuleCollectionIdentity,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DataClassificationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DatabaseAvailabilityGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DatabaseAvailabilityGroupConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DatabaseAvailabilityGroupNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeliveryAgentConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DetailsTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConditionalAccessPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConditionalAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DevicePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceTenantPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DeviceTenantRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpPolicyTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpSensitiveInformationType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EcpVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSyncEhfConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSyncMservConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EdgeSyncServiceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EmailAddressPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeMailboxSettingOnlyPolicy,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-EventLogLevel", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeAssistanceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,DomainName,ErrorAction,ErrorVariable,Identity,Instance,OutBuffer,OutVariable,Server,Thumbprint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,ShowDuplicates,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigName,Database,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Force,GenericScopeName,GenericScopeValue,GenericScopes,Identity,Organization,OutBuffer,OutVariable,Process,Server,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeUpgradeBucket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,EnableMailboxCounting,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FailedContentIndexDocuments", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Archive,Confirm,Debug,DomainController,EndDate,ErrorAction,ErrorCode,ErrorVariable,FailureMode,Identity,MailboxDatabase,OutBuffer,OutVariable,ResultSize,Server,StartDate,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FailedMSOSyncObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederatedDomainProof", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Thumbprint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederatedOrganizationIdentifier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeExtendedDomainInfo,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederationInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "BypassAdditionalDomainValidation,Debug,DomainName,ErrorAction,ErrorVariable,Force,OutBuffer,OutVariable,TrustedHostnames,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FederationTrust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ForeignConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FrontendTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IntraOrgConnectorProtocolLoggingLevel,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalAddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "DefaultOnly,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,UseOfflineGLS,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalLocatorServiceTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,ShowDomainNames,UseOfflineGLS,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GlobalMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GroupMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AccountPartition,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeMailboxUrls,IncludeMemberSyncStatus,IncludeMembers,IncludePermissionsVersion,Organization,OutBuffer,OutVariable,ResultSize,Server,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HealthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GroupSize,HaImpactingOnly,HealthSet,Identity,MinimumOnlinePercent,OutBuffer,OutVariable,RollupGroup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HoldCompliancePolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HoldComplianceRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,Identity,Organization,Policy,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedConnectionFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedContentFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedContentFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedEncryptionVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HostedOutboundSpamFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"HostedSpamFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridMailflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridMailflowDatacenterIPs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,ResultSize,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPAllowListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,IPAddress,Identity,OutBuffer,OutVariable,ResultSize,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IPBlockListProvidersConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IRMConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ImapSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InterceptorRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Organization,OrganizationGuid,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-IntraOrganizationConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-JournalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"JournalingRulesPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSERVEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Address,Debug,DomainName,ErrorAction,ErrorVariable,ExternalDirectoryOrganizationId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSOFullSyncObjectRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServiceInstanceId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSOSyncData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cookie,Debug,ErrorAction,ErrorVariable,MergeIncrementalSyncCookie,MergePageToken,MergePageTokenContext,MergeTenantFullSyncPageToken,ObjectFullSyncPageToken,ObjectIds,Organization,OutBuffer,OutVariable,ServiceInstance,SyncOptions,TenantFullSyncPageToken,TenantFullSyncPageTokenContext,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MSOTenantSyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,IncludeNotPromotedProperties,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAssociationReplicationState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAuditBypassAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,DumpsterStatistics,ErrorAction,ErrorVariable,Identity,IncludePreExchange2013,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabaseCopyStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Active,ConnectionStatus,Debug,DomainController,ErrorAction,ErrorVariable,ExtendedErrorInfo,Identity,Local,OutBuffer,OutVariable,Server,UseServerCache,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxDatabaseRedundancy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DatabaseAvailabilityGroup,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerToContact,TimeoutInSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRelocationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions"
					}, "InPlaceHoldIdentity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"LitigationHoldPermissions",
						"SearchMessagePermissions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,ShowDeletionInProgressSearches,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxServerRedundancy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DatabaseAvailabilityGroup,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerToContact,TimeoutInSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxTransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,IncludeInvalidPolicies,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterRecoveryItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilterRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MalwareFilteringPolicyCustomizationEnabled",
						"PilotingOrganization_Restrictions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MalwareFilteringServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,GlobalDirectoryService,Location,OfferId,OutBuffer,OutVariable,ProgramId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cmdlet,CmdletParameters,Debug,DomainController,ErrorAction,ErrorVariable,GetChildren,Identity,Organization,OutBuffer,OutVariable,Recurse,RoleType,Script,ScriptParameters,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssignmentMethod,ConfigWriteScope,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,Enabled,ErrorAction,ErrorVariable,Exclusive,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,GetEffectiveUsers,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientWriteScope,Role,RoleAssignee,RoleAssigneeType,Verbose,WarningAction,WarningVariable,WritableDatabase,WritableRecipient,WritableServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PSSnapinName,Parameters,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Exclusive,Identity,Organization,Orphan,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MapiVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Message", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BookmarkIndex,BookmarkObject,Debug,ErrorAction,ErrorVariable,Filter,Identity,IncludeBookmark,IncludeComponentLatencyInfo,IncludeRecipientInfo,OutBuffer,OutVariable,Queue,ResultSize,ReturnPageInfo,SearchForward,Server,SortOrder,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageCategory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageClassification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeLocales,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdSite,DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,SLATargetTimespan,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AdSite,DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,Endpoint,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitErrorsTo,Organization,OutBuffer,OutVariable,Partition,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchStatus,Confirm,ConnectionSettings,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Partition,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxGuid,Organization,OutBuffer,OutVariable,Partition,ResultSize,Status,StatusSummary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUserStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitSkippedItemsTo,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MonitoringItemHelp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MonitoringItemIdentity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MsoDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cookie,Debug,DeltaSync,ErrorAction,ErrorVariable,EstimateBacklog,ExternalDirectoryOrganizationId,MaxNumberOfBatches,OutBuffer,OutVariable,PageToken,PipelineVariable,SampleCountForStatistics,ServiceInstanceId,TenantSync,UseLastCommittedCookie,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MsoFullSyncOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MsoRawObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExternalObjectId,Identity,IncludeBackLinks,IncludeForwardLinks,LinksResultSize,OutBuffer,OutVariable,PopulateRawObject,ServiceInstanceId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-NetworkConnectionInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Notification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ProcessType,ResultSize,StartDate,Summary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OMEConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OabVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OfflineAddressBook", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions",
						"OfflineAddressBookEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OnPremisesOrganization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,UsnForReconciliationSearch,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutboundConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"ServiceConnectors"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookAnywhere", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookProtectionRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutlookProvider", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OwaMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"OWAPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OwaVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PartnerApplication", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PerimeterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PhysicalAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,Database,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,ExchangeServer,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PolicyTipConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Locale,Organization,Original,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PopSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PowerShellVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PswsVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderDatabase", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,Platform,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExpirationTimeInHours,Mailbox,OutBuffer,ResultSize,ShowAll,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Queue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BookmarkIndex,BookmarkObject,Debug,ErrorAction,ErrorVariable,Exclude,Filter,Identity,Include,IncludeBookmark,OutBuffer,OutVariable,ResultSize,ReturnPageInfo,SearchForward,Server,SortOrder,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QueueDigest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Dag,Debug,DetailsLevel,ErrorAction,ErrorVariable,Filter,Forest,GroupBy,IncludeE14Servers,Mtrt,OutBuffer,OutVariable,ResultSize,Server,Site,Timeout,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,TrustedPublishingDomain,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RMSTrustedPublishingDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Default,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ReceiveConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientEnforcementProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RecipientTemplateProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteAccountPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemoteDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResubmitRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RetentionPolicyTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,IncludeSystemTags,Mailbox,OptionalInMailbox,Organization,OutBuffer,OutVariable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleAssignmentPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,ShowPartnerLinked,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RpcClientAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SendConnector", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SenderFilterConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SenderIdConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SenderReputationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerComponentState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Component,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,HaImpactingOnly,HealthSet,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "DailyStatistics,Debug,DomainController,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReportingDatabase,ReportingPeriod,ReportingServer,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,MaintenanceWindowDays,OutBuffer,OutVariable,ReportingDatabase,ReportingServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SharingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "AccountPartition,Anr,BypassOwnerCheck,Debug,DeletedSiteMailbox,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "BypassOwnerCheck,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,SendMeEmail,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SiteMailboxProvisioningPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SmimeConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-StoreUsageStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CopyOnServer,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludePassive,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SupervisionPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions"
					}, "Debug,DisplayDetails,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SupervisionPermissions",
						"ViewSupervisionListPermissions"
					}, "Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDaemonArbitrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncServiceInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Original,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SystemProbeEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TenantRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,HasPermanentError,Identity,Lockdown,OutBuffer,OutVariable,RelocationLastError,RelocationStateRequested,RelocationStatusDetailsSource,SourceStateOnly,StaleLockdown,Suspended,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TextMessagingAccount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostics,DomainController,ErrorAction,ErrorVariable,Explicit,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,ThrottlingPolicy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ToolInformation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportPipeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportProcessingQuotaConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportProcessingQuotaDigest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions"
					}, "DlpPolicy"),
					new RoleParameters(new string[]
					{
						"PilotingOrganization_Restrictions",
						"RuleMigration_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ResultSize,State,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRuleAction", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportRulePredicate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"TransportRulesPermissions"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-TransportService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Trust", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMActiveCalls", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DialPlan,DomainController,ErrorAction,ErrorVariable,IPGateway,InstanceServer,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMAutoAttendant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMAutoAttendantPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallRouterSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GroupBy,Organization,OutBuffer,OutVariable,UMDialPlan,UMIPGateway,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMDialPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMHuntGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMIPGateway", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "ErrorAction,ErrorVariable,Identity,IncludeSimulator,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,UMDialPlan,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UserPrincipalNamesSuffix", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnit,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-WebServicesVirtualDirectory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "ADPropertiesOnly,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,ShowMailboxVirtualDirectories,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-X400AuthoritativeDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Install-UnifiedCompliancePrerequisite", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "LoadOnly,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Invoke-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Invoke-MonitoringProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Account,Debug,Endpoint,ErrorAction,ErrorVariable,Identity,ItemTargetExtension,OutBuffer,OutVariable,Password,PropertyOverride,SecondaryAccount,SecondaryEndpoint,SecondaryPassword,Server,TimeOutSeconds,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-EncryptedSystemProbeGuid", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Guid,OutBuffer,OutVariable,TimeStamp,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CheckInitialProvisioningSetting,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,InternalFlags,Mailbox,Name,OutBuffer,OutVariable,Priority,RehomeRequest,SkipMoving,Suspend,SuspendComment,TargetContainer,TargetDatabase,Verbose,WarningAction,WarningVariable,WhatIf,WorkloadType")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDehydratedFlag")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Enabled,Server,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuditConfigurationPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-GlobalMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-OrganizationalContacts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Server,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ServerMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,ItemType,OutBuffer,OutVariable,PropertyName,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Repair-ContactProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,FixConversationIndexTracking,FixDisplayName,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Request-SyncDaemonLease", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceInstance,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Reset-ContactLinking", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,IncludeUserApproved,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Resume-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Retry-Queue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Resubmit,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-MapiSubmitSystemProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "InternetMessageIdOfTheMessageToDeleteFromOutbox,RecipientEmailAddress,SenderEmailAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Send-SystemProbeEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Attachment,Body,CC,Debug,ErrorAction,ErrorVariable,From,Html,OutBuffer,OutVariable,Port,ProbeGuid,SmtpPassword,SmtpServer,SmtpUser,Subject,TestContext,TimeStamp,To,UseSsl,UseXheader,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuditConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorVariable,Organization,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-AuditConfigurationRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ErrorVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-BposPlacementConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Configuration,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-BposServiceInstanceInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "BackSyncUrl,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SupportsAuthorityTransfer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AcceptLargeDataLoss,BadItemLimit,BatchName,CompletedRequestAgeLimit,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Priority,RehomeRequest,SkipMoving,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-OrganizationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SearchDocumentFormat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Enabled,Server,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ServerMonitor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Repairing,Server,TargetResource,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SmimeConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,Identity,OWAAllowUserChoiceOfSigningCertificate,OWAAlwaysEncrypt,OWAAlwaysSign,OWABCCEncryptedEmailForking,OWACRLConnectionTimeout,OWACRLRetrievalTimeout,OWACheckCRLOnSend,OWAClearSign,OWACopyRecipientHeaders,OWADLExpansionTimeout,OWADisableCRLCheck,OWAEncryptTemporaryBuffers,OWAEncryptionAlgorithms,OWAForceSMIMEClientUpgrade,OWAIncludeCertificateChainAndRootCertificate,OWAIncludeCertificateChainWithoutRootCertificate,OWAIncludeSMIMECapabilitiesInMessage,OWAOnlyUseSmartCard,OWASenderCertificateAttributesToDisplay,OWASignedEmailCertificateInclusion,OWASigningAlgorithms,OWATripleWrapSignedEncryptedMail,OWAUseKeyIdentifier,OWAUseSecondaryProxiesWhenFindingCertificates,SMIMECertificateIssuingCA,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IgnoreDefaultScope")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Suspend-MailboxRelocationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SuspendComment,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-ClientAccessRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthenticationType,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Protocol,RemoteAddress,RemotePort,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-DarTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "TenantId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-EdgeSyncEhf", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,ConnectorId,Debug,DomainController,ErrorAction,ErrorVariable,MonitoringContext,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-FederationTrustCertificate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-LinkedInConnect", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AuthorizationCallbackUrl,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-OrganizationRelationship", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,UserIdentity,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Update-SiteMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"TeamMailboxPermissions"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-ExchangeDiagnosticInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Argument,AsJob,Component,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Process,Server,Unlimited,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.Powershell.Support", "Get-UnifiedGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Add-DelistIp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IPToDelist,ListName,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Convert-CountryLookupData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataId,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SourceFileName,TargetFileName,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Delist-Ip", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuditComments,Debug,ErrorAction,ErrorVariable,IpAddress,ListName,OutBuffer,OutVariable,Permanent,PrimaryOnly,StreamingOpticsExePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Find-RuleData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PrintXml,RuleStatus,ScopeTypes,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Find-SpamDataBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataID,DataTypeID,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-DnsBlocklistInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BlocklistServer,Debug,ErrorAction,ErrorVariable,IpAddress,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-FpClusteringInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BucketRange,BucketSizeAbove,Machine,Port,Target,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-GenericReputationData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataPointType,Debug,EntityKey,EntityType,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-IpReputation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterShortName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PrintXml,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-IpStat", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AppName,Debug,ErrorAction,ErrorVariable,IpAddress,OutBuffer,OutVariable,StreamingOpticsExePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-KEStoreClusters", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AsTask,ClientAggregate,Debug,ErrorAction,ErrorVariable,Fingerprint,Keyword,OutBuffer,OutVariable,Regex,ServiceUrl,Target,TargetName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-KEStoreMails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AsTask,Coefficient,Debug,ErrorAction,ErrorVariable,FingerprintData,MailIds,MetadataOnly,OutBuffer,OutVariable,ServiceUrl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ListedIP", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IpAddress,OutBuffer,OutVariable,PrimaryOnly,StreamingOpticsExePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ListedIPWrapper", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IPAddress,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-OutboundIps", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterShortName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PrintXml,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-OutboundSingleSenderData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SenderAddress,TenantId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-OutboundSpamExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ExclusionStringToLookup,OutBuffer,OutVariable,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ReputationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SenderAddress,Session,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-ReputationOverrideInternal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Account,Debug,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Session,StartTime,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-RuleData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ErrorAction,ErrorVariable,GroupID,OutBuffer,OutVariable,PrintXml,RuleID,RulePackage,Session,Verbose,WarningAction,WarningVariable,XmlFile,XmlPackage")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-SpamDataBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataID,DataTypeID,MajorVersion,MinorVersion,Session,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-SpamDbAppConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-StreamingOpticsTopology", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Config,Debug,DomainName,ErrorAction,ErrorVariable,MachineName,OutBuffer,OutVariable,PrintXml,ProcessName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-SyncWatermark", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-URIData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ErrorAction,ErrorVariable,GroupID,OutBuffer,OutVariable,Session,URIToLookup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Get-URIExclusionData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "OutBuffer,OutVariable,Session,URIToLookup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "New-ReputationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,SenderAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "New-ReputationOverrideInternal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Account,Comment,Type")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Remove-ReputationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,SenderAddress")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Remove-ReputationOverrideInternal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Account,Comment,Type")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Search-KEStoreMetadata", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filters,OutBuffer,OutVariable,ServiceUrl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Test-DbAccess", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseAccessType,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SessionType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Test-NetworkServicePermissionToFileShare", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Access,Debug,ErrorAction,ErrorVariable,FileSharePath,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.AntiSpam.PowerShell", "Triage-KEStoreMails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,MailIds,OutBuffer,OutVariable,ServiceUrl,TriageCategory,TriageVerdict,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Add-ReportingCFRJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ForceRerun,OutBuffer,OutVariable,SkipAggregation,TargetHour,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Add-ReportingCosmosDownloadRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CosmosRelativePath,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,OutputRelativePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Add-ReportingDailyJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,JobName,OutBuffer,OutVariable,TargetDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Add-ReportingPIIHashingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,InputRelativePath,OutBuffer,OutVariable,OutputRelativePath,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Add-ReportingUnifiedReportJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ForceRerun,OutBuffer,OutVariable,SkipAggregation,TargetHour,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Cancel-AsyncQueueRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Cancel-OnDemandQueryRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RequestId,TenantId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Clone-AsyncQueueRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CloneDependentRequestChain,Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Disable-BackgroundJobSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RoleId,ScheduleId,ScheduleItem,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Enable-BackgroundJobSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RoleId,ScheduleId,ScheduleItem,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-AsyncQueueLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,LogType,OrganizationalUnitRoot,OutBuffer,OutVariable,Owner,RequestId,RequestStepId,StartTime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-AsyncQueueRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CreatedAfter,CreatedBefore,Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Owner,Priority,RequestId,ResultSize,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-BackgroundJobDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BackgroundJobId,Debug,ErrorAction,ErrorVariable,FileName,OutBuffer,OutVariable,RoleId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-BackgroundJobSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,BackgroundJobId,DataCenter,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Region,RoleId,ScheduleId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-BackgroundJobTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BackgroundJobManagerId,DataCenter,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Region,RoleId,ScheduleId,ScheduleType,TaskCompletionStatus,TaskExecutionStatus,TaskId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-CachePrimingInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-DatacenterSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-FfoAssignedPlans", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-FfoSubscriptions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-FfoTenantConfigurationCacheEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,IncludeCalculated,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-FfoTenantProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-GlsDomainDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallerId,CertificateSubject,Debug,DomainKey,DomainName,EndPointUri,ErrorAction,ErrorVariable,FindHostsByFilter,HostFilter,HostNames,MaxBufferPoolSize,MaxReceivedMessageSize,Namespaces,OutBuffer,OutVariable,ReceiveTimeoutSecs,SendTimeoutSecs,TenantId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-GlsDomainProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallerId,CertificateSubject,Debug,DomainName,DomainPropertyNames,EndPointUri,ErrorAction,ErrorVariable,FindHostsByFilter,HostFilter,HostNames,MaxBufferPoolSize,MaxReceivedMessageSize,OutBuffer,OutVariable,ReadFlag,ReceiveTimeoutSecs,SendTimeoutSecs,TenantPropertyNames,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-GlsMachineStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CertificateSubject,Debug,EndPointUri,ErrorAction,ErrorVariable,FindHostsByFilter,HostFilter,HostNames,MaxBufferPoolSize,MaxReceivedMessageSize,OutBuffer,OutVariable,ReceiveTimeoutSecs,SendTimeoutSecs,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-GlsTenantDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallerId,CertificateSubject,Debug,EndPointUri,ErrorAction,ErrorVariable,FindHostsByFilter,HostFilter,HostNames,MaxBufferPoolSize,MaxReceivedMessageSize,Namespaces,OutBuffer,OutVariable,ReceiveTimeoutSecs,SendTimeoutSecs,TenantId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-GlsTenantProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallerId,CertificateSubject,Debug,EndPointUri,ErrorAction,ErrorVariable,FindHostsByFilter,HostFilter,HostNames,MaxBufferPoolSize,MaxReceivedMessageSize,OutBuffer,OutVariable,ReadFlag,ReceiveTimeoutSecs,SendTimeoutSecs,TenantId,TenantPropertyNames,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-HostedFilteringDataCenter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterId,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-HostedFilteringRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RegionId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-HostedFilteringRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RoleId,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-O365DnsResourceRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AuthenticationCertificateSubject,DNSManagementServiceEndpointUri,Debug,DomainName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-OnDemandQueryRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RequestId,TenantId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-PartnerRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallerId,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-ProbeOrganizationInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FeatureTag,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-ProvisioningReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CreatedAfter,CreatedBefore,Debug,ErrorAction,ErrorVariable,MinFetchCount,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SymphonyBlackout", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Group,Groups,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SymphonyCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Group,Groups,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SymphonyConstraint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Names,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SymphonyGroupRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Names,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SymphonyTenantReadiness", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TenantID,TenantIDs,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SymphonyWorkItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,GroupName,OrganizationalUnitRoot,OutBuffer,OutVariable,ResultSize,Status,TenantTier,Type,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SyncCookie", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceInstance,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-SyncPropertyRefresh", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceInstance,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Get-TableTraceRecords", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-AntiSpamJobRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigName,Debug,ErrorAction,ErrorVariable,JobName,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-DomainDeprovisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestFlags,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-DomainProvisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestFlags,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-OnDemandQueryRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallerType,Debug,ErrorAction,ErrorVariable,NotificationEmail,OutBuffer,OutVariable,QueryDefinition,QueryTitle,QueryType,TenantId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-TenantDeprovisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestFlags,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-TenantProvisioningRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ForceMigration,MigrateToInstance,MigrateToRegion,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestFlags,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "New-UnsyncedObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ObjectId,ObjectType,OutBuffer,OutVariable,TenantId,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Pause-AsyncQueueRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Repair-DomainProvisioning", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainName,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Reset-BackgroundJobTask", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,RoleId,TaskId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Resume-AsyncQueueRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Retry-AsyncQueueRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AtUtc,Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,RequestId,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Run-FfoDomainProvisioning", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Deprovision,DomainName,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Run-FfoTenantProvisioning", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Deprovision,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-BackgroundJobDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BackgroundJobId,Debug,Description,ErrorAction,ErrorVariable,FileName,JobDefinition,MaxFailoverCount,MaxLocalRetryCount,OutBuffer,OutVariable,Path,SchedulingStrategy,SingleInstancePerMachine,Timeout,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-BackgroundJobSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Datacenter,Debug,ErrorAction,ErrorVariable,InstanceCount,MaxFailoverCount,MaxLocalRetryCount,OutBuffer,OutVariable,Region,RoleId,ScheduleId,SchedulingInterval,SingleInstancePerMachine,StartTime,TargetMachine,Timeout,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-SymphonyBlackout", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Reason,StartDate,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-SymphonyCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartDate,UpgradeUnits,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-SymphonyConstraint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Debug,ErrorAction,ErrorVariable,FixByDate,IsBlocking,Name,OutBuffer,OutVariable,Owner,Status,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-SymphonyGroupRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Group,OutBuffer,OutVariable,Region,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-SymphonyWorkItem", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Status,Verbose,Version,WarningAction,WarningVariable,WorkItemID")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Set-TenantNotReadyWithConstraint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilePath,OutBuffer,OutVariable,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Sync-FfoDualWriteData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataType,Debug,ErrorAction,ErrorVariable,OrganizationalUnitRoot,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Test-BloomFilterFile", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilePath,Keys,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Forefront.Management.PowerShell", "Test-ConnectorLookup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildCache,CertificateFqdns,Debug,ErrorAction,ErrorVariable,IncludeDisabled,IpAddresses,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class View_Only_Recipients
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-ExchangePiiMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Disable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-ExchangePiiMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Enable-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Confirm,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AcceptedDomain", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AcceptedDomains"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,Monitoring,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,GetMailboxLog,Identity,Mailbox,NotificationEmailAddresses,OutBuffer,OutVariable,ShowRecoveryPassword,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ActiveSyncMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressBookPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Organization,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-AddressList", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"AddressListsEnabled",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"AddressBookPolicyPermissions",
						"EOPPremiumRestrictions"
					}, "Container,SearchText"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveSyncDebugLogging,ProtocolSettings,RecalculateHasActiveSyncDevicePartnership"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SendLogsTo,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapPermissions"
					}, "GetImapProtocolLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopPermissions"
					}, "GetPopProtocolLog")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CASMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarDiagnosticAnalysis", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CalendarLogs,Credential,Debug,DetailLevel,DomainController,ErrorAction,ErrorVariable,GlobalObjectId,LogLocation,OutBuffer,OutVariable,OutputAs,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"SMSPermissions"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CalendarProcessing", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectionByClientTypeDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ConnectionByClientTypeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Contact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsAVConferenceTimeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsActiveUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsClientDeviceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsConferenceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsP2PAVTimeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-CsP2PSessionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DistributionGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Actor,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DlpDetectionsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,DlpPolicy,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Source,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DomainController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainName,ErrorAction,ErrorVariable,Forest,GlobalCatalog,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-DynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,ManagedBy,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivityByDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivityByUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExternalActivitySummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FfoMigrationReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Group", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,RecipientTypeDetails,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-GroupActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,ErrorAction,ErrorVariable,JobId,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HotmailSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HybridConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ImapSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ImapSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-InboxRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IncludeHidden,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "DescriptionTimeFormat,DescriptionTimeZone,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LicenseVsUsageSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LinkedUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-LogonStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Database,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Server,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailDlpPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"DataLossPreventionEnabled",
						"EXOStandardRestrictions",
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailMalwareReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MalwareName,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailSpamReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailDetailTransportRuleReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailFilterListReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,ProbeTag,SelectionTarget,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailPublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,Direction,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Action,AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Category,Debug,DlpPolicy,Domain,EndDate,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailTrafficTopReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AggregateBy,Debug,Direction,Domain,EndDate,ErrorAction,ErrorVariable,EventType,Expression,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,StartDate,SummarizeBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedMailUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Mailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,InactiveMailboxOnly,IncludeInactiveMailbox,IncludeSoftDeletedMailbox,MailboxPlan,Monitoring,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,RemoteArchive,ResultSize,Server,SoftDeletedMailbox,SortBy,Verbose,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxAutoReplyConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxCalendarFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxExportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Mailbox,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxExportRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolderPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxFolderStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive,AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,FolderScope,Identity,IncludeAnalysis,IncludeOldestAndNewestItems,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxImportRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Mailbox,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxImportRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxJunkEmailConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxMessageConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Credential,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UserMailboxAccessPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Owner,ReadFromDomainController,ResultSize,User,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,AllMailboxPlanReleases,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRegionalConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,VerifyDefaultFolderNameLanguage,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRestoreRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,SourceDatabase,Status,Suspend,TargetMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxRestoreRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxSpellingConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ArchivePermissions",
						"EOPPremiumRestrictions"
					}, "Archive,AuditLog"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "CopyOnServer,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeMoveHistory,IncludeMoveReport,IncludePassive,IncludeQuarantineDetails,NoADLookup,OutBuffer,OutVariable,Server,StoreMailboxIdentity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxUsageDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MailboxUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MergeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Mailbox,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,SourceMailbox,Status,Suspend,TargetMailbox,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MergeRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Expression,FromIP,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Status,ToIP,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTraceDetail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Action,Debug,EndDate,ErrorAction,ErrorVariable,Event,Expression,MessageId,MessageTraceId,Organization,OutBuffer,OutVariable,Page,PageSize,ProbeTag,RecipientAddress,SenderAddress,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,End,ErrorAction,ErrorVariable,EventId,InternalMessageId,MessageId,MessageSubject,OutBuffer,OutVariable,Recipients,Reference,ResultSize,Sender,Server,Start,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,Debug,DetailLevel,DoNotResolve,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecipientPathFilter,Recipients,ReportTemplate,ResultSize,Status,TraceLevel,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationBatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,Endpoint,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitErrorsTo,Organization,OutBuffer,OutVariable,Partition,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationEndpoint", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchStatus,Confirm,ConnectionSettings,Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Partition,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "BatchId,Debug,DomainController,ErrorAction,ErrorVariable,Identity,MailboxGuid,Organization,OutBuffer,OutVariable,Partition,ResultSize,Status,StatusSummary,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MigrationUserStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"ExchangeMigrationPermissions",
						"HotmailMigrationPermissions",
						"ImapMigrationPermissions"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,LimitSkippedItemsTo,Organization,OutBuffer,OutVariable,Partition,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Filter,Identity,Mailbox,Monitoring,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Organization,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceDashboardSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceDetailsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,Page,PageSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceMailboxPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncPermissions",
						"EOPPremiumRestrictions"
					}, "ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MobileDeviceStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions"
					}, "ActiveSync,GetMailboxLog,NotificationEmailAddresses,ShowRecoveryPassword"),
					new RoleParameters(new string[]
					{
						"ActiveSyncDeviceDataAccessPermissions",
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MOWADeviceDataAccessPermissions"
					}, "OWAforDevices")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,BatchName,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Flags,HighPriority,Identity,IncludeSoftDeletedObjects,MoveStatus,Offline,Organization,OrganizationalUnit,OutBuffer,OutVariable,Protect,RemoteHostName,ResultSize,SortBy,SourceDatabase,Suspend,SuspendWhenReadyToComplete,TargetDatabase,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MoveRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,MailboxGuid,MoveRequestQueue,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-MxRecordReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,ProbeTag,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientBrowserDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Browser,BrowserVersion,Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientBrowserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Browser,Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientOSDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OperatingSystem,OperatingSystemVersion,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable,WindowsLiveID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-O365ClientOSReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OS,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OrganizationalUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Organization")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-OutboundConnectorReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,Domain,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,ProbeTag,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PartnerClientExpiringSubscriptionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PartnerCustomerUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PopSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GetChildren,Identity,Mailbox,Organization,OutBuffer,OutVariable,Recurse,ResidentFolders,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderClientPermission", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,User,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderItemStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxDiagnostics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeDumpsterInfo,IncludeHierarchyInfo,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMailboxMigrationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMigrationRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMigrationRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMoveRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "AccountPartition,BatchName,Debug,DomainController,ErrorAction,ErrorVariable,HighPriority,Identity,Name,Organization,OutBuffer,OutVariable,RequestQueue,ResultSize,Status,Suspend,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderMoveRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PublicFolderStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QuarantineMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Confirm,Debug,Direction,Domain,DomainController,EndExpiresDate,EndReceivedDate,ErrorAction,ErrorVariable,Identity,MessageId,Organization,OutBuffer,OutVariable,Page,PageSize,RecipientAddress,Reported,SenderAddress,StartExpiresDate,StartReceivedDate,Subject,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-QuarantineMessageHeader", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"PilotingOrganization_Restrictions",
						"QuarantineEnabled"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Recipient", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,AuthenticationType,BookmarkDisplayName,Capabilities,Credential,Database,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,IncludeBookmarkObject,Organization,OrganizationalUnit,OutBuffer,OutVariable,Properties,PropertySet,ReadFromDomainController,RecipientPreviewFilter,RecipientType,RecipientTypeDetails,ResultSize,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RemovedMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ResourceConfig", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOActiveUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOOneDriveForBusinessFileActivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOOneDriveForBusinessUserStatisticsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOSkyDriveProDeployedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOSkyDriveProStorageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOTeamSiteDeployedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOTeamSiteStorageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SPOTenantStorageMetricReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ReportType,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardClientDeviceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Category,Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardClientOSReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Category,Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardClientOutlookReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Category,Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ScorecardMetricsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SecurityPrincipal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IncludeDomainLocalFrom,Organization,OrganizationalUnit,OutBuffer,OutVariable,ResultSize,RoleGroupAssignable,Types,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServiceDeliveryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,Expression,Organization,OutBuffer,OutVariable,ProbeTag,Recipient,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-StaleMailboxDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-StaleMailboxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Organization,OutBuffer,OutVariable,ResultSize,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-Subscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "AggregationType,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,Mailbox,OutBuffer,OutVariable,ResultSize,SubscriptionType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncDynamicDistributionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "IncludeSoftDeletedObjects")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,Mailbox,Organization,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncRequestStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"HotmailSyncPermissions",
						"ImapSyncPermissions",
						"PopSyncPermissions"
					}, "Diagnostic,DiagnosticArgument,DomainController,ErrorAction,ErrorVariable,Identity,IncludeReport,OutBuffer,OutVariable,RequestGuid,RequestQueue,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SoftDeletedUser,SortBy,UsnForReconciliationSearch,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallAnsweringRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "ErrorAction,ErrorVariable,Identity,Mailbox,OutBuffer,OutVariable,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMCallDataRecord", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPBXPermissions"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Mailbox,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailbox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Credential,Debug,DomainController,IgnoreDefaultScope,Organization,OrganizationalUnit,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Anr,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPIN", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,IgnoreDefaultScope,Organization,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Identity,IgnoreErrors,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-UMMailboxPlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,Organization,OrganizationalUnit,ReadFromDomainController,Verbose"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"UMPermissions"
					}, "Credential,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,OutBuffer,OutVariable,ResultSize,SortBy,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-User", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"PublicFoldersEnabled"
					}, "PublicFolder"),
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Anr,Arbitration,AuditLog,ConsumerNetID,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,RecipientTypeDetails,ResultSize,SoftDeletedUser,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Search-MessageTrackingReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"MessageTrackingPermissions"
					}, "BypassDelegateChecking,Confirm,Debug,DoNotResolve,DomainController,ErrorAction,ErrorVariable,Identity,MessageEntryId,MessageId,OutBuffer,OutVariable,Recipients,ResultSize,Sender,Subject,TraceLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ADServerSettings", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "ConfigurationDomainController,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PreferredGlobalCatalog,PreferredServer,RecipientViewRoot,RunspaceServerSettings,SetPreferredDomainControllers,Verbose,ViewEntireForest,WarningAction,WarningVariable,WhatIf,WriteOriginatingChangeTimestamp,WriteShadowProperties")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-Organization", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Start-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "DLPPolicy,Debug,DeliveryStatus,Direction,EndDate,ErrorAction,ErrorVariable,Locale,MessageID,NotifyAddress,Organization,OriginalClientIP,OutBuffer,OutVariable,RecipientAddress,ReportTitle,ReportType,SenderAddress,StartDate,TransportRule,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Stop-HistoricalSearch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"FFOMigrationInProgress_Restrictions",
						"MessageTrace",
						"PilotingOrganization_Restrictions"
					}, "Debug,ErrorAction,ErrorVariable,JobId,Organization,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Test-MAPIConnectivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "EnableSoftDeletedRecipientLogon")
				}, "c")
			};
		}

		private class ViewAdminDebugScripts
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("", "Check-ProvisioningHealth.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "OutputFile,Extended")
				}, "s"),
				new RoleCmdlet("", "CollectDiskAlerts.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Days,Site")
				}, "s"),
				new RoleCmdlet("", "FwdSyncLogSearch.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "MinLogDate,MaxLogDate,AuditLog,ReceiveLog,PublishLog,Pattern,Verbose")
				}, "s"),
				new RoleCmdlet("", "Get-MSOSyncServiceInstance.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "OutputFile")
				}, "s"),
				new RoleCmdlet("", "Get-MonitoringTenantStatus.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Forest")
				}, "s"),
				new RoleCmdlet("", "Get-StxStatusFromAllForests.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CheckForest,Delay,SyncType")
				}, "s"),
				new RoleCmdlet("", "TestRpsCertificates.ps1", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "LogFile,CertSubject,RpsUrlTemplate")
				}, "s")
			};
		}

		private class ViewOnlyCentralAdminManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Datacenter.Common", "Import-ScopeData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DbName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeLevel,ServerName,TableName,Verbose,WarningAction,WarningVariable,XmlFileDoc,XmlFilePath")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Datamart,Identity,ReadPublisher,ResultSize")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,ReadPublisher,ResultSize,UploaderLog")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,Recurrence,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,ReadPublisher,ResultSize,SchedulerJob")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,ReadPublisher,ResultSize,UploaderLog")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ActiveSyncDeviceDistributionByVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DistributionDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxLogonFailureTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxLogonTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxUniqueLogonTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTrendSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-AutoReseed", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Choice,DAGName,DCName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-AvailabilitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CaOperationsServerHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CaOServerName,CreateTime,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CentralAdminServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringAggregatedResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringErrorDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,RecordId,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CosmosExceptionDistribution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DailyAlerts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistribution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistributionByUserAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DistributionDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistributionTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,InitialDate,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DiscoverySearchActivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PastDays,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-EscalationAlertsMonthlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,MonthToShowFrom,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-EscalationAlertsMonthlyReportByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,MonthToShow,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionDistributionByDeviceType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionDistributionWithSCStatusByDeviceType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionMessageAll", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,ExceptionName,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExecutionTimeByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Thredshold,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ImapUserCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MailboxDatabaseUsage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,SQLCredential,ServerName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmActivityAggForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmActivityPctForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmMbxActivityPct", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MsnImExceptions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Dcs,Debug,EndDate,ErrorAction,ErrorVariable,Exps,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabDistinctOab", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabDistinctOabOverTime", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabUsage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OperationsFailureHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorString,ErrorVariable,FailedActivity,FailedWorkflow,FailureCategory,FailureName,Filter,OutBuffer,OutVariable,ServerName,StartDate,Target,Verbose,Version,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OwaApiDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Day,Debug,ErrorAction,ErrorVariable,Filter,FilterServerName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ParameterUsageByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorGroup,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringErrorDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,RecordId,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringErrorSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PopUserCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ServicePlanTenantStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-SummaryByTopologyDaily", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReportDate,ServerName,TargetFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TenantStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,GroupBy,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityDatacenterError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityDatacenterErrorOccurred", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityMachineError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityMachineErrorOccurred", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ThrottlingPolicyByTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TenantName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ThrottlingPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TopOabByUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncDataReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncExceptions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncHealthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncInitializedReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncMailboxesReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsCreated", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsDeletedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncTenantsReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TrendByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-UMCallDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallType,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OfferResult,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-VersionSuccessSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Role,ServerName,StartDate,Verbose,Version,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-WeeklyAlerts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-WeeklyAlertsByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,EscalationTeam,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncADObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,TopologyFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,FilterValue,NumberOfPastDays,OnlyActive,OnlySev1,OutBuffer,OutVariable,Scope,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertLastSyncTime", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncEnabledUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,TopologyFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADCapacityRatioSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADCapacityRatioSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseAvailabilityGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConcurrentConnection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConcurrentConnectionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConference", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceAVTotal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceAVTotalGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceTotal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceTotalGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseEnabledUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseEnabledUserGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseExecutiveSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseExecutiveSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PAVSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PAVSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PIMSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PIMSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnections", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisionedTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisionedTenantGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisioningSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisioningSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ByUPN,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PIIValueOnly,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncUserActivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecentDays,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Add-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,Debug,ErrorAction,ErrorVariable,HealthSet,InstanceName,OutBuffer,OutVariable,PropertyName,PropertyValue,Scope,WarningAction,WarningVariable,WorkDefinitionName,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Get-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,InstanceName,OutBuffer,OutVariable,WarningAction,WarningVariable,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Remove-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,InstanceName,OutBuffer,OutVariable,WarningAction,WarningVariable,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Raw,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-EnterpriseTenantConfigBlobRevision", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-TenantConfigSnapshot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Id,Tenant,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ApprovalPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ApprovalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureScopeMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-BlackBoxMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderUnitCapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminAlertMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCapacityUnitDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCountry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDagConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDagLocationInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangedSinceTime,Debug,ErrorAction,ErrorVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDatabaseVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxFailedMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxForestEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxPodEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxScopeEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminExecutingUserId", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminHardwareConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminIPDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancerNode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancerVirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Local,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowAll,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachineDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachineFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminManagementServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminManagementVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminNetworkAdapter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,HostType,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,LiveOnly,OutBuffer,OutVariable,Recursive,ResultSize,ShowError,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperationOutput", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,GroupOperations,Identity,OutBuffer,OutVariable,Recursive,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperationTrace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Exclude,Filter,GroupOperations,Identity,Include,OutBuffer,OutVariable,Recursive,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameterDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPod", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPreBurnInMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPublisherServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResolvePrimaryHostName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRack", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRouter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSku", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSkuMachineDefinitionMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSkuType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVersionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVirtualMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,RetryCount,SleepInterval,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminWorkflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,Name,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Colocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Component", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpReservation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScopeLeases", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScopeReservations", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,MachineDefinition,OutBuffer,OutVariable,Payload,ReadPublisher,ResultSize,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxMachinePatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxRecurringPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenantConfigBlobRevision", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FailedHardDisk", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionAssetSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionAssetSetLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeIpRange", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeIpRangeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ForestGrowthRate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FuseBoxEvaluation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ResultSize,ShowDetail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRbacRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRbacRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineBootDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineOobmInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ControllerIP,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineOobmLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachinePowerState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigItemNameContains,CreatedAfter,CreatedBefore,CreatedBy,Credential,DatacenterContains,DescriptionContains,FullTextContains,Id,Property,PropertyContains,Requestor,ResultSize,TemplateContains,TicketStatus,TitleContains")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-OobmController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-PropertyDimension", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RackDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RackType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowAll,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxTestResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ScanResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ScopeHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ReadPublisher,ScopeType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ServiceChangeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ShowAll,ShowStates,UserApprovals,UserRequests,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ServiceFrontDoor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-SiteMaintenanceHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-SiteMaintenanceOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-TenantConfigSnapshot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Tenant,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-UTSTicket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-VirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,Verbose,VirtualServers,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Import-CentralAdminCapacityConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,InputFile,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Search-CentralAdminAuditEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActionName,DatabaseName,DatacenterLocation,Debug,EndDate,ErrorAction,ErrorVariable,EventType,ExecutingUser,MirrorDatabaseName,OutBuffer,OutVariable,StartDate,TargetObject,TimeSpan,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DropBoxRecurringPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CancelInstance,Enabled,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ServiceChangeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Authorization,BugId,Cancel,Comment,Confirm,Debug,Decision,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,ShowDuplicates,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HealthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GroupSize,HaImpactingOnly,HealthSet,Identity,MinimumOnlinePercent,OutBuffer,OutVariable,RollupGroup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,Platform,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExpirationTimeInHours,Mailbox,OutBuffer,ResultSize,ShowAll,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,HaImpactingOnly,HealthSet,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityPropertyMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityPropertyType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminMachineF5Availability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertEmail,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Role,ServiceInstance,ServiceUrl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminOperationNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ShowError,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminSnatPool", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminSnatPoolMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Readpublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-FfoCentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-FfoCentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-RAALease", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-RAARecoveryQueue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminOperationNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,NotificationSent,OutBuffer,OutVariable,Subscribers,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoAggregatedProbeErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoAggregatedProbeResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoOperationPerformanceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoProbeErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveProvisioningTenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveProvisioningTrendReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveStatisticsDatacenterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveStatisticsTenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AsTotalUsagePerfReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AsXsitePerfReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverErrorSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverRequestSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationVersionV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationVersionViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeRequestSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUnhandledSchemasV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryProtocolV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3DiscoverySearchactivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3DiscoverySearchinfoReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsCrashSummaryV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorImpactByOrgV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsLatencyImpactByOrgV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMigrationSummaryPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrClientsV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrRegionLatencyV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrRegionUsersV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestClientSlaPerForestPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestClientSlaPerRegionPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaPerForestPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaPerRegionPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaRegionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSummaryV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUnhandledSchemasV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryApplicationV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3GlobalTenantServiceplanLocalCopyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtAllUsersReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtHoldkeyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageOrgReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageRequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLatencyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsSoftwareReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsVersionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaOrgLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaOrgLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaTopLatencyByWeekReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRequestSummaryPerSiteOrgWebmethodReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtUserSummaryPerOrgReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityAggForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityPctForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityPctMbxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmManagedassistantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmProcessingtimesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmTopmailboxtimesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MsnImExceptionInformationReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3PumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3QuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyDcReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailySftReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsMbxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsThrottlingPolicySummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopdelayedtenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopdelayeduserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopoverbudgettenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopoverbudgetuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTotalrequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTotaluserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopdelayedtenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopdelayeduserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopoverbudgettenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopoverbudgetuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTotalrequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTotaluserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEndpointBacksyncReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsExceptionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsExecutiontimeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsHighlatencytasksReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsParameterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsTenantthrottlingpolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsTrendReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletServiceplanUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityConstTimetableReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpFvaAnalysisReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpHelpAnalysisReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisBrowserAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisBrowserByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisFeatureAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisFeatureByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisPlatformAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisPlatformByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpRadiobuttonReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPerfEditmailboxCountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPerfEditmailboxLoadReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityTestecpconnectivityErrorcountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportFopeInboundMessagesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportHopComponentLatencyByDayReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportHopComponentLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportLatentMessageByServiceTypeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportMachineDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailDailyDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailDailyHubReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailHourlyForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceTypeHopReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceTypeReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverExpensiveReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverFailureDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADReplicationLogsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataActionsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataDailyAggregateReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataReconcileReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmFilteredProbeExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmMonitorExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmProbeExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmResponderExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCBigTenantsFailureLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCAOperationDistributionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCaActiveCapacityMachinesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCmdletEventlogsProvisionLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCmdletEventlogsProvisionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDataCollectionWatermarkReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDatacenterServersReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDeploymentPiqReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDirectoryHydrationEventReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEduTenantDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEduTenantSummaryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCElevationrequestsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsMonthlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamIncidentsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamLateralsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationTriadsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncKnownErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncLogReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncTenantFirstUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncThroughputInMinuteReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGatewayaccessDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGatewayinteractionsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGlsFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGlsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCLiveIdAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMachinesbyversionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMachinestateHourlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMonthlyReportFirstUserE2EReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMservFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMservReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxforestentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxmachineentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxpayloadsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxpodentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxscopeentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsFailureareasReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsRetrycountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsStatecountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOspUsageSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOverridesDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringAggregatedResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringSummaryResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProDeproReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProvisionBigTenantsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProvisionGrowthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPumperJobReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServiceReadinessSuppressedAlertsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServicealertDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServicerequestsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCSqlobjectchangelogHourlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoOutlookRequestProcessedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-OspExoMailboxDatabaseUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-OspExoSummaryByTopologyDailyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-BuildStageAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildStageId,DeploymentStage,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-ContactToRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddContactInEndPosition,ContactAlias,ContactStartTime,Debug,ErrorAction,ErrorVariable,LastModifiedBy,OutBuffer,OutVariable,RotationId,ServiceName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,BusinessHoursEnd,BusinessHoursStart,Carrier,CellPhone,Confirm,Debug,EmailAddress,ErrorAction,ErrorVariable,FullName,HomePhone,Name,OutBuffer,OutVariable,Service,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf,WorkPhone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,ContactScheduleStartTime,Contacts,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RotationEndTime,RotationStartTime,Schedule,SetCurrent,Team,TimeZone,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,FromAddress,Name,NonUrgentCCAddresses,NonUrgentToAddresses,OutBuffer,OutVariable,Service,UrgentCCAddresses,UrgentToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,EndTime,ErrorAction,ErrorVariable,NewContact,OriginalContact,OutBuffer,OutVariable,StartTime,Team,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalInformation,AdditionalInformationLink,AllowedModifiers,CCAddresses,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,EscalateNowAllowed,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPath,IssueTrackingPropertyMapping,Name,OutBuffer,OutVariable,Service,Tags,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceVersion,Team,TrackingPath,TriageTrackingDatabase,TriageTrackingDatabaseType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AMAvailabilityByProbeAndTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ProbeName,ReadFromSqlAzure,SQLCredential,SelectedEndDate,SelectedRange,ServerName,TargetPartitionName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AMLatencyByProbeAndTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ProbeName,ReadFromSqlAzure,SQLCredential,SelectedEndDate,SelectedRange,ServerName,ShowFailure,TargetPartitionName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrorSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,IncludeNonLiveCapacity,Name,OutBuffer,OutVariable,PivotAttribute,PivotAttributeValue,ReadFromSqlAzure,ResultSize,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrors", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReadFromSqlAzure,RecordId,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrorsForTargetAndState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,IncludeNonLiveCapacity,Name,OutBuffer,OutVariable,PivotAttribute,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringProbeResults", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,DegradedCapacityOnly,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringProbeResultsByLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,DegradedCapacityOnly,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResults", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForTargetsByProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Targets,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringSummaryForProbes", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringTrendByRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AlertCommunicationMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,CommunicationFriendlyId,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDatetime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartDatetime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AlertTrendByTeamAndSubject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Dag,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,EscalationName,Filter,Forest,IntervalHours,MachineName,OutBuffer,OutVariable,ServerName,Service,Site,StartTime,Target,Team,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AvailableGroupsAndReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportsFilePath,ScopeString,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-BandwidthForNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Builds", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterForForkGrid,GetLinkedBuilds,OspControlBuildIdentity,OutBuffer,OutVariable,ProductName,ResultSize,ServiceUri,ShowAllBuilds,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartDataFileCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartLogFileCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartTableCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CapacityUsageAggregateListDataByForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationScope,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Probe,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CommunicationScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CommunicationsForWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDate,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ScopeFilter,SearchFilter,StartDate,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosMODJobInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,JobName,OutBuffer,OutVariable,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosMODJobStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosmosStreamInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,FilterByMachine,Identity,OutBuffer,OutVariable,ResultSize,Scope,StartDate,StreamName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByServerAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByTenantAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByUniqueUserAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagForSourceComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DagType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,TopologyType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagForSourceComponentForOWA", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DagType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagPingCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationScope,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DataCenterInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DatacenterMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Date,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ErrorCountTrendForSourceComponentByRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ErrorCountTrendForSourceComponentByRegionForOWA", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "All,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Service,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Facts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,InstanceName,MachineName,MeasureName,OutBuffer,OutVariable,TimeRangeInHours,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-FailedVipsForNetworkBandwidth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,NetworkCategory,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Features", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,FeatureGroupName,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ForkMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildVersion,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-IPCountForNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-IncidentConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Machines", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Roles,ScopeString,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-MosAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Identity,IncidentFriendlyId,IsPublished,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-NetworkBandwidthForDataBlock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,AggregationLevel,AggregationType,DatabaseName,Debug,Duration,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OSPReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ObjectHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ParentId,Providers,StartTime,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallRotationScheduleType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Contact,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Team,Time,TimeZone,Verbose,WarningAction,WarningVariable,Weeks")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OpticsSsrsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-PlannedMaintenanceEventsForWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDate,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ScopeFilter,SearchFilter,StartDate,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-PrecannedMessagesForFeature", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,FeatureID,Filter,Identity,IncidentImpactID,IncidentStatusID,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Probe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,ServiceAlias,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertErrorDetailsForTargetAndState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,Distinguisher,EndTime,ErrorAction,ErrorVariable,FailingType,Filter,IncludeNonLiveCapacity,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertHealthIndexForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeHealthType,ServerName,Service,Target,TargetLevel,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertResultsForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeType,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ScopeInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-SeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,SeType,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ExcludeResolveNowProperties,ExcludeTileProperties,Filter,Identity,OutBuffer,OutVariable,QueryTimeoutInSeconds,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertRecovery", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Dag,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Forest,MachineName,OutBuffer,OutVariable,ServerName,Service,Site,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceChangeDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeLevel,ServerName,Service,StartTimeStamp,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceChangeForTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,IncidentId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-SubscriptionInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,OutBuffer,OutVariable,ResultSize,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-TargettingSuccessListByArea", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,IdleOrActiveDays,OutBuffer,OutVariable,ReadFromSqlAzure,SeOwner,SeType,ServerName,Service,StartTime,Status,Target,TryNumber,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WeeklyServiceAlertsByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ServerName,Service,StartTime,Team,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkloadName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadConfigurationForAllWorkloads", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TemplateTypeId,Verbose,WarningAction,WarningVariable,WorkloadId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Invoke-FuseBox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FuseConfigFile,FuseFilter,IgnoreMachineThresholds,MachineName,OutBuffer,OutVariable,PayloadName,PayloadScopeName,ServiceUri,ThumbPrint,UpdateReleasePipeline,ValidationScenario,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertTypeId,CapacityUnit,Dag,Debug,ErrorAction,ErrorVariable,Expiration,Forest,Id,IsGlobal,IsServiceLevel,MachineName,NewAlertSource,NewEscalationTeam,NewService,OriginalEscalationTeam,OutBuffer,OutVariable,Rack,Reason,Service,Site,SqlDatabase,SqlServer,Suppressed,Urgent,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,TextDomain,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Body,CCAddresses,FromAddress,SMTPHost,Source,Subject,ToAddresses,Urgent,UseSSL")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,CCAddresses,CustomConCallText,CustomNotificationText,Debug,Description,ErrorAction,ErrorVariable,IsVersion2,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPropertyMapping,Name,OutBuffer,OutVariable,ToAddresses,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,DatabaseName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServerName,Severity,SubStatus,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-PumperBackfill", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,Datamart,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PowershellExe,ResultSize,Scope,Table,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SchedulerBackfill", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,SchedulerJob,Scope,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddedBy,AlertCategory,AlertDescription,AlertId,AlertName,AlertSource,AlertTypeId,CapacityUnit,CapacityUnitActivityState,CentralAdminServer,Component,Dag,DagActivityState,Debug,EndPoint,Environment,ErrorAction,ErrorVariable,EscalationTeam,EscalationTeamContact,Forest,IsIncident,IsUrgent,Location,MachineDefinitionName,MachineMaintenanceState,MachineMonitoringState,MachineName,MachineProvisioningState,MachineVersion,Mdb,MonitoringAgent,MonitoringObject,OutBuffer,OutVariable,OwnerEmail,OwnerName,OwnerPhone,ParentServiceAlert,ProblemTime,PropertyBag,Rack,RackSwitchState,RaisedTime,Region,Service,Site,SkipPaging,SkipSuppression,SqlDatabase,SqlServer,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,BugDatabase,BugId,Debug,ETA,ErrorAction,ErrorVariable,FollowUpStatus,OutBuffer,OutVariable,Owner,SqlDatabase,SqlServer,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,CommunicationAccessLevel,Debug,DetectionMethod,ErrorAction,ErrorVariable,EscalationMethod,EstimatedAffectedUsers,IncidentEndTime,IncidentSeverity,IncidentStartTime,IsCommunicationNecessary,IssueDetectedToEscalated,IssueEscalatedToInvestigation,IssueInvestigationToResolution,OutBuffer,OutVariable,OutageDuration,PostMortemDocURL,PublishCommunicationText,PublishExternalStatus,PublishToTarget,SLAImpact,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Comments,Debug,EmailAction,ErrorAction,ErrorVariable,IsOwner,IsPaging,OutBuffer,OutVariable,Service,Source,SqlDatabase,SqlServer,TargetContact,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,AssetName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PropertyBag,ServiceAlertScopeAssetType,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,ActionTime,AlertId,Comments,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SubscribeJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,JobName,OutBuffer,OutVariable,ResultSize,Scope,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-UnsubscribeJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,JobName,OutBuffer,OutVariable,ResultSize,Scope,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-ContactFromRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Service,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,Whatif")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-BuildStageAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AnnotationId,DeploymentStage,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentProgress", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,OutBuffer,OutVariable,Progress,ServiceUri,Status,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentStart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,OutBuffer,OutVariable,Payload,ProductName,ServiceUri,StartTime,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentStop", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProductName,ServiceUri,StartTime,Status,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Expiration,Identity,OutBuffer,OutVariable,Reason,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,Whatif")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ForkMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildVersion,Debug,ErrorAction,ErrorVariable,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TextDomain,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,BusinessHoursEnd,BusinessHoursStart,Carrier,CellPhone,Confirm,Debug,EmailAddress,ErrorAction,ErrorVariable,FullName,HomePhone,Identity,OutBuffer,OutVariable,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf,WorkPhone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Contacts,Debug,Description,ErrorAction,ErrorVariable,Identity,LastContactsUploaded,OutBuffer,OutVariable,RotationEndTime,RotationStartTime,Schedule,ScheduleDescription,ScheduleDetails,SetCurrent,SqlDatabase,SqlServer,TimeZone,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,CCAddresses,Confirm,CustomConCallText,CustomNotificationText,Debug,Description,ErrorAction,ErrorVariable,Identity,IncidentManagementTeam,IsVersion2,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPropertyMapping,OutBuffer,OutVariable,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,FromAddress,Identity,NonUrgentCCAddresses,NonUrgentToAddresses,OutBuffer,OutVariable,UrgentCCAddresses,UrgentToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,EndTime,ErrorAction,ErrorVariable,Identity,NewContact,OutBuffer,OutVariable,SqlDatabase,SqlServer,Team,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalInformation,AdditionalInformationLink,AllowedModifiers,CCAddresses,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,EscalateNowAllowed,Identity,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPath,IssueTrackingPropertyMapping,OutBuffer,OutVariable,Tags,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerName,Severity,SubStatus,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AnnotationId,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ReleasePipelineBuildStageProperty", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,Key,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Value,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,CapacityUnit,Confirm,Dag,Debug,ErrorAction,ErrorVariable,EscalationTeam,EscalationTeamContact,Forest,Identity,IncidentId,IsIncident,LateralId,MachineName,OutBuffer,OutVariable,ParentServiceAlert,PropertyBag,Rack,Region,ResolvedComments,ResolvedTime,Site,SqlDatabase,SqlServer,Status,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugDatabase,BugId,Debug,ETA,ErrorAction,ErrorVariable,FollowUpStatus,Identity,OutBuffer,OutVariable,Owner,SqlDatabase,SqlServer,Title,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommunicationAccessLevel,Debug,DetectionMethod,ErrorAction,ErrorVariable,EscalationMethod,EstimatedAffectedUsers,Identity,IncidentEndTime,IncidentSeverity,IncidentStartTime,IsCommunicationNecessary,IssueDetectedToEscalated,IssueEscalatedToInvestigation,IssueInvestigationToResolution,OutBuffer,OutVariable,OutageDuration,PostMortemDocURL,PublishCommunicationText,PublishExternalStatus,PublishToTarget,SLAImpact,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoFillResponder,Confirm,Debug,ErrorAction,ErrorVariable,Id,Identity,OutBuffer,OutVariable,PageResponder,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,ActionTime,Comments,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,TrackingPath,TriageTrackingDatabase,TriageTrackingDatabaseType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Test-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,OverrideId,SqlDatabase,SqlServer,TimeMachine,Verbose,WarningAction,WarningVariable,WriteAlert")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "Get-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusComponents", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLeader", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Realm,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityId,ComponentName,Credential,Debug,EntryCount,ErrorAction,ErrorVariable,EventType,FromDate,HostName,OutBuffer,OutVariable,PipelineVariable,ShowAll,Tag,ToDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusServiceInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusServiceLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Realm,ShowAll,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusTags", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusTraceEventType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class ViewOnlyCentralAdminSupport
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Datacenter.Common", "Import-ScopeData", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DbName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeLevel,ServerName,TableName,Verbose,WarningAction,WarningVariable,XmlFileDoc,XmlFilePath")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxCosmosCluster", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxDatamartTable", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Datamart,Identity,ReadPublisher,ResultSize")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPIISetting", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,ReadPublisher,ResultSize,UploaderLog")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxPumperConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,Recurrence,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxSchedulerJobValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,ReadPublisher,ResultSize,SchedulerJob")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize,Scope")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.DataMining.Configuration.Powershell", "Get-BlackBoxUploaderLogValue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity,ReadPublisher,ResultSize,UploaderLog")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ActiveSyncDeviceDistributionByVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DistributionDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxLogonFailureTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxLogonTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveMailboxUniqueLogonTrendForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ArchiveProvisioningTrendSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-AutoReseed", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Choice,DAGName,DCName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-AvailabilitySummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CaOperationsServerHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CaOServerName,CreateTime,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CentralAdminServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringAggregatedResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringErrorDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,RecordId,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CmaPassiveMonitoringSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-CosmosExceptionDistribution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DailyAlerts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistribution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistributionByUserAgent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DistributionDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DeviceDistributionTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,InitialDate,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-DiscoverySearchActivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PastDays,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-EscalationAlertsMonthlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,MonthToShowFrom,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-EscalationAlertsMonthlyReportByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,MonthToShow,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionDistributionByDeviceType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionDistributionWithSCStatusByDeviceType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,DeviceTypes,DeviceTypes1,DeviceTypes2,DistributionDate,EasErrorString,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExceptionMessageAll", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,ExceptionName,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ExecutionTimeByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Thredshold,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ImapUserCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MailboxDatabaseUsage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,SQLCredential,ServerName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmActivityAggForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmActivityPctForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MrmMbxActivityPct", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,ForestName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-MsnImExceptions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Dcs,Debug,EndDate,ErrorAction,ErrorVariable,Exps,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabDistinctOab", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabDistinctOabOverTime", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OabUsage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OperationsFailureHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorString,ErrorVariable,FailedActivity,FailedWorkflow,FailureCategory,FailureName,Filter,OutBuffer,OutVariable,ServerName,StartDate,Target,Verbose,Version,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-OwaApiDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Day,Debug,ErrorAction,ErrorVariable,Filter,FilterServerName,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ParameterUsageByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorGroup,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringErrorDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,RecordId,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringErrorSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PassiveMonitoringSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScenarioGroup,ServerName,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-PopUserCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenterForest,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ServicePlanTenantStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-SummaryByTopologyDaily", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReportDate,ServerName,TargetFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TenantStatistics", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,GroupBy,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityDatacenterError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityDatacenterErrorOccurred", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityMachineError", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Datacenter,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TestEcpConnectivityMachineErrorOccurred", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ThrottlingPolicyByTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TenantName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-ThrottlingPolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TopOabByUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncDataReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncExceptions", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncHealthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncInitializedReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncMailboxesReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsCreated", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsDeletedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncSubscriptionsReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TransportSyncTenantsReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggType,ColumnName,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,TableName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-TrendByCmdlet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Client,Cmdlet,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-UMCallDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CallType,DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OfferResult,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-VersionSuccessSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Role,ServerName,StartDate,Verbose,Version,WarningAction,WarningVariable,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-WeeklyAlerts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Exchange.Powershell", "Get-WeeklyAlertsByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,EscalationTeam,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncADObject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,TopologyFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,FilterValue,NumberOfPastDays,OnlyActive,OnlySev1,OutBuffer,OutVariable,Scope,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncAlertLastSyncTime", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncEnabledUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,TopologyFilter,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADCapacityRatioSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADCapacityRatioSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseADSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseAvailability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseAvailabilityGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConcurrentConnection", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConcurrentConnectionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConference", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceAVTotal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceAVTotalGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceTotal", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseConferenceTotalGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseEnabledUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseEnabledUserGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseExecutiveSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseExecutiveSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PAVSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PAVSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PIMSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PIMSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PSession", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseP2PSessionGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnections", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulsePeakConnectionsSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,StartDate,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisionedTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisionedTenantGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,PeriodType,ServerName,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisioningSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Reporting.Lync.Powershell", "Get-LyncServicePulseProvisioningSummaryGallatin", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndDate,EndDatePrevious,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ScopeKind,ServerName,StartDate,StartDatePrevious,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncUser", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ByUPN,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PIIValueOnly,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Datacenter.Support.Lync.Powershell", "Get-LyncUserActivity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,RecentDays,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Add-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,Debug,Duration,ErrorAction,ErrorVariable,HealthSet,InstanceName,OutBuffer,OutVariable,PropertyName,PropertyValue,Scope,WarningAction,WarningVariable,WorkDefinitionName,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Get-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,InstanceName,OutBuffer,OutVariable,WarningAction,WarningVariable,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Datacenter.Management.ActiveMonitoring", "Remove-ActiveMonitoringOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,InstanceName,OutBuffer,OutVariable,WarningAction,WarningVariable,Workload")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Raw,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-EnterpriseTenantConfigBlobRevision", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Download-TenantConfigSnapshot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Id,Tenant,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ApprovalPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ApprovalRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureScopeMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-BlackBoxMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter,Identity,ReadPublisher,ResultSize")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CapacityOrderUnitCapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminAlertMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCapacityUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCapacityUnitDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminCountry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowMembers,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDagConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDagLocationInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangedSinceTime,Debug,ErrorAction,ErrorVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDatabaseVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxFailedMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxForestEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxPodEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminDropBoxScopeEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminExecutingUserId", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Alias,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminHardwareConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminIPDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancerNode", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLoadBalancerVirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Local,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowAll,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachineDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminMachineFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminManagementServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminManagementVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminNetworkAdapter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,HostType,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,LiveOnly,OutBuffer,OutVariable,Recursive,ResultSize,ShowError,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperationOutput", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,GroupOperations,Identity,OutBuffer,OutVariable,Recursive,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminOperationTrace", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Exclude,Filter,GroupOperations,Identity,Include,OutBuffer,OutVariable,Recursive,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameterDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPod", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPreBurnInMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminPublisherServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResolvePrimaryHostName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRack", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminRouter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSku", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSkuMachineDefinitionMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSkuType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVersion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVersionGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVirtualMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,RetryCount,SleepInterval,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminVlan", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-CentralAdminWorkflow", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Cname", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,Name,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable,Zone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Colocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-Component", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpReservation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScopeLeases", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpScopeReservations", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,DHCPServer,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DhcpServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,MachineDefinition,OutBuffer,OutVariable,Payload,ReadPublisher,ResultSize,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxMachinePatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-DropBoxRecurringPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-EnterpriseTenantConfigBlobRevision", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FailedHardDisk", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionAssetSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionAssetSetLock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionParameter", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FaultInjectionSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallRule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeIpRange", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeIpRangeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallScopeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FirewallState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ForestGrowthRate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-FuseBoxEvaluation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,Location,OutBuffer,OutVariable,ResultSize,ShowDetail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRbacRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRbacRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-LockBoxRoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineBootDevice", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineOobmInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ControllerIP,Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachineOobmLog", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MachinePowerState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ConfigItemNameContains,CreatedAfter,CreatedBefore,CreatedBy,Credential,DatacenterContains,DescriptionContains,FullTextContains,Id,Property,PropertyContains,Requestor,ResultSize,TemplateContains,TicketStatus,TitleContains")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-OobmController", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Machine,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-PropertyDimension", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RackDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RackType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,ShowAll,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-RepairBoxTestResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ScanResult", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ScopeHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ReadPublisher,ScopeType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ServiceChangeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ShowAll,ShowStates,UserApprovals,UserRequests,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-ServiceFrontDoor", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-SiteMaintenanceHistory", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-SiteMaintenanceOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-TenantConfigSnapshot", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Tenant,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-UTSTicket", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Get-VirtualServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,Verbose,VirtualServers,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Import-CentralAdminCapacityConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,InputFile,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,MachineDefinition,Name,OutBuffer,OutVariable,Phase,RunMode,UnitName,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureRoleDefinition,AzureWorkItemSku,AzureWorkload,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SetupInfo,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureSubscription,Debug,ErrorAction,ErrorVariable,MaxAzureInstancesAllowed,MaxProxyScopesAllowed,Name,OutBuffer,OutVariable,ProxyScopeAggregationLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureGroup,Debug,ErrorAction,ErrorVariable,EscalationEndpoint,Name,OutBuffer,OutVariable,SqlAzureDatabase,SqlAzureServer,TopologyDatabaseName,TopologyDatabaseServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AzureWorkload,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ScopeType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureScopeMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureGroup,AzureProxyScope,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureWorkload,Debug,ErrorAction,ErrorVariable,MaxAzureGroupsAllowed,Name,OutBuffer,OutVariable,StorageAccount,StoragePrimaryKey,StorageSecondaryKey,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrderType,Confirm,Debug,DeliveryDate,ErrorAction,ErrorVariable,Location,Name,OrderDate,OrderGroup,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrderType,Confirm,Debug,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RackType,RackTypeCount,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllocationCompleted,CapacityOrderGroup,CapacityUnitDefinition,Confirm,DagConfiguration,Debug,DecomCompleteActual,DecomCompleteETA,DecomStarted,DeploymentStarted,ErrorAction,ErrorVariable,EscrowStarted,Forest,GoLiveActual,GoLiveApprovalState,GoLiveETA,MailboxDrainStarted,Name,OutBuffer,OutVariable,PodIndex,PostGoLiveTasksCompleted,PromotionOperation,ServiceReadinessStarted,Status,StatusInfo,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-CapacityOrderUnitCapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrder,CapacityOrderUnit,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Confirm,Debug,ErrorAction,ErrorVariable,Force,MachineDefinition,OutBuffer,OutVariable,Payload,PerMachineConfig,Verbose,Version,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalNotificationAliases,Arguments,ClientImpact,ConfigItemName,ConfigItemTypeName,Credential,DatacenterName,Debug,Description,ErrorAction,ErrorVariable,IsBreakFix,IsDowntimeAuthorized,NoTemplate,OutBuffer,OutVariable,Priority,ProblemType,Property,Severity,TargetName,TeamAssignedId,TeamAssignedName,TemplateFile,TemplateName,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Activity,ComponentName,Confirm,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Reason,RegularExp,RespondOn,ResponderType,ScrubbedError,Threshold,ThresholdHours,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Confirm,Data,Debug,DetectedTime,ErrorAction,ErrorVariable,Instance,ManualPriority,OutBuffer,OutVariable,Owner,Priority,Source,SourceDetail,TargetId,TargetType,TicketApproved,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,Source,SourceDetail,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "New-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,FailureBlocksDeployment,FailureBlocksLive,Name,OutBuffer,OutVariable,Phase,Status,TicketAutoDispatch,TimeoutSeconds,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureScopeMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-CapacityOrderUnitCapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Remove-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Search-CentralAdminAuditEvent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActionName,DatabaseName,DatacenterLocation,Debug,EndDate,ErrorAction,ErrorVariable,EventType,ExecutingUser,MirrorDatabaseName,OutBuffer,OutVariable,StartDate,TargetObject,TimeSpan,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AssemblyLineValidation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,MachineDefinition,Name,OutBuffer,OutVariable,Phase,RunMode,UnitName,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureDeploymentInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureRoleDefinition,AzureWorkItemSku,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SetupInfo,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AzureRoleDefinition,AzureWorkItemSku,Confirm,Debug,ErrorAction,ErrorVariable,Identity,MaxAzureInstancesAllowed,MaxProxyScopesAllowed,Name,OutBuffer,OutVariable,ProxyScopeAggregationLevel,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureInstance", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DeployedBy,DeployedTime,DeployedVersion,DeploymentId,DeploymentStatus,ErrorAction,ErrorVariable,EscalationEndpoint,HealthState,Identity,Name,OutBuffer,OutVariable,ProvisioningState,SqlAzureDatabase,SqlAzureServer,TopologyDatabaseName,TopologyDatabaseServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureProxyScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,ScopeType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,MaxAzureGroupsAllowed,Name,OutBuffer,OutVariable,StorageAccount,StoragePrimaryKey,StorageSecondaryKey,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-AzureWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CapacityOrder", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DeliveryDate,ErrorAction,ErrorVariable,Identity,OrderDate,OrderGroup,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CapacityOrderDefinition", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CapacityOrderType,Confirm,Debug,ErrorAction,ErrorVariable,Identity,Name,OutBuffer,OutVariable,RackType,RackTypeCount,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CapacityOrderUnit", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllocationCompleted,CapacityOrderGroup,CapacityUnitDefinition,Confirm,DagConfiguration,Debug,DecomCompleteActual,DecomCompleteETA,DecomStarted,DeploymentStarted,ErrorAction,ErrorVariable,EscrowStarted,Forest,GoLiveActual,GoLiveApprovalState,GoLiveETA,Identity,MailboxDrainStarted,Name,OutBuffer,OutVariable,PodIndex,PostGoLiveTasksCompleted,PromotionOperation,ServiceReadinessStarted,Status,StatusInfo,UnitType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-CentralAdminDropBoxFailedMachineEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Activity,Confirm,Debug,ErrorAction,ErrorVariable,FailureTagId,Identity,MachineEntryId,OperationName,OutBuffer,OutVariable,ScrubbedError,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DropBoxBuildPatch", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Active,Confirm,Debug,ErrorAction,Identity,MachineDefinition,OutBuffer,OutVariable,Payload,PerMachineConfig,Verbose,Version,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-DropBoxRecurringPayload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CancelInstance,Confirm,Debug,Enabled,ErrorAction,ErrorVariable,EscalationTeam,Identity,Location,Manifest,OutBuffer,OutVariable,PayloadTimeoutInHours,PayloadType,RecurrencePattern,RunNow,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-EnterpriseTenant", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeFreezeDescription,ChangeFreezeEnd,ChangeFreezeStart,ClearChangeFreeze,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeDescription,ConfigBlob,Confirm,Debug,ErrorAction,ErrorVariable,ForceUpdate,Identity,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-MsTicketingRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalNotificationAliases,ClientImpact,ConfigItemName,ConfigItemTypeName,Credential,DatacenterName,Debug,Description,DiaryEntry,DiaryTitle,ErrorAction,ErrorVariable,Id,OutBuffer,OutVariable,Priority,ProblemType,Property,TeamAssignedId,TeamAssignedName,TicketStatus,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-OperationFailureTag", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Activity,ComponentName,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Reason,RegularExp,RespondOn,ResponderType,ScrubbedError,Threshold,ThresholdHours,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-RepairBoxFailure", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Comment,Confirm,Data,Debug,DetectedTime,Dirty,ErrorAction,ErrorVariable,Identity,Instance,ManualPriority,OutBuffer,OutVariable,Owner,Priority,Source,SourceDetail,Status,TargetId,TargetType,TicketApproved,TicketId,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-RepairBoxFailureConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivateTicket,AutoBeginMMSchedule,AutoEndMM,AutoOfflineRepair,AutoOnlineRepair,AutoOnlineRepairSchedule,AutoRepair,AutoSetOnline,AutoSliceCarryStraggler,AutoSliceCount,AutoSliceWindowHours,BlockDeployment,BlockLive,Category,CloseTicket,Component,Confirm,CreateTicket,Debug,Description,DispatchTicket,ErrorAction,ErrorVariable,Identity,ManualRepair,Name,OutBuffer,OutVariable,Priority,Severity,Source,SourceDetail,Status,TicketDailyThreshold,TicketTemplate,TicketVerbiage,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-RepairBoxTest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,Description,ErrorAction,ErrorVariable,FailureBlocksDeployment,FailureBlocksLive,Identity,Name,OutBuffer,OutVariable,Phase,Status,TicketAutoDispatch,TicketEnabled,TimeoutSeconds,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Set-ServiceChangeRequest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Authorization,BugId,Cancel,Comment,Confirm,Debug,Decision,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,StartTime,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.CentralAdmin", "Undo-EnterpriseTenantConfigBlob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ChangeDescription,Confirm,Debug,ErrorAction,ErrorVariable,ForceUpdate,Identity,LastChange,RevertToRevisionId,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ExchangeNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,Organization,OutBuffer,OutVariable,ResultSize,ShowDuplicates,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-HealthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,GroupSize,HaImpactingOnly,HealthSet,Identity,MinimumOnlinePercent,OutBuffer,OutVariable,RollupGroup,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationApp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Enabled,ErrorAction,ErrorVariable,Identity,OutBuffer,Platform,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-PushNotificationSubscription", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,ExpirationTimeInHours,Mailbox,OutBuffer,ResultSize,ShowAll,Verbose,WarningAction")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ServerHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,ErrorAction,ErrorVariable,HaImpactingOnly,HealthSet,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityPropertyMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityPropertyType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminEntityType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminMachineF5Availability", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertEmail,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Role,ServiceInstance,ServiceUrl,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminOperationNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ShowError,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminSnatPool", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadPublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-CentralAdminSnatPoolMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Readpublisher,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-FfoCentralAdminMachine", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-FfoCentralAdminParameterSet", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Filter")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-RAALease", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Get-RAARecoveryQueue", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.FfoCentralAdmin", "Set-CentralAdminOperationNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Identity,NotificationSent,OutBuffer,OutVariable,Subscribers,Verbose,WarningAction,WarningVariable,WhatIf,Workflow")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoAggregatedProbeErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoAggregatedProbeResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoOperationPerformanceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-AmExoProbeErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveProvisioningTenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveProvisioningTrendReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveStatisticsDatacenterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3ArchiveStatisticsTenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AsTotalUsagePerfReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AsXsitePerfReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverErrorSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverRequestSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationVersionV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationVersionViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3AutodiscoverUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeRequestSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUnhandledSchemasV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3CafeUserSummaryProtocolV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3DiscoverySearchactivityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3DiscoverySearchinfoReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsCrashSummaryV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorImpactByOrgV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorSummaryV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsErrorSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsLatencyImpactByOrgV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMigrationSummaryPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrClientsV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrRegionLatencyV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsMsrRegionUsersV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestClientSlaPerForestPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestClientSlaPerRegionPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaPerForestPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaPerRegionPerDayV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSlaRegionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSummaryV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsRequestSummaryViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUnhandledSchemasV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryApplicationV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryApplicationViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryGlobalV1Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3EwsUserSummaryGlobalViewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3GlobalTenantServiceplanLocalCopyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtAllUsersReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtHoldkeyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerDatacenterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerRegionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerServerReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteCachedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteOnlineReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtLatencyPerSiteReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageOrgReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageRequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtOutlookusageUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLatencyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaAllLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLatencyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsSoftwareReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaLogonsVersionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaOrgLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaOrgLatencyV2Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRcaTopLatencyByWeekReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtRequestSummaryPerSiteOrgWebmethodReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MomtUserSummaryPerOrgReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityAggForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityPctForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmActivityPctMbxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmManagedassistantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmProcessingtimesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MrmTopmailboxtimesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3MsnImExceptionInformationReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3PumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3QuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonFailuresReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyDcReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsDailySftReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsMbxReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMC3RcaArchiveLogonsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsThrottlingPolicySummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopdelayedtenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopdelayeduserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopoverbudgettenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTopoverbudgetuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTotalrequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledDailyTotaluserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopdelayedtenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopdelayeduserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopoverbudgettenantReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTopoverbudgetuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTotalrequestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMEngineeringFundamentalsWlmTopnthrottledMonthlyTotaluserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEndpointBacksyncReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsExceptionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsExecutiontimeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsHighlatencytasksReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsParameterReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsTenantthrottlingpolicyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsTrendReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletEventlogsUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityCmdletServiceplanUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityConstTimetableReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpFvaAnalysisReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpHelpAnalysisReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisBrowserAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisBrowserByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisFeatureAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisFeatureByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisPlatformAllReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpIisPlatformByuserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityEcpRadiobuttonReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPerfEditmailboxCountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPerfEditmailboxLoadReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMManageabilityTestecpconnectivityErrorcountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportFopeInboundMessagesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportHopComponentLatencyByDayReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportHopComponentLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportLatentMessageByServiceTypeReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportMachineDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailDailyDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailDailyHubReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailHourlyForestReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewDetailReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceTypeHopReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-DMTransportServiceTypeReviewReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverExpensiveReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverFailureDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADDriverReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCADReplicationLogsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataActionsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataDailyAggregateReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAcsaccountmanagementdataReconcileReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmFilteredProbeExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmMonitorExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmProbeExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCAmResponderExecutionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCBigTenantsFailureLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCAOperationDistributionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCaActiveCapacityMachinesReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCmdletEventlogsProvisionLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCCmdletEventlogsProvisionReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDataCollectionWatermarkReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDatacenterServersReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDeploymentPiqReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCDirectoryHydrationEventReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEduTenantDomainReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEduTenantSummaryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCElevationrequestsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsMonthlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamIncidentsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamLateralsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationAlertsWeeklyTeamSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCEscalationTriadsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncKnownErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncLatencyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncLogReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncTenantFirstUserReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCForwardSyncThroughputInMinuteReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGatewayaccessDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGatewayinteractionsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGlsFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCGlsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCLiveIdAvailabilityReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMachinesbyversionDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMachinestateHourlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMetadataSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMonthlyReportFirstUserE2EReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMservFailureReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCMservReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxforestentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxmachineentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxpayloadsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxpodentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsdropboxscopeentryDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsFailureareasReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsRetrycountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOpticsoperationsStatecountReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOspUsageSummaryReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCOverridesDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringAggregatedResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringErrorsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPassiveMonitoringSummaryResultsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProDeproReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProvisionBigTenantsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCProvisionGrowthReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPumperJobReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCPumperStatusReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCQuotaSourceReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServiceReadinessSuppressedAlertsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServicealertDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCServicerequestsDailyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoDCSqlobjectchangelogHourlyReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-EdmExoOutlookRequestProcessedReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-OspExoMailboxDatabaseUsageReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.Reporting", "Get-OspExoSummaryByTopologyDailyV3Report", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Expression,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-BuildStageAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildStageId,DeploymentStage,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-ContactToRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddContactInEndPosition,ContactAlias,ContactStartTime,Debug,ErrorAction,ErrorVariable,LastModifiedBy,OutBuffer,OutVariable,RotationId,ServiceName,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,BusinessHoursEnd,BusinessHoursStart,Carrier,CellPhone,Confirm,Debug,EmailAddress,ErrorAction,ErrorVariable,FullName,HomePhone,Name,OutBuffer,OutVariable,Service,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf,WorkPhone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,ContactScheduleStartTime,Contacts,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,RotationEndTime,RotationStartTime,Schedule,SetCurrent,Team,TimeZone,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,FromAddress,Name,NonUrgentCCAddresses,NonUrgentToAddresses,OutBuffer,OutVariable,Service,UrgentCCAddresses,UrgentToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,EndTime,ErrorAction,ErrorVariable,NewContact,OriginalContact,OutBuffer,OutVariable,StartTime,Team,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalInformation,AdditionalInformationLink,AllowedModifiers,CCAddresses,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,EscalateNowAllowed,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPath,IssueTrackingPropertyMapping,Name,OutBuffer,OutVariable,Service,Tags,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Add-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServiceVersion,Team,TrackingPath,TriageTrackingDatabase,TriageTrackingDatabaseType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AMAvailabilityByProbeAndTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ProbeName,ReadFromSqlAzure,SQLCredential,SelectedEndDate,SelectedRange,ServerName,TargetPartitionName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AMLatencyByProbeAndTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ProbeName,ReadFromSqlAzure,SQLCredential,SelectedEndDate,SelectedRange,ServerName,ShowFailure,TargetPartitionName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrorSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,IncludeNonLiveCapacity,Name,OutBuffer,OutVariable,PivotAttribute,PivotAttributeValue,ReadFromSqlAzure,ResultSize,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrors", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReadFromSqlAzure,RecordId,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringErrorsForTargetAndState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,IncludeNonLiveCapacity,Name,OutBuffer,OutVariable,PivotAttribute,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringProbeResults", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,DegradedCapacityOnly,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringProbeResultsByLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,DegradedCapacityOnly,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResults", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringResultsForTargetsByProbe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Targets,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringSummaryForProbes", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ActiveMonitoringTrendByRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Name,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AlertCommunicationMapping", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,CommunicationFriendlyId,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDatetime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,StartDatetime,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AlertTrendByTeamAndSubject", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Dag,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,EscalationName,Filter,Forest,IntervalHours,MachineName,OutBuffer,OutVariable,ServerName,Service,Site,StartTime,Target,Team,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-AvailableGroupsAndReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ReportsFilePath,ScopeString,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-BandwidthForNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Builds", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterForForkGrid,GetLinkedBuilds,OspControlBuildIdentity,OutBuffer,OutVariable,ProductName,ResultSize,ServiceUri,ShowAllBuilds,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartDataFileCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartLogFileCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CFRDatamartTableCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CapacityUsageAggregateListDataByForest", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationScope,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Probe,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CommunicationScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CommunicationsForWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActiveOnly,Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDate,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ScopeFilter,SearchFilter,StartDate,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosMODJobInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,JobName,OutBuffer,OutVariable,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosMODJobStatus", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Scope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-CosmosStreamInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,FilterByMachine,Identity,OutBuffer,OutVariable,ResultSize,Scope,StartDate,StreamName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByServerAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByTenantAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagErrorCountByUniqueUserAndErrorName", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorName,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagForSourceComponent", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DagType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,TopologyType,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagForSourceComponentForOWA", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DagType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DagPingCount", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationScope,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,SourceComponent,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DataCenterInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-DatacenterMap", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Date,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ErrorCountTrendForSourceComponentByRegion", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ErrorCountTrendForSourceComponentByRegionForOWA", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "All,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,Service,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Facts", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,InstanceName,MachineName,MeasureName,OutBuffer,OutVariable,TimeRangeInHours,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-FailedVipsForNetworkBandwidth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,NetworkCategory,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Features", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,FeatureGroupName,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ForkMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildVersion,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-IPCountForNetwork", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-IncidentConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Machines", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EdsServiceName,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Roles,ScopeString,Verbose,WarehouseTypeName,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-MosAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Identity,IncidentFriendlyId,IsPublished,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-NetworkBandwidthForDataBlock", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationInterval,AggregationLevel,AggregationType,DatabaseName,Debug,Duration,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OSPReports", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ObjectHealth", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndTime,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,ParentId,Providers,StartTime,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallRotationScheduleType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSchedule", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Contact,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Team,Time,TimeZone,Verbose,WarningAction,WarningVariable,Weeks")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OpticsSsrsReport", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-PlannedMaintenanceEventsForWorkload", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,EndDate,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ScopeFilter,SearchFilter,StartDate,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-PrecannedMessagesForFeature", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,FeatureID,Filter,Identity,IncidentImpactID,IncidentStatusID,Name,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-Probe", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,ServerName,ServiceAlias,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertErrorDetailsForTargetAndState", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationLevel,AggregationType,DatabaseName,Debug,Distinguisher,EndTime,ErrorAction,ErrorVariable,FailingType,Filter,IncludeNonLiveCapacity,OutBuffer,OutVariable,ReadFromSqlAzure,SQLCredential,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertHealthIndexForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeHealthType,ServerName,Service,Target,TargetLevel,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-RedAlertResultsForChildrenOfTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AggregationType,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeType,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ScopeInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-SeType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,SeType,ServerName,Service,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,ExcludeResolveNowProperties,ExcludeTileProperties,Filter,Identity,OutBuffer,OutVariable,QueryTimeoutInSeconds,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertRecovery", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertScope", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertSummary", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceAlertTrend", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Dag,DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Forest,MachineName,OutBuffer,OutVariable,ServerName,Service,Site,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceChangeDetails", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ReadFromSqlAzure,ScopeLevel,ServerName,Service,StartTimeStamp,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceChangeForTarget", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,ReadFromSqlAzure,ServerName,Service,StartTime,Target,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-ServiceIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,Identity,IncidentId,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkLoadID")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-SubscriptionInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,OutBuffer,OutVariable,ResultSize,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-TargettingSuccessListByArea", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,IdleOrActiveDays,OutBuffer,OutVariable,ReadFromSqlAzure,SeOwner,SeType,ServerName,Service,StartTime,Status,Target,TryNumber,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ErrorAction,ErrorVariable,Filter,Identity,OutBuffer,OutVariable,ResultSize,SQLCredential,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WeeklyServiceAlertsByTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,EndTime,ErrorAction,ErrorVariable,Filter,Interval,OutBuffer,OutVariable,ServerName,Service,StartTime,Team,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadConfiguration", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WorkloadName")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadConfigurationForAllWorkloads", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,Filter,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Get-WorkloadTemplate", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ECCertificateThumbprint,ECIdentityDNS,ECServiceUrl,ErrorAction,ErrorVariable,OutBuffer,OutVariable,TemplateTypeId,Verbose,WarningAction,WarningVariable,WorkloadId")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Invoke-FuseBox", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FuseConfigFile,FuseFilter,IgnoreMachineThresholds,MachineName,OutBuffer,OutVariable,PayloadName,PayloadScopeName,ServiceUri,ThumbPrint,UpdateReleasePipeline,ValidationScenario,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertTypeId,CapacityUnit,Dag,Debug,ErrorAction,ErrorVariable,Expiration,Forest,Id,IsGlobal,IsServiceLevel,MachineName,NewAlertSource,NewEscalationTeam,NewService,OriginalEscalationTeam,OutBuffer,OutVariable,Rack,Reason,Service,Site,SqlDatabase,SqlServer,Suppressed,Urgent,Verbose,Version,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Debug,Description,ErrorAction,ErrorVariable,Name,OutBuffer,OutVariable,TextDomain,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallEmail", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Body,CCAddresses,FromAddress,SMTPHost,Source,Subject,ToAddresses,Urgent,UseSSL")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,CCAddresses,CustomConCallText,CustomNotificationText,Debug,Description,ErrorAction,ErrorVariable,IsVersion2,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPropertyMapping,Name,OutBuffer,OutVariable,ToAddresses,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,DatabaseName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ServerName,Severity,SubStatus,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-PumperBackfill", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DataCenter,Datamart,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PowershellExe,ResultSize,Scope,Table,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SchedulerBackfill", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,EndDate,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ResultSize,SchedulerJob,Scope,StartDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AddedBy,AlertCategory,AlertDescription,AlertId,AlertName,AlertSource,AlertTypeId,CapacityUnit,CapacityUnitActivityState,CentralAdminServer,Component,Dag,DagActivityState,Debug,EndPoint,Environment,ErrorAction,ErrorVariable,EscalationTeam,EscalationTeamContact,Forest,IsIncident,IsUrgent,Location,MachineDefinitionName,MachineMaintenanceState,MachineMonitoringState,MachineName,MachineProvisioningState,MachineVersion,Mdb,MonitoringAgent,MonitoringObject,OutBuffer,OutVariable,OwnerEmail,OwnerName,OwnerPhone,ParentServiceAlert,ProblemTime,PropertyBag,Rack,RackSwitchState,RaisedTime,Region,Service,Site,SkipPaging,SkipSuppression,SqlDatabase,SqlServer,Status,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,BugDatabase,BugId,Debug,ETA,ErrorAction,ErrorVariable,FollowUpStatus,OutBuffer,OutVariable,Owner,SqlDatabase,SqlServer,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,CommunicationAccessLevel,Debug,DetectionMethod,ErrorAction,ErrorVariable,EscalationMethod,EstimatedAffectedUsers,IncidentEndTime,IncidentSeverity,IncidentStartTime,IsCommunicationNecessary,IssueDetectedToEscalated,IssueEscalatedToInvestigation,IssueInvestigationToResolution,OutBuffer,OutVariable,OutageDuration,PostMortemDocURL,PublishCommunicationText,PublishExternalStatus,PublishToTarget,SLAImpact,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Comments,Debug,EmailAction,ErrorAction,ErrorVariable,IsOwner,IsPaging,OutBuffer,OutVariable,Service,Source,SqlDatabase,SqlServer,TargetContact,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,AssetName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PropertyBag,ServiceAlertScopeAssetType,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,ActionTime,AlertId,Comments,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-SubscribeJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,JobName,OutBuffer,OutVariable,ResultSize,Scope,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "New-UnsubscribeJob", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,FilterByMachine,JobName,OutBuffer,OutVariable,ResultSize,Scope,UserEmail,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-ContactFromRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Service,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,Whatif")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-ServiceAlertScopeAsset", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Remove-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-BuildStageAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AnnotationId,DeploymentStage,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentProgress", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,OutBuffer,OutVariable,Progress,ServiceUri,Status,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentStart", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,OutBuffer,OutVariable,Payload,ProductName,ServiceUri,StartTime,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-DeploymentStop", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,EndTime,ErrorAction,ErrorVariable,OutBuffer,OutVariable,ProductName,ServiceUri,StartTime,Status,ThumbPrint,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Expiration,Identity,OutBuffer,OutVariable,Reason,SqlDatabase,SqlServer,Verbose,WarningAction,WarningVariable,Whatif")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ForkMessage", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BuildVersion,Debug,ErrorAction,ErrorVariable,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallCarrier", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,TextDomain,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallContact", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,BusinessHoursEnd,BusinessHoursStart,Carrier,CellPhone,Confirm,Debug,EmailAddress,ErrorAction,ErrorVariable,FullName,HomePhone,Identity,OutBuffer,OutVariable,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf,WorkPhone")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallRotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Contacts,Debug,Description,ErrorAction,ErrorVariable,Identity,LastContactsUploaded,OutBuffer,OutVariable,RotationEndTime,RotationStartTime,Schedule,ScheduleDescription,ScheduleDetails,SetCurrent,SqlDatabase,SqlServer,TimeZone,Type,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallService", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,CCAddresses,Confirm,CustomConCallText,CustomNotificationText,Debug,Description,ErrorAction,ErrorVariable,Identity,IncidentManagementTeam,IsVersion2,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPropertyMapping,OutBuffer,OutVariable,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallSource", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,ErrorAction,ErrorVariable,FromAddress,Identity,NonUrgentCCAddresses,NonUrgentToAddresses,OutBuffer,OutVariable,UrgentCCAddresses,UrgentToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallSubstitution", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,Description,EndTime,ErrorAction,ErrorVariable,Identity,NewContact,OutBuffer,OutVariable,SqlDatabase,SqlServer,Team,TimeZone,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OnCallTeam", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AdditionalInformation,AdditionalInformationLink,AllowedModifiers,CCAddresses,Confirm,Debug,Description,ElevationApproverTeam,ErrorAction,ErrorVariable,EscalateNowAllowed,Identity,IssueTrackingDatabase,IssueTrackingDatabaseType,IssueTrackingPath,IssueTrackingPropertyMapping,OutBuffer,OutVariable,Tags,ToAddresses,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-OsiServiceAlertExtendedProperties", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "DatabaseName,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,ServerName,Severity,SubStatus,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ProductAnnotation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AnnotationId,ErrorAction,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Title,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ReleasePipelineBuildStageProperty", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Build,DeploymentStage,ErrorAction,Key,Message,OutBuffer,OutVariable,ProductName,ServiceUri,ThumbPrint,Value,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlert", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugId,CapacityUnit,Confirm,Dag,Debug,ErrorAction,ErrorVariable,EscalationTeam,EscalationTeamContact,Forest,Identity,IncidentId,IsIncident,LateralId,MachineName,OutBuffer,OutVariable,ParentServiceAlert,PropertyBag,Rack,Region,ResolvedComments,ResolvedTime,Site,SqlDatabase,SqlServer,Status,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertFollowUp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "BugDatabase,BugId,Debug,ETA,ErrorAction,ErrorVariable,FollowUpStatus,Identity,OutBuffer,OutVariable,Owner,SqlDatabase,SqlServer,Title,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertIncident", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "CommunicationAccessLevel,Debug,DetectionMethod,ErrorAction,ErrorVariable,EscalationMethod,EstimatedAffectedUsers,Identity,IncidentEndTime,IncidentSeverity,IncidentStartTime,IsCommunicationNecessary,IssueDetectedToEscalated,IssueEscalatedToInvestigation,IssueInvestigationToResolution,OutBuffer,OutVariable,OutageDuration,PostMortemDocURL,PublishCommunicationText,PublishExternalStatus,PublishToTarget,SLAImpact,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertNotification", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AutoFillResponder,Confirm,Debug,ErrorAction,ErrorVariable,Id,Identity,OutBuffer,OutVariable,PageResponder,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-ServiceAlertTimeline", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Action,ActionTime,Comments,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,Verbose")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Set-TriageTrackingPath", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AllowedModifiers,Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,SqlDatabase,SqlServer,TrackingPath,TriageTrackingDatabase,TriageTrackingDatabaseType,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Monitoring.ServiceHealth", "Test-EscalationOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AlertId,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,OverrideId,SqlDatabase,SqlServer,TimeMachine,Verbose,WarningAction,WarningVariable,WriteAlert")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "Get-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,Filter,Identity")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "New-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AverageCPU,Date,Forest,ForestType,OutBuffer,OutVariable,PeakMailflow,Region,SafeMailflowLimit,StorageAvailable,StorageUsed,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "Remove-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.ServiceManagement.NewCapacityPSSnapIn", "Set-ForestCapacity", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "AverageCPU,Confirm,Date,Debug,ErrorAction,ErrorVariable,Forest,ForestType,Identity,OutBuffer,OutVariable,PeakMailflow,Region,SafeMailflowLimit,StorageAvailable,StorageUsed,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusComponents", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLeader", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Realm,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLogTimeStamp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Credential,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLogs", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ActivityId,ComponentName,Credential,Debug,EntryCount,ErrorAction,ErrorVariable,EventType,FromDate,HostName,OutBuffer,OutVariable,PipelineVariable,ShowAll,Tag,ToDate,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusServiceInfo", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,ServerName,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusServiceLocation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "ComponentName,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Realm,ShowAll,Site,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusTags", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusTraceEventType", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class ViewOnlyRoleManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRole", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Cmdlet,CmdletParameters,Debug,DomainController,ErrorAction,ErrorVariable,GetChildren,Identity,Organization,OutBuffer,OutVariable,Recurse,RoleType,Script,ScriptParameters,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleAssignment", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AssignmentMethod,ConfigWriteScope,CustomConfigWriteScope,CustomRecipientWriteScope,Debug,Delegating,DomainController,Enabled,ErrorAction,ErrorVariable,Exclusive,ExclusiveConfigWriteScope,ExclusiveRecipientWriteScope,GetEffectiveUsers,Identity,Organization,OutBuffer,OutVariable,RecipientOrganizationalUnitScope,RecipientWriteScope,Role,RoleAssignee,RoleAssigneeType,Verbose,WarningAction,WarningVariable,WritableDatabase,WritableRecipient,WritableServer")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ManagementRoleEntry", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,PSSnapinName,Parameters,Type,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroup", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "AccountPartition,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,Organization,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,ShowPartnerLinked,SortBy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-RoleGroupMember", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EXOCoreFeatures"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,IncludeSoftDeletedObjects,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Office.Datacenter.Torus.Cmdlets", "Get-TorusLogTimeStamp", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Credential,Debug,ErrorAction,ErrorVariable,OutBuffer,OutVariable,PipelineVariable,Verbose,WarningAction,WarningVariable")
				}, "c")
			};
		}

		private class WorkloadManagement
		{
			internal static RoleCmdlet[] Cmdlets = new RoleCmdlet[]
			{
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Debug,Diagnostics,DomainController,ErrorAction,ErrorVariable,Explicit,Identity,IgnoreDehydratedFlag,Organization,OutBuffer,OutVariable,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Get-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Anr,Credential,Debug,DomainController,ErrorAction,ErrorVariable,Filter,Identity,IgnoreDefaultScope,Organization,OrganizationalUnit,OutBuffer,OutVariable,ReadFromDomainController,ResultSize,SortBy,ThrottlingPolicy,Verbose,WarningAction,WarningVariable")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Flight,Force,MaxVersion,MinVersion,Name,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Component,Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Force,MaxVersion,MinVersion,Name,OutBuffer,OutVariable,Parameters,Reason,Section,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "New-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnonymousCutoffBalance,AnonymousMaxBurst,AnonymousMaxConcurrency,AnonymousRechargeRate,ComplianceMaxExpansionDGRecipients,ComplianceMaxExpansionNestedDGs,Confirm,CpaCutoffBalance,CpaMaxBurst,CpaMaxConcurrency,CpaRechargeRate,Debug,DiscoveryMaxConcurrency,DiscoveryMaxKeywords,DiscoveryMaxKeywordsPerPage,DiscoveryMaxMailboxes,DiscoveryMaxMailboxesResultsOnly,DiscoveryMaxPreviewSearchMailboxes,DiscoveryMaxRefinerResults,DiscoveryMaxSearchQueueDepth,DiscoveryMaxStatsSearchMailboxes,DiscoveryPreviewSearchResultsPageSize,DiscoverySearchTimeoutPeriod,DomainController,EasCutoffBalance,EasMaxBurst,EasMaxConcurrency,EasMaxDeviceDeletesPerMonth,EasMaxDevices,EasMaxInactivityForDeviceCleanup,EasRechargeRate,ErrorAction,ErrorVariable,EwsCutoffBalance,EwsMaxBurst,EwsMaxConcurrency,EwsMaxSubscriptions,EwsRechargeRate,ExchangeMaxCmdlets,ForwardeeLimit,ImapCutoffBalance,ImapMaxBurst,ImapMaxConcurrency,ImapRechargeRate,IsServiceAccount,MessageRateLimit,Name,Organization,OutBuffer,OutVariable,OutlookServiceCutoffBalance,OutlookServiceMaxBurst,OutlookServiceMaxConcurrency,OutlookServiceMaxSocketConnectionsPerDevice,OutlookServiceMaxSocketConnectionsPerUser,OutlookServiceMaxSubscriptions,OutlookServiceRechargeRate,OwaCutoffBalance,OwaMaxBurst,OwaMaxConcurrency,OwaRechargeRate,OwaVoiceCutoffBalance,OwaVoiceMaxBurst,OwaVoiceMaxConcurrency,OwaVoiceRechargeRate,PopCutoffBalance,PopMaxBurst,PopMaxConcurrency,PopRechargeRate,PowerShellCutoffBalance,PowerShellMaxBurst,PowerShellMaxCmdletQueueDepth,PowerShellMaxCmdlets,PowerShellMaxCmdletsTimePeriod,PowerShellMaxConcurrency,PowerShellMaxDestructiveCmdlets,PowerShellMaxDestructiveCmdletsTimePeriod,PowerShellMaxOperations,PowerShellMaxRunspaces,PowerShellMaxRunspacesTimePeriod,PowerShellMaxTenantConcurrency,PowerShellMaxTenantRunspaces,PowerShellRechargeRate,PswsMaxConcurrency,PswsMaxRequest,PswsMaxRequestTimePeriod,PushNotificationCutoffBalance,PushNotificationMaxBurst,PushNotificationMaxBurstPerDevice,PushNotificationMaxConcurrency,PushNotificationRechargeRate,PushNotificationRechargeRatePerDevice,PushNotificationSamplingPeriodPerDevice,RcaCutoffBalance,RcaMaxBurst,RcaMaxConcurrency,RcaRechargeRate,RecipientRateLimit,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOStandardRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "EncryptionRecipientCutoffBalance,EncryptionRecipientMaxBurst,EncryptionRecipientMaxConcurrency,EncryptionRecipientRechargeRate,EncryptionSenderCutoffBalance,EncryptionSenderMaxBurst,EncryptionSenderMaxConcurrency,EncryptionSenderRechargeRate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Remove-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,Force,Identity,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ExchangeServer", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorReportingEnabled,ErrorVariable,OutBuffer,OutVariable,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-FlightOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Identity,MaxVersion,MinVersion,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-SettingOverride", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,FixVersion,Identity,MaxVersion,MinVersion,OutBuffer,OutVariable,Parameters,Reason,Server,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ThrottlingPolicy", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "AnonymousCutoffBalance,AnonymousMaxBurst,AnonymousMaxConcurrency,AnonymousRechargeRate,ComplianceMaxExpansionDGRecipients,ComplianceMaxExpansionNestedDGs,Confirm,CpaCutoffBalance,CpaMaxBurst,CpaMaxConcurrency,CpaRechargeRate,Debug,DiscoveryMaxConcurrency,DiscoveryMaxKeywords,DiscoveryMaxKeywordsPerPage,DiscoveryMaxMailboxes,DiscoveryMaxMailboxesResultsOnly,DiscoveryMaxPreviewSearchMailboxes,DiscoveryMaxRefinerResults,DiscoveryMaxSearchQueueDepth,DiscoveryMaxStatsSearchMailboxes,DiscoveryPreviewSearchResultsPageSize,DiscoverySearchTimeoutPeriod,DomainController,EasCutoffBalance,EasMaxBurst,EasMaxConcurrency,EasMaxDeviceDeletesPerMonth,EasMaxDevices,EasMaxInactivityForDeviceCleanup,EasRechargeRate,ErrorAction,ErrorVariable,EwsCutoffBalance,EwsMaxBurst,EwsMaxConcurrency,EwsMaxSubscriptions,EwsRechargeRate,ExchangeMaxCmdlets,Force,ForceSettingGlobal,ForwardeeLimit,IgnoreDehydratedFlag,ImapCutoffBalance,ImapMaxBurst,ImapMaxConcurrency,ImapRechargeRate,IsServiceAccount,MessageRateLimit,Name,OutBuffer,OutVariable,OutlookServiceCutoffBalance,OutlookServiceMaxBurst,OutlookServiceMaxConcurrency,OutlookServiceMaxSocketConnectionsPerDevice,OutlookServiceMaxSocketConnectionsPerUser,OutlookServiceMaxSubscriptions,OutlookServiceRechargeRate,OwaCutoffBalance,OwaMaxBurst,OwaMaxConcurrency,OwaRechargeRate,OwaVoiceCutoffBalance,OwaVoiceMaxBurst,OwaVoiceMaxConcurrency,OwaVoiceRechargeRate,PopCutoffBalance,PopMaxBurst,PopMaxConcurrency,PopRechargeRate,PowerShellCutoffBalance,PowerShellMaxBurst,PowerShellMaxCmdletQueueDepth,PowerShellMaxCmdlets,PowerShellMaxCmdletsTimePeriod,PowerShellMaxConcurrency,PowerShellMaxDestructiveCmdlets,PowerShellMaxDestructiveCmdletsTimePeriod,PowerShellMaxOperations,PowerShellMaxRunspaces,PowerShellMaxRunspacesTimePeriod,PowerShellMaxTenantConcurrency,PowerShellMaxTenantRunspaces,PowerShellRechargeRate,PswsMaxConcurrency,PswsMaxRequest,PswsMaxRequestTimePeriod,PushNotificationCutoffBalance,PushNotificationMaxBurst,PushNotificationMaxBurstPerDevice,PushNotificationMaxConcurrency,PushNotificationRechargeRate,PushNotificationRechargeRatePerDevice,PushNotificationSamplingPeriodPerDevice,RcaCutoffBalance,RcaMaxBurst,RcaMaxConcurrency,RcaRechargeRate,RecipientRateLimit,ThrottlingPolicyScope,Verbose,WarningAction,WarningVariable,WhatIf"),
					new RoleParameters(new string[]
					{
						"EXOStandardRestrictions",
						"IRMPremiumFeaturesPermissions"
					}, "EncryptionRecipientCutoffBalance,EncryptionRecipientMaxBurst,EncryptionRecipientMaxConcurrency,EncryptionRecipientRechargeRate,EncryptionSenderCutoffBalance,EncryptionSenderMaxBurst,EncryptionSenderMaxConcurrency,EncryptionSenderRechargeRate")
				}, "c"),
				new RoleCmdlet("Microsoft.Exchange.Management.PowerShell.E2010", "Set-ThrottlingPolicyAssociation", new RoleParameters[]
				{
					new RoleParameters(new string[]
					{
						"*"
					}, "Identity"),
					new RoleParameters(new string[]
					{
						"EOPPremiumRestrictions",
						"EXOCoreFeatures"
					}, "Confirm,Debug,DomainController,ErrorAction,ErrorVariable,IgnoreDefaultScope,OutBuffer,OutVariable,ThrottlingPolicy,Verbose,WarningAction,WarningVariable,WhatIf")
				}, "c")
			};
		}
	}
}
