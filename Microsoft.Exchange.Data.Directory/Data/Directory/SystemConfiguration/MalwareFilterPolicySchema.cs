using System;

namespace Microsoft.Exchange.Data.Directory.SystemConfiguration
{
	internal class MalwareFilterPolicySchema : ADConfigurationObjectSchema
	{
		private static QueryFilter IsDefaultFilterBuilder(SinglePropertyFilter filter)
		{
			return new AndFilter(new QueryFilter[]
			{
				ADObject.BoolFilterBuilder(filter, new BitMaskAndFilter(MalwareFilterPolicySchema.MalwareFilterPolicyFlags, 512UL)),
				new ComparisonFilter(ComparisonOperator.Equal, ADObjectSchema.ExchangeVersion, ExchangeObjectVersion.Exchange2012)
			});
		}

		internal const int BypassInboundMessagesShift = 1;

		internal const int BypassOutboundMessagesShift = 2;

		internal const int ActionShift = 3;

		internal const int ActionLength = 2;

		internal const int CustomNotificationsShift = 5;

		internal const int EnableInternalSenderNotificationsShift = 6;

		internal const int EnableExternalSenderNotificationsShift = 7;

		internal const int EnableInternalSenderAdminNotificationsShift = 8;

		internal const int IsDefaultShift = 9;

		internal const int EnableExternalSenderAdminNotificationsShift = 10;

		public static readonly ADPropertyDefinition CustomAlertText = new ADPropertyDefinition("CustomAlertText", ExchangeObjectVersion.Exchange2012, typeof(string), "msExchMalwareFilterConfigAlertText", ADPropertyDefinitionFlags.None, string.Empty, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, null, null);

		public static readonly ADPropertyDefinition CustomInternalSubject = new ADPropertyDefinition("CustomInternalSubject", ExchangeObjectVersion.Exchange2012, typeof(string), "msExchMalwareFilterConfigInternalSubject", ADPropertyDefinitionFlags.None, string.Empty, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, null, null);

		public static readonly ADPropertyDefinition CustomInternalBody = new ADPropertyDefinition("CustomInternalBody", ExchangeObjectVersion.Exchange2012, typeof(string), "msExchMalwareFilterConfigInternalBody", ADPropertyDefinitionFlags.None, string.Empty, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, null, null);

		public static readonly ADPropertyDefinition CustomExternalSubject = new ADPropertyDefinition("CustomExternalSubject", ExchangeObjectVersion.Exchange2012, typeof(string), "msExchMalwareFilterConfigExternalSubject", ADPropertyDefinitionFlags.None, string.Empty, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, null, null);

		public static readonly ADPropertyDefinition CustomExternalBody = new ADPropertyDefinition("CustomExternalBody", ExchangeObjectVersion.Exchange2012, typeof(string), "msExchMalwareFilterConfigExternalBody", ADPropertyDefinitionFlags.None, string.Empty, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, null, null);

		public static readonly ADPropertyDefinition CustomFromName = new ADPropertyDefinition("CustomFromName", ExchangeObjectVersion.Exchange2012, typeof(string), "msExchMalwareFilterConfigFromName", ADPropertyDefinitionFlags.None, string.Empty, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, null, null);

		public static readonly ADPropertyDefinition CustomFromAddress = new ADPropertyDefinition("CustomFromAddress", ExchangeObjectVersion.Exchange2012, typeof(SmtpAddress), "msExchMalwareFilterConfigFromAddress", ADPropertyDefinitionFlags.None, SmtpAddress.Empty, PropertyDefinitionConstraint.None, new PropertyDefinitionConstraint[]
		{
			new ValidSmtpAddressConstraint()
		}, null, null);

		public static readonly ADPropertyDefinition InternalSenderAdminAddress = new ADPropertyDefinition("InternalSenderAdminAddress", ExchangeObjectVersion.Exchange2012, typeof(SmtpAddress), "msExchMalwareFilterConfigInternalSenderAdminAddress", ADPropertyDefinitionFlags.None, SmtpAddress.Empty, PropertyDefinitionConstraint.None, new PropertyDefinitionConstraint[]
		{
			new ValidSmtpAddressConstraint()
		}, null, null);

		public static readonly ADPropertyDefinition ExternalSenderAdminAddress = new ADPropertyDefinition("ExternalSenderAdminAddress", ExchangeObjectVersion.Exchange2012, typeof(SmtpAddress), "msExchMalwareFilterConfigExternalSenderAdminAddress", ADPropertyDefinitionFlags.None, SmtpAddress.Empty, PropertyDefinitionConstraint.None, new PropertyDefinitionConstraint[]
		{
			new ValidSmtpAddressConstraint()
		}, null, null);

		public static readonly ADPropertyDefinition MalwareFilterPolicyFlags = new ADPropertyDefinition("MalwareFilterPolicyFlags", ExchangeObjectVersion.Exchange2012, typeof(int), "msExchMalwareFilterConfigFlags", ADPropertyDefinitionFlags.PersistDefaultValue, 0, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, null, null);

		public static readonly ADPropertyDefinition BypassInboundMessages = ADObject.BitfieldProperty("BypassInboundMessages", 1, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);

		public static readonly ADPropertyDefinition BypassOutboundMessages = ADObject.BitfieldProperty("BypassOutboundMessages", 2, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);

		public static readonly ADPropertyDefinition Action = ADObject.BitfieldProperty("Action", 3, 2, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);

		public static readonly ADPropertyDefinition IsDefault = new ADPropertyDefinition("IsDefault", ExchangeObjectVersion.Exchange2012, typeof(bool), null, ADPropertyDefinitionFlags.Calculated, false, PropertyDefinitionConstraint.None, PropertyDefinitionConstraint.None, new ProviderPropertyDefinition[]
		{
			MalwareFilterPolicySchema.MalwareFilterPolicyFlags
		}, new CustomFilterBuilderDelegate(MalwareFilterPolicySchema.IsDefaultFilterBuilder), ADObject.FlagGetterDelegate(MalwareFilterPolicySchema.MalwareFilterPolicyFlags, 512), ADObject.FlagSetterDelegate(MalwareFilterPolicySchema.MalwareFilterPolicyFlags, 512), null, null);

		public static readonly ADPropertyDefinition CustomNotifications = ADObject.BitfieldProperty("CustomNotifications", 5, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);

		public static readonly ADPropertyDefinition EnableInternalSenderNotifications = ADObject.BitfieldProperty("EnableInternalSenderNotifications", 6, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);

		public static readonly ADPropertyDefinition EnableExternalSenderNotifications = ADObject.BitfieldProperty("EnableExternalSenderNotifications", 7, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);

		public static readonly ADPropertyDefinition EnableInternalSenderAdminNotifications = ADObject.BitfieldProperty("EnableInternalSenderAdminNotifications", 8, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);

		public static readonly ADPropertyDefinition EnableExternalSenderAdminNotifications = ADObject.BitfieldProperty("EnableExternalSenderAdminNotifications", 10, MalwareFilterPolicySchema.MalwareFilterPolicyFlags);
	}
}
