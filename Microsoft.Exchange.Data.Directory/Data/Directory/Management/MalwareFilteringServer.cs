using System;
using System.Management.Automation;
using Microsoft.Exchange.Data.Directory.SystemConfiguration;

namespace Microsoft.Exchange.Data.Directory.Management
{
	[Serializable]
	public class MalwareFilteringServer : ADPresentationObject
	{
		internal override ADPresentationSchema PresentationSchema
		{
			get
			{
				return MalwareFilteringServer.schema;
			}
		}

		public MalwareFilteringServer()
		{
		}

		public MalwareFilteringServer(Server dataObject) : base(dataObject)
		{
		}

		public new string Name
		{
			get
			{
				return (string)this[ADObjectSchema.Name];
			}
		}

		public string Fqdn
		{
			get
			{
				return (string)this[MalwareFilteringServerSchema.Fqdn];
			}
		}

		[Parameter]
		public bool ForceRescan
		{
			get
			{
				return (bool)this[MalwareFilteringServerSchema.ForceRescan];
			}
			set
			{
				this[MalwareFilteringServerSchema.ForceRescan] = value;
			}
		}

		[Parameter]
		public bool BypassFiltering
		{
			get
			{
				return (bool)this[MalwareFilteringServerSchema.BypassFiltering];
			}
			set
			{
				this[MalwareFilteringServerSchema.BypassFiltering] = value;
			}
		}

		[Parameter]
		[ValidateLength(3, 2048)]
		public string PrimaryUpdatePath
		{
			get
			{
				return (string)this[MalwareFilteringServerSchema.PrimaryUpdatePath];
			}
			set
			{
				this[MalwareFilteringServerSchema.PrimaryUpdatePath] = value;
			}
		}

		[ValidateLength(0, 2048)]
		[Parameter]
		public string SecondaryUpdatePath
		{
			get
			{
				return (string)this[MalwareFilteringServerSchema.SecondaryUpdatePath];
			}
			set
			{
				this[MalwareFilteringServerSchema.SecondaryUpdatePath] = value;
			}
		}

		[Parameter]
		public int DeferWaitTime
		{
			get
			{
				return (int)this[MalwareFilteringServerSchema.DeferWaitTime];
			}
			set
			{
				this[MalwareFilteringServerSchema.DeferWaitTime] = value;
			}
		}

		[Parameter]
		public int DeferAttempts
		{
			get
			{
				return (int)this[MalwareFilteringServerSchema.DeferAttempts];
			}
			set
			{
				this[MalwareFilteringServerSchema.DeferAttempts] = value;
			}
		}

		[Parameter]
		public int UpdateFrequency
		{
			get
			{
				return (int)this[MalwareFilteringServerSchema.UpdateFrequency];
			}
			set
			{
				this[MalwareFilteringServerSchema.UpdateFrequency] = value;
			}
		}

		[Parameter]
		public int UpdateTimeout
		{
			get
			{
				return (int)this[MalwareFilteringServerSchema.UpdateTimeout];
			}
			set
			{
				this[MalwareFilteringServerSchema.UpdateTimeout] = value;
			}
		}

		[Parameter]
		public int ScanTimeout
		{
			get
			{
				return (int)this[MalwareFilteringServerSchema.ScanTimeout];
			}
			set
			{
				this[MalwareFilteringServerSchema.ScanTimeout] = value;
			}
		}

		[Parameter]
		public MalwareScanErrorAction ScanErrorAction
		{
			get
			{
				return (MalwareScanErrorAction)this[MalwareFilteringServerSchema.ScanErrorAction];
			}
			set
			{
				this[MalwareFilteringServerSchema.ScanErrorAction] = (int)value;
			}
		}

		[Parameter]
		[ValidateRange(0, 7)]
		public int MinimumSuccessfulEngineScans
		{
			get
			{
				return (int)this[MalwareFilteringServerSchema.MinimumSuccessfulEngineScans];
			}
			set
			{
				this[MalwareFilteringServerSchema.MinimumSuccessfulEngineScans] = value;
			}
		}

		private static MalwareFilteringServerSchema schema = ObjectSchema.GetInstance<MalwareFilteringServerSchema>();
	}
}
